// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:874
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13663

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1583,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 410,
	-2, 0,
	-1, 74,
	244, 243,
	519, 243,
	-2, 0,
	-1, 87,
	232, 1319,
	246, 1319,
	262, 406,
	393, 406,
	404, 1070,
	443, 406,
	456, 1070,
	503, 1070,
	530, 406,
	556, 1070,
	-2, 0,
	-1, 93,
	133, 1583,
	239, 1583,
	541, 1583,
	542, 1583,
	-2, 0,
	-1, 109,
	152, 1554,
	171, 1554,
	184, 1554,
	242, 1554,
	275, 1554,
	344, 1554,
	354, 1554,
	536, 1554,
	-2, 1525,
	-1, 150,
	160, 919,
	261, 919,
	396, 880,
	461, 880,
	502, 880,
	522, 919,
	524, 880,
	-2, 0,
	-1, 154,
	4, 1585,
	21, 1585,
	22, 1585,
	23, 1585,
	24, 1585,
	25, 1585,
	26, 1585,
	27, 1585,
	29, 1585,
	30, 1585,
	36, 1585,
	41, 1585,
	42, 1585,
	44, 1585,
	45, 1585,
	46, 1585,
	47, 1585,
	48, 1585,
	49, 1585,
	50, 1585,
	51, 1585,
	53, 1585,
	54, 1585,
	55, 1585,
	56, 1585,
	58, 1585,
	59, 1585,
	60, 1585,
	61, 1585,
	62, 1585,
	63, 1585,
	64, 1585,
	68, 1585,
	69, 1585,
	70, 1585,
	71, 1585,
	73, 1585,
	74, 1585,
	75, 1585,
	79, 1585,
	80, 1585,
	81, 1585,
	82, 1585,
	83, 1585,
	84, 1585,
	85, 1585,
	88, 1585,
	89, 1585,
	90, 1585,
	91, 1585,
	92, 1585,
	94, 1585,
	96, 1585,
	97, 1585,
	98, 1585,
	99, 1585,
	100, 1585,
	101, 1585,
	103, 1585,
	104, 1585,
	105, 1585,
	107, 1585,
	108, 1585,
	109, 1585,
	117, 1585,
	118, 1585,
	119, 1585,
	120, 1585,
	121, 1585,
	123, 1585,
	124, 1585,
	125, 1585,
	126, 1585,
	128, 1585,
	129, 1585,
	130, 1585,
	132, 1585,
	133, 1585,
	134, 1585,
	136, 1585,
	137, 1585,
	138, 1585,
	141, 1585,
	142, 1585,
	143, 1585,
	145, 1585,
	146, 1585,
	147, 1585,
	149, 1585,
	150, 1585,
	151, 1585,
	153, 1585,
	154, 1585,
	155, 1585,
	156, 1585,
	157, 1585,
	158, 1585,
	159, 1585,
	160, 1585,
	161, 1585,
	162, 1585,
	163, 1585,
	164, 1585,
	165, 1585,
	166, 1585,
	167, 1585,
	168, 1585,
	170, 1585,
	176, 1585,
	177, 1585,
	178, 1585,
	179, 1585,
	183, 1585,
	185, 1585,
	186, 1585,
	190, 1585,
	191, 1585,
	192, 1585,
	193, 1585,
	194, 1585,
	195, 1585,
	196, 1585,
	197, 1585,
	198, 1585,
	199, 1585,
	200, 1585,
	201, 1585,
	202, 1585,
	203, 1585,
	205, 1585,
	206, 1585,
	208, 1585,
	209, 1585,
	211, 1585,
	212, 1585,
	213, 1585,
	214, 1585,
	215, 1585,
	216, 1585,
	217, 1585,
	218, 1585,
	219, 1585,
	221, 1585,
	222, 1585,
	224, 1585,
	225, 1585,
	226, 1585,
	227, 1585,
	228, 1585,
	232, 1585,
	233, 1585,
	234, 1585,
	235, 1585,
	236, 1585,
	239, 1585,
	240, 1585,
	241, 1585,
	243, 1585,
	245, 1585,
	246, 1585,
	248, 1585,
	250, 1585,
	251, 1585,
	252, 1585,
	254, 1585,
	258, 1585,
	259, 1585,
	260, 1585,
	261, 1585,
	262, 1585,
	263, 1585,
	265, 1585,
	266, 1585,
	267, 1585,
	269, 1585,
	270, 1585,
	272, 1585,
	273, 1585,
	276, 1585,
	277, 1585,
	278, 1585,
	279, 1585,
	280, 1585,
	281, 1585,
	282, 1585,
	285, 1585,
	286, 1585,
	287, 1585,
	288, 1585,
	290, 1585,
	291, 1585,
	292, 1585,
	293, 1585,
	294, 1585,
	295, 1585,
	296, 1585,
	297, 1585,
	298, 1585,
	299, 1585,
	300, 1585,
	301, 1585,
	302, 1585,
	303, 1585,
	304, 1585,
	305, 1585,
	306, 1585,
	307, 1585,
	308, 1585,
	309, 1585,
	310, 1585,
	311, 1585,
	313, 1585,
	315, 1585,
	316, 1585,
	317, 1585,
	318, 1585,
	319, 1585,
	320, 1585,
	321, 1585,
	322, 1585,
	323, 1585,
	324, 1585,
	325, 1585,
	326, 1585,
	327, 1585,
	328, 1585,
	330, 1585,
	331, 1585,
	333, 1585,
	335, 1585,
	336, 1585,
	337, 1585,
	339, 1585,
	340, 1585,
	341, 1585,
	342, 1585,
	343, 1585,
	346, 1585,
	349, 1585,
	350, 1585,
	351, 1585,
	352, 1585,
	355, 1585,
	356, 1585,
	357, 1585,
	359, 1585,
	361, 1585,
	362, 1585,
	363, 1585,
	364, 1585,
	365, 1585,
	366, 1585,
	367, 1585,
	368, 1585,
	369, 1585,
	370, 1585,
	371, 1585,
	372, 1585,
	373, 1585,
	375, 1585,
	376, 1585,
	377, 1585,
	378, 1585,
	379, 1585,
	380, 1585,
	381, 1585,
	382, 1585,
	383, 1585,
	384, 1585,
	385, 1585,
	386, 1585,
	387, 1585,
	388, 1585,
	389, 1585,
	391, 1585,
	392, 1585,
	394, 1585,
	395, 1585,
	396, 1585,
	397, 1585,
	398, 1585,
	399, 1585,
	400, 1585,
	401, 1585,
	402, 1585,
	403, 1585,
	404, 1585,
	405, 1585,
	406, 1585,
	408, 1585,
	410, 1585,
	411, 1585,
	412, 1585,
	418, 1585,
	420, 1585,
	421, 1585,
	422, 1585,
	423, 1585,
	424, 1585,
	425, 1585,
	426, 1585,
	427, 1585,
	428, 1585,
	429, 1585,
	431, 1585,
	432, 1585,
	433, 1585,
	435, 1585,
	436, 1585,
	437, 1585,
	438, 1585,
	439, 1585,
	440, 1585,
	441, 1585,
	443, 1585,
	444, 1585,
	445, 1585,
	446, 1585,
	447, 1585,
	448, 1585,
	449, 1585,
	450, 1585,
	451, 1585,
	452, 1585,
	453, 1585,
	454, 1585,
	456, 1585,
	457, 1585,
	458, 1585,
	459, 1585,
	460, 1585,
	461, 1585,
	463, 1585,
	464, 1585,
	465, 1585,
	466, 1585,
	467, 1585,
	468, 1585,
	470, 1585,
	471, 1585,
	472, 1585,
	473, 1585,
	474, 1585,
	475, 1585,
	476, 1585,
	477, 1585,
	479, 1585,
	481, 1585,
	482, 1585,
	483, 1585,
	484, 1585,
	485, 1585,
	486, 1585,
	487, 1585,
	488, 1585,
	489, 1585,
	490, 1585,
	491, 1585,
	492, 1585,
	493, 1585,
	494, 1585,
	495, 1585,
	496, 1585,
	498, 1585,
	499, 1585,
	501, 1585,
	502, 1585,
	504, 1585,
	505, 1585,
	506, 1585,
	507, 1585,
	508, 1585,
	509, 1585,
	510, 1585,
	511, 1585,
	512, 1585,
	514, 1585,
	515, 1585,
	516, 1585,
	517, 1585,
	518, 1585,
	520, 1585,
	522, 1585,
	523, 1585,
	524, 1585,
	525, 1585,
	526, 1585,
	527, 1585,
	529, 1585,
	530, 1585,
	531, 1585,
	532, 1585,
	534, 1585,
	535, 1585,
	538, 1585,
	539, 1585,
	540, 1585,
	541, 1585,
	542, 1585,
	543, 1585,
	544, 1585,
	546, 1585,
	549, 1585,
	550, 1585,
	551, 1585,
	552, 1585,
	553, 1585,
	554, 1585,
	556, 1585,
	557, 1585,
	558, 1585,
	559, 1585,
	560, 1585,
	561, 1585,
	562, 1585,
	567, 1585,
	568, 1585,
	569, 1585,
	570, 1585,
	571, 1585,
	572, 1585,
	-2, 0,
	-1, 155,
	1, 1436,
	131, 1436,
	250, 1436,
	332, 1436,
	391, 1436,
	400, 1436,
	576, 1436,
	605, 1436,
	-2, 0,
	-1, 157,
	1, 1436,
	605, 1436,
	-2, 0,
	-1, 158,
	1, 1436,
	605, 1436,
	-2, 0,
	-1, 159,
	1, 1436,
	519, 1436,
	605, 1436,
	-2, 0,
	-1, 188,
	152, 1553,
	171, 1553,
	184, 1553,
	242, 1553,
	275, 1553,
	344, 1553,
	354, 1553,
	536, 1553,
	-2, 1528,
	-1, 236,
	4, 1592,
	5, 1592,
	6, 1592,
	7, 1592,
	8, 1592,
	9, 1592,
	10, 1592,
	21, 1592,
	22, 1592,
	23, 1592,
	24, 1592,
	25, 1592,
	26, 1592,
	27, 1592,
	29, 1592,
	30, 1592,
	36, 1592,
	37, 1592,
	41, 1592,
	42, 1592,
	43, 1592,
	44, 1592,
	45, 1592,
	46, 1592,
	47, 1592,
	48, 1592,
	49, 1592,
	50, 1592,
	51, 1592,
	53, 1592,
	54, 1592,
	55, 1592,
	56, 1592,
	58, 1592,
	59, 1592,
	60, 1592,
	61, 1592,
	62, 1592,
	63, 1592,
	64, 1592,
	65, 1592,
	66, 1592,
	67, 1592,
	68, 1592,
	69, 1592,
	70, 1592,
	71, 1592,
	73, 1592,
	74, 1592,
	75, 1592,
	77, 1592,
	79, 1592,
	80, 1592,
	81, 1592,
	82, 1592,
	83, 1592,
	84, 1592,
	85, 1592,
	88, 1592,
	89, 1592,
	90, 1592,
	91, 1592,
	92, 1592,
	94, 1592,
	96, 1592,
	97, 1592,
	98, 1592,
	99, 1592,
	100, 1592,
	101, 1592,
	103, 1592,
	104, 1592,
	105, 1592,
	106, 1592,
	107, 1592,
	108, 1592,
	109, 1592,
	110, 1592,
	111, 1592,
	112, 1592,
	113, 1592,
	114, 1592,
	115, 1592,
	116, 1592,
	117, 1592,
	118, 1592,
	119, 1592,
	120, 1592,
	121, 1592,
	122, 1592,
	123, 1592,
	124, 1592,
	125, 1592,
	126, 1592,
	127, 1592,
	128, 1592,
	129, 1592,
	130, 1592,
	132, 1592,
	133, 1592,
	134, 1592,
	136, 1592,
	137, 1592,
	138, 1592,
	141, 1592,
	142, 1592,
	143, 1592,
	145, 1592,
	146, 1592,
	147, 1592,
	149, 1592,
	150, 1592,
	151, 1592,
	153, 1592,
	154, 1592,
	155, 1592,
	156, 1592,
	157, 1592,
	158, 1592,
	159, 1592,
	160, 1592,
	161, 1592,
	162, 1592,
	163, 1592,
	164, 1592,
	165, 1592,
	166, 1592,
	167, 1592,
	168, 1592,
	169, 1592,
	170, 1592,
	176, 1592,
	177, 1592,
	178, 1592,
	179, 1592,
	183, 1592,
	185, 1592,
	186, 1592,
	189, 1592,
	190, 1592,
	191, 1592,
	192, 1592,
	193, 1592,
	194, 1592,
	195, 1592,
	196, 1592,
	197, 1592,
	198, 1592,
	199, 1592,
	200, 1592,
	201, 1592,
	202, 1592,
	203, 1592,
	205, 1592,
	206, 1592,
	208, 1592,
	209, 1592,
	211, 1592,
	212, 1592,
	213, 1592,
	214, 1592,
	215, 1592,
	216, 1592,
	217, 1592,
	218, 1592,
	219, 1592,
	220, 1592,
	221, 1592,
	222, 1592,
	224, 1592,
	225, 1592,
	226, 1592,
	227, 1592,
	228, 1592,
	232, 1592,
	233, 1592,
	234, 1592,
	235, 1592,
	236, 1592,
	238, 1592,
	239, 1592,
	240, 1592,
	241, 1592,
	243, 1592,
	245, 1592,
	246, 1592,
	247, 1592,
	248, 1592,
	249, 1592,
	250, 1592,
	251, 1592,
	252, 1592,
	253, 1592,
	254, 1592,
	258, 1592,
	259, 1592,
	260, 1592,
	261, 1592,
	262, 1592,
	263, 1592,
	265, 1592,
	266, 1592,
	267, 1592,
	269, 1592,
	270, 1592,
	271, 1592,
	272, 1592,
	273, 1592,
	274, 1592,
	276, 1592,
	277, 1592,
	278, 1592,
	279, 1592,
	280, 1592,
	281, 1592,
	282, 1592,
	283, 1592,
	284, 1592,
	285, 1592,
	286, 1592,
	287, 1592,
	288, 1592,
	290, 1592,
	291, 1592,
	292, 1592,
	293, 1592,
	294, 1592,
	295, 1592,
	296, 1592,
	297, 1592,
	298, 1592,
	299, 1592,
	300, 1592,
	301, 1592,
	302, 1592,
	303, 1592,
	304, 1592,
	305, 1592,
	306, 1592,
	307, 1592,
	308, 1592,
	309, 1592,
	310, 1592,
	311, 1592,
	313, 1592,
	314, 1592,
	315, 1592,
	316, 1592,
	317, 1592,
	318, 1592,
	319, 1592,
	320, 1592,
	321, 1592,
	322, 1592,
	323, 1592,
	324, 1592,
	325, 1592,
	326, 1592,
	327, 1592,
	328, 1592,
	329, 1592,
	330, 1592,
	331, 1592,
	332, 1592,
	333, 1592,
	334, 1592,
	335, 1592,
	336, 1592,
	337, 1592,
	338, 1592,
	339, 1592,
	340, 1592,
	341, 1592,
	342, 1592,
	343, 1592,
	346, 1592,
	350, 1592,
	351, 1592,
	352, 1592,
	355, 1592,
	356, 1592,
	357, 1592,
	358, 1592,
	359, 1592,
	360, 1592,
	361, 1592,
	362, 1592,
	363, 1592,
	364, 1592,
	365, 1592,
	366, 1592,
	367, 1592,
	368, 1592,
	369, 1592,
	370, 1592,
	371, 1592,
	372, 1592,
	373, 1592,
	375, 1592,
	376, 1592,
	377, 1592,
	378, 1592,
	379, 1592,
	380, 1592,
	381, 1592,
	382, 1592,
	383, 1592,
	384, 1592,
	385, 1592,
	386, 1592,
	387, 1592,
	388, 1592,
	389, 1592,
	391, 1592,
	392, 1592,
	394, 1592,
	395, 1592,
	396, 1592,
	397, 1592,
	398, 1592,
	399, 1592,
	400, 1592,
	401, 1592,
	402, 1592,
	403, 1592,
	404, 1592,
	405, 1592,
	406, 1592,
	408, 1592,
	410, 1592,
	411, 1592,
	412, 1592,
	418, 1592,
	420, 1592,
	421, 1592,
	422, 1592,
	423, 1592,
	424, 1592,
	425, 1592,
	426, 1592,
	427, 1592,
	428, 1592,
	429, 1592,
	431, 1592,
	432, 1592,
	433, 1592,
	434, 1592,
	435, 1592,
	436, 1592,
	437, 1592,
	438, 1592,
	439, 1592,
	440, 1592,
	441, 1592,
	443, 1592,
	444, 1592,
	445, 1592,
	446, 1592,
	447, 1592,
	448, 1592,
	449, 1592,
	450, 1592,
	451, 1592,
	452, 1592,
	453, 1592,
	454, 1592,
	456, 1592,
	457, 1592,
	458, 1592,
	459, 1592,
	460, 1592,
	461, 1592,
	462, 1592,
	463, 1592,
	464, 1592,
	465, 1592,
	466, 1592,
	467, 1592,
	468, 1592,
	469, 1592,
	470, 1592,
	471, 1592,
	472, 1592,
	473, 1592,
	474, 1592,
	475, 1592,
	476, 1592,
	477, 1592,
	479, 1592,
	481, 1592,
	482, 1592,
	483, 1592,
	484, 1592,
	485, 1592,
	486, 1592,
	487, 1592,
	488, 1592,
	489, 1592,
	490, 1592,
	491, 1592,
	492, 1592,
	493, 1592,
	494, 1592,
	495, 1592,
	496, 1592,
	498, 1592,
	499, 1592,
	500, 1592,
	501, 1592,
	502, 1592,
	504, 1592,
	505, 1592,
	506, 1592,
	507, 1592,
	508, 1592,
	509, 1592,
	510, 1592,
	511, 1592,
	512, 1592,
	514, 1592,
	515, 1592,
	516, 1592,
	517, 1592,
	518, 1592,
	520, 1592,
	522, 1592,
	523, 1592,
	524, 1592,
	525, 1592,
	526, 1592,
	527, 1592,
	528, 1592,
	529, 1592,
	530, 1592,
	531, 1592,
	532, 1592,
	534, 1592,
	535, 1592,
	537, 1592,
	538, 1592,
	539, 1592,
	540, 1592,
	541, 1592,
	542, 1592,
	543, 1592,
	544, 1592,
	545, 1592,
	546, 1592,
	549, 1592,
	550, 1592,
	551, 1592,
	552, 1592,
	553, 1592,
	554, 1592,
	556, 1592,
	557, 1592,
	558, 1592,
	559, 1592,
	560, 1592,
	561, 1592,
	562, 1592,
	567, 1592,
	568, 1592,
	569, 1592,
	570, 1592,
	571, 1592,
	572, 1592,
	573, 1592,
	586, 1592,
	593, 1592,
	594, 1592,
	595, 1592,
	602, 1592,
	606, 1592,
	-2, 0,
	-1, 750,
	4, 1317,
	21, 1317,
	22, 1317,
	23, 1317,
	24, 1317,
	25, 1317,
	26, 1317,
	27, 1317,
	29, 1317,
	30, 1317,
	36, 1317,
	41, 1317,
	42, 1317,
	44, 1317,
	45, 1317,
	46, 1317,
	47, 1317,
	48, 1317,
	49, 1317,
	50, 1317,
	51, 1317,
	53, 1317,
	54, 1317,
	55, 1317,
	56, 1317,
	58, 1317,
	59, 1317,
	60, 1317,
	61, 1317,
	62, 1317,
	63, 1317,
	64, 1317,
	68, 1317,
	69, 1317,
	70, 1317,
	71, 1317,
	73, 1317,
	74, 1317,
	75, 1317,
	79, 1317,
	80, 1317,
	81, 1317,
	82, 1317,
	83, 1317,
	84, 1317,
	85, 1317,
	88, 1317,
	89, 1317,
	90, 1317,
	91, 1317,
	92, 1317,
	94, 1317,
	96, 1317,
	97, 1317,
	98, 1317,
	99, 1317,
	100, 1317,
	101, 1317,
	103, 1317,
	104, 1317,
	105, 1317,
	107, 1317,
	108, 1317,
	109, 1317,
	117, 1317,
	118, 1317,
	119, 1317,
	120, 1317,
	121, 1317,
	123, 1317,
	124, 1317,
	125, 1317,
	126, 1317,
	128, 1317,
	129, 1317,
	130, 1317,
	132, 1317,
	133, 1317,
	134, 1317,
	136, 1317,
	137, 1317,
	138, 1317,
	141, 1317,
	142, 1317,
	143, 1317,
	145, 1317,
	146, 1317,
	147, 1317,
	149, 1317,
	150, 1317,
	151, 1317,
	153, 1317,
	154, 1317,
	155, 1317,
	156, 1317,
	157, 1317,
	158, 1317,
	159, 1317,
	160, 1317,
	161, 1317,
	162, 1317,
	163, 1317,
	164, 1317,
	165, 1317,
	166, 1317,
	167, 1317,
	168, 1317,
	170, 1317,
	176, 1317,
	177, 1317,
	178, 1317,
	179, 1317,
	183, 1317,
	185, 1317,
	186, 1317,
	190, 1317,
	191, 1317,
	192, 1317,
	193, 1317,
	194, 1317,
	195, 1317,
	196, 1317,
	197, 1317,
	198, 1317,
	199, 1317,
	200, 1317,
	201, 1317,
	202, 1317,
	203, 1317,
	205, 1317,
	206, 1317,
	208, 1317,
	209, 1317,
	211, 1317,
	212, 1317,
	213, 1317,
	214, 1317,
	215, 1317,
	216, 1317,
	217, 1317,
	218, 1317,
	219, 1317,
	221, 1317,
	222, 1317,
	224, 1317,
	225, 1317,
	226, 1317,
	227, 1317,
	228, 1317,
	232, 1317,
	233, 1317,
	234, 1317,
	235, 1317,
	236, 1317,
	239, 1317,
	240, 1317,
	241, 1317,
	243, 1317,
	245, 1317,
	246, 1317,
	248, 1317,
	250, 1317,
	251, 1317,
	252, 1317,
	254, 1317,
	258, 1317,
	259, 1317,
	260, 1317,
	261, 1317,
	262, 1317,
	263, 1317,
	265, 1317,
	266, 1317,
	267, 1317,
	269, 1317,
	270, 1317,
	272, 1317,
	273, 1317,
	276, 1317,
	277, 1317,
	278, 1317,
	279, 1317,
	280, 1317,
	281, 1317,
	282, 1317,
	285, 1317,
	286, 1317,
	287, 1317,
	288, 1317,
	290, 1317,
	291, 1317,
	292, 1317,
	293, 1317,
	294, 1317,
	295, 1317,
	296, 1317,
	297, 1317,
	298, 1317,
	299, 1317,
	300, 1317,
	301, 1317,
	302, 1317,
	303, 1317,
	304, 1317,
	305, 1317,
	306, 1317,
	307, 1317,
	308, 1317,
	309, 1317,
	310, 1317,
	311, 1317,
	313, 1317,
	315, 1317,
	316, 1317,
	317, 1317,
	318, 1317,
	319, 1317,
	320, 1317,
	321, 1317,
	322, 1317,
	323, 1317,
	324, 1317,
	325, 1317,
	326, 1317,
	327, 1317,
	328, 1317,
	330, 1317,
	331, 1317,
	333, 1317,
	335, 1317,
	336, 1317,
	337, 1317,
	339, 1317,
	340, 1317,
	341, 1317,
	342, 1317,
	343, 1317,
	346, 1317,
	350, 1317,
	351, 1317,
	352, 1317,
	355, 1317,
	356, 1317,
	357, 1317,
	359, 1317,
	361, 1317,
	362, 1317,
	363, 1317,
	364, 1317,
	365, 1317,
	366, 1317,
	367, 1317,
	368, 1317,
	369, 1317,
	370, 1317,
	371, 1317,
	372, 1317,
	373, 1317,
	375, 1317,
	376, 1317,
	377, 1317,
	378, 1317,
	379, 1317,
	380, 1317,
	381, 1317,
	382, 1317,
	383, 1317,
	384, 1317,
	385, 1317,
	386, 1317,
	387, 1317,
	388, 1317,
	389, 1317,
	391, 1317,
	392, 1317,
	394, 1317,
	395, 1317,
	396, 1317,
	397, 1317,
	398, 1317,
	399, 1317,
	400, 1317,
	401, 1317,
	402, 1317,
	403, 1317,
	404, 1317,
	405, 1317,
	406, 1317,
	408, 1317,
	410, 1317,
	411, 1317,
	412, 1317,
	418, 1317,
	420, 1317,
	421, 1317,
	422, 1317,
	423, 1317,
	424, 1317,
	425, 1317,
	426, 1317,
	427, 1317,
	428, 1317,
	429, 1317,
	431, 1317,
	432, 1317,
	433, 1317,
	435, 1317,
	436, 1317,
	437, 1317,
	438, 1317,
	439, 1317,
	440, 1317,
	441, 1317,
	443, 1317,
	444, 1317,
	445, 1317,
	446, 1317,
	447, 1317,
	448, 1317,
	449, 1317,
	450, 1317,
	451, 1317,
	452, 1317,
	453, 1317,
	454, 1317,
	456, 1317,
	457, 1317,
	458, 1317,
	459, 1317,
	460, 1317,
	461, 1317,
	463, 1317,
	464, 1317,
	465, 1317,
	466, 1317,
	467, 1317,
	468, 1317,
	470, 1317,
	471, 1317,
	472, 1317,
	473, 1317,
	474, 1317,
	475, 1317,
	476, 1317,
	477, 1317,
	479, 1317,
	481, 1317,
	482, 1317,
	483, 1317,
	484, 1317,
	485, 1317,
	486, 1317,
	487, 1317,
	488, 1317,
	489, 1317,
	490, 1317,
	491, 1317,
	492, 1317,
	493, 1317,
	494, 1317,
	495, 1317,
	496, 1317,
	498, 1317,
	499, 1317,
	501, 1317,
	502, 1317,
	504, 1317,
	505, 1317,
	506, 1317,
	507, 1317,
	508, 1317,
	509, 1317,
	510, 1317,
	511, 1317,
	512, 1317,
	514, 1317,
	515, 1317,
	516, 1317,
	517, 1317,
	518, 1317,
	520, 1317,
	522, 1317,
	523, 1317,
	524, 1317,
	525, 1317,
	526, 1317,
	527, 1317,
	529, 1317,
	530, 1317,
	531, 1317,
	532, 1317,
	534, 1317,
	535, 1317,
	538, 1317,
	539, 1317,
	540, 1317,
	541, 1317,
	542, 1317,
	543, 1317,
	544, 1317,
	546, 1317,
	549, 1317,
	550, 1317,
	551, 1317,
	552, 1317,
	553, 1317,
	554, 1317,
	556, 1317,
	557, 1317,
	558, 1317,
	559, 1317,
	560, 1317,
	561, 1317,
	562, 1317,
	567, 1317,
	568, 1317,
	569, 1317,
	570, 1317,
	571, 1317,
	572, 1317,
	-2, 0,
	-1, 769,
	188, 2381,
	519, 2381,
	585, 2381,
	604, 2381,
	-2, 0,
	-1, 770,
	188, 2368,
	519, 2368,
	585, 2368,
	604, 2368,
	-2, 0,
	-1, 772,
	188, 2632,
	519, 2632,
	585, 2632,
	604, 2632,
	-2, 0,
	-1, 775,
	188, 2493,
	519, 2493,
	585, 2493,
	604, 2493,
	-2, 0,
	-1, 776,
	188, 2673,
	519, 2673,
	585, 2673,
	604, 2673,
	-2, 0,
	-1, 784,
	188, 2520,
	519, 2520,
	585, 2520,
	604, 2520,
	-2, 704,
	-1, 819,
	604, 2317,
	607, 2317,
	-2, 999,
	-1, 820,
	604, 2319,
	607, 2319,
	-2, 1000,
	-1, 821,
	604, 2318,
	607, 2318,
	-2, 1001,
	-1, 822,
	607, 2243,
	-2, 1002,
	-1, 845,
	184, 264,
	-2, 0,
	-1, 869,
	43, 2290,
	-2, 0,
	-1, 870,
	556, 1295,
	-2, 1071,
	-1, 886,
	4, 1723,
	21, 1723,
	22, 1723,
	23, 1723,
	24, 1723,
	25, 1723,
	26, 1723,
	27, 1723,
	29, 1723,
	30, 1723,
	36, 1723,
	41, 1723,
	42, 1723,
	44, 1723,
	45, 1723,
	46, 1723,
	47, 1723,
	48, 1723,
	49, 1723,
	50, 1723,
	51, 1723,
	53, 1723,
	54, 1723,
	55, 1723,
	56, 1723,
	58, 1723,
	59, 1723,
	60, 1723,
	61, 1723,
	62, 1723,
	63, 1723,
	64, 1723,
	68, 1723,
	69, 1723,
	70, 1723,
	71, 1723,
	73, 1723,
	74, 1723,
	75, 1723,
	79, 1723,
	80, 1723,
	81, 1723,
	82, 1723,
	83, 1723,
	84, 1723,
	85, 1723,
	88, 1723,
	89, 1723,
	90, 1723,
	91, 1723,
	92, 1723,
	94, 1723,
	96, 1723,
	97, 1723,
	98, 1723,
	99, 1723,
	100, 1723,
	101, 1723,
	103, 1723,
	104, 1723,
	105, 1723,
	107, 1723,
	108, 1723,
	109, 1723,
	117, 1723,
	118, 1723,
	119, 1723,
	120, 1723,
	121, 1723,
	123, 1723,
	124, 1723,
	125, 1723,
	126, 1723,
	128, 1723,
	129, 1723,
	130, 1723,
	132, 1723,
	133, 1723,
	134, 1723,
	136, 1723,
	137, 1723,
	138, 1723,
	141, 1723,
	142, 1723,
	143, 1723,
	145, 1723,
	146, 1723,
	147, 1723,
	149, 1723,
	150, 1723,
	151, 1723,
	153, 1723,
	154, 1723,
	155, 1723,
	156, 1723,
	157, 1723,
	158, 1723,
	159, 1723,
	160, 1723,
	161, 1723,
	162, 1723,
	163, 1723,
	164, 1723,
	165, 1723,
	166, 1723,
	167, 1723,
	168, 1723,
	170, 1723,
	176, 1723,
	177, 1723,
	178, 1723,
	179, 1723,
	183, 1723,
	185, 1723,
	186, 1723,
	190, 1723,
	191, 1723,
	192, 1723,
	193, 1723,
	194, 1723,
	195, 1723,
	196, 1723,
	197, 1723,
	198, 1723,
	199, 1723,
	200, 1723,
	201, 1723,
	202, 1723,
	203, 1723,
	205, 1723,
	206, 1723,
	208, 1723,
	209, 1723,
	211, 1723,
	212, 1723,
	213, 1723,
	214, 1723,
	215, 1723,
	216, 1723,
	217, 1723,
	218, 1723,
	219, 1723,
	221, 1723,
	222, 1723,
	224, 1723,
	225, 1723,
	226, 1723,
	227, 1723,
	228, 1723,
	232, 1723,
	233, 1723,
	234, 1723,
	235, 1723,
	236, 1723,
	239, 1723,
	240, 1723,
	241, 1723,
	243, 1723,
	245, 1723,
	246, 1723,
	248, 1723,
	250, 1723,
	251, 1723,
	252, 1723,
	254, 1723,
	258, 1723,
	259, 1723,
	260, 1723,
	261, 1723,
	262, 1723,
	263, 1723,
	265, 1723,
	266, 1723,
	267, 1723,
	269, 1723,
	270, 1723,
	272, 1723,
	273, 1723,
	276, 1723,
	277, 1723,
	278, 1723,
	279, 1723,
	280, 1723,
	281, 1723,
	282, 1723,
	285, 1723,
	286, 1723,
	287, 1723,
	288, 1723,
	290, 1723,
	291, 1723,
	292, 1723,
	293, 1723,
	294, 1723,
	295, 1723,
	296, 1723,
	297, 1723,
	298, 1723,
	299, 1723,
	300, 1723,
	301, 1723,
	302, 1723,
	303, 1723,
	304, 1723,
	305, 1723,
	306, 1723,
	307, 1723,
	308, 1723,
	309, 1723,
	310, 1723,
	311, 1723,
	313, 1723,
	315, 1723,
	316, 1723,
	317, 1723,
	318, 1723,
	319, 1723,
	320, 1723,
	321, 1723,
	322, 1723,
	323, 1723,
	324, 1723,
	325, 1723,
	326, 1723,
	327, 1723,
	328, 1723,
	330, 1723,
	331, 1723,
	333, 1723,
	335, 1723,
	336, 1723,
	337, 1723,
	339, 1723,
	340, 1723,
	341, 1723,
	342, 1723,
	343, 1723,
	346, 1723,
	350, 1723,
	351, 1723,
	352, 1723,
	355, 1723,
	356, 1723,
	357, 1723,
	359, 1723,
	361, 1723,
	362, 1723,
	363, 1723,
	364, 1723,
	365, 1723,
	366, 1723,
	367, 1723,
	368, 1723,
	369, 1723,
	370, 1723,
	371, 1723,
	372, 1723,
	373, 1723,
	375, 1723,
	376, 1723,
	377, 1723,
	378, 1723,
	379, 1723,
	380, 1723,
	381, 1723,
	382, 1723,
	383, 1723,
	384, 1723,
	385, 1723,
	386, 1723,
	387, 1723,
	388, 1723,
	389, 1723,
	391, 1723,
	392, 1723,
	394, 1723,
	395, 1723,
	396, 1723,
	397, 1723,
	398, 1723,
	399, 1723,
	400, 1723,
	401, 1723,
	402, 1723,
	403, 1723,
	404, 1723,
	405, 1723,
	406, 1723,
	408, 1723,
	410, 1723,
	411, 1723,
	412, 1723,
	418, 1723,
	420, 1723,
	421, 1723,
	422, 1723,
	423, 1723,
	424, 1723,
	425, 1723,
	426, 1723,
	427, 1723,
	428, 1723,
	429, 1723,
	431, 1723,
	432, 1723,
	433, 1723,
	435, 1723,
	436, 1723,
	437, 1723,
	438, 1723,
	439, 1723,
	440, 1723,
	441, 1723,
	443, 1723,
	444, 1723,
	445, 1723,
	446, 1723,
	447, 1723,
	448, 1723,
	449, 1723,
	450, 1723,
	451, 1723,
	452, 1723,
	453, 1723,
	454, 1723,
	456, 1723,
	457, 1723,
	458, 1723,
	459, 1723,
	460, 1723,
	461, 1723,
	463, 1723,
	464, 1723,
	465, 1723,
	466, 1723,
	467, 1723,
	468, 1723,
	470, 1723,
	471, 1723,
	472, 1723,
	473, 1723,
	474, 1723,
	475, 1723,
	476, 1723,
	477, 1723,
	479, 1723,
	481, 1723,
	482, 1723,
	483, 1723,
	484, 1723,
	485, 1723,
	486, 1723,
	487, 1723,
	488, 1723,
	489, 1723,
	490, 1723,
	491, 1723,
	492, 1723,
	493, 1723,
	494, 1723,
	495, 1723,
	496, 1723,
	498, 1723,
	499, 1723,
	501, 1723,
	502, 1723,
	504, 1723,
	505, 1723,
	506, 1723,
	507, 1723,
	508, 1723,
	509, 1723,
	510, 1723,
	511, 1723,
	512, 1723,
	514, 1723,
	515, 1723,
	516, 1723,
	517, 1723,
	518, 1723,
	520, 1723,
	522, 1723,
	523, 1723,
	524, 1723,
	525, 1723,
	526, 1723,
	527, 1723,
	529, 1723,
	530, 1723,
	531, 1723,
	532, 1723,
	534, 1723,
	535, 1723,
	538, 1723,
	539, 1723,
	540, 1723,
	541, 1723,
	542, 1723,
	543, 1723,
	544, 1723,
	546, 1723,
	549, 1723,
	550, 1723,
	551, 1723,
	552, 1723,
	553, 1723,
	554, 1723,
	556, 1723,
	557, 1723,
	558, 1723,
	559, 1723,
	560, 1723,
	561, 1723,
	562, 1723,
	567, 1723,
	568, 1723,
	569, 1723,
	570, 1723,
	571, 1723,
	572, 1723,
	-2, 0,
	-1, 896,
	262, 410,
	-2, 0,
	-1, 969,
	396, 881,
	461, 881,
	502, 881,
	524, 881,
	-2, 0,
	-1, 970,
	396, 880,
	461, 880,
	502, 880,
	524, 880,
	-2, 814,
	-1, 974,
	1, 933,
	601, 933,
	603, 933,
	605, 933,
	-2, 0,
	-1, 976,
	1, 855,
	601, 855,
	603, 855,
	605, 855,
	-2, 0,
	-1, 977,
	1, 859,
	601, 859,
	603, 859,
	605, 859,
	-2, 0,
	-1, 978,
	1, 998,
	184, 998,
	601, 998,
	603, 998,
	605, 998,
	-2, 0,
	-1, 986,
	1, 886,
	601, 886,
	603, 886,
	605, 886,
	-2, 0,
	-1, 993,
	1, 933,
	601, 933,
	603, 933,
	605, 933,
	-2, 0,
	-1, 994,
	1, 935,
	601, 935,
	603, 935,
	605, 935,
	-2, 0,
	-1, 995,
	1, 938,
	601, 938,
	603, 938,
	605, 938,
	-2, 0,
	-1, 1001,
	1, 962,
	601, 962,
	603, 962,
	605, 962,
	-2, 0,
	-1, 1002,
	1, 964,
	601, 964,
	603, 964,
	605, 964,
	-2, 0,
	-1, 1007,
	1, 992,
	601, 992,
	603, 992,
	605, 992,
	-2, 0,
	-1, 1059,
	171, 1596,
	184, 1596,
	275, 1596,
	344, 1596,
	-2, 1532,
	-1, 1074,
	171, 1595,
	184, 1595,
	275, 1595,
	344, 1595,
	-2, 1529,
	-1, 1101,
	604, 2316,
	-2, 712,
	-1, 1130,
	5, 2308,
	602, 2306,
	-2, 2297,
	-1, 1138,
	5, 2329,
	602, 2326,
	-2, 2317,
	-1, 1139,
	5, 2330,
	602, 2327,
	-2, 2318,
	-1, 1147,
	604, 2314,
	-2, 2296,
	-1, 1148,
	602, 2758,
	-2, 2315,
	-1, 1171,
	602, 2757,
	-2, 2331,
	-1, 1172,
	5, 1798,
	-2, 2728,
	-1, 1173,
	5, 1799,
	-2, 2729,
	-1, 1174,
	5, 1800,
	-2, 2743,
	-1, 1175,
	5, 1801,
	-2, 2707,
	-1, 1176,
	5, 1802,
	-2, 2741,
	-1, 1177,
	5, 1810,
	-2, 2720,
	-1, 1178,
	5, 1797,
	-2, 2716,
	-1, 1179,
	5, 1797,
	-2, 2715,
	-1, 1180,
	5, 1797,
	-2, 2734,
	-1, 1181,
	5, 1808,
	-2, 2709,
	-1, 1182,
	5, 1813,
	-2, 2708,
	-1, 1183,
	5, 1815,
	-2, 2753,
	-1, 1186,
	5, 1837,
	-2, 2746,
	-1, 1187,
	5, 1829,
	-2, 2747,
	-1, 1188,
	5, 1837,
	-2, 2748,
	-1, 1189,
	5, 1833,
	-2, 2749,
	-1, 1190,
	5, 1783,
	-2, 2721,
	-1, 1191,
	5, 1784,
	-2, 2722,
	-1, 1192,
	5, 1785,
	-2, 2710,
	-1, 1220,
	5, 1820,
	-2, 2754,
	-1, 1221,
	5, 1821,
	-2, 2744,
	-1, 1222,
	5, 1822,
	557, 1822,
	-2, 2711,
	-1, 1223,
	5, 1823,
	557, 1823,
	-2, 2712,
	-1, 1260,
	602, 2326,
	-2, 2317,
	-1, 1261,
	602, 2327,
	-2, 2318,
	-1, 1362,
	188, 2673,
	519, 2673,
	585, 2673,
	604, 2673,
	-2, 0,
	-1, 1367,
	1, 689,
	605, 689,
	-2, 1444,
	-1, 1495,
	363, 2291,
	420, 2291,
	463, 2291,
	595, 2291,
	-2, 2281,
	-1, 1506,
	606, 2291,
	-2, 2293,
	-1, 1514,
	1, 1292,
	425, 1254,
	463, 1254,
	579, 1254,
	601, 1292,
	603, 1292,
	605, 1292,
	-2, 1581,
	-1, 1520,
	204, 1389,
	223, 1389,
	433, 1389,
	-2, 0,
	-1, 1566,
	404, 1070,
	556, 1070,
	-2, 405,
	-1, 1583,
	43, 2289,
	-2, 1036,
	-1, 1590,
	1, 1292,
	601, 1292,
	603, 1292,
	605, 1292,
	-2, 1581,
	-1, 1598,
	4, 1317,
	21, 1317,
	22, 1317,
	23, 1317,
	24, 1317,
	25, 1317,
	26, 1317,
	27, 1317,
	29, 1317,
	30, 1317,
	36, 1317,
	41, 1317,
	42, 1317,
	44, 1317,
	45, 1317,
	46, 1317,
	47, 1317,
	48, 1317,
	49, 1317,
	50, 1317,
	51, 1317,
	53, 1317,
	54, 1317,
	55, 1317,
	56, 1317,
	58, 1317,
	59, 1317,
	60, 1317,
	61, 1317,
	62, 1317,
	63, 1317,
	64, 1317,
	68, 1317,
	69, 1317,
	70, 1317,
	71, 1317,
	73, 1317,
	74, 1317,
	75, 1317,
	79, 1317,
	80, 1317,
	81, 1317,
	82, 1317,
	83, 1317,
	84, 1317,
	85, 1317,
	88, 1317,
	89, 1317,
	90, 1317,
	91, 1317,
	92, 1317,
	94, 1317,
	96, 1317,
	97, 1317,
	98, 1317,
	99, 1317,
	100, 1317,
	101, 1317,
	103, 1317,
	104, 1317,
	105, 1317,
	107, 1317,
	108, 1317,
	109, 1317,
	117, 1317,
	118, 1317,
	119, 1317,
	120, 1317,
	121, 1317,
	123, 1317,
	124, 1317,
	125, 1317,
	126, 1317,
	128, 1317,
	129, 1317,
	130, 1317,
	132, 1317,
	133, 1317,
	134, 1317,
	136, 1317,
	137, 1317,
	138, 1317,
	141, 1317,
	142, 1317,
	143, 1317,
	145, 1317,
	146, 1317,
	147, 1317,
	149, 1317,
	150, 1317,
	151, 1317,
	153, 1317,
	154, 1317,
	155, 1317,
	156, 1317,
	157, 1317,
	158, 1317,
	159, 1317,
	160, 1317,
	161, 1317,
	162, 1317,
	163, 1317,
	164, 1317,
	165, 1317,
	166, 1317,
	167, 1317,
	168, 1317,
	176, 1317,
	177, 1317,
	178, 1317,
	179, 1317,
	183, 1317,
	185, 1317,
	186, 1317,
	190, 1317,
	191, 1317,
	192, 1317,
	193, 1317,
	194, 1317,
	195, 1317,
	196, 1317,
	197, 1317,
	198, 1317,
	199, 1317,
	200, 1317,
	201, 1317,
	202, 1317,
	203, 1317,
	205, 1317,
	206, 1317,
	208, 1317,
	209, 1317,
	211, 1317,
	212, 1317,
	213, 1317,
	214, 1317,
	215, 1317,
	216, 1317,
	217, 1317,
	218, 1317,
	219, 1317,
	221, 1317,
	222, 1317,
	224, 1317,
	225, 1317,
	226, 1317,
	227, 1317,
	228, 1317,
	233, 1317,
	234, 1317,
	235, 1317,
	236, 1317,
	239, 1317,
	240, 1317,
	241, 1317,
	243, 1317,
	245, 1317,
	246, 1317,
	248, 1317,
	250, 1317,
	251, 1317,
	252, 1317,
	254, 1317,
	258, 1317,
	259, 1317,
	260, 1317,
	261, 1317,
	262, 1317,
	263, 1317,
	265, 1317,
	266, 1317,
	267, 1317,
	269, 1317,
	270, 1317,
	272, 1317,
	273, 1317,
	276, 1317,
	277, 1317,
	278, 1317,
	279, 1317,
	280, 1317,
	281, 1317,
	282, 1317,
	285, 1317,
	286, 1317,
	287, 1317,
	288, 1317,
	290, 1317,
	291, 1317,
	292, 1317,
	293, 1317,
	294, 1317,
	295, 1317,
	296, 1317,
	297, 1317,
	298, 1317,
	299, 1317,
	300, 1317,
	301, 1317,
	302, 1317,
	303, 1317,
	304, 1317,
	305, 1317,
	306, 1317,
	307, 1317,
	308, 1317,
	309, 1317,
	310, 1317,
	311, 1317,
	313, 1317,
	315, 1317,
	316, 1317,
	317, 1317,
	318, 1317,
	319, 1317,
	320, 1317,
	321, 1317,
	322, 1317,
	323, 1317,
	324, 1317,
	325, 1317,
	326, 1317,
	327, 1317,
	328, 1317,
	330, 1317,
	331, 1317,
	335, 1317,
	336, 1317,
	337, 1317,
	339, 1317,
	340, 1317,
	341, 1317,
	342, 1317,
	343, 1317,
	346, 1317,
	348, 1317,
	350, 1317,
	351, 1317,
	352, 1317,
	355, 1317,
	356, 1317,
	357, 1317,
	359, 1317,
	361, 1317,
	362, 1317,
	363, 1317,
	364, 1317,
	365, 1317,
	366, 1317,
	367, 1317,
	368, 1317,
	369, 1317,
	370, 1317,
	371, 1317,
	372, 1317,
	373, 1317,
	375, 1317,
	376, 1317,
	377, 1317,
	378, 1317,
	379, 1317,
	380, 1317,
	381, 1317,
	382, 1317,
	383, 1317,
	384, 1317,
	385, 1317,
	386, 1317,
	387, 1317,
	388, 1317,
	389, 1317,
	391, 1317,
	392, 1317,
	394, 1317,
	395, 1317,
	396, 1317,
	397, 1317,
	398, 1317,
	399, 1317,
	400, 1317,
	401, 1317,
	402, 1317,
	403, 1317,
	404, 1317,
	405, 1317,
	406, 1317,
	408, 1317,
	410, 1317,
	411, 1317,
	412, 1317,
	418, 1317,
	420, 1317,
	421, 1317,
	422, 1317,
	423, 1317,
	424, 1317,
	425, 1317,
	426, 1317,
	427, 1317,
	428, 1317,
	429, 1317,
	431, 1317,
	432, 1317,
	433, 1317,
	435, 1317,
	436, 1317,
	437, 1317,
	438, 1317,
	439, 1317,
	440, 1317,
	441, 1317,
	443, 1317,
	444, 1317,
	445, 1317,
	446, 1317,
	447, 1317,
	448, 1317,
	449, 1317,
	450, 1317,
	451, 1317,
	452, 1317,
	453, 1317,
	454, 1317,
	456, 1317,
	457, 1317,
	458, 1317,
	459, 1317,
	460, 1317,
	461, 1317,
	463, 1317,
	464, 1317,
	465, 1317,
	466, 1317,
	467, 1317,
	468, 1317,
	470, 1317,
	471, 1317,
	472, 1317,
	473, 1317,
	474, 1317,
	475, 1317,
	476, 1317,
	477, 1317,
	479, 1317,
	481, 1317,
	482, 1317,
	483, 1317,
	484, 1317,
	485, 1317,
	486, 1317,
	487, 1317,
	488, 1317,
	489, 1317,
	490, 1317,
	491, 1317,
	492, 1317,
	493, 1317,
	494, 1317,
	495, 1317,
	496, 1317,
	498, 1317,
	499, 1317,
	501, 1317,
	502, 1317,
	504, 1317,
	505, 1317,
	506, 1317,
	507, 1317,
	508, 1317,
	509, 1317,
	510, 1317,
	511, 1317,
	512, 1317,
	514, 1317,
	515, 1317,
	516, 1317,
	517, 1317,
	518, 1317,
	520, 1317,
	522, 1317,
	523, 1317,
	524, 1317,
	525, 1317,
	526, 1317,
	527, 1317,
	529, 1317,
	530, 1317,
	531, 1317,
	532, 1317,
	534, 1317,
	535, 1317,
	538, 1317,
	539, 1317,
	540, 1317,
	541, 1317,
	542, 1317,
	543, 1317,
	544, 1317,
	546, 1317,
	549, 1317,
	550, 1317,
	551, 1317,
	552, 1317,
	553, 1317,
	554, 1317,
	556, 1317,
	557, 1317,
	558, 1317,
	559, 1317,
	560, 1317,
	561, 1317,
	562, 1317,
	567, 1317,
	568, 1317,
	569, 1317,
	570, 1317,
	571, 1317,
	572, 1317,
	-2, 0,
	-1, 1621,
	1, 550,
	601, 550,
	603, 550,
	605, 550,
	-2, 1552,
	-1, 1624,
	4, 2752,
	11, 2752,
	12, 2752,
	14, 2752,
	15, 2752,
	16, 2752,
	17, 2752,
	18, 2752,
	19, 2752,
	21, 2752,
	22, 2752,
	23, 2752,
	24, 2752,
	25, 2752,
	26, 2752,
	27, 2752,
	29, 2752,
	30, 2752,
	33, 2752,
	34, 2752,
	36, 2752,
	38, 2752,
	41, 2752,
	42, 2752,
	44, 2752,
	45, 2752,
	46, 2752,
	47, 2752,
	48, 2752,
	49, 2752,
	50, 2752,
	51, 2752,
	53, 2752,
	54, 2752,
	55, 2752,
	56, 2752,
	58, 2752,
	59, 2752,
	60, 2752,
	61, 2752,
	62, 2752,
	63, 2752,
	64, 2752,
	67, 2752,
	68, 2752,
	69, 2752,
	70, 2752,
	71, 2752,
	73, 2752,
	74, 2752,
	75, 2752,
	76, 2752,
	79, 2752,
	80, 2752,
	81, 2752,
	82, 2752,
	83, 2752,
	84, 2752,
	85, 2752,
	86, 2752,
	88, 2752,
	89, 2752,
	90, 2752,
	91, 2752,
	92, 2752,
	94, 2752,
	95, 2752,
	96, 2752,
	97, 2752,
	98, 2752,
	99, 2752,
	100, 2752,
	101, 2752,
	103, 2752,
	104, 2752,
	105, 2752,
	106, 2752,
	107, 2752,
	108, 2752,
	109, 2752,
	117, 2752,
	118, 2752,
	119, 2752,
	120, 2752,
	121, 2752,
	123, 2752,
	124, 2752,
	125, 2752,
	126, 2752,
	128, 2752,
	129, 2752,
	130, 2752,
	132, 2752,
	133, 2752,
	134, 2752,
	136, 2752,
	137, 2752,
	138, 2752,
	141, 2752,
	142, 2752,
	143, 2752,
	145, 2752,
	146, 2752,
	147, 2752,
	149, 2752,
	150, 2752,
	151, 2752,
	153, 2752,
	154, 2752,
	155, 2752,
	156, 2752,
	157, 2752,
	158, 2752,
	159, 2752,
	160, 2752,
	161, 2752,
	162, 2752,
	163, 2752,
	164, 2752,
	165, 2752,
	166, 2752,
	167, 2752,
	168, 2752,
	172, 2752,
	173, 2752,
	174, 2752,
	175, 2752,
	176, 2752,
	177, 2752,
	178, 2752,
	179, 2752,
	182, 2752,
	183, 2752,
	185, 2752,
	186, 2752,
	189, 2752,
	190, 2752,
	191, 2752,
	192, 2752,
	193, 2752,
	194, 2752,
	195, 2752,
	196, 2752,
	197, 2752,
	198, 2752,
	199, 2752,
	200, 2752,
	201, 2752,
	202, 2752,
	203, 2752,
	205, 2752,
	206, 2752,
	208, 2752,
	209, 2752,
	211, 2752,
	212, 2752,
	213, 2752,
	214, 2752,
	215, 2752,
	216, 2752,
	217, 2752,
	218, 2752,
	219, 2752,
	220, 2752,
	221, 2752,
	222, 2752,
	223, 2752,
	224, 2752,
	225, 2752,
	226, 2752,
	227, 2752,
	228, 2752,
	230, 2752,
	231, 2752,
	233, 2752,
	234, 2752,
	235, 2752,
	236, 2752,
	238, 2752,
	239, 2752,
	240, 2752,
	241, 2752,
	243, 2752,
	245, 2752,
	246, 2752,
	247, 2752,
	248, 2752,
	249, 2752,
	250, 2752,
	251, 2752,
	252, 2752,
	253, 2752,
	254, 2752,
	256, 2752,
	257, 2752,
	258, 2752,
	259, 2752,
	260, 2752,
	261, 2752,
	262, 2752,
	263, 2752,
	265, 2752,
	266, 2752,
	267, 2752,
	269, 2752,
	270, 2752,
	271, 2752,
	272, 2752,
	273, 2752,
	274, 2752,
	276, 2752,
	277, 2752,
	278, 2752,
	279, 2752,
	280, 2752,
	281, 2752,
	282, 2752,
	285, 2752,
	286, 2752,
	287, 2752,
	288, 2752,
	289, 2752,
	290, 2752,
	291, 2752,
	292, 2752,
	293, 2752,
	294, 2752,
	295, 2752,
	296, 2752,
	297, 2752,
	298, 2752,
	299, 2752,
	300, 2752,
	301, 2752,
	302, 2752,
	303, 2752,
	304, 2752,
	305, 2752,
	306, 2752,
	307, 2752,
	308, 2752,
	309, 2752,
	310, 2752,
	311, 2752,
	313, 2752,
	314, 2752,
	315, 2752,
	316, 2752,
	317, 2752,
	318, 2752,
	319, 2752,
	320, 2752,
	321, 2752,
	322, 2752,
	323, 2752,
	324, 2752,
	325, 2752,
	326, 2752,
	327, 2752,
	328, 2752,
	330, 2752,
	331, 2752,
	334, 2752,
	335, 2752,
	336, 2752,
	337, 2752,
	339, 2752,
	340, 2752,
	341, 2752,
	342, 2752,
	343, 2752,
	346, 2752,
	350, 2752,
	351, 2752,
	352, 2752,
	353, 2752,
	355, 2752,
	356, 2752,
	357, 2752,
	359, 2752,
	361, 2752,
	362, 2752,
	363, 2752,
	364, 2752,
	365, 2752,
	366, 2752,
	367, 2752,
	368, 2752,
	369, 2752,
	370, 2752,
	371, 2752,
	372, 2752,
	373, 2752,
	375, 2752,
	376, 2752,
	377, 2752,
	378, 2752,
	379, 2752,
	380, 2752,
	381, 2752,
	382, 2752,
	383, 2752,
	384, 2752,
	385, 2752,
	386, 2752,
	387, 2752,
	388, 2752,
	389, 2752,
	391, 2752,
	392, 2752,
	394, 2752,
	395, 2752,
	396, 2752,
	397, 2752,
	398, 2752,
	399, 2752,
	400, 2752,
	401, 2752,
	402, 2752,
	403, 2752,
	404, 2752,
	405, 2752,
	406, 2752,
	408, 2752,
	410, 2752,
	411, 2752,
	412, 2752,
	418, 2752,
	419, 2752,
	420, 2752,
	421, 2752,
	422, 2752,
	423, 2752,
	424, 2752,
	425, 2752,
	426, 2752,
	427, 2752,
	428, 2752,
	429, 2752,
	431, 2752,
	432, 2752,
	433, 2752,
	434, 2752,
	435, 2752,
	436, 2752,
	437, 2752,
	438, 2752,
	439, 2752,
	440, 2752,
	441, 2752,
	442, 2752,
	443, 2752,
	444, 2752,
	445, 2752,
	446, 2752,
	447, 2752,
	448, 2752,
	449, 2752,
	450, 2752,
	451, 2752,
	452, 2752,
	453, 2752,
	454, 2752,
	456, 2752,
	457, 2752,
	458, 2752,
	459, 2752,
	460, 2752,
	461, 2752,
	463, 2752,
	464, 2752,
	465, 2752,
	466, 2752,
	467, 2752,
	468, 2752,
	469, 2752,
	470, 2752,
	471, 2752,
	472, 2752,
	473, 2752,
	474, 2752,
	475, 2752,
	476, 2752,
	477, 2752,
	479, 2752,
	481, 2752,
	482, 2752,
	483, 2752,
	484, 2752,
	485, 2752,
	486, 2752,
	487, 2752,
	488, 2752,
	489, 2752,
	490, 2752,
	491, 2752,
	492, 2752,
	493, 2752,
	494, 2752,
	495, 2752,
	496, 2752,
	498, 2752,
	499, 2752,
	500, 2752,
	501, 2752,
	502, 2752,
	504, 2752,
	505, 2752,
	506, 2752,
	507, 2752,
	508, 2752,
	509, 2752,
	510, 2752,
	511, 2752,
	512, 2752,
	514, 2752,
	515, 2752,
	516, 2752,
	517, 2752,
	518, 2752,
	520, 2752,
	522, 2752,
	523, 2752,
	524, 2752,
	525, 2752,
	526, 2752,
	527, 2752,
	529, 2752,
	530, 2752,
	531, 2752,
	532, 2752,
	534, 2752,
	535, 2752,
	538, 2752,
	539, 2752,
	540, 2752,
	541, 2752,
	542, 2752,
	543, 2752,
	544, 2752,
	546, 2752,
	549, 2752,
	550, 2752,
	551, 2752,
	552, 2752,
	553, 2752,
	554, 2752,
	556, 2752,
	557, 2752,
	558, 2752,
	559, 2752,
	560, 2752,
	561, 2752,
	562, 2752,
	567, 2752,
	568, 2752,
	569, 2752,
	570, 2752,
	571, 2752,
	572, 2752,
	573, 2752,
	575, 2752,
	583, 2752,
	584, 2752,
	585, 2752,
	586, 2752,
	587, 2752,
	588, 2752,
	590, 2752,
	591, 2752,
	592, 2752,
	593, 2752,
	594, 2752,
	595, 2752,
	596, 2752,
	597, 2752,
	598, 2752,
	600, 2752,
	603, 2752,
	604, 2752,
	606, 2752,
	607, 2752,
	-2, 0,
	-1, 1629,
	188, 2632,
	519, 2632,
	585, 2632,
	604, 2632,
	-2, 0,
	-1, 1678,
	396, 881,
	461, 881,
	502, 881,
	524, 881,
	-2, 0,
	-1, 1689,
	1, 1389,
	601, 1389,
	603, 1389,
	605, 1389,
	-2, 0,
	-1, 1706,
	1, 876,
	601, 876,
	603, 876,
	605, 876,
	-2, 0,
	-1, 1707,
	1, 920,
	601, 920,
	603, 920,
	605, 920,
	-2, 0,
	-1, 1708,
	1, 928,
	601, 928,
	603, 928,
	605, 928,
	-2, 0,
	-1, 1711,
	1, 885,
	601, 885,
	603, 885,
	605, 885,
	-2, 0,
	-1, 1713,
	1, 891,
	601, 891,
	603, 891,
	605, 891,
	-2, 0,
	-1, 1716,
	1, 887,
	601, 887,
	603, 887,
	605, 887,
	-2, 0,
	-1, 1721,
	1, 901,
	601, 901,
	603, 901,
	605, 901,
	-2, 0,
	-1, 1752,
	1, 2615,
	601, 2615,
	603, 2615,
	604, 2615,
	605, 2615,
	-2, 0,
	-1, 1756,
	1, 973,
	601, 973,
	603, 973,
	605, 973,
	-2, 0,
	-1, 1771,
	1, 1439,
	605, 1439,
	-2, 1444,
	-1, 1774,
	171, 1595,
	184, 1595,
	275, 1595,
	344, 1595,
	-2, 1533,
	-1, 1874,
	152, 1554,
	171, 1554,
	184, 1554,
	242, 1554,
	275, 1554,
	344, 1554,
	354, 1554,
	536, 1554,
	-2, 2002,
	-1, 1935,
	603, 2177,
	-2, 0,
	-1, 1970,
	152, 1554,
	171, 1554,
	184, 1554,
	242, 1554,
	275, 1554,
	344, 1554,
	354, 1554,
	536, 1554,
	-2, 1684,
	-1, 2007,
	519, 2629,
	604, 2629,
	607, 2629,
	-2, 0,
	-1, 2024,
	602, 1825,
	-2, 1813,
	-1, 2056,
	188, 2629,
	604, 2629,
	607, 2629,
	-2, 0,
	-1, 2098,
	1, 691,
	605, 691,
	-2, 1444,
	-1, 2238,
	223, 259,
	-2, 2325,
	-1, 2239,
	223, 260,
	-2, 312,
	-1, 2346,
	1, 878,
	601, 878,
	603, 878,
	605, 878,
	-2, 0,
	-1, 2347,
	1, 922,
	601, 922,
	603, 922,
	605, 922,
	-2, 0,
	-1, 2348,
	1, 930,
	601, 930,
	603, 930,
	605, 930,
	-2, 0,
	-1, 2349,
	1, 975,
	601, 975,
	603, 975,
	605, 975,
	-2, 0,
	-1, 2390,
	1, 903,
	601, 903,
	603, 903,
	605, 903,
	-2, 0,
	-1, 2408,
	1, 958,
	601, 958,
	603, 958,
	605, 958,
	-2, 0,
	-1, 2453,
	440, 1622,
	441, 1622,
	-2, 1858,
	-1, 2484,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1878,
	-1, 2485,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1879,
	-1, 2486,
	95, 0,
	256, 0,
	257, 0,
	587, 0,
	588, 0,
	-2, 1880,
	-1, 2487,
	95, 0,
	256, 0,
	257, 0,
	587, 0,
	588, 0,
	-2, 1881,
	-1, 2488,
	95, 0,
	256, 0,
	257, 0,
	587, 0,
	588, 0,
	-2, 1882,
	-1, 2489,
	95, 0,
	256, 0,
	257, 0,
	587, 0,
	588, 0,
	-2, 1883,
	-1, 2490,
	95, 0,
	256, 0,
	257, 0,
	587, 0,
	588, 0,
	-2, 1884,
	-1, 2491,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1885,
	-1, 2503,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1897,
	-1, 2504,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1898,
	-1, 2505,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1899,
	-1, 2509,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1906,
	-1, 2515,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1910,
	-1, 2517,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1918,
	-1, 2518,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1919,
	-1, 2519,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1920,
	-1, 2520,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1921,
	-1, 2694,
	5, 2329,
	188, 2188,
	602, 2326,
	-2, 2317,
	-1, 2695,
	188, 2189,
	-2, 2703,
	-1, 2696,
	188, 2190,
	-2, 2519,
	-1, 2697,
	188, 2191,
	-2, 2399,
	-1, 2698,
	188, 2192,
	-2, 2456,
	-1, 2699,
	188, 2193,
	-2, 2504,
	-1, 2700,
	188, 2194,
	-2, 2627,
	-1, 2701,
	188, 2195,
	-2, 1985,
	-1, 2772,
	1, 1685,
	2, 1685,
	106, 1685,
	152, 1685,
	171, 1685,
	184, 1685,
	189, 1685,
	207, 1685,
	210, 1685,
	238, 1685,
	242, 1685,
	253, 1685,
	271, 1685,
	275, 1685,
	314, 1685,
	344, 1685,
	348, 1685,
	354, 1685,
	430, 1685,
	434, 1685,
	536, 1685,
	547, 1685,
	564, 1685,
	565, 1685,
	566, 1685,
	576, 1685,
	601, 1685,
	603, 1685,
	605, 1685,
	607, 1685,
	-2, 1684,
	-1, 2785,
	602, 2298,
	-2, 2312,
	-1, 2787,
	1, 329,
	564, 329,
	-2, 1581,
	-1, 2816,
	602, 1824,
	-2, 1814,
	-1, 3004,
	1, 1292,
	425, 1254,
	463, 1254,
	579, 1254,
	601, 1292,
	603, 1292,
	605, 1292,
	-2, 1581,
	-1, 3190,
	349, 1625,
	-2, 2742,
	-1, 3191,
	349, 1626,
	-2, 2612,
	-1, 3195,
	440, 2254,
	441, 2254,
	-2, 1983,
	-1, 3196,
	440, 2258,
	441, 2258,
	-2, 1984,
	-1, 3197,
	440, 2255,
	441, 2255,
	-2, 1983,
	-1, 3198,
	440, 2259,
	441, 2259,
	-2, 1984,
	-1, 3211,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1908,
	-1, 3212,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1912,
	-1, 3218,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1914,
	-1, 3442,
	1, 686,
	601, 686,
	603, 686,
	605, 686,
	-2, 1444,
	-1, 3608,
	43, 2289,
	-2, 1037,
	-1, 3613,
	1, 1292,
	601, 1292,
	603, 1292,
	605, 1292,
	-2, 1581,
	-1, 3724,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1916,
	-1, 3731,
	247, 0,
	249, 0,
	334, 0,
	-2, 1935,
	-1, 3799,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1964,
	-1, 3800,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1965,
	-1, 3801,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1966,
	-1, 3805,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1970,
	-1, 3806,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1971,
	-1, 3807,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1972,
	-1, 3854,
	602, 2299,
	-2, 2313,
	-1, 4029,
	604, 2859,
	-2, 1507,
	-1, 4090,
	247, 0,
	249, 0,
	334, 0,
	-2, 1936,
	-1, 4093,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1939,
	-1, 4094,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 4192,
	604, 2314,
	-2, 1327,
	-1, 4346,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1940,
	-1, 4347,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 1942,
	-1, 4358,
	247, 0,
	-2, 1975,
	-1, 4545,
	247, 0,
	-2, 1976,
	-1, 4745,
	50, 0,
	220, 0,
	274, 0,
	469, 0,
	573, 0,
	586, 0,
	-2, 2706,
}

const sqlPrivate = 57344

const sqlLast = 133864

var sqlAct = [...]int{
	272, 4862, 3597, 3079, 4941, 3349, 4738, 4849, 2878, 4407,
	4737, 3092, 4803, 4744, 4755, 4467, 4578, 4726, 3596, 4614,
	4878, 4635, 2148, 4610, 4586, 4691, 4671, 4756, 4694, 4713,
	4073, 4816, 4757, 4474, 2922, 4498, 2235, 4389, 3764, 1529,
	4549, 1253, 2947, 4452, 4262, 4301, 4743, 1264, 4296, 4412,
	2463, 4237, 2311, 3716, 4367, 4335, 1334, 4013, 3049, 4021,
	4188, 4283, 4276, 3630, 4285, 3948, 3463, 4169, 4512, 1338,
	4483, 2080, 1327, 710, 2727, 821, 2532, 3592, 4306, 4189,
	1084, 1783, 3204, 3976, 2464, 4363, 3523, 3624, 2960, 3994,
	2156, 3581, 3978, 3671, 3466, 2471, 1976, 2322, 1401, 781,
	3101, 821, 2011, 1075, 3068, 3673, 3103, 3574, 3573, 3857,
	2067, 3035, 3355, 3394, 3372, 1329, 1492, 3364, 1645, 3332,
	2012, 4072, 3116, 894, 4, 3080, 3094, 3353, 721, 1083,
	179, 1945, 2224, 3011, 2183, 2222, 4129, 3485, 2880, 1882,
	4850, 3063, 3111, 4550, 2764, 2167, 1852, 1686, 898, 3065,
	2765, 2468, 3100, 3331, 2545, 3188, 3825, 2610, 3460, 3039,
	1499, 889, 1921, 1332, 2284, 816, 2320, 1585, 1244, 2977,
	3110, 2223, 2612, 2206, 1134, 777, 2767, 2218, 2199, 2140,
	1130, 2136, 3050, 1771, 1946, 1382, 2529, 2078, 2745, 1306,
	2601, 3401, 1139, 2126, 2452, 2921, 2435, 2799, 2433, 754,
	2724, 1622, 1320, 266, 3073, 1994, 3594, 1588, 1643, 818,
	2271, 2903, 3104, 822, 823, 963, 4636, 2866, 1369, 2798,
	265, 3970, 1962, 179, 2754, 2604, 697, 1247, 1965, 1916,
	719, 2735, 1955, 1226, 2690, 2656, 2582, 1866, 188, 1261,
	1784, 1785, 2434, 189, 2436, 1721, 1706, 1340, 762, 1317,
	1243, 2232, 773, 2297, 1141, 2270, 1620, 1524, 2155, 1613,
	4804, 4863, 108, 2457, 1115, 714, 1137, 44, 3046, 43,
	41, 1790, 1249, 811, 711, 1184, 722, 32, 827, 737,
	30, 1224, 870, 28, 3241, 1770, 1535, 871, 984, 3839,
	3235, 3840, 2069, 4954, 2069, 830, 4944, 2744, 2069, 3351,
	3649, 4382, 3640, 1528, 827, 2069, 2069, 2069, 4928, 4927,
	913, 4917, 2744, 2744, 4898, 2244, 4896, 4784, 4411, 4835,
	4411, 830, 4792, 2244, 4781, 4779, 4793, 4776, 2744, 2744,
	4773, 4777, 4741, 4740, 4774, 4739, 2244, 2244, 1079, 2090,
	4734, 890, 3639, 73, 2090, 3302, 3303, 3427, 4733, 4724,
	4722, 1241, 2090, 4411, 4411, 4719, 4150, 4689, 2244, 4486,
	74, 4411, 4660, 4653, 4379, 4652, 2807, 2744, 73, 2744,
	893, 892, 3425, 4647, 4646, 4640, 78, 4411, 4411, 2244,
	3302, 3303, 4606, 4547, 4529, 74, 4253, 2807, 4058, 4526,
	4523, 1378, 1079, 2244, 4411, 3302, 3303, 2244, 4476, 1378,
	4430, 78, 4477, 1069, 2244, 4429, 4418, 1227, 1227, 2244,
	2244, 2737, 3410, 4417, 1798, 1799, 87, 4411, 1060, 1259,
	3317, 3649, 2321, 1059, 4410, 3302, 3303, 4374, 4411, 4348,
	3829, 2244, 4325, 2807, 1798, 1799, 2090, 1829, 4314, 4232,
	2827, 87, 3649, 2744, 1801, 4215, 4092, 4037, 3250, 2744,
	2807, 3666, 2087, 1080, 3251, 4031, 3992, 896, 93, 3666,
	3993, 3849, 3847, 3832, 1801, 3850, 3848, 2744, 2244, 3748,
	1854, 3744, 107, 2244, 1074, 2744, 1097, 93, 104, 1800,
	3302, 3303, 896, 3665, 1652, 1284, 3656, 3666, 3348, 1820,
	3657, 1277, 2744, 3203, 1230, 49, 1231, 107, 1817, 1800,
	2087, 2744, 93, 104, 3343, 1256, 3342, 3293, 2744, 3045,
	2744, 3294, 2803, 1228, 3291, 3283, 3308, 3281, 3292, 3284,
	3252, 2744, 4661, 3120, 2744, 1798, 1799, 2090, 2244, 4551,
	3090, 1842, 1843, 1844, 2307, 3089, 94, 39, 2850, 2307,
	2806, 2796, 2744, 2789, 2807, 2744, 2743, 2244, 1829, 1638,
	2744, 3308, 2306, 2244, 4086, 1801, 2307, 4542, 4530, 4486,
	2090, 94, 3829, 2736, 1848, 236, 3308, 4294, 4253, 2087,
	1278, 4216, 4058, 3657, 2950, 1823, 1824, 1825, 1826, 1278,
	2865, 1854, 2160, 2105, 2068, 1806, 2084, 3041, 2243, 2970,
	1800, 2744, 2863, 1941, 1523, 3931, 3308, 3719, 3693, 1963,
	1820, 2211, 3641, 1688, 2781, 1806, 2780, 2779, 2778, 1817,
	2777, 1232, 1229, 238, 1068, 1712, 1067, 1066, 1065, 1064,
	1063, 3642, 4145, 3318, 1062, 2382, 1058, 236, 1057, 1056,
	1055, 1054, 1053, 1828, 1830, 1052, 1051, 1050, 1049, 1048,
	1047, 3162, 1528, 4766, 1046, 3240, 73, 1045, 1136, 1044,
	1536, 3308, 1043, 1042, 1041, 2070, 1023, 2070, 3318, 1815,
	1816, 2070, 237, 74, 2805, 961, 1537, 960, 2070, 2070,
	2070, 959, 958, 3318, 957, 238, 230, 956, 955, 78,
	1549, 1543, 954, 953, 97, 231, 1823, 1824, 1825, 1826,
	952, 951, 1821, 950, 949, 948, 1806, 947, 1851, 3076,
	946, 945, 944, 3318, 943, 942, 1656, 941, 940, 97,
	939, 938, 190, 937, 936, 4308, 935, 934, 2639, 87,
	2087, 3639, 933, 932, 237, 2607, 931, 930, 929, 928,
	927, 1537, 926, 1851, 1839, 916, 915, 1849, 1642, 187,
	100, 911, 910, 103, 1828, 1830, 904, 903, 1851, 888,
	236, 887, 844, 843, 842, 1343, 1139, 1351, 3318, 841,
	896, 833, 832, 150, 187, 100, 1278, 1851, 103, 236,
	1815, 1816, 831, 49, 190, 107, 3319, 897, 1851, 797,
	93, 104, 150, 1139, 1139, 1139, 788, 1851, 1837, 1082,
	787, 2087, 786, 768, 236, 260, 259, 1537, 238, 258,
	257, 1404, 897, 1821, 256, 1404, 255, 150, 254, 253,
	252, 3319, 1343, 1113, 251, 250, 2608, 238, 249, 248,
	247, 246, 1827, 245, 244, 243, 3319, 242, 4765, 241,
	2736, 240, 1537, 1851, 239, 2244, 1139, 2837, 1139, 94,
	1139, 2068, 238, 154, 4104, 1822, 1343, 237, 2087, 2084,
	2428, 3871, 3843, 3667, 3397, 3346, 3319, 3263, 191, 3246,
	3237, 230, 3144, 1386, 1387, 1388, 237, 3021, 154, 2811,
	231, 2786, 1343, 2771, 1373, 2134, 2637, 1502, 1851, 1507,
	230, 3058, 1966, 191, 2623, 2089, 1924, 1255, 2621, 231,
	1989, 237, 1343, 1923, 1548, 1542, 3347, 190, 2609, 1343,
	2606, 1924, 1893, 1853, 1278, 230, 1531, 1139, 1923, 1139,
	1797, 3319, 1390, 1343, 231, 1263, 190, 2314, 4762, 1139,
	1927, 1139, 1527, 4310, 3313, 3311, 3312, 3304, 3305, 3306,
	3307, 3309, 3310, 1827, 4742, 1922, 4554, 236, 1311, 1314,
	4721, 891, 4533, 4621, 4539, 4402, 1594, 1597, 4362, 4315,
	1324, 1365, 4531, 4293, 4156, 1884, 1822, 4127, 4126, 4120,
	1367, 3312, 3304, 3305, 3306, 3307, 3309, 3310, 1397, 1343,
	1489, 1494, 3997, 4119, 1512, 3311, 3312, 3304, 3305, 3306,
	3307, 3309, 3310, 1840, 4118, 238, 4111, 97, 4110, 1139,
	1818, 1814, 1139, 1811, 1809, 1810, 1802, 1803, 1804, 1805,
	1807, 1808, 236, 2313, 4108, 4103, 1497, 3304, 3305, 3306,
	3307, 3309, 3310, 4100, 1853, 4099, 1802, 1803, 1804, 1805,
	1807, 1808, 179, 179, 3991, 1359, 1891, 236, 827, 3875,
	3874, 3302, 3303, 1583, 237, 3873, 3853, 3820, 1526, 1525,
	3819, 3818, 187, 100, 3740, 830, 103, 3735, 230, 3392,
	238, 3339, 1257, 3330, 1625, 1627, 2611, 231, 3301, 3313,
	3311, 3312, 3304, 3305, 3306, 3307, 3309, 3310, 236, 3298,
	3297, 1657, 236, 3295, 1886, 238, 3290, 3289, 236, 1600,
	897, 3302, 3303, 3288, 190, 150, 3285, 1838, 3282, 3262,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 3929, 237,
	1841, 1818, 1814, 236, 1811, 1809, 1810, 1802, 1803, 1804,
	1805, 1807, 1808, 230, 3245, 1885, 238, 1883, 2287, 3238,
	238, 3236, 231, 1139, 237, 1373, 238, 3091, 1373, 1139,
	3060, 2772, 2594, 236, 236, 1797, 1884, 1616, 230, 1623,
	1240, 1730, 2251, 1796, 2249, 4948, 154, 231, 4888, 190,
	4887, 238, 3998, 4851, 1080, 4802, 4800, 1265, 3766, 236,
	4681, 191, 4613, 1775, 4597, 237, 3344, 4594, 4593, 237,
	4592, 4572, 4571, 2605, 3075, 237, 1714, 4309, 4569, 230,
	1662, 238, 238, 230, 4553, 4552, 4527, 4511, 231, 230,
	4510, 236, 231, 1769, 1637, 2535, 4496, 4493, 231, 4492,
	237, 4487, 3308, 4426, 2820, 4397, 1651, 238, 4360, 4343,
	236, 4342, 4322, 4321, 230, 190, 4279, 1873, 4254, 190,
	4144, 4125, 4059, 231, 4051, 190, 4048, 3917, 3998, 3916,
	237, 237, 3899, 3898, 1139, 1139, 1139, 3389, 3896, 238,
	1139, 3835, 236, 3823, 230, 230, 3730, 1261, 1871, 1261,
	190, 3668, 3308, 231, 231, 3650, 237, 3616, 238, 1679,
	3540, 3498, 3465, 3419, 1404, 3267, 1798, 1799, 3417, 3266,
	230, 3261, 3227, 1715, 1139, 1943, 3034, 821, 1930, 231,
	190, 190, 1929, 2029, 821, 1928, 1776, 1925, 237, 1917,
	238, 1915, 2818, 2817, 1350, 2783, 1801, 2776, 2541, 2742,
	2619, 1870, 230, 1798, 1799, 1992, 190, 237, 1988, 1944,
	1939, 231, 1938, 1937, 1952, 1936, 1772, 2008, 1780, 2638,
	1779, 230, 1060, 1935, 2057, 1934, 2059, 1059, 1933, 1932,
	231, 1800, 1931, 1801, 3059, 1912, 1911, 1910, 190, 237,
	1909, 1908, 1999, 1907, 1774, 1906, 1905, 1904, 2002, 1793,
	1794, 1926, 1903, 230, 1902, 1901, 1900, 190, 1899, 1139,
	1898, 1973, 231, 1897, 1343, 1886, 1949, 1950, 1800, 1872,
	1869, 1864, 1614, 1358, 1534, 1282, 1541, 1273, 1547, 4555,
	179, 4282, 4152, 1139, 1851, 1080, 4096, 3870, 2809, 190,
	3846, 1404, 2092, 3838, 2117, 2116, 3249, 2774, 2125, 2127,
	1619, 4380, 1227, 4154, 2150, 3302, 3303, 3869, 1885, 1918,
	1919, 3415, 1867, 2125, 3645, 2125, 2123, 2315, 2125, 4218,
	1984, 4885, 2074, 4877, 1385, 2076, 2948, 1259, 4595, 1259,
	4488, 2081, 2240, 2096, 4479, 2083, 4478, 1806, 4313, 4256,
	2086, 4255, 4217, 4147, 1997, 1636, 4063, 1641, 4062, 1383,
	1998, 4061, 4060, 3841, 3670, 3669, 2095, 1650, 3652, 1655,
	1373, 3651, 4758, 2132, 4001, 4831, 4829, 1964, 2194, 1993,
	2926, 4484, 1378, 3717, 1378, 1924, 1971, 2636, 1974, 1379,
	827, 1966, 1923, 3501, 3943, 2622, 2003, 827, 3287, 2620,
	1384, 1767, 3286, 2052, 3532, 1678, 2111, 830, 3209, 2908,
	2072, 1381, 3914, 1039, 830, 3467, 2975, 1942, 1731, 2208,
	2607, 1080, 3599, 1256, 3598, 1256, 4534, 2120, 1983, 1968,
	1982, 1981, 1343, 1343, 1713, 1895, 4532, 1378, 1979, 1687,
	4814, 1978, 1404, 3661, 1977, 2225, 2312, 2023, 2338, 4475,
	4788, 4769, 4754, 3582, 2009, 4401, 2098, 3117, 1688, 1040,
	2226, 4005, 3988, 4421, 3945, 4203, 3940, 3922, 2026, 3690,
	3440, 2319, 4364, 4200, 3351, 2160, 3768, 2602, 4393, 4763,
	2816, 1940, 3255, 1920, 3590, 2281, 3891, 2956, 2905, 1593,
	1519, 1354, 1310, 4778, 4775, 3635, 4587, 2967, 2190, 1907,
	2198, 1907, 4297, 2203, 4688, 2964, 2962, 4565, 1375, 1876,
	3470, 2608, 3909, 1881, 2094, 3098, 3072, 3565, 4832, 4424,
	4420, 2102, 4399, 3304, 3305, 3306, 3307, 3309, 3310, 3143,
	1666, 3444, 2193, 1892, 3711, 3958, 4448, 1343, 4833, 1343,
	4205, 1343, 2101, 2122, 1568, 883, 1560, 4764, 2955, 2904,
	2236, 2241, 2851, 1710, 2396, 2128, 2118, 1343, 1343, 2882,
	2099, 1618, 1037, 1035, 1728, 4943, 1521, 1033, 1343, 1031,
	4601, 4441, 4432, 4246, 4245, 3306, 3307, 3309, 3310, 3956,
	1343, 2121, 1343, 1343, 1343, 2166, 3955, 3947, 4184, 2394,
	1380, 3446, 2288, 2609, 1028, 2606, 3937, 3936, 2230, 2228,
	2229, 3934, 2869, 3957, 1729, 3933, 821, 3921, 3886, 3885,
	2869, 3571, 1019, 2324, 2277, 3570, 3409, 2867, 2347, 3013,
	2652, 3260, 4177, 4867, 2188, 2867, 3259, 2112, 1139, 1619,
	3258, 1569, 3257, 2337, 2527, 3213, 2282, 827, 1368, 2973,
	3894, 2972, 2969, 2294, 2651, 2958, 2942, 1526, 1525, 1376,
	1239, 884, 2941, 2936, 830, 2935, 2934, 2913, 1377, 1709,
	2912, 2873, 2797, 1139, 2525, 1727, 3224, 2516, 2187, 2184,
	1773, 2202, 2261, 2473, 2885, 3069, 2824, 4178, 4199, 4341,
	1606, 2348, 1605, 2801, 2910, 2342, 4422, 3691, 1564, 1379,
	1385, 2242, 2317, 1604, 4201, 1603, 3222, 1139, 1980, 1139,
	2425, 4394, 2302, 1025, 2334, 2417, 1139, 1765, 760, 2029,
	2029, 1404, 1664, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 2304,
	1139, 2611, 1139, 1139, 1139, 1139, 1384, 2263, 2291, 2262,
	1804, 1805, 1807, 1808, 1078, 1577, 2325, 1379, 1616, 3530,
	2299, 3416, 2299, 2330, 1385, 2300, 2445, 2296, 1139, 3467,
	2906, 2906, 1139, 1139, 1623, 2858, 1623, 2432, 2226, 2427,
	1139, 2312, 1359, 2308, 1139, 2309, 1139, 1139, 760, 1080,
	1808, 1080, 3500, 2443, 1404, 1255, 2521, 1255, 1375, 827,
	1139, 1139, 1139, 1139, 1296, 2367, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 2329, 1132, 830, 2522, 2443, 2469,
	2470, 4868, 2157, 2523, 1378, 2196, 2346, 2528, 3219, 2531,
	1384, 1522, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 2357, 2531, 4872, 1077, 1139, 2583, 2584, 4162, 3123,
	4457, 2810, 2441, 2420, 2408, 3220, 2153, 1261, 2605, 3225,
	2583, 2599, 1740, 1582, 1404, 1659, 3157, 2884, 2788, 2390,
	1618, 2930, 4173, 1261, 2354, 2896, 1375, 2441, 4174, 3186,
	1380, 2400, 2456, 2129, 2130, 2158, 2159, 2647, 4179, 1139,
	1404, 2602, 3310, 1680, 3967, 2388, 1778, 4202, 2923, 2924,
	2923, 2924, 1710, 2923, 2924, 4580, 2693, 2693, 2707, 2407,
	2583, 4161, 4219, 2728, 2730, 2154, 1726, 2547, 2431, 2734,
	2430, 3531, 2429, 2437, 2444, 2598, 759, 1357, 4900, 1060,
	4176, 2895, 1060, 1060, 2460, 2439, 4832, 2461, 2462, 1376,
	4340, 4873, 2301, 886, 885, 2909, 3700, 4180, 1377, 3168,
	4197, 3968, 2759, 2023, 2023, 709, 1079, 2351, 1380, 2168,
	1257, 1766, 1257, 2784, 2966, 2419, 2416, 1707, 3699, 2751,
	1984, 1744, 1688, 3443, 2026, 2026, 1676, 2539, 881, 3201,
	880, 704, 2172, 1660, 2537, 1973, 2355, 2513, 3906, 2854,
	2649, 1343, 1343, 1688, 3966, 2650, 2965, 3159, 2653, 4760,
	2654, 2655, 2442, 2543, 2963, 2961, 2345, 1589, 1709, 1954,
	2856, 1723, 3754, 2524, 2883, 2611, 759, 1376, 1227, 2773,
	4244, 2800, 2596, 2526, 795, 3935, 1377, 2442, 4582, 3517,
	1708, 924, 1080, 3918, 2804, 1404, 761, 1259, 2872, 2169,
	179, 2868, 1080, 3757, 2750, 3221, 1080, 2857, 2846, 3932,
	2872, 4875, 4854, 1259, 3878, 3223, 3865, 2840, 3509, 1587,
	3577, 3171, 1563, 4881, 2395, 1665, 2689, 2702, 2855, 2029,
	2823, 3569, 2719, 1029, 1029, 2732, 2440, 4175, 1029, 1269,
	1030, 2740, 2741, 2832, 2756, 2757, 3518, 1337, 2812, 2836,
	2752, 2758, 1958, 2763, 3755, 2160, 2769, 2770, 4458, 2393,
	1971, 2440, 1373, 2847, 2843, 1029, 1926, 3904, 3528, 2426,
	4456, 2968, 1404, 3200, 2933, 3510, 4454, 4185, 4186, 2911,
	4846, 1266, 4853, 1256, 1378, 917, 761, 270, 1343, 3516,
	2248, 2247, 4903, 4657, 2795, 1080, 793, 905, 1076, 1256,
	2141, 1961, 2874, 3008, 1514, 2142, 3193, 3194, 2173, 1139,
	1139, 2842, 1139, 2819, 2383, 4195, 1956, 2511, 3508, 2848,
	2514, 2831, 4821, 4453, 4078, 2834, 1271, 2835, 1918, 1919,
	4077, 4198, 3694, 2822, 1959, 821, 4761, 1343, 1552, 2871,
	2826, 2849, 2959, 2841, 3578, 2839, 3633, 3632, 1295, 2916,
	3575, 4455, 3165, 2212, 1026, 2931, 3170, 834, 2219, 2946,
	3009, 2611, 1378, 1663, 1590, 1011, 3919, 3683, 1343, 3038,
	3083, 2510, 2915, 1566, 2174, 2175, 2221, 1957, 2870, 1741,
	3681, 2899, 1343, 2852, 1343, 3112, 4728, 3167, 4729, 1073,
	3674, 1631, 3056, 1270, 2914, 2209, 2418, 4667, 2170, 1343,
	2540, 4184, 4385, 3007, 4931, 1644, 2069, 2932, 4874, 2949,
	2938, 3366, 2611, 2937, 2877, 4588, 1876, 2353, 2974, 2143,
	2887, 2890, 3454, 3005, 3006, 2940, 4608, 3115, 3632, 2925,
	2927, 2928, 2929, 2220, 1589, 4177, 3114, 2147, 3445, 4170,
	4759, 3124, 3125, 2171, 3482, 2180, 3215, 1139, 3543, 1958,
	1738, 758, 3131, 3132, 3133, 2197, 4168, 4581, 1689, 2530,
	1520, 1670, 3145, 3016, 3146, 4172, 2939, 1280, 3018, 2869,
	2944, 2715, 2213, 1913, 2954, 4196, 4879, 4271, 3413, 1101,
	2195, 1012, 4655, 2023, 2888, 3981, 3486, 3141, 3676, 705,
	4178, 2389, 3169, 3014, 3562, 3979, 179, 1960, 1961, 2209,
	3118, 3481, 2181, 3675, 2026, 1739, 3052, 827, 2151, 1139,
	2144, 2149, 2787, 2753, 794, 1139, 1139, 1526, 3019, 1777,
	1742, 4820, 3097, 4337, 830, 4656, 1661, 4074, 3087, 4353,
	3032, 1959, 2209, 4171, 918, 919, 4843, 2163, 827, 3488,
	3085, 3147, 4711, 3042, 3043, 2179, 906, 907, 2141, 3173,
	1356, 3175, 3121, 2142, 2185, 830, 4699, 3126, 4229, 3127,
	3138, 727, 1863, 796, 2176, 3078, 2512, 792, 3265, 3088,
	706, 1139, 1139, 3983, 2593, 925, 3149, 1139, 3151, 3576,
	3153, 2350, 3099, 2755, 2102, 2205, 4880, 3905, 3086, 2538,
	1139, 1139, 3119, 2145, 2164, 3672, 1139, 1139, 4904, 1675,
	1677, 1088, 1139, 3067, 3487, 3163, 835, 836, 3982, 2768,
	3365, 1267, 2204, 4521, 1743, 1623, 1079, 3140, 3014, 707,
	2160, 708, 4882, 4795, 3148, 3770, 4891, 1017, 1016, 2191,
	2344, 3455, 3150, 4796, 3152, 4286, 3154, 2162, 4281, 3492,
	4068, 2177, 3981, 2151, 4889, 4249, 2200, 1139, 1139, 1139,
	3866, 3216, 3979, 1139, 1285, 4287, 4615, 3181, 4079, 3713,
	2945, 3184, 4336, 1139, 1268, 1255, 4513, 2143, 3192, 4704,
	1694, 4634, 1954, 2186, 1013, 2158, 2159, 3996, 4495, 4514,
	1139, 1255, 4248, 3176, 4247, 2147, 3178, 4019, 3183, 3182,
	1787, 3620, 2216, 3248, 1960, 4173, 3490, 4272, 2269, 1951,
	3977, 4174, 2456, 3187, 1283, 2201, 1276, 696, 1787, 3202,
	1788, 4179, 3809, 4515, 4075, 3682, 3677, 3678, 3679, 3680,
	4123, 1782, 3243, 3244, 4819, 2709, 2459, 3247, 2161, 2113,
	3983, 920, 921, 4419, 4909, 3402, 2141, 4504, 4564, 3491,
	4020, 2142, 3951, 908, 909, 2110, 3938, 3890, 3239, 2214,
	3461, 838, 837, 4176, 3621, 1958, 3612, 3457, 2144, 2149,
	3214, 3057, 4616, 3051, 3036, 3982, 2295, 4932, 2289, 2070,
	4180, 3859, 1139, 1139, 1139, 1139, 2283, 4517, 3683, 2275,
	3980, 2889, 1139, 1139, 1139, 2255, 2254, 1139, 1557, 2449,
	3753, 3681, 2215, 3882, 1786, 2917, 1014, 1139, 1261, 1404,
	4516, 3674, 4338, 1139, 1961, 1139, 3358, 3359, 2746, 1287,
	4672, 767, 1786, 3824, 1261, 839, 840, 3714, 4518, 1956,
	2872, 2108, 4637, 1015, 1787, 3860, 2146, 2401, 2106, 4022,
	1257, 4302, 1404, 4080, 3033, 4473, 1011, 1959, 1298, 3837,
	4471, 2145, 4396, 2749, 1261, 3022, 1257, 1404, 3025, 3473,
	3027, 3254, 3861, 3469, 3858, 2143, 3468, 3207, 1080, 3185,
	1073, 3341, 2335, 1788, 2109, 3363, 3362, 1711, 2029, 2794,
	4284, 2793, 1404, 2147, 2792, 3382, 1018, 3360, 1612, 4794,
	1957, 1788, 1717, 1716, 2748, 3395, 2791, 2139, 1343, 2747,
	1598, 2151, 2790, 2182, 3987, 3074, 1863, 3408, 3074, 3676,
	4175, 3040, 1077, 2195, 1599, 3810, 1610, 923, 4575, 4468,
	1139, 3585, 4263, 2893, 3675, 3811, 4408, 3370, 4081, 3897,
	2197, 3423, 3662, 4124, 1139, 2293, 3368, 2450, 1786, 4840,
	3887, 4612, 2150, 3391, 1343, 3450, 3451, 3980, 4383, 2029,
	4185, 4186, 3012, 3426, 2137, 4908, 2144, 2149, 3396, 3411,
	2192, 4319, 1012, 4391, 3122, 2194, 3471, 1139, 3017, 3475,
	4617, 3015, 2323, 3369, 2225, 1669, 2150, 3544, 3380, 3434,
	2918, 2919, 4404, 1343, 3383, 3384, 4678, 4403, 1259, 3155,
	3400, 3352, 3336, 3337, 3338, 2715, 3388, 2138, 3414, 4685,
	3441, 3883, 4576, 2189, 1259, 1343, 4130, 1343, 4669, 4392,
	1960, 3367, 3430, 3381, 3447, 3432, 3433, 3826, 2618, 1373,
	3436, 4844, 3437, 1761, 3438, 3472, 1695, 2208, 3477, 1404,
	4706, 3479, 4409, 4318, 1259, 2196, 2208, 2412, 4845, 2145,
	1343, 3546, 4460, 3548, 1343, 1763, 3552, 3458, 3374, 1760,
	3558, 1758, 3503, 3404, 3405, 3406, 3407, 1735, 2392, 1733,
	3420, 3421, 3533, 3422, 1705, 1703, 3862, 4842, 3334, 3462,
	1701, 3386, 1343, 3387, 1256, 4679, 2715, 2715, 3403, 4519,
	1101, 1101, 1101, 1699, 2146, 4520, 1343, 4780, 1343, 2151,
	1256, 4577, 1404, 3431, 4604, 3526, 3435, 1697, 1487, 821,
	1343, 4596, 1487, 3888, 4359, 3442, 1691, 1685, 1017, 1016,
	766, 1343, 4122, 3595, 1683, 3448, 3986, 3541, 3333, 2193,
	1256, 1608, 3521, 3729, 3579, 3688, 1343, 3687, 3424, 3296,
	1611, 3226, 2023, 2310, 3037, 2957, 3682, 3677, 3678, 3679,
	3680, 2907, 3449, 1261, 3375, 2102, 3453, 3628, 3507, 1337,
	2326, 3489, 2821, 2026, 3112, 1013, 2421, 1991, 1609, 922,
	2328, 1987, 3604, 3112, 3499, 3512, 1764, 1647, 1343, 1343,
	3611, 1998, 2336, 2359, 2339, 2340, 2341, 2234, 3709, 3708,
	1782, 3161, 3626, 3160, 3515, 3129, 2438, 3505, 3545, 1722,
	2362, 2102, 3513, 1343, 3534, 3373, 3514, 2274, 2253, 2058,
	1896, 1658, 1581, 2023, 3580, 3619, 3583, 2617, 3542, 3519,
	3567, 4753, 3637, 4230, 3648, 3529, 3561, 3750, 3555, 2414,
	3942, 2940, 3941, 2413, 2026, 4668, 4231, 4214, 3379, 4300,
	2102, 1762, 4236, 4227, 4166, 1759, 4817, 1757, 1404, 4018,
	2391, 1404, 4009, 1734, 3553, 1732, 3568, 3954, 3559, 3572,
	1704, 1702, 2102, 3692, 2102, 3939, 1700, 3912, 2715, 2715,
	2715, 2715, 3910, 3889, 3587, 1027, 2915, 4295, 2017, 1698,
	3629, 3615, 2146, 3607, 1139, 3702, 3566, 1014, 3608, 3622,
	1139, 1139, 3609, 1696, 1139, 1139, 1139, 2102, 1139, 179,
	179, 2102, 1690, 1684, 3610, 3600, 3070, 1139, 2029, 3062,
	1682, 3055, 827, 3044, 1015, 3030, 1139, 1607, 3029, 3010,
	2838, 1139, 2833, 3707, 3685, 2252, 3634, 1404, 3660, 830,
	2250, 3646, 3647, 1259, 3636, 3643, 1139, 2227, 2210, 3664,
	4808, 2178, 2165, 3658, 1404, 3376, 3377, 3378, 2152, 3706,
	2091, 2088, 2085, 3627, 2029, 2029, 1139, 1139, 2082, 1139,
	1139, 1139, 2077, 2075, 2071, 2358, 3684, 1018, 3715, 2233,
	2062, 3625, 1791, 2001, 3556, 4833, 3205, 1139, 3696, 2219,
	3697, 1139, 3698, 2029, 2029, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1236, 1139, 3782, 3703, 3783,
	3732, 3686, 2114, 4574, 1139, 1139, 2029, 3428, 1080, 1256,
	4286, 1139, 3179, 3712, 3177, 3003, 3742, 3743, 4716, 4324,
	4317, 1237, 1139, 1032, 1034, 1036, 4316, 4243, 4158, 3113,
	4287, 2133, 2869, 1261, 1261, 1562, 2869, 1139, 2424, 4506,
	2894, 3704, 4499, 4030, 2292, 2160, 2349, 2867, 1755, 1756,
	3710, 2891, 1319, 3456, 3739, 1318, 1255, 2386, 2381, 4715,
	3737, 3749, 3206, 2356, 2469, 3773, 4206, 4238, 1404, 1681,
	4836, 2897, 1255, 1792, 4541, 3855, 1798, 1799, 4406, 3765,
	4131, 4109, 3484, 3557, 2422, 3821, 3756, 3758, 3759, 1798,
	1799, 2898, 3506, 2469, 3788, 3772, 2920, 1795, 1352, 3842,
	1286, 4827, 1255, 2898, 3760, 4789, 1801, 3028, 3493, 3494,
	261, 3495, 3496, 3497, 3520, 4006, 3522, 1139, 3780, 3863,
	3864, 3813, 3781, 3785, 3787, 3950, 3817, 3779, 1147, 1319,
	2423, 2276, 1238, 1363, 3876, 3877, 1139, 3879, 3822, 2964,
	1319, 1800, 2962, 2971, 179, 3833, 3834, 3949, 2951, 3554,
	2900, 4677, 2023, 3560, 1800, 2953, 3814, 693, 2902, 3535,
	3536, 1487, 3537, 3538, 3539, 4876, 4662, 4628, 2952, 1139,
	1139, 2901, 4622, 2026, 268, 268, 268, 4573, 699, 700,
	4490, 715, 699, 715, 725, 3830, 3831, 765, 4466, 4384,
	3828, 785, 4016, 2845, 1337, 4008, 791, 3995, 2023, 2023,
	3852, 3614, 3845, 268, 3077, 2733, 2097, 3844, 2010, 4405,
	4708, 1139, 3880, 1259, 1259, 4709, 3881, 2943, 1518, 2026,
	2026, 1257, 1517, 902, 3412, 4907, 4624, 2023, 2023, 268,
	3302, 3303, 1528, 1343, 4101, 4848, 1343, 1257, 1798, 1799,
	4708, 1343, 2613, 3923, 3868, 4709, 2861, 2862, 2026, 2026,
	2859, 2860, 2861, 1668, 2859, 2648, 3911, 4015, 3913, 1667,
	2023, 4491, 3872, 3928, 3930, 1737, 2029, 1257, 1736, 4442,
	3927, 4240, 3893, 4235, 4234, 4097, 3867, 3761, 3550, 3547,
	1101, 2026, 1890, 1889, 4893, 3946, 4855, 4666, 1487, 3952,
	3944, 4665, 3915, 4664, 4603, 4602, 4557, 1343, 4469, 1256,
	1256, 4436, 3920, 1139, 4381, 4378, 4376, 4274, 4260, 4204,
	4153, 1261, 1139, 4054, 4032, 4036, 3990, 3908, 3083, 3969,
	3971, 3900, 1343, 1343, 1343, 3618, 3617, 3478, 3429, 3953,
	3004, 2915, 4039, 3166, 3158, 3137, 3136, 3135, 4023, 1343,
	1343, 1343, 3134, 3061, 3031, 3112, 3985, 2892, 2829, 2825,
	2814, 2813, 2802, 2542, 2415, 2387, 2380, 2379, 1343, 699,
	699, 2715, 2715, 3973, 1404, 4027, 4024, 268, 2378, 4002,
	4003, 2377, 2376, 3962, 2290, 2264, 2260, 4043, 2259, 2258,
	2257, 2256, 3974, 2065, 2017, 2017, 3462, 2064, 2063, 2061,
	1404, 1255, 2000, 1139, 1139, 4055, 1754, 4007, 1753, 1139,
	1139, 2029, 4026, 1692, 1139, 1139, 3965, 1139, 1576, 1575,
	1574, 1573, 1139, 1572, 1571, 1570, 1565, 3975, 1561, 4010,
	3984, 1559, 1558, 1139, 1511, 3989, 1510, 1509, 1395, 1487,
	4025, 1394, 1393, 1392, 4028, 4033, 1391, 1355, 4034, 1139,
	1305, 3130, 1304, 1303, 1302, 3963, 4038, 1301, 1300, 1299,
	4012, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715,
	2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715,
	2715, 4082, 2715, 4049, 4044, 4045, 4066, 4064, 4083, 4053,
	4046, 4095, 4050, 1297, 4052, 1292, 1291, 1290, 2102, 1289,
	1288, 1259, 895, 8, 1219, 2104, 1038, 1024, 4579, 4076,
	1261, 4183, 4182, 4091, 4181, 2411, 92, 1567, 1261, 857,
	86, 2217, 1404, 3907, 1404, 4783, 990, 4705, 4607, 4071,
	2023, 1261, 1550, 4065, 865, 4687, 4004, 3480, 2976, 2361,
	1693, 2363, 1343, 1343, 3390, 2775, 4654, 4105, 3264, 4548,
	4352, 2026, 1404, 2616, 1894, 4136, 3345, 88, 1123, 1169,
	4270, 4269, 4167, 3892, 3102, 4267, 1257, 4266, 2014, 2016,
	1087, 1407, 3395, 4727, 4159, 4160, 2115, 1261, 1129, 1261,
	2131, 2124, 2815, 2692, 1146, 4121, 1143, 1256, 2018, 2020,
	1145, 1144, 2019, 1914, 1142, 2013, 4014, 3081, 3644, 4207,
	1617, 1615, 1343, 992, 2119, 2536, 2600, 3253, 1887, 1103,
	4139, 1125, 1404, 2597, 1343, 1281, 1114, 1343, 4190, 4194,
	4190, 1102, 4132, 3371, 3350, 4142, 3631, 4128, 1404, 3851,
	4137, 2448, 4135, 179, 4138, 875, 4209, 4210, 3299, 4193,
	2603, 1272, 2716, 4239, 4143, 4241, 4146, 4133, 4134, 2708,
	2704, 3439, 3071, 1768, 4366, 4163, 1865, 3082, 1389, 4208,
	1107, 4151, 2534, 1878, 3231, 2023, 2458, 1343, 1343, 3638,
	4165, 3393, 2808, 4712, 4157, 3769, 3164, 2268, 1235, 1234,
	1279, 1233, 4264, 4693, 4690, 2207, 2026, 1343, 4047, 3593,
	1259, 1255, 1255, 2107, 2853, 2546, 3601, 1119, 1259, 1404,
	1505, 2405, 3356, 3663, 1343, 1578, 4228, 790, 1487, 4413,
	4242, 1259, 1131, 1850, 2999, 2998, 4233, 4261, 2762, 4568,
	1374, 1372, 1371, 4258, 1370, 4864, 4930, 3903, 3902, 1261,
	3901, 235, 3199, 1789, 4226, 1781, 232, 234, 233, 4275,
	4292, 1343, 1343, 1343, 1343, 4303, 4289, 4252, 3856, 3399,
	4787, 3925, 3584, 23, 22, 1404, 4257, 1259, 21, 1259,
	3964, 113, 4251, 4250, 2017, 42, 20, 1139, 1139, 1139,
	4190, 4323, 152, 4304, 130, 149, 1256, 148, 122, 4223,
	4265, 147, 146, 145, 1256, 1404, 4259, 4298, 4307, 4320,
	1139, 4280, 144, 1139, 1139, 151, 143, 1256, 142, 137,
	141, 1487, 140, 1139, 139, 4212, 2029, 138, 136, 134,
	4305, 1139, 1139, 135, 129, 133, 4312, 132, 4221, 131,
	128, 4224, 127, 126, 125, 124, 1404, 123, 1343, 121,
	153, 120, 4011, 4327, 119, 118, 117, 116, 115, 114,
	1274, 778, 779, 1256, 4326, 1256, 4344, 61, 60, 2102,
	112, 1404, 110, 4339, 4291, 111, 1257, 1257, 19, 1139,
	4329, 2102, 40, 14, 2102, 65, 66, 18, 4332, 13,
	35, 1487, 1139, 1294, 4355, 91, 102, 101, 36, 99,
	98, 1139, 4349, 34, 17, 268, 2029, 268, 268, 16,
	1323, 268, 1333, 15, 96, 1139, 95, 1487, 1139, 4372,
	4373, 33, 31, 1353, 11, 9, 4067, 37, 4361, 1259,
	1975, 785, 1139, 4333, 785, 4387, 12, 4375, 5, 1404,
	184, 183, 4416, 186, 182, 185, 1343, 90, 181, 180,
	89, 29, 10, 176, 2102, 4482, 1343, 1343, 268, 4000,
	268, 268, 1323, 81, 268, 268, 4388, 4386, 178, 1333,
	4395, 177, 175, 174, 173, 82, 79, 172, 85, 171,
	80, 84, 83, 268, 27, 1530, 6, 64, 3595, 1255,
	7, 4334, 4459, 3689, 4447, 105, 106, 38, 4435, 4481,
	77, 1404, 76, 75, 1343, 264, 1555, 26, 63, 4472,
	25, 4437, 170, 217, 4438, 1256, 4433, 216, 4427, 4428,
	215, 214, 1261, 1261, 213, 1580, 4425, 212, 1333, 211,
	2453, 210, 268, 268, 4444, 1323, 205, 204, 4462, 4489,
	209, 207, 206, 1139, 1139, 4500, 4461, 208, 4443, 4505,
	4445, 4465, 4446, 203, 4470, 227, 785, 4480, 268, 268,
	1139, 2029, 1487, 4190, 4190, 226, 220, 219, 4509, 225,
	4503, 224, 223, 4501, 222, 4464, 221, 218, 4528, 4485,
	2023, 902, 4524, 4525, 229, 202, 201, 200, 4522, 4497,
	4508, 4507, 198, 4502, 4307, 194, 193, 197, 1139, 199,
	1139, 2026, 1139, 196, 195, 192, 228, 72, 168, 169,
	71, 4451, 1261, 4536, 167, 166, 165, 4537, 4538, 4556,
	164, 163, 4558, 162, 161, 1139, 70, 1261, 24, 4563,
	2, 4213, 4439, 1, 3563, 0, 0, 0, 0, 1487,
	0, 0, 0, 4222, 0, 0, 4225, 0, 0, 0,
	4449, 0, 0, 4190, 1257, 4562, 4540, 0, 0, 268,
	2023, 0, 3588, 4546, 0, 0, 0, 0, 4190, 0,
	4559, 0, 0, 3605, 2150, 0, 2710, 4590, 1255, 1139,
	1139, 2026, 0, 268, 0, 0, 1255, 4591, 3613, 1139,
	4611, 4583, 0, 2102, 1261, 0, 4584, 1261, 0, 1255,
	0, 1343, 1259, 1259, 0, 0, 0, 0, 4598, 0,
	0, 1343, 1343, 0, 0, 0, 4288, 0, 0, 0,
	0, 4600, 0, 0, 0, 0, 0, 0, 1343, 0,
	3654, 3655, 0, 4273, 4605, 4190, 0, 0, 4190, 0,
	4618, 0, 1139, 1139, 0, 1255, 4290, 1255, 4645, 4626,
	4630, 4625, 1139, 4623, 4631, 0, 0, 4633, 4599, 4619,
	4620, 0, 4639, 0, 0, 0, 0, 4643, 4644, 4311,
	4638, 4642, 4650, 4641, 4651, 0, 0, 0, 0, 0,
	4485, 0, 0, 0, 4648, 0, 4649, 0, 1256, 1256,
	0, 0, 1259, 4659, 4680, 1139, 1139, 0, 1139, 2715,
	0, 0, 4684, 0, 0, 0, 4663, 1259, 0, 0,
	0, 0, 0, 0, 0, 2023, 4658, 0, 0, 0,
	0, 0, 4714, 4692, 4695, 0, 0, 0, 0, 4710,
	4675, 4676, 0, 0, 0, 4683, 2026, 0, 4682, 0,
	0, 4702, 0, 1257, 4703, 4707, 4732, 0, 0, 0,
	0, 1257, 4701, 0, 0, 2715, 1139, 1139, 1139, 0,
	0, 0, 4735, 0, 1257, 0, 4717, 0, 0, 4696,
	0, 4736, 4700, 0, 1259, 0, 4697, 1259, 1256, 0,
	4730, 4723, 0, 0, 699, 4731, 0, 0, 0, 1139,
	0, 4767, 0, 1256, 0, 0, 0, 1255, 0, 0,
	0, 4752, 4751, 4749, 4750, 268, 0, 268, 0, 0,
	1257, 268, 1257, 0, 4772, 0, 0, 0, 0, 0,
	0, 4768, 0, 2017, 1530, 1323, 1995, 268, 0, 268,
	4790, 0, 0, 4797, 4770, 268, 1530, 715, 0, 0,
	4813, 4801, 268, 1530, 0, 1530, 1139, 4799, 4786, 0,
	0, 4811, 4798, 4812, 0, 4450, 0, 2066, 0, 4818,
	1256, 0, 0, 1256, 0, 4806, 0, 4807, 0, 268,
	4805, 0, 0, 0, 0, 0, 268, 4834, 0, 0,
	0, 4824, 4825, 0, 0, 4830, 4809, 4810, 4838, 4828,
	0, 4826, 4815, 0, 2017, 0, 0, 4837, 0, 0,
	4839, 1261, 4714, 1261, 2150, 4692, 4841, 0, 4695, 0,
	0, 1530, 4782, 0, 4785, 785, 4858, 4860, 4857, 4871,
	4611, 4856, 4869, 4852, 0, 0, 4847, 0, 4870, 4866,
	0, 0, 0, 0, 0, 0, 2715, 0, 0, 1402,
	4884, 0, 4190, 1500, 4190, 4865, 0, 0, 0, 0,
	0, 0, 4886, 0, 4883, 0, 0, 1071, 0, 1011,
	0, 4859, 1257, 4861, 0, 0, 0, 0, 0, 0,
	0, 4897, 4901, 0, 4895, 4894, 2715, 1139, 1139, 0,
	0, 4902, 0, 1073, 4899, 4890, 1139, 0, 1139, 1139,
	4905, 4892, 0, 0, 0, 0, 4911, 0, 0, 0,
	4921, 2715, 0, 4915, 4924, 4926, 4919, 4925, 0, 3083,
	0, 0, 4923, 0, 4918, 4922, 0, 0, 0, 0,
	0, 4920, 4934, 0, 0, 4938, 4933, 4936, 4929, 1072,
	4939, 0, 4940, 0, 4942, 0, 0, 4935, 4937, 0,
	4945, 0, 0, 0, 0, 0, 0, 0, 4947, 1139,
	4950, 4946, 4952, 0, 0, 0, 4953, 4949, 4955, 4956,
	0, 4942, 4912, 4913, 0, 0, 1487, 0, 0, 0,
	1255, 1255, 0, 0, 0, 1012, 0, 0, 268, 0,
	0, 1259, 268, 1259, 0, 0, 0, 0, 0, 0,
	3189, 0, 0, 0, 0, 3959, 0, 0, 3960, 1487,
	0, 4914, 0, 0, 4609, 3302, 3303, 0, 3320, 3321,
	3322, 0, 0, 0, 1487, 0, 0, 0, 0, 0,
	0, 0, 0, 4951, 0, 0, 0, 4088, 4629, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 1487,
	268, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 1328, 0,
	1255, 0, 0, 0, 0, 2994, 0, 1256, 268, 1256,
	268, 2710, 2710, 0, 699, 1255, 268, 1101, 0, 0,
	3317, 0, 0, 0, 4040, 4041, 4042, 0, 785, 0,
	0, 1101, 902, 0, 0, 0, 0, 0, 2984, 2982,
	0, 1337, 4056, 4057, 0, 2986, 2988, 2978, 1495, 0,
	0, 1506, 1328, 0, 0, 0, 0, 268, 0, 1323,
	268, 1017, 1016, 0, 0, 3302, 3303, 0, 3320, 3321,
	3322, 0, 0, 0, 785, 1257, 1257, 0, 0, 0,
	0, 268, 1255, 2017, 0, 1255, 0, 4087, 3000, 2360,
	0, 0, 0, 0, 268, 268, 0, 268, 0, 268,
	4718, 268, 0, 268, 0, 0, 4720, 0, 1013, 0,
	0, 0, 0, 0, 0, 0, 3308, 0, 0, 1328,
	1328, 0, 0, 0, 0, 0, 1487, 0, 2397, 2017,
	2017, 2398, 0, 2399, 0, 3228, 3229, 0, 0, 0,
	3317, 1798, 1799, 0, 0, 268, 268, 268, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 2017,
	0, 0, 0, 0, 1829, 1257, 0, 0, 0, 0,
	0, 1801, 765, 0, 0, 0, 785, 0, 0, 0,
	1257, 3324, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 2017, 0, 2710, 2710, 2710, 2710, 1854, 0, 0,
	0, 1124, 109, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 3318, 0, 1817, 0, 0, 2980, 0,
	1014, 0, 0, 0, 4148, 4149, 3308, 0, 0, 2996,
	0, 0, 1990, 0, 0, 0, 0, 1257, 0, 0,
	1257, 0, 0, 0, 0, 1070, 0, 1015, 0, 0,
	2995, 2985, 2983, 2987, 2989, 2979, 2981, 2997, 0, 2548,
	0, 0, 0, 0, 0, 0, 0, 2991, 2993, 0,
	0, 3728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 1851, 0,
	0, 3324, 1823, 1824, 1825, 1826, 0, 0, 0, 0,
	1018, 3001, 1806, 0, 0, 0, 0, 3326, 3327, 3328,
	3329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1487, 0, 0, 1487, 0,
	699, 0, 0, 3318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 1337,
	1828, 1830, 0, 0, 699, 0, 0, 0, 0, 2135,
	0, 268, 0, 699, 0, 0, 3319, 0, 0, 0,
	0, 1061, 0, 0, 0, 268, 1815, 1816, 0, 1255,
	0, 1255, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 0, 0, 0, 1851, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, 4328, 0, 4330, 4331, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 268, 1333, 0, 0, 0, 715, 0, 0,
	0, 2828, 0, 0, 0, 0, 0, 268, 0, 0,
	268, 0, 0, 0, 268, 0, 268, 0, 0, 0,
	0, 1323, 0, 268, 268, 0, 1333, 1333, 2844, 0,
	0, 3002, 0, 268, 1851, 0, 3319, 0, 0, 0,
	2990, 2992, 2558, 2559, 2560, 2577, 2578, 2579, 0, 0,
	2245, 0, 0, 0, 0, 0, 1506, 3314, 3315, 3316,
	4377, 0, 2580, 0, 3313, 3311, 3312, 3304, 3305, 3306,
	3307, 3309, 3310, 0, 0, 0, 0, 0, 0, 0,
	2881, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 268, 0, 0, 1257, 1854, 1257, 0, 0, 0,
	0, 0, 0, 1506, 268, 1487, 0, 0, 0, 0,
	0, 0, 1822, 0, 2570, 0, 0, 268, 0, 0,
	0, 0, 0, 2566, 0, 0, 2017, 0, 785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4463, 0,
	1853, 0, 0, 0, 0, 0, 0, 3314, 3315, 3316,
	0, 0, 268, 3020, 3313, 3311, 3312, 3304, 3305, 3306,
	3307, 3309, 3310, 0, 0, 0, 0, 0, 0, 0,
	2571, 2572, 2573, 2574, 0, 0, 0, 0, 1530, 0,
	2565, 268, 0, 268, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3066, 0, 0, 0, 0, 0, 2710, 2710, 0, 0,
	2881, 0, 699, 0, 0, 0, 0, 0, 0, 0,
	0, 3095, 902, 0, 2881, 2881, 0, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2575, 2576, 0, 0, 0, 0,
	0, 0, 268, 1323, 268, 0, 0, 0, 0, 0,
	0, 1530, 0, 1530, 1333, 268, 0, 0, 1323, 0,
	1323, 0, 1323, 0, 0, 0, 0, 2568, 0, 2472,
	0, 0, 0, 0, 0, 0, 2710, 2710, 2710, 2710,
	2710, 2710, 2710, 2710, 2710, 2710, 2710, 2710, 2710, 2710,
	2710, 2710, 2710, 2710, 2710, 2710, 0, 2710, 0, 0,
	0, 0, 0, 1798, 1799, 268, 268, 268, 268, 1323,
	3725, 3726, 1323, 0, 268, 0, 0, 268, 0, 0,
	0, 0, 0, 2280, 0, 0, 1829, 0, 0, 0,
	0, 1094, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 1487, 0, 0, 0, 0, 268, 0, 0, 1854,
	0, 0, 2614, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 1337, 1337, 0, 0, 1487, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	1337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798,
	3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808,
	2569, 3812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3723, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 2785, 0,
	0, 1801, 0, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 2017, 0, 0, 1806, 0, 0, 0, 1853, 0,
	0, 0, 1530, 0, 0, 2406, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 1487,
	0, 1487, 0, 0, 0, 0, 1820, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 0, 74, 0, 109, 1487,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 1815, 1816,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2555, 2556, 2557, 2581, 2567, 2561, 0, 2563, 2564,
	2562, 2549, 2550, 2551, 2552, 2553, 2554, 0, 0, 0,
	0, 1821, 87, 1081, 109, 109, 0, 0, 0, 1487,
	0, 0, 1823, 1824, 1825, 1826, 0, 0, 0, 109,
	0, 109, 1806, 2864, 0, 1487, 0, 0, 0, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 107, 0,
	0, 0, 268, 93, 104, 0, 0, 699, 0, 0,
	1828, 1830, 699, 0, 0, 699, 1851, 0, 699, 699,
	0, 0, 0, 0, 699, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 1487, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 2017, 0, 0, 1821,
	1530, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 268, 268, 0, 0,
	0, 0, 1487, 0, 1822, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2881, 2881, 268, 0, 1995,
	0, 0, 1487, 0, 0, 2881, 0, 0, 3464, 0,
	0, 0, 0, 0, 0, 1061, 2881, 3464, 0, 2881,
	3464, 0, 0, 3464, 1851, 0, 0, 0, 0, 1328,
	0, 0, 1853, 0, 0, 0, 1868, 0, 268, 268,
	1995, 0, 268, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 1880, 0,
	1328, 1328, 1995, 0, 268, 0, 3525, 3525, 1487, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 2881, 0, 2881, 0, 3551, 2881, 1995, 0, 0,
	2881, 1995, 1822, 0, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 1323, 0, 0, 0, 1487, 0, 0, 268,
	0, 0, 0, 1530, 0, 187, 100, 0, 0, 103,
	0, 0, 0, 0, 1495, 0, 0, 268, 0, 3589,
	1853, 0, 3591, 2881, 0, 0, 268, 0, 0, 0,
	268, 0, 0, 1333, 0, 236, 0, 0, 1967, 0,
	1970, 0, 109, 897, 0, 0, 1506, 0, 150, 0,
	0, 268, 0, 0, 0, 0, 3066, 0, 1487, 1323,
	0, 268, 0, 0, 2881, 0, 699, 0, 0, 0,
	0, 0, 0, 2881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 3066, 0, 0, 3066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 1798, 1799, 191, 1831, 1832, 1833, 1842, 1843,
	1844, 0, 237, 3695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1829, 230, 0, 0, 0,
	0, 3701, 1801, 0, 1530, 231, 0, 1323, 268, 0,
	268, 1848, 0, 0, 0, 0, 1323, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 0, 1854, 0,
	0, 0, 1628, 0, 0, 0, 0, 1800, 0, 0,
	0, 1506, 0, 0, 2710, 0, 268, 1820, 1829, 0,
	0, 0, 1328, 0, 0, 1801, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3302, 3303, 0, 3320, 3321,
	3322, 1854, 0, 0, 0, 0, 1101, 1101, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 3734, 0, 0,
	2710, 0, 0, 1506, 3767, 1506, 0, 0, 0, 0,
	0, 3302, 3303, 0, 3320, 3321, 3322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 0, 1823, 1824, 1825, 1826, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	3317, 0, 1829, 0, 0, 0, 0, 3357, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 4358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1849, 1854, 3317, 0, 0, 0,
	3385, 1828, 1830, 0, 1800, 0, 1806, 0, 0, 0,
	0, 268, 268, 1101, 1820, 3398, 0, 0, 1845, 0,
	1846, 0, 0, 1817, 0, 0, 0, 1815, 1816, 0,
	0, 0, 0, 0, 4398, 699, 699, 0, 0, 0,
	3418, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 1830, 3308, 0, 1530, 1530,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 1530, 0, 1530, 0, 1081, 3722,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2710, 3308, 0, 0, 0, 0, 0, 0, 0,
	1823, 1824, 1825, 1826, 0, 1847, 0, 0, 0, 0,
	1806, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 3324, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 2710, 0, 3325, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 0, 0, 0, 0, 2710, 3324, 1828, 1830,
	0, 0, 0, 3318, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 3525, 0, 1815, 1816, 0, 0, 1851, 0,
	1827, 0, 0, 0, 0, 268, 0, 0, 0, 3318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 73, 4545, 0, 1821, 1995, 0,
	268, 0, 0, 0, 715, 715, 1333, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 1851, 268,
	1840, 0, 1061, 0, 0, 1061, 1061, 78, 0, 268,
	3398, 0, 0, 0, 0, 4567, 0, 0, 0, 268,
	0, 0, 0, 0, 268, 0, 1822, 0, 0, 268,
	0, 1853, 0, 0, 1851, 0, 0, 0, 0, 0,
	4589, 0, 0, 0, 0, 0, 0, 87, 2881, 268,
	0, 0, 1851, 0, 0, 0, 0, 0, 3095, 3095,
	0, 2533, 0, 0, 902, 902, 2881, 0, 0, 0,
	3066, 3066, 0, 0, 902, 2881, 3319, 0, 0, 0,
	0, 1081, 0, 0, 1853, 0, 0, 0, 896, 0,
	0, 1874, 0, 1506, 1506, 1874, 0, 0, 0, 0,
	268, 49, 0, 107, 1838, 0, 0, 1827, 93, 104,
	0, 0, 3319, 0, 1812, 1813, 1819, 1841, 1818, 1814,
	0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808,
	1822, 0, 0, 0, 4114, 0, 0, 0, 4113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 1402,
	0, 0, 0, 0, 0, 0, 1506, 94, 1245, 0,
	0, 0, 0, 0, 0, 4106, 1810, 1802, 1803, 1804,
	1805, 1807, 1808, 0, 1970, 0, 0, 0, 1853, 0,
	0, 2280, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3314, 3315, 3316,
	0, 0, 109, 0, 3313, 3311, 3312, 3304, 3305, 3306,
	3307, 3309, 3310, 0, 0, 3746, 0, 0, 268, 0,
	0, 0, 0, 0, 1530, 0, 268, 0, 0, 0,
	0, 0, 3762, 3314, 3315, 3316, 0, 0, 0, 268,
	3313, 3311, 3312, 3304, 3305, 3306, 3307, 3309, 3310, 0,
	0, 0, 0, 0, 1333, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 1333, 0, 0,
	0, 0, 0, 0, 2881, 2881, 0, 3525, 2881, 0,
	0, 0, 0, 0, 0, 4192, 0, 4192, 1530, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 1328, 2881,
	0, 3464, 0, 0, 0, 1530, 1530, 268, 1995, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 1995, 0, 268, 1995, 0, 268, 0, 3525, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2881, 0, 2881, 268, 0, 0, 78,
	187, 100, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 3854, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	236, 0, 2881, 0, 0, 0, 0, 4277, 897, 87,
	0, 0, 0, 150, 160, 0, 0, 0, 268, 0,
	0, 0, 73, 0, 46, 45, 0, 1506, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 155, 0, 0, 0, 0, 0, 238, 0,
	896, 0, 0, 0, 0, 78, 0, 4192, 0, 109,
	1530, 0, 109, 0, 109, 107, 67, 0, 0, 0,
	93, 104, 0, 48, 154, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 191,
	0, 1834, 0, 47, 0, 87, 0, 237, 0, 0,
	1834, 0, 1798, 1799, 0, 1834, 0, 0, 0, 109,
	0, 230, 109, 0, 0, 0, 0, 0, 109, 0,
	231, 0, 50, 68, 0, 1829, 0, 0, 0, 94,
	0, 51, 1801, 0, 0, 0, 57, 1953, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 1626, 0, 49,
	0, 107, 0, 0, 0, 0, 93, 104, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 3302, 3303,
	1834, 3320, 3321, 3322, 0, 2881, 1834, 3464, 0, 0,
	4390, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	3733, 0, 0, 109, 1798, 1799, 0, 52, 0, 4414,
	0, 4414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 1829, 0, 0,
	0, 0, 0, 0, 1801, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3525, 0, 1323, 0,
	0, 0, 0, 3317, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 1995, 0, 268, 0, 0, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 1806, 0, 0, 0, 97, 1817, 0,
	4390, 0, 0, 0, 0, 0, 0, 0, 2881, 0,
	0, 3302, 3303, 0, 3320, 3321, 3322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4494, 1834, 1834, 1834,
	1834, 1834, 1834, 1834, 1834, 0, 0, 0, 1530, 0,
	0, 1828, 1830, 0, 0, 0, 2533, 1834, 0, 1086,
	4192, 4192, 187, 100, 3217, 0, 103, 0, 0, 3308,
	1834, 0, 0, 0, 0, 0, 0, 1874, 0, 268,
	268, 0, 0, 0, 0, 1823, 1824, 1825, 1826, 0,
	0, 0, 236, 97, 0, 1806, 3317, 0, 0, 0,
	897, 0, 0, 3767, 0, 150, 0, 0, 0, 0,
	1821, 53, 0, 0, 0, 0, 2714, 0, 1530, 0,
	0, 1530, 3525, 4561, 0, 0, 56, 0, 0, 1834,
	4390, 59, 1328, 0, 3324, 1834, 0, 0, 0, 0,
	238, 69, 0, 1828, 1830, 0, 0, 58, 187, 100,
	4192, 0, 103, 0, 0, 0, 54, 0, 0, 0,
	159, 0, 4141, 0, 0, 4192, 154, 0, 55, 1815,
	1816, 0, 0, 0, 0, 0, 3318, 0, 236, 0,
	0, 191, 0, 0, 0, 1851, 62, 268, 0, 237,
	4155, 150, 3308, 0, 0, 0, 2280, 0, 0, 715,
	0, 0, 1821, 230, 0, 0, 156, 0, 0, 0,
	3302, 3303, 231, 3320, 3321, 3322, 4277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 4192, 0, 268, 4192, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 3464, 0, 0, 0, 0,
	0, 1851, 154, 0, 0, 0, 0, 3324, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 191, 0, 0,
	0, 1530, 0, 1530, 0, 237, 0, 1851, 0, 1245,
	0, 0, 0, 0, 0, 3317, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 1245, 0, 0, 231, 3318,
	0, 0, 0, 0, 0, 0, 0, 0, 4673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 4414, 190, 0, 268, 3, 3319,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 2881, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 1851, 0, 0, 0, 0, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 0, 0, 0, 0,
	3767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1802, 1803, 1804, 1805, 1807, 1808,
	1530, 0, 0, 4350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	268, 0, 3319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4350, 0, 0, 0, 0, 0,
	3314, 3315, 3316, 0, 0, 0, 0, 3313, 3311, 3312,
	3304, 3305, 3306, 3307, 3309, 3310, 0, 0, 3318, 2472,
	0, 0, 4390, 109, 109, 0, 109, 109, 109, 0,
	1818, 1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805,
	1807, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2280, 0, 0, 0, 0, 0, 0,
	0, 0, 2881, 0, 0, 0, 0, 0, 0, 4192,
	0, 4192, 0, 1328, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2472, 0, 0,
	0, 0, 0, 1851, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	1530, 1834, 0, 3314, 3315, 3316, 0, 0, 0, 0,
	3313, 3311, 3312, 3304, 3305, 3306, 3307, 3309, 3310, 0,
	0, 0, 0, 0, 1245, 0, 0, 1081, 0, 0,
	0, 0, 0, 1348, 0, 0, 0, 0, 0, 1834,
	3095, 109, 109, 1834, 0, 0, 0, 0, 0, 2881,
	0, 3319, 0, 0, 0, 0, 0, 1834, 0, 0,
	1086, 1086, 1086, 0, 0, 3095, 1834, 1834, 1834, 1834,
	1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834,
	1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834,
	1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 1834,
	1834, 1834, 0, 0, 0, 0, 0, 1834, 0, 1834,
	1834, 1834, 1834, 1532, 0, 1538, 0, 1544, 0, 0,
	0, 2714, 2714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2685, 2686, 2687, 2688, 2681, 2682,
	2683, 2684, 0, 0, 1634, 0, 1639, 1834, 0, 0,
	0, 0, 3314, 3315, 3316, 0, 1648, 0, 1653, 3313,
	3311, 3312, 3304, 3305, 3306, 3307, 3309, 3310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	1834, 0, 0, 1834, 0, 0, 1834, 0, 0, 0,
	0, 0, 1834, 1834, 1834, 1834, 1834, 1834, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2661, 2662, 2663, 2664,
	0, 0, 0, 0, 0, 0, 1718, 0, 0, 1724,
	1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 2673,
	2674, 2675, 2676, 2669, 2670, 2671, 2672, 2677, 2678, 2679,
	2680, 0, 1835, 1829, 0, 0, 109, 0, 1834, 0,
	1801, 3323, 0, 2714, 2714, 2714, 2714, 0, 0, 1848,
	1834, 0, 1834, 0, 1245, 1245, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1817, 0, 0, 2657, 2658, 2659,
	2660, 2665, 2666, 2667, 2668, 0, 0, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1829, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 1888, 0, 1854, 0,
	0, 0, 0, 0, 1829, 0, 0, 1800, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1825, 1826, 0, 0, 0, 1798, 1799,
	0, 1806, 0, 0, 1328, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 1829, 0, 1798, 1799, 0, 1820, 0, 1801, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1839,
	0, 0, 1849, 0, 0, 0, 1829, 0, 0, 1828,
	1830, 0, 0, 1801, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 1845, 0, 1846, 0,
	0, 1947, 1947, 1947, 0, 1815, 1816, 0, 0, 1854,
	0, 0, 0, 1806, 0, 0, 0, 0, 1800, 0,
	0, 3210, 0, 1837, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1821, 0,
	0, 0, 1823, 1824, 1825, 1826, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 109, 0, 0, 0,
	0, 1828, 1830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	1828, 1830, 1836, 0, 0, 1834, 1834, 0, 1834, 0,
	1171, 0, 0, 1851, 1823, 1824, 1825, 1826, 0, 0,
	1821, 0, 0, 0, 1806, 0, 1815, 1816, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 1830, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 1828, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 1851, 0, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 1851, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 1245, 0, 1822, 0, 0, 0, 0, 0, 1245,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 1834, 1834, 0, 2714, 2714, 0, 0,
	1834, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	3323, 3323, 1822, 0, 1834, 1834, 0, 0, 0, 0,
	0, 0, 1838, 0, 1834, 0, 0, 0, 0, 0,
	0, 1853, 1812, 1813, 1819, 1841, 1818, 1814, 1834, 1811,
	1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 1262,
	1834, 0, 3277, 0, 0, 0, 3278, 0, 0, 1822,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 2714, 2714, 2714, 2714,
	2714, 2714, 2714, 2714, 2714, 2714, 2714, 2714, 2714, 2714,
	2714, 2714, 2714, 2714, 2714, 2714, 0, 2714, 3323, 3323,
	3323, 3323, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1853, 1834, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 1810,
	1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0, 0,
	2409, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2447, 0, 2451, 0, 0, 0,
	0, 0, 0, 2465, 0, 1834, 0, 0, 0, 0,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 0, 2515, 0, 2517,
	2518, 2519, 2520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2625, 2628, 2631,
	2634, 0, 0, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2706, 0, 2718, 2720, 2725, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 1834, 0, 0, 1834, 3323, 3323, 1834,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 815, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 1834, 1834, 1834,
	1834, 0, 0, 0, 0, 1262, 1834, 0, 1834, 0,
	0, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323,
	3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323,
	3323, 0, 0, 0, 3323, 807, 0, 1834, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1834,
	0, 1262, 760, 0, 0, 1262, 0, 0, 1834, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 1251,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 1834, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 3023, 3024, 0, 3026,
	0, 0, 0, 1262, 0, 263, 263, 695, 0, 1798,
	1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1829, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 109, 0, 0, 0, 1848, 0,
	109, 0, 800, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3156, 810, 0, 0, 0, 0,
	0, 802, 0, 0, 0, 0, 1834, 1834, 0, 0,
	0, 1834, 1834, 0, 0, 1834, 1834, 0, 0, 0,
	1834, 0, 0, 0, 1834, 0, 0, 0, 0, 1834,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 2714, 0, 0, 0, 799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 1839, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1828, 1830,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2714, 801, 0, 0, 0, 1845, 0, 1846, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 0, 3211, 3212,
	0, 0, 0, 0, 3218, 812, 813, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3232, 3233, 0, 0, 1821, 0, 2595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 3242, 0, 0, 1262, 0, 1262,
	728, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	3256, 1836, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 3268, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 1834, 1834,
	0, 0, 0, 0, 0, 0, 732, 1827, 1834, 1834,
	3323, 2714, 0, 0, 0, 0, 0, 1834, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 751, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 733,
	3323, 2714, 0, 0, 0, 0, 0, 1840, 0, 2725,
	2725, 2725, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1262, 0, 734, 1947, 1834, 2714, 0, 0, 0,
	0, 0, 3361, 1834, 0, 0, 0, 0, 1853, 0,
	0, 0, 1834, 0, 0, 735, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 1086, 0, 0,
	0, 2591, 0, 0, 0, 2592, 0, 3323, 0, 747,
	0, 1086, 1262, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 1834, 3323,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3483, 0, 0, 0, 0, 0,
	0, 3323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 0, 738, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1309, 745, 1309, 1309,
	0, 758, 0, 739, 0, 0, 0, 1262, 0, 1262,
	0, 1262, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 1262, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 1399,
	1262, 740, 1262, 1262, 1262, 1504, 755, 756, 753, 0,
	0, 730, 0, 0, 748, 0, 0, 741, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 749, 0, 0, 0, 751, 0, 0, 0, 0,
	743, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 733, 0, 0, 752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	1633, 0, 0, 761, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 2030,
	2030, 1262, 735, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 267, 267, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2465, 0, 0, 0, 0, 0, 3720, 3721, 0,
	1745, 3724, 0, 828, 0, 3727, 0, 0, 1834, 0,
	0, 0, 1834, 0, 3731, 0, 0, 0, 0, 0,
	0, 0, 0, 3738, 1262, 0, 0, 0, 3361, 828,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 3751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3774, 3775, 0, 3776, 3777, 3778, 1798,
	1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 3784, 0, 0, 1262, 3786, 0,
	0, 1835, 1829, 0, 1262, 0, 0, 0, 0, 1801,
	0, 0, 0, 1262, 0, 0, 0, 0, 1848, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 3815, 3816, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 758, 3827,
	739, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 3836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 755, 756, 753, 0, 0, 0, 0,
	0, 748, 0, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 1262, 0, 0, 0, 0, 0, 0, 0,
	1823, 1824, 1825, 1826, 3884, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 742, 0, 749, 0,
	0, 0, 1985, 3895, 0, 0, 0, 743, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 1996, 0,
	1504, 744, 0, 0, 0, 0, 752, 0, 1839, 0,
	0, 1849, 0, 0, 0, 0, 0, 3924, 1828, 1830,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 746, 0, 0, 0, 1845, 0, 1846, 846, 0,
	1309, 0, 0, 0, 1815, 1816, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 848, 0,
	0, 0, 1837, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 850, 0, 867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 852, 0, 0, 1262, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 1851, 0, 0, 0, 876, 0, 0, 4035,
	0, 0, 0, 853, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 1262, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 847, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 854, 0, 0, 855, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	4084, 4085, 0, 760, 0, 0, 4089, 4090, 0, 0,
	0, 4093, 4094, 0, 0, 0, 0, 1840, 0, 4098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4107, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2266, 0, 0,
	0, 2273, 0, 0, 0, 0, 0, 877, 0, 0,
	0, 0, 0, 2286, 0, 0, 0, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2298,
	0, 2298, 0, 0, 0, 0, 0, 2305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 2273, 856,
	0, 2332, 0, 0, 0, 4112, 0, 0, 0, 0,
	858, 0, 0, 0, 0, 267, 0, 267, 267, 0,
	0, 267, 2352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2368, 0, 2370, 0,
	2372, 859, 2374, 0, 2375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 868,
	267, 267, 0, 0, 267, 267, 0, 0, 0, 0,
	0, 759, 0, 0, 0, 0, 2402, 2403, 2404, 0,
	0, 0, 0, 828, 845, 0, 869, 0, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 0, 0, 861, 0, 0,
	0, 862, 881, 0, 880, 0, 0, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 0, 864, 0, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 882, 0, 879, 0, 0, 0, 0,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 1262,
	0, 0, 0, 0, 4345, 4346, 4347, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2465, 0, 0,
	4356, 4357, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 1262, 4365, 4368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4415,
	0, 0, 0, 0, 0, 0, 2782, 0, 4423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4431, 0, 1262, 1086, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 1262, 2830, 0,
	0, 1309, 0, 0, 0, 1309, 0, 1309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 2286, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1262, 0, 1262, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	1262, 1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844,
	0, 1262, 0, 0, 0, 1969, 0, 1258, 0, 0,
	0, 267, 0, 1835, 1829, 4566, 1262, 0, 0, 4570,
	0, 1801, 0, 0, 0, 0, 0, 267, 1969, 267,
	1848, 0, 0, 1262, 0, 828, 0, 0, 0, 0,
	1504, 0, 828, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1800, 0, 1262, 1262,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 267,
	0, 0, 0, 0, 0, 1817, 267, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 1086, 0, 0,
	0, 0, 2273, 0, 0, 0, 4627, 0, 0, 0,
	0, 2286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 1824, 1825, 1826, 0, 0, 0, 0,
	2465, 0, 1806, 0, 3128, 0, 0, 0, 0, 4368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3139, 0, 3142, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1849, 0, 0, 0, 1262, 0, 0,
	1828, 1830, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1262, 0, 0, 1845, 0, 1846,
	0, 0, 0, 0, 2030, 2030, 1815, 1816, 0, 0,
	0, 0, 0, 0, 0, 0, 3172, 1504, 3174, 1504,
	0, 0, 0, 0, 1837, 3180, 0, 0, 0, 0,
	0, 0, 0, 2030, 2030, 0, 0, 0, 0, 1821,
	0, 0, 0, 4748, 4748, 4748, 0, 0, 267, 0,
	0, 0, 828, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 2030, 3208, 0, 0,
	0, 0, 0, 0, 0, 0, 4771, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 0, 267, 0, 0, 0,
	267, 0, 0, 0, 1851, 0, 267, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 4748, 0, 0, 0, 0, 267, 0,
	267, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	267, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 828, 267, 0, 267, 0, 267,
	0, 267, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4748, 4906, 0, 0, 0, 0,
	0, 0, 0, 4910, 0, 267, 267, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 1262, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 0, 4674, 0, 0, 0, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 1262, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	1262, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 1504, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 3452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1258, 0, 0, 1148, 0, 0, 0, 0, 3502,
	3504, 0, 0, 2286, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 269, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 0, 1262, 0, 1262, 0, 0, 0, 0, 269,
	0, 1262, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 1262, 0, 0, 0, 267, 0, 0,
	267, 0, 1262, 0, 267, 269, 267, 0, 0, 0,
	0, 0, 0, 267, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 1262, 0, 1262,
	0, 0, 0, 0, 0, 0, 0, 3602, 0, 0,
	0, 3606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 1262, 0, 0, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3659, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3705,
	0, 1504, 828, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 1262, 1262, 1262, 0, 0, 0, 0, 0,
	0, 267, 0, 828, 0, 1262, 0, 3718, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1262, 0, 1262, 0,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1829, 0, 0, 2030, 0, 0, 0,
	1801, 0, 0, 0, 0, 267, 267, 267, 267, 1848,
	0, 0, 0, 0, 267, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 1262,
	0, 0, 0, 0, 0, 1800, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 1262, 1262, 267, 0,
	0, 0, 0, 0, 1817, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 0, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1825, 1826, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 1828,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 1845, 0, 1846, 0,
	0, 0, 0, 0, 0, 1815, 1816, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2286, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	2286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2286, 0, 0, 0, 0,
	4017, 0, 0, 0, 1262, 0, 0, 1262, 0, 0,
	0, 1262, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 1262, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 1836, 269, 269, 0, 0, 269, 1262, 1346,
	0, 0, 0, 1851, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 4069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 1346, 269, 269, 0, 1346,
	269, 269, 1969, 0, 0, 0, 1346, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 267, 267, 1840, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 269, 269,
	0, 0, 0, 0, 0, 1798, 1799, 0, 1831, 1832,
	1833, 1842, 1843, 1844, 0, 0, 1346, 267, 0, 1853,
	0, 0, 0, 1346, 269, 269, 0, 1835, 1829, 0,
	0, 0, 0, 0, 0, 1801, 0, 1346, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	0, 1854, 267, 0, 0, 0, 0, 0, 0, 1969,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 267, 0, 0, 0, 0, 1817,
	0, 0, 1838, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811,
	1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0,
	0, 0, 0, 0, 0, 269, 3736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 1262, 0, 1262, 2286, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 1823, 1824, 1825, 1826,
	0, 0, 0, 0, 0, 0, 1806, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 1839, 0, 0, 1849, 0, 0,
	0, 1258, 0, 0, 1828, 1830, 0, 0, 0, 2286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4299,
	0, 1845, 0, 1846, 0, 0, 0, 0, 0, 0,
	1815, 1816, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 269, 269, 269, 0, 0, 0, 0,
	4400, 269, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 1822, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 1840, 0, 0, 2286, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 1346, 0,
	0, 0, 1848, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 1258, 1258, 0, 0, 1346, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4535, 1504, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 1813, 1819,
	1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803, 1804,
	1805, 1807, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 3280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 1346, 1346, 269, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1846, 0, 0, 0, 267, 0, 0, 1815, 1816,
	0, 0, 269, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 269, 0, 0, 4632, 1837, 0, 269, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 269, 0, 269, 0, 0, 267,
	0, 0, 269, 0, 0, 0, 0, 273, 0, 267,
	0, 1346, 0, 1346, 0, 1346, 0, 0, 0, 267,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 267,
	0, 1346, 1346, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 1346, 269, 0, 0, 269, 0, 0, 1258,
	0, 0, 0, 0, 1346, 1836, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 0, 0, 1851, 269, 4686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 269, 820, 269, 0, 269, 0, 269, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 820, 0,
	0, 0, 0, 0, 4725, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 269, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 4791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 0, 1969, 0, 1969, 0, 3279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 267, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 269, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 269, 1969, 0, 0,
	269, 0, 269, 0, 0, 0, 0, 0, 0, 269,
	269, 0, 0, 0, 0, 1346, 1346, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 1835, 1829, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 0, 0, 269, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 269, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 269, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 269, 0, 269,
	0, 1346, 1823, 1824, 1825, 1826, 269, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 1346, 0,
	1839, 0, 0, 1849, 0, 0, 0, 0, 0, 269,
	1828, 1830, 0, 1346, 0, 0, 0, 0, 0, 0,
	1969, 1969, 0, 0, 0, 0, 0, 1845, 269, 1846,
	269, 0, 0, 0, 0, 0, 1815, 1816, 0, 267,
	267, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 269, 269, 269, 0, 0, 0, 1405, 0,
	269, 0, 1405, 269, 0, 0, 0, 0, 0, 1344,
	1969, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 1836, 269, 0, 0, 0, 0, 0,
	0, 0, 269, 1344, 1851, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 1969, 0, 267, 1969, 1344, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 0, 0, 0, 0, 0, 3276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 1346, 0, 1406, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 1969,
	0, 1969, 1346, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 1345, 0, 0, 0, 0,
	0, 820, 1345, 0, 269, 269, 0, 1346, 269, 0,
	0, 0, 0, 0, 0, 269, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	269, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 1346, 0,
	0, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1405, 0,
	1346, 0, 1346, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 269, 1346, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 1346, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1346, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 1346, 0, 269, 1346, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 1346, 0, 0, 1344, 0, 1344, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 1344, 1344, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 1344,
	1344, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 1345, 0, 0,
	0, 0, 1828, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1846, 1346, 0, 1406, 0, 0, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	1346, 1827, 0, 0, 0, 1346, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1405, 0, 0, 1822, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1405, 0, 0,
	269, 1840, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 1345, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 1346, 1346, 1346, 0,
	1345, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 1346, 1346, 1346, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 1345, 1345, 1345, 0, 0,
	0, 0, 1346, 0, 0, 0, 269, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1344,
	0, 0, 0, 0, 1346, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 3275,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 1831,
	1832, 1833, 1842, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 1835, 1829,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 0, 1346, 0, 1346, 0,
	0, 0, 1854, 0, 0, 1344, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 1820, 0, 0, 0, 0, 1346, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 0, 1344, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1346, 0, 1346, 269,
	0, 1346, 269, 0, 0, 0, 0, 0, 0, 1344,
	0, 1344, 1346, 0, 0, 0, 0, 1823, 1824, 1825,
	1826, 0, 269, 0, 0, 0, 1344, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 1839, 0, 0, 1849, 0,
	0, 1346, 0, 0, 269, 1828, 1830, 0, 0, 0,
	0, 0, 0, 1346, 269, 0, 0, 0, 1346, 0,
	0, 0, 1845, 0, 1846, 0, 0, 0, 0, 0,
	0, 1815, 1816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 1346, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 1345, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 1851,
	1346, 0, 1346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 1346, 0, 0, 0, 0, 0, 0,
	1346, 269, 0, 0, 1840, 0, 0, 0, 0, 0,
	1346, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 1853, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 1346, 0, 0, 1346, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 1345, 0, 1345, 1800, 0,
	0, 0, 0, 0, 0, 269, 269, 0, 1820, 0,
	0, 0, 1345, 0, 0, 0, 0, 1817, 1838, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 1812, 1813,
	1819, 1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803,
	1804, 1805, 1807, 1808, 0, 0, 0, 0, 0, 0,
	0, 0, 3274, 0, 0, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 1826, 0, 1405,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 0, 0, 0, 0, 0,
	269, 1344, 0, 0, 0, 1346, 0, 0, 0, 1845,
	0, 1846, 0, 0, 0, 1346, 1346, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 1837, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 1847, 1344, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 1344, 0, 1344, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 0, 820, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1344, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 1405, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 1345, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 2592,
	0, 0, 0, 0, 1405, 0, 0, 0, 1798, 1799,
	0, 1831, 1832, 1833, 1842, 1843, 1844, 1345, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1829, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 1345, 0,
	1345, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 0, 0, 0, 1345,
	0, 1345, 0, 0, 0, 1406, 0, 0, 0, 1823,
	1824, 1825, 1826, 1345, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 1828, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 1345, 0, 1845, 0, 1846, 0, 0, 0,
	0, 0, 0, 1815, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 1837, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 1406, 1848, 0, 1406, 0, 0, 0, 0, 0,
	1344, 0, 0, 1344, 0, 0, 0, 0, 1344, 1854,
	0, 1847, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1836, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 1344,
	1344, 1344, 0, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 1344, 1344, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 1826, 0, 1822,
	0, 0, 0, 0, 1806, 1344, 0, 0, 0, 0,
	0, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1846, 0, 0, 0, 0, 0, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809, 1810,
	1802, 1803, 1804, 1805, 1807, 1808, 1847, 0, 0, 1405,
	4670, 1405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 1344,
	1344, 0, 0, 0, 0, 0, 1851, 0, 0, 1405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1344,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 1344, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 1405, 1345, 0, 0, 1345,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 1344, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 1345, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1345, 1345, 1345, 0, 0, 0, 1344, 1344,
	1344, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 1405, 0, 0, 1838, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 1405, 1406, 0, 4585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1829, 0, 1405, 0, 1344, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 1406, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 0, 0, 1344, 0, 1345, 1345, 0, 0, 0,
	0, 0, 0, 1344, 1344, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1824, 1825, 1826, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 0,
	0, 1344, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1406, 0, 1345, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1849, 1406, 0, 0, 0, 0, 0, 1828, 1830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 1846, 0, 0, 0,
	0, 0, 0, 1815, 1816, 0, 0, 0, 0, 0,
	1345, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 1345, 1345, 1345, 1345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 1827, 0, 0, 1406,
	0, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 1406, 0, 0, 1345, 0, 0,
	1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809, 1810,
	1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0, 0,
	4544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1345, 1345, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 1408, 284, 285, 1409, 1410,
	1411, 1345, 1412, 641, 1413, 1414, 1415, 1416, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 1417, 646, 296, 297, 298, 299,
	300, 301, 1418, 1419, 0, 302, 647, 648, 649, 1420,
	303, 304, 650, 1421, 1347, 1422, 305, 306, 307, 308,
	309, 310, 311, 0, 1423, 313, 314, 315, 312, 316,
	1424, 317, 0, 318, 319, 320, 321, 322, 323, 1425,
	324, 325, 326, 1203, 327, 328, 329, 1426, 1427, 1429,
	1428, 1430, 1431, 1432, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 1433, 340, 336, 338, 1434, 341,
	339, 342, 1435, 343, 344, 345, 1436, 1437, 346, 347,
	348, 1438, 349, 350, 351, 1439, 352, 353, 354, 1440,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 1441, 274, 1442, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 1443, 373, 374, 1444, 1445, 1204, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 1446, 387, 659, 1447, 660, 388, 1448, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 1206, 394, 395,
	1449, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 1450, 1205, 404, 664, 665, 1451,
	666, 1452, 406, 407, 1207, 667, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1453, 418, 420, 419, 1454, 421, 668, 1210, 422,
	423, 1211, 1455, 424, 425, 426, 427, 428, 429, 432,
	1456, 1457, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1458,
	276, 1214, 474, 475, 476, 1459, 669, 477, 670, 479,
	480, 1460, 0, 481, 0, 1461, 1462, 483, 484, 485,
	1463, 1464, 486, 487, 671, 1215, 488, 1216, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 1465, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 1466, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 1467, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 1468, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 1469, 565, 566, 564, 567, 568, 569, 1470,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 1471, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 1472, 597, 598, 0, 594, 585,
	1473, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	1474, 607, 682, 683, 684, 685, 1475, 616, 1476, 608,
	609, 610, 686, 611, 687, 1477, 612, 613, 614, 615,
	0, 617, 618, 1478, 1479, 619, 620, 621, 623, 624,
	622, 625, 1480, 626, 1481, 0, 627, 628, 629, 688,
	689, 690, 1482, 631, 630, 632, 633, 691, 634, 635,
	1483, 1484, 1485, 1486, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1403,
	0, 0, 0, 0, 0, 0, 0, 2760, 0, 0,
	0, 0, 0, 0, 0, 2761, 277, 279, 278, 280,
	281, 282, 283, 1408, 284, 285, 1409, 1410, 1411, 0,
	1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 1417, 646, 296, 297, 298, 299, 300, 301,
	1418, 1419, 0, 302, 647, 648, 649, 1420, 303, 304,
	650, 1421, 1347, 1422, 305, 306, 307, 308, 309, 310,
	311, 0, 1423, 313, 314, 315, 312, 316, 1424, 317,
	0, 318, 319, 320, 321, 322, 323, 1425, 324, 325,
	326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428, 1430,
	1431, 1432, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 1433, 340, 336, 338, 1434, 341, 339, 342,
	1435, 343, 344, 345, 1436, 1437, 346, 347, 348, 1438,
	349, 350, 351, 1439, 352, 353, 354, 1440, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 1441, 274, 1442, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 1443,
	373, 374, 1444, 1445, 1204, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 1446,
	387, 659, 1447, 660, 388, 1448, 389, 390, 391, 392,
	393, 661, 662, 663, 478, 1206, 394, 395, 1449, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 1450, 1205, 404, 664, 665, 1451, 666, 1452,
	406, 407, 1207, 667, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 1453,
	418, 420, 419, 1454, 421, 668, 1210, 422, 423, 1211,
	1455, 424, 425, 426, 427, 428, 429, 432, 1456, 1457,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1458, 276, 1214,
	474, 475, 476, 1459, 669, 477, 670, 479, 480, 1460,
	0, 481, 0, 1461, 1462, 483, 484, 485, 1463, 1464,
	486, 487, 671, 1215, 488, 1216, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 1465,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 1466, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 1467, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 1468, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	1469, 565, 566, 564, 567, 568, 569, 1470, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 1471, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 1472, 597, 598, 0, 594, 585, 1473, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 1474, 607,
	682, 683, 684, 685, 1475, 616, 1476, 608, 609, 610,
	686, 611, 687, 1477, 612, 613, 614, 615, 0, 617,
	618, 1478, 1479, 619, 620, 621, 623, 624, 622, 625,
	1480, 626, 1481, 0, 627, 628, 629, 688, 689, 690,
	1482, 631, 630, 632, 633, 691, 634, 635, 1483, 1484,
	1485, 1486, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	3745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3747, 277, 279, 278, 280, 281, 282, 283, 1408,
	284, 285, 1409, 1410, 1411, 0, 1412, 641, 1413, 1414,
	1415, 1416, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 1417, 646,
	296, 297, 298, 299, 300, 301, 1418, 1419, 0, 302,
	647, 648, 649, 1420, 303, 304, 650, 1421, 1347, 1422,
	305, 306, 307, 308, 309, 310, 311, 0, 1423, 313,
	314, 315, 312, 316, 1424, 317, 0, 318, 319, 320,
	321, 322, 323, 1425, 324, 325, 326, 1203, 327, 328,
	329, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 1433, 340,
	336, 338, 1434, 341, 339, 342, 1435, 343, 344, 345,
	1436, 1437, 346, 347, 348, 1438, 349, 350, 351, 1439,
	352, 353, 354, 1440, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	1441, 274, 1442, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 1443, 373, 374, 1444, 1445,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1446, 387, 659, 1447, 660,
	388, 1448, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 1449, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1450, 1205,
	404, 664, 665, 1451, 666, 1452, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1453, 418, 420, 419, 1454,
	421, 668, 1210, 422, 423, 1211, 1455, 424, 425, 426,
	427, 428, 429, 432, 1456, 1457, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1458, 276, 1214, 474, 475, 476, 1459,
	669, 477, 670, 479, 480, 1460, 0, 481, 0, 1461,
	1462, 483, 484, 485, 1463, 1464, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 1465, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 1466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 1467, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 1468, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 1469, 565, 566, 564,
	567, 568, 569, 1470, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 1471, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 1472, 597,
	598, 0, 594, 585, 1473, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 1474, 607, 682, 683, 684, 685,
	1475, 616, 1476, 608, 609, 610, 686, 611, 687, 1477,
	612, 613, 614, 615, 0, 617, 618, 1478, 1479, 619,
	620, 621, 623, 624, 622, 625, 1480, 626, 1481, 0,
	627, 628, 629, 688, 689, 690, 1482, 631, 630, 632,
	633, 691, 634, 635, 1483, 1484, 1485, 1486, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4140, 277, 279, 278, 280, 281, 282, 283, 1408,
	284, 285, 1409, 1410, 1411, 0, 1412, 641, 1413, 1414,
	1415, 1416, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 1417, 646,
	296, 297, 298, 299, 300, 301, 1418, 1419, 0, 302,
	647, 648, 649, 1420, 303, 304, 650, 1421, 1347, 1422,
	305, 306, 307, 308, 309, 310, 311, 0, 1423, 313,
	314, 315, 312, 316, 1424, 317, 0, 318, 319, 320,
	321, 322, 323, 1425, 324, 325, 326, 1203, 327, 328,
	329, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 1433, 340,
	336, 338, 1434, 341, 339, 342, 1435, 343, 344, 345,
	1436, 1437, 346, 347, 348, 1438, 349, 350, 351, 1439,
	352, 353, 354, 1440, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	1441, 274, 1442, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 1443, 373, 374, 1444, 1445,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1446, 387, 659, 1447, 660,
	388, 1448, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 1449, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1450, 1205,
	404, 664, 665, 1451, 666, 1452, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1453, 418, 420, 419, 1454,
	421, 668, 1210, 422, 423, 1211, 1455, 424, 425, 426,
	427, 428, 429, 432, 1456, 1457, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1458, 276, 1214, 474, 475, 476, 1459,
	669, 477, 670, 479, 480, 1460, 0, 481, 0, 1461,
	1462, 483, 484, 485, 1463, 1464, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 1465, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 1466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 1467, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 1468, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 1469, 565, 566, 564,
	567, 568, 569, 1470, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 1471, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 1472, 597,
	598, 0, 594, 585, 1473, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 1474, 607, 682, 683, 684, 685,
	1475, 616, 1476, 608, 609, 610, 686, 611, 687, 1477,
	612, 613, 614, 615, 0, 617, 618, 1478, 1479, 619,
	620, 621, 623, 624, 622, 625, 1480, 626, 1481, 0,
	627, 628, 629, 688, 689, 690, 1482, 631, 630, 632,
	633, 691, 634, 635, 1483, 1484, 1485, 1486, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4351, 277, 279, 278,
	280, 281, 282, 283, 1408, 284, 285, 1409, 1410, 1411,
	0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 1417, 646, 296, 297, 298, 299, 300,
	301, 1418, 1419, 0, 302, 647, 648, 649, 1420, 303,
	304, 650, 1421, 1347, 1422, 305, 306, 307, 308, 309,
	310, 311, 0, 1423, 313, 314, 315, 312, 316, 1424,
	317, 0, 318, 319, 320, 321, 322, 323, 1425, 324,
	325, 326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 1433, 340, 336, 338, 1434, 341, 339,
	342, 1435, 343, 344, 345, 1436, 1437, 346, 347, 348,
	1438, 349, 350, 351, 1439, 352, 353, 354, 1440, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 1441, 274, 1442, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	1443, 373, 374, 1444, 1445, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1446, 387, 659, 1447, 660, 388, 1448, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 1206, 394, 395, 1449,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1450, 1205, 404, 664, 665, 1451, 666,
	1452, 406, 407, 1207, 667, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1453, 418, 420, 419, 1454, 421, 668, 1210, 422, 423,
	1211, 1455, 424, 425, 426, 427, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1458, 276,
	1214, 474, 475, 476, 1459, 669, 477, 670, 479, 480,
	1460, 0, 481, 0, 1461, 1462, 483, 484, 485, 1463,
	1464, 486, 487, 671, 1215, 488, 1216, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	1465, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 1466, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 1467, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 1468, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 1469, 565, 566, 564, 567, 568, 569, 1470, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 1471, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 1472, 597, 598, 0, 594, 585, 1473,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 1474,
	607, 682, 683, 684, 685, 1475, 616, 1476, 608, 609,
	610, 686, 611, 687, 1477, 612, 613, 614, 615, 0,
	617, 618, 1478, 1479, 619, 620, 621, 623, 624, 622,
	625, 1480, 626, 1481, 0, 627, 628, 629, 688, 689,
	690, 1482, 631, 630, 632, 633, 691, 634, 635, 1483,
	1484, 1485, 1486, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4220, 277, 279, 278, 280, 281, 282, 283, 1408,
	284, 285, 1409, 1410, 1411, 0, 1412, 641, 1413, 1414,
	1415, 1416, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 1417, 646,
	296, 297, 298, 299, 300, 301, 1418, 1419, 0, 302,
	647, 648, 649, 1420, 303, 304, 650, 1421, 1347, 1422,
	305, 306, 307, 308, 309, 310, 311, 0, 1423, 313,
	314, 315, 312, 316, 1424, 317, 0, 318, 319, 320,
	321, 322, 323, 1425, 324, 325, 326, 1203, 327, 328,
	329, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 1433, 340,
	336, 338, 1434, 341, 339, 342, 1435, 343, 344, 345,
	1436, 1437, 346, 347, 348, 1438, 349, 350, 351, 1439,
	352, 353, 354, 1440, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	1441, 274, 1442, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 1443, 373, 374, 1444, 1445,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1446, 387, 659, 1447, 660,
	388, 1448, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 1449, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1450, 1205,
	404, 664, 665, 1451, 666, 1452, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1453, 418, 420, 419, 1454,
	421, 668, 1210, 422, 423, 1211, 1455, 424, 425, 426,
	427, 428, 429, 432, 1456, 1457, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1458, 276, 1214, 474, 475, 476, 1459,
	669, 477, 670, 479, 480, 1460, 0, 481, 0, 1461,
	1462, 483, 484, 485, 1463, 1464, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 1465, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 1466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 1467, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 1468, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 1469, 565, 566, 564,
	567, 568, 569, 1470, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 1471, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 1472, 597,
	598, 0, 594, 585, 1473, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 1474, 607, 682, 683, 684, 685,
	1475, 616, 1476, 608, 609, 610, 686, 611, 687, 1477,
	612, 613, 614, 615, 0, 617, 618, 1478, 1479, 619,
	620, 621, 623, 624, 622, 625, 1480, 626, 1481, 0,
	627, 628, 629, 688, 689, 690, 1482, 631, 630, 632,
	633, 691, 634, 635, 1483, 1484, 1485, 1486, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4070, 277, 279, 278,
	280, 281, 282, 283, 1408, 284, 285, 1409, 1410, 1411,
	0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 1417, 646, 296, 297, 298, 299, 300,
	301, 1418, 1419, 0, 302, 647, 648, 649, 1420, 303,
	304, 650, 1421, 1347, 1422, 305, 306, 307, 308, 309,
	310, 311, 0, 1423, 313, 314, 315, 312, 316, 1424,
	317, 0, 318, 319, 320, 321, 322, 323, 1425, 324,
	325, 326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 1433, 340, 336, 338, 1434, 341, 339,
	342, 1435, 343, 344, 345, 1436, 1437, 346, 347, 348,
	1438, 349, 350, 351, 1439, 352, 353, 354, 1440, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 1441, 274, 1442, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	1443, 373, 374, 1444, 1445, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1446, 387, 659, 1447, 660, 388, 1448, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 1206, 394, 395, 1449,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1450, 1205, 404, 664, 665, 1451, 666,
	1452, 406, 407, 1207, 667, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1453, 418, 420, 419, 1454, 421, 668, 1210, 422, 423,
	1211, 1455, 424, 425, 426, 427, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1458, 276,
	1214, 474, 475, 476, 1459, 669, 477, 670, 479, 480,
	1460, 0, 481, 0, 1461, 1462, 483, 484, 485, 1463,
	1464, 486, 487, 671, 1215, 488, 1216, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	1465, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 1466, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 1467, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 1468, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 1469, 565, 566, 564, 567, 568, 569, 1470, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 1471, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 1472, 597, 598, 0, 594, 585, 1473,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 1474,
	607, 682, 683, 684, 685, 1475, 616, 1476, 608, 609,
	610, 686, 611, 687, 1477, 612, 613, 614, 615, 0,
	617, 618, 1478, 1479, 619, 620, 621, 623, 624, 622,
	625, 1480, 626, 1481, 0, 627, 628, 629, 688, 689,
	690, 1482, 631, 630, 632, 633, 691, 634, 635, 1483,
	1484, 1485, 1486, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3763, 277, 279, 278, 280, 281, 282, 283, 1408,
	284, 285, 1409, 1410, 1411, 0, 1412, 641, 1413, 1414,
	1415, 1416, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 1417, 646,
	296, 297, 298, 299, 300, 301, 1418, 1419, 0, 302,
	647, 648, 649, 1420, 303, 304, 650, 1421, 1347, 1422,
	305, 306, 307, 308, 309, 310, 311, 0, 1423, 313,
	314, 315, 312, 316, 1424, 317, 0, 318, 319, 320,
	321, 322, 323, 1425, 324, 325, 326, 1203, 327, 328,
	329, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 1433, 340,
	336, 338, 1434, 341, 339, 342, 1435, 343, 344, 345,
	1436, 1437, 346, 347, 348, 1438, 349, 350, 351, 1439,
	352, 353, 354, 1440, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	1441, 274, 1442, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 1443, 373, 374, 1444, 1445,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1446, 387, 659, 1447, 660,
	388, 1448, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 1449, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1450, 1205,
	404, 664, 665, 1451, 666, 1452, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1453, 418, 420, 419, 1454,
	421, 668, 1210, 422, 423, 1211, 1455, 424, 425, 426,
	427, 428, 429, 432, 1456, 1457, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1458, 276, 1214, 474, 475, 476, 1459,
	669, 477, 670, 479, 480, 1460, 0, 481, 0, 1461,
	1462, 483, 484, 485, 1463, 1464, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 1465, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 1466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 1467, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 1468, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 1469, 565, 566, 564,
	567, 568, 569, 1470, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 1471, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 1472, 597,
	598, 0, 594, 585, 1473, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 1474, 607, 682, 683, 684, 685,
	1475, 616, 1476, 608, 609, 610, 686, 611, 687, 1477,
	612, 613, 614, 615, 0, 617, 618, 1478, 1479, 619,
	620, 621, 623, 624, 622, 625, 1480, 626, 1481, 0,
	627, 628, 629, 688, 689, 690, 1482, 631, 630, 632,
	633, 691, 634, 635, 1483, 1484, 1485, 1486, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3586, 277, 279, 278,
	280, 281, 282, 283, 1408, 284, 285, 1409, 1410, 1411,
	0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 1417, 646, 296, 297, 298, 299, 300,
	301, 1418, 1419, 0, 302, 647, 648, 649, 1420, 303,
	304, 650, 1421, 1347, 1422, 305, 306, 307, 308, 309,
	310, 311, 0, 1423, 313, 314, 315, 312, 316, 1424,
	317, 0, 318, 319, 320, 321, 322, 323, 1425, 324,
	325, 326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 1433, 340, 336, 338, 1434, 341, 339,
	342, 1435, 343, 344, 345, 1436, 1437, 346, 347, 348,
	1438, 349, 350, 351, 1439, 352, 353, 354, 1440, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 1441, 274, 1442, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	1443, 373, 374, 1444, 1445, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1446, 387, 659, 1447, 660, 388, 1448, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 1206, 394, 395, 1449,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1450, 1205, 404, 664, 665, 1451, 666,
	1452, 406, 407, 1207, 667, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1453, 418, 420, 419, 1454, 421, 668, 1210, 422, 423,
	1211, 1455, 424, 425, 426, 427, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1458, 276,
	1214, 474, 475, 476, 1459, 669, 477, 670, 479, 480,
	1460, 0, 481, 0, 1461, 1462, 483, 484, 485, 1463,
	1464, 486, 487, 671, 1215, 488, 1216, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	1465, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 1466, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 1467, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 1468, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 1469, 565, 566, 564, 567, 568, 569, 1470, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 1471, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 1472, 597, 598, 0, 594, 585, 1473,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 1474,
	607, 682, 683, 684, 685, 1475, 616, 1476, 608, 609,
	610, 686, 611, 687, 1477, 612, 613, 614, 615, 0,
	617, 618, 1478, 1479, 619, 620, 621, 623, 624, 622,
	625, 1480, 626, 1481, 0, 627, 628, 629, 688, 689,
	690, 1482, 631, 630, 632, 633, 691, 634, 635, 1483,
	1484, 1485, 1486, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2615, 277, 279, 278, 280, 281, 282, 283, 1408,
	284, 285, 1409, 1410, 1411, 0, 1412, 641, 1413, 1414,
	1415, 1416, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 1417, 646,
	296, 297, 298, 299, 300, 301, 1418, 1419, 0, 302,
	647, 648, 649, 1420, 303, 304, 650, 1421, 1347, 1422,
	305, 306, 307, 308, 309, 310, 311, 0, 1423, 313,
	314, 315, 312, 316, 1424, 317, 0, 318, 319, 320,
	321, 322, 323, 1425, 324, 325, 326, 1203, 327, 328,
	329, 1426, 1427, 1429, 1428, 1430, 1431, 1432, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 1433, 340,
	336, 338, 1434, 341, 339, 342, 1435, 343, 344, 345,
	1436, 1437, 346, 347, 348, 1438, 349, 350, 351, 1439,
	352, 353, 354, 1440, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	1441, 274, 1442, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 1443, 373, 374, 1444, 1445,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 1446, 387, 659, 1447, 660,
	388, 1448, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 1449, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 1450, 1205,
	404, 664, 665, 1451, 666, 1452, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 1453, 418, 420, 419, 1454,
	421, 668, 1210, 422, 423, 1211, 1455, 424, 425, 426,
	427, 428, 429, 432, 1456, 1457, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1458, 276, 1214, 474, 475, 476, 1459,
	669, 477, 670, 479, 480, 1460, 0, 481, 0, 1461,
	1462, 483, 484, 485, 1463, 1464, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 1465, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 1466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 1467, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 1468, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 1469, 565, 566, 564,
	567, 568, 569, 1470, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 1471, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 1472, 597,
	598, 0, 594, 585, 1473, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 1474, 607, 682, 683, 684, 685,
	1475, 616, 1476, 608, 609, 610, 686, 611, 687, 1477,
	612, 613, 614, 615, 0, 617, 618, 1478, 1479, 619,
	620, 621, 623, 624, 622, 625, 1480, 626, 1481, 0,
	627, 628, 629, 688, 689, 690, 1482, 631, 630, 632,
	633, 691, 634, 635, 1483, 1484, 1485, 1486, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 1498, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2246, 277, 279, 278,
	280, 281, 282, 283, 1408, 284, 285, 1409, 1410, 1411,
	0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 1417, 646, 296, 297, 298, 299, 300,
	301, 1418, 1419, 0, 302, 647, 648, 649, 1420, 303,
	304, 650, 1421, 1347, 1422, 305, 306, 307, 308, 309,
	310, 311, 0, 1423, 313, 314, 315, 312, 316, 1424,
	317, 0, 318, 319, 320, 321, 322, 323, 1425, 324,
	325, 326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 1433, 340, 336, 338, 1434, 341, 339,
	342, 1435, 343, 344, 345, 1436, 1437, 346, 347, 348,
	1438, 349, 350, 351, 1439, 352, 353, 354, 1440, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 1441, 274, 1442, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	1443, 373, 374, 1444, 1445, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1446, 387, 659, 1447, 660, 388, 1448, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 1206, 394, 395, 1449,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1450, 1205, 404, 664, 665, 1451, 666,
	1452, 406, 407, 1207, 667, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1453, 418, 420, 419, 1454, 421, 668, 1210, 422, 423,
	1211, 1455, 424, 425, 426, 427, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1458, 276,
	1214, 474, 475, 476, 1459, 669, 477, 670, 479, 480,
	1460, 0, 481, 0, 1461, 1462, 483, 484, 485, 1463,
	1464, 486, 487, 671, 1215, 488, 1216, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	1465, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 1466, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 1467, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 1468, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 1469, 565, 566, 564, 567, 568, 569, 1470, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 1471, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 1472, 597, 598, 0, 594, 585, 1473,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 1474,
	607, 682, 683, 684, 685, 1475, 616, 1476, 608, 609,
	610, 686, 611, 687, 1477, 612, 613, 614, 615, 0,
	617, 618, 1478, 1479, 619, 620, 621, 623, 624, 622,
	625, 1480, 626, 1481, 0, 627, 628, 629, 688, 689,
	690, 1482, 631, 630, 632, 633, 691, 634, 635, 1483,
	1484, 1485, 1486, 636, 637, 692, 638, 639, 640, 1400,
	0, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 1408, 284, 285, 1409, 1410,
	1411, 0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 1417, 646, 296, 297, 298, 299,
	300, 301, 1418, 1419, 0, 302, 647, 648, 649, 1420,
	303, 304, 650, 1421, 1347, 1422, 305, 306, 307, 308,
	309, 310, 311, 0, 1423, 313, 314, 315, 312, 316,
	1424, 317, 0, 318, 319, 320, 321, 322, 323, 1425,
	324, 325, 326, 1203, 327, 328, 329, 1426, 1427, 1429,
	1428, 1430, 1431, 1432, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 1433, 340, 336, 338, 1434, 341,
	339, 342, 1435, 343, 344, 345, 1436, 1437, 346, 347,
	348, 1438, 349, 350, 351, 1439, 352, 353, 354, 1440,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 1441, 274, 1442, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 1443, 373, 374, 1444, 1445, 1204, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 1446, 387, 659, 1447, 660, 388, 1448, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 1206, 394, 395,
	1449, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 1450, 1205, 404, 664, 665, 1451,
	666, 1452, 406, 407, 1207, 667, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 1453, 418, 420, 419, 1454, 421, 668, 1210, 422,
	423, 1211, 1455, 424, 425, 426, 427, 428, 429, 432,
	1456, 1457, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1458,
	276, 1214, 474, 475, 476, 1459, 669, 477, 670, 479,
	480, 1460, 0, 481, 0, 1461, 1462, 483, 484, 485,
	1463, 1464, 486, 487, 671, 1215, 488, 1216, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 1465, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 1466, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 1467, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 1468, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 1469, 565, 566, 564, 567, 568, 569, 1470,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 1471, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 1472, 597, 598, 0, 594, 585,
	1473, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	1474, 607, 682, 683, 684, 685, 1475, 616, 1476, 608,
	609, 610, 686, 611, 687, 1477, 612, 613, 614, 615,
	0, 617, 618, 1478, 1479, 619, 620, 621, 623, 624,
	622, 625, 1480, 626, 1481, 0, 627, 628, 629, 688,
	689, 690, 1482, 631, 630, 632, 633, 691, 634, 635,
	1483, 1484, 1485, 1486, 636, 637, 692, 638, 639, 640,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 1408, 284, 285, 1409, 1410, 1411,
	0, 1412, 641, 1413, 1414, 1415, 1416, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 1417, 646, 296, 297, 298, 299, 300,
	301, 1418, 1419, 0, 302, 647, 648, 649, 1420, 303,
	304, 650, 1421, 1347, 1422, 305, 306, 307, 308, 309,
	310, 311, 0, 1423, 313, 314, 315, 312, 316, 1424,
	317, 0, 318, 319, 320, 321, 322, 323, 1425, 324,
	325, 326, 1203, 327, 328, 329, 1426, 1427, 1429, 1428,
	1430, 1431, 1432, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 1433, 340, 336, 338, 1434, 341, 339,
	342, 1435, 343, 344, 345, 1436, 1437, 346, 347, 348,
	1438, 349, 350, 351, 1439, 352, 353, 354, 1440, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 1441, 274, 1442, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	1443, 373, 374, 1444, 1445, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	1446, 387, 659, 1447, 660, 388, 1448, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 1206, 394, 395, 1449,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 1450, 1205, 404, 664, 665, 1451, 666,
	1452, 406, 407, 1207, 667, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1453, 418, 420, 419, 1454, 421, 668, 1210, 422, 423,
	1211, 1455, 424, 425, 426, 427, 428, 429, 432, 1456,
	1457, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1458, 276,
	1214, 474, 475, 476, 1459, 669, 477, 670, 479, 480,
	1460, 0, 481, 0, 1461, 1462, 483, 484, 485, 1463,
	1464, 486, 487, 671, 1215, 488, 1216, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	1465, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 1466, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 1467, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 1468, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 1469, 565, 566, 564, 567, 568, 569, 1470, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 1471, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 1472, 597, 598, 0, 594, 585, 1473,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 1474,
	607, 682, 683, 684, 685, 1475, 616, 1476, 608, 609,
	610, 686, 611, 687, 1477, 612, 613, 614, 615, 0,
	617, 618, 1478, 1479, 619, 620, 621, 623, 624, 622,
	625, 1480, 626, 1481, 0, 627, 628, 629, 688, 689,
	690, 1482, 631, 630, 632, 633, 691, 634, 635, 1483,
	1484, 1485, 1486, 636, 637, 692, 638, 639, 640, 2590,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2587, 284, 285, 0, 0,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 2588, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 2586, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 2589, 0, 0, 0, 0, 0, 0, 1122,
	2585, 0, 1082, 1120, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1162, 1126, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 1175, 0, 294, 1182, 295, 1181, 0, 1192, 296,
	297, 298, 299, 300, 301, 1128, 1161, 1093, 302, 1222,
	1223, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 1185, 335, 337, 1179, 1178, 1098, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1170, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1104, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 1117,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1177,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 1190, 1191, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 1127, 388,
	0, 389, 390, 391, 392, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 1095, 276, 1214, 474, 475, 476, 1118, 1166,
	477, 1180, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 1105, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 1176, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	1106, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 236, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 1174, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 1221,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	1092, 594, 585, 238, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 1186, 1187, 1188, 1189, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 1116, 612,
	613, 614, 615, 0, 617, 618, 0, 1099, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 1624, 1183, 1220, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 230, 636, 637, 692,
	638, 639, 640, 1096, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 1879, 1877, 0, 0, 1120, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 236, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 238, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 1624, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 230, 636, 637,
	692, 638, 639, 640, 1096, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 1879, 3230, 0, 0, 1120, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1162, 1126,
	0, 0, 0, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 1175, 0, 294, 1182, 295, 1181, 0,
	1192, 296, 297, 298, 299, 300, 301, 1128, 1161, 1093,
	302, 1222, 1223, 649, 0, 303, 304, 1168, 0, 1149,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330,
	331, 332, 333, 334, 1185, 335, 337, 1179, 1178, 1098,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1170, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1104, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1193, 1194,
	368, 1117, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1177, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 1190, 1191, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1200, 0,
	1127, 388, 0, 389, 390, 391, 392, 393, 1163, 1164,
	1167, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1205, 404, 1172, 1173, 0, 1133, 0, 406, 407, 1207,
	1165, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1201, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 1095, 276, 1214, 474, 475, 476,
	1118, 1166, 477, 1180, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 1195, 489, 490, 1105, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 1196, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 1176, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 1106, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 236, 565, 566,
	564, 567, 568, 569, 1159, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 1174,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 1221, 588, 589, 590, 591, 1197, 595, 596, 0,
	597, 598, 1092, 594, 585, 238, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 1186, 1187, 1188,
	1189, 0, 616, 0, 608, 609, 610, 1198, 611, 1199,
	1116, 612, 613, 614, 615, 0, 617, 618, 0, 1099,
	619, 620, 621, 623, 624, 622, 625, 1160, 626, 0,
	0, 627, 628, 629, 1624, 1183, 1220, 0, 631, 630,
	632, 633, 691, 634, 635, 0, 0, 0, 230, 636,
	637, 692, 638, 639, 640, 1096, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 1879, 1877, 0, 0, 1120, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	2721, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 2726, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 2722, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 2723, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 2635,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 0, 0, 0, 0, 0, 0, 0, 1122,
	2633, 0, 2632, 1120, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1162, 1126, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 1175, 0, 294, 1182, 295, 1181, 0, 1192, 296,
	297, 298, 299, 300, 301, 1128, 1161, 1093, 302, 1222,
	1223, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 1185, 335, 337, 1179, 1178, 1098, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1170, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1104, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 1117,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1177,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 1190, 1191, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 1127, 388,
	0, 389, 390, 391, 392, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 1095, 276, 1214, 474, 475, 476, 1118, 1166,
	477, 1180, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 1105, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 1176, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	1106, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 1174, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 1221,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	1092, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 1186, 1187, 1188, 1189, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 1116, 612,
	613, 614, 615, 0, 617, 618, 0, 1099, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 688, 1183, 1220, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 0, 0, 0, 0, 0,
	0, 0, 1122, 2630, 0, 2629, 1120, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 0, 0,
	0, 0, 0, 0, 0, 1122, 2627, 0, 2626, 1120,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1162, 1126, 0, 0, 0, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 1175, 0, 294,
	1182, 295, 1181, 0, 1192, 296, 297, 298, 299, 300,
	301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303,
	304, 1168, 0, 1149, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 330, 331, 332, 333, 334, 1185, 335,
	337, 1179, 1178, 1098, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1170, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1104, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1193, 1194, 368, 1117, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1177, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1204, 375, 376, 377, 1190,
	1191, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1200, 0, 1127, 388, 0, 389, 390, 391,
	392, 393, 1163, 1164, 1167, 478, 1206, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1205, 404, 1172, 1173, 0, 1133,
	0, 406, 407, 1207, 1165, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1201, 1210, 422, 423,
	1211, 0, 424, 425, 426, 427, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1095, 276,
	1214, 474, 475, 476, 1118, 1166, 477, 1180, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 1215, 488, 1216, 1195, 489, 490,
	1105, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 1196, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 1176, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 1106, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 1159, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 1174, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 1221, 588, 589, 590, 591,
	1197, 595, 596, 0, 597, 598, 1092, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 1186, 1187, 1188, 1189, 0, 616, 0, 608, 609,
	610, 1198, 611, 1199, 1116, 612, 613, 614, 615, 0,
	617, 618, 0, 1099, 619, 620, 621, 623, 624, 622,
	625, 1160, 626, 0, 0, 627, 628, 629, 688, 1183,
	1220, 0, 631, 630, 632, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 0, 0, 0, 0, 0, 0, 0, 1122, 2624,
	0, 1720, 1120, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1163, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 617, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 1719, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 1085, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 1100, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 4698, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 1100, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 0, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 2467, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 2466, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1096, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 1175, 0, 294, 1182,
	295, 1181, 0, 1192, 296, 297, 298, 299, 300, 301,
	1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 1185, 335, 337,
	1179, 1178, 1098, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1170, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1104, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 1117, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1177, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 1190, 1191,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 1127, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 1172, 1173, 0, 1133, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1095, 276, 1214,
	474, 475, 476, 1118, 1166, 477, 1180, 479, 480, 0,
	0, 481, 0, 1100, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 1105,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 1176, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 1106, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 1174, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 1221, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 1092, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	1186, 1187, 1188, 1189, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 1116, 612, 613, 614, 615, 0, 617,
	618, 0, 1099, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 688, 1183, 1220,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1096, 0,
	0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	277, 279, 278, 280, 281, 282, 283, 1122, 284, 285,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 4434,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1163, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 1100, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 617, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 0, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 4029, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 1948, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 1120,
	1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1162, 1126, 0, 0, 0, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 1175, 0, 294,
	1182, 295, 1181, 0, 1192, 296, 297, 298, 299, 300,
	301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303,
	304, 1168, 0, 1149, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 330, 331, 332, 333, 334, 1185, 335,
	337, 1179, 1178, 1098, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1170, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1104, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1193, 1194, 368, 1117, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1177, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1204, 375, 376, 377, 1190,
	1191, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1200, 0, 1127, 388, 0, 389, 390, 391,
	392, 393, 1163, 1164, 1167, 478, 1206, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1205, 404, 1172, 1173, 0, 1133,
	0, 406, 407, 1207, 1165, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1201, 1210, 422, 423,
	1211, 0, 424, 425, 426, 427, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1095, 276,
	1214, 474, 475, 476, 1118, 1166, 477, 1180, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 1215, 488, 1216, 1195, 489, 490,
	1105, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 1196, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 1176, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 1106, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 1159, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 1174, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 1221, 588, 589, 590, 591,
	1197, 595, 596, 0, 597, 598, 1092, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 1186, 1187, 1188, 1189, 0, 616, 0, 608, 609,
	610, 1198, 611, 1199, 1116, 612, 613, 614, 615, 0,
	617, 618, 0, 1099, 619, 620, 621, 623, 624, 622,
	625, 1160, 626, 0, 0, 627, 628, 629, 688, 1183,
	1220, 3741, 631, 630, 632, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 1096,
	0, 0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 277, 279, 278, 280, 281, 282, 283, 1122, 284,
	285, 0, 1120, 0, 0, 0, 1162, 1126, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 1175, 0, 294, 1182, 295, 1181, 0, 1192, 296,
	297, 298, 299, 300, 301, 1128, 1161, 1093, 302, 1222,
	1223, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 1185, 335, 337, 1179, 1178, 1098, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1170, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1104, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 1117,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1177,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 1190, 1191, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 1127, 388,
	0, 389, 390, 391, 392, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 1095, 276, 1214, 474, 475, 476, 1118, 1166,
	477, 1180, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 1105, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 1176, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	1106, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 1174, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 1221,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	1092, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 1186, 1187, 1188, 1189, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 1116, 612,
	613, 614, 615, 0, 617, 618, 0, 1099, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 688, 1183, 1220, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 1948, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 1120, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 2726, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 0, 0, 0, 0, 0, 0, 0, 1122,
	1877, 0, 2731, 1120, 1138, 1110, 1111, 1112, 1108, 1109,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1162, 1126, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 1175, 0, 294, 1182, 295, 1181, 0, 1192, 296,
	297, 298, 299, 300, 301, 1128, 1161, 1093, 302, 1222,
	1223, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 1185, 335, 337, 1179, 1178, 1098, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1170, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1104, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 1117,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1177,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 1190, 1191, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 1127, 388,
	0, 389, 390, 391, 392, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 1095, 276, 1214, 474, 475, 476, 1118, 1166,
	477, 1180, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 1105, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 1176, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	1106, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 1174, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 1221,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	1092, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 1186, 1187, 1188, 1189, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 1116, 612,
	613, 614, 615, 0, 617, 618, 0, 1099, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 688, 1183, 1220, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1096, 0, 0, 2729, 0, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 277, 279, 278, 280, 281,
	282, 283, 1122, 284, 285, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 286, 287, 1202, 288, 289,
	290, 291, 292, 293, 642, 1175, 0, 294, 1182, 295,
	1181, 0, 1192, 296, 297, 298, 299, 300, 301, 1128,
	1161, 1093, 302, 1222, 1223, 649, 0, 303, 304, 1168,
	0, 1149, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 330, 331, 332, 333, 334, 1185, 335, 337, 1179,
	1178, 1098, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1170, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1104,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1193, 1194, 368, 1117, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1177, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1204, 375, 376, 377, 1190, 1191, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1200, 0, 1127, 388, 0, 389, 390, 391, 392, 393,
	1163, 1164, 1167, 478, 1206, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1205, 404, 1172, 1173, 0, 1133, 0, 406,
	407, 1207, 1165, 1208, 408, 409, 410, 1209, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1201, 1210, 422, 423, 1211, 0,
	424, 425, 426, 427, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1213, 473, 461, 1095, 276, 1214, 474,
	475, 476, 1118, 1166, 477, 1180, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 1215, 488, 1216, 1195, 489, 490, 1105, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 1196,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 1176, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 1217, 543,
	544, 545, 546, 547, 1106, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 1159, 570, 571, 553,
	554, 572, 573, 1218, 574, 575, 576, 577, 578, 579,
	580, 1174, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 1221, 588, 589, 590, 591, 1197, 595,
	596, 0, 597, 598, 1092, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 1186,
	1187, 1188, 1189, 0, 616, 0, 608, 609, 610, 1198,
	611, 1199, 1116, 612, 613, 614, 615, 0, 617, 618,
	0, 1099, 619, 620, 621, 623, 624, 622, 625, 1160,
	626, 0, 0, 627, 628, 629, 688, 1183, 1220, 0,
	631, 630, 632, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1096, 0, 0,
	2717, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 277,
	279, 278, 280, 281, 282, 283, 1122, 284, 285, 0,
	1120, 0, 0, 0, 1162, 1126, 0, 0, 0, 286,
	287, 1202, 288, 289, 290, 291, 292, 293, 642, 1175,
	0, 294, 1182, 295, 1181, 0, 1192, 296, 297, 298,
	299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649,
	0, 303, 304, 1168, 0, 1149, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1203, 327, 328, 329, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333, 334,
	1185, 335, 337, 1179, 1178, 1098, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	1170, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 1104, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1193, 1194, 368, 1117, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 1177, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1204, 375, 376,
	377, 1190, 1191, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1200, 0, 1127, 388, 0, 389,
	390, 391, 392, 393, 1163, 1164, 1167, 478, 1206, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1205, 404, 1172, 1173,
	0, 1133, 0, 406, 407, 1207, 1165, 1208, 408, 409,
	410, 1209, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 1201, 1210,
	422, 423, 1211, 0, 424, 425, 426, 427, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1213, 473, 461,
	1095, 276, 1214, 474, 475, 476, 1118, 1166, 477, 1180,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 1215, 488, 1216, 1195,
	489, 490, 1105, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 1196, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 1176,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 1217, 543, 544, 545, 546, 547, 1106, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	1159, 570, 571, 553, 554, 572, 573, 1218, 574, 575,
	576, 577, 578, 579, 580, 1174, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 1221, 588, 589,
	590, 591, 1197, 595, 596, 0, 597, 598, 1092, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 1186, 1187, 1188, 1189, 0, 616, 0,
	608, 609, 610, 1198, 611, 1199, 1116, 612, 613, 614,
	615, 0, 617, 618, 0, 1099, 619, 620, 621, 623,
	624, 622, 625, 1160, 626, 0, 0, 627, 628, 629,
	688, 1183, 1220, 0, 631, 630, 632, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1096, 0, 0, 2705, 0, 1138, 1110, 1111, 1112,
	1108, 1109, 1121, 0, 1091, 0, 0, 0, 0, 0,
	0, 1089, 1090, 277, 279, 278, 280, 281, 282, 283,
	1122, 284, 285, 0, 1120, 0, 0, 0, 1162, 1126,
	0, 0, 0, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 1175, 0, 294, 1182, 295, 1181, 0,
	1192, 296, 297, 298, 299, 300, 301, 1128, 1161, 1093,
	302, 1222, 1223, 649, 0, 303, 304, 1168, 0, 1149,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330,
	331, 332, 333, 334, 1185, 335, 337, 1179, 1178, 1098,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 1170, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 1104, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1193, 1194,
	368, 1117, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 1177, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 1190, 1191, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1200, 0,
	1127, 388, 0, 389, 390, 391, 392, 393, 1163, 1164,
	1167, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1205, 404, 1172, 1173, 0, 1133, 0, 406, 407, 1207,
	1165, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1201, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 1095, 276, 1214, 474, 475, 476,
	1118, 1166, 477, 1180, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 1195, 489, 490, 1105, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 1196, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 1176, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 1106, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 1159, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 1174,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 1221, 588, 589, 590, 591, 1197, 595, 596, 0,
	597, 598, 1092, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 1186, 1187, 1188,
	1189, 0, 616, 0, 608, 609, 610, 1198, 611, 1199,
	1116, 612, 613, 614, 615, 0, 617, 618, 0, 1099,
	619, 620, 621, 623, 624, 622, 625, 1160, 626, 0,
	0, 627, 628, 629, 688, 1183, 1220, 0, 631, 630,
	632, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1096, 0, 0, 2703, 0,
	2694, 2701, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0,
	0, 0, 0, 0, 0, 1089, 1090, 277, 279, 278,
	280, 281, 282, 283, 1122, 284, 285, 0, 1120, 0,
	0, 0, 1162, 1126, 0, 0, 0, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 1175, 0, 294,
	1182, 295, 1181, 0, 1192, 296, 297, 298, 299, 300,
	301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303,
	304, 1168, 0, 1149, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 330, 331, 332, 333, 334, 1185, 2697,
	337, 1179, 1178, 1098, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 1170, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 1104, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1193, 1194, 368, 1117, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 1177, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1204, 375, 376, 377, 1190,
	1191, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1200, 0, 1127, 388, 0, 389, 390, 391,
	2698, 393, 1163, 1164, 1167, 478, 1206, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1205, 404, 1172, 1173, 0, 1133,
	0, 406, 407, 1207, 1165, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 1201, 1210, 422, 423,
	1211, 0, 424, 425, 426, 427, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 2699, 442, 2696, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 1095, 276,
	1214, 474, 475, 476, 1118, 1166, 477, 1180, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 1215, 488, 1216, 1195, 489, 490,
	1105, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 1196, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 1176, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 1106, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	2700, 0, 565, 566, 564, 567, 568, 569, 1159, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 1174, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 1221, 588, 589, 590, 591,
	1197, 595, 596, 0, 597, 598, 1092, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 1186, 1187, 1188, 1189, 0, 616, 0, 608, 609,
	610, 1198, 611, 1199, 1116, 612, 613, 614, 615, 0,
	617, 618, 0, 1099, 619, 620, 621, 623, 624, 622,
	625, 1160, 626, 0, 0, 627, 628, 629, 688, 1183,
	1220, 0, 631, 630, 632, 633, 691, 634, 635, 0,
	0, 0, 0, 636, 637, 692, 638, 2695, 640, 1096,
	0, 0, 2691, 0, 2694, 2701, 1111, 1112, 1108, 1109,
	1121, 0, 1091, 0, 0, 0, 0, 0, 0, 1089,
	1090, 277, 279, 278, 280, 281, 282, 283, 1122, 284,
	285, 0, 1120, 0, 0, 0, 1162, 1126, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 1175, 0, 294, 1182, 295, 1181, 0, 1192, 296,
	297, 298, 299, 300, 301, 1128, 1161, 1093, 302, 1222,
	1223, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 1185, 2697, 337, 1179, 1178, 1098, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 1170, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 1104, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 1117,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 1177,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 1190, 1191, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 1127, 388,
	0, 389, 390, 391, 2698, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 2699, 442, 2696, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 1095, 276, 1214, 474, 475, 476, 1118, 1166,
	477, 1180, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 1105, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 1176, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	1106, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 2700, 0, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 1174, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 1221,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	1092, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 1186, 1187, 1188, 1189, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 1116, 612,
	613, 614, 615, 0, 617, 618, 0, 1099, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 688, 1183, 1220, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 2695, 640, 1096, 0, 0, 0, 0, 1138, 1110,
	1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0,
	0, 0, 0, 1089, 1090, 277, 279, 278, 280, 281,
	282, 283, 1122, 284, 285, 0, 1120, 0, 0, 0,
	1162, 1126, 0, 0, 0, 286, 287, 1202, 288, 289,
	290, 291, 292, 293, 642, 1175, 0, 294, 1182, 295,
	1181, 0, 1192, 296, 297, 298, 299, 300, 301, 1128,
	1161, 1093, 302, 1222, 1223, 649, 0, 303, 304, 1168,
	0, 1149, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 330, 331, 332, 333, 334, 1185, 335, 337, 1179,
	1178, 1098, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 1170, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 1104,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1193, 1194, 368, 1117, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 1177, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1204, 375, 376, 377, 1190, 1191, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1200, 0, 1127, 388, 0, 389, 390, 391, 392, 393,
	1163, 1164, 1167, 478, 1206, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1205, 404, 1172, 1173, 0, 1133, 0, 406,
	407, 1207, 1165, 1208, 408, 409, 410, 1209, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1201, 1210, 422, 423, 1211, 0,
	424, 425, 426, 427, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1213, 473, 461, 1095, 276, 1214, 474,
	475, 476, 1118, 1166, 477, 1180, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 1215, 488, 1216, 1195, 489, 490, 1105, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 1196,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 1176, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 1217, 543,
	544, 545, 546, 547, 1106, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 1159, 570, 571, 553,
	554, 572, 573, 1218, 574, 575, 576, 577, 578, 579,
	580, 1174, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 1221, 588, 589, 590, 591, 1197, 595,
	596, 0, 597, 598, 1092, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 1186,
	1187, 1188, 1189, 0, 616, 0, 608, 609, 610, 1198,
	611, 1199, 1116, 612, 613, 614, 615, 0, 617, 618,
	0, 1099, 619, 620, 621, 623, 624, 622, 625, 1160,
	626, 0, 0, 627, 628, 629, 688, 1183, 1220, 0,
	631, 630, 632, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 1089, 1090, 0,
	0, 0, 0, 0, 1885, 0, 1122, 0, 0, 0,
	1120, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 2446, 284, 285, 0, 0,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 2410, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1096, 0, 0, 2385, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 1175, 0, 294, 1182,
	295, 1181, 0, 1192, 296, 297, 298, 299, 300, 301,
	1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 1185, 335, 337,
	1179, 1178, 1098, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1170, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1104, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 1117, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1177, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 1190, 1191,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 1127, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 1172, 1173, 0, 1133, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1095, 276, 1214,
	474, 475, 476, 1118, 1166, 477, 1180, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 1105,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 1176, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 1106, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 1174, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 1221, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 1092, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	1186, 1187, 1188, 1189, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 1116, 612, 613, 614, 615, 0, 617,
	618, 0, 1099, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 688, 1183, 1220,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1096, 0,
	0, 1725, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	277, 279, 278, 280, 281, 282, 283, 1122, 284, 285,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1163, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 617, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 1654, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 1649,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 1640, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1096, 0, 0, 1635, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 1175, 0, 294, 1182,
	295, 1181, 0, 1192, 296, 297, 298, 299, 300, 301,
	1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 1185, 335, 337,
	1179, 1178, 1098, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1170, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1104, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 1117, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1177, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 1190, 1191,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 1127, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 1172, 1173, 0, 1133, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1095, 276, 1214,
	474, 475, 476, 1118, 1166, 477, 1180, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 1105,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 1176, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 1106, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 1174, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 1221, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 1092, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	1186, 1187, 1188, 1189, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 1116, 612, 613, 614, 615, 0, 617,
	618, 0, 1099, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 688, 1183, 1220,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1096, 0,
	0, 1546, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	277, 279, 278, 280, 281, 282, 283, 1122, 284, 285,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1545, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 617, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 1540, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1539,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 1533,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 1349, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1096, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 1108, 1109, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 1175, 0, 294, 1182,
	295, 1181, 0, 1192, 296, 297, 298, 299, 300, 301,
	1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 1185, 335, 337,
	1179, 1178, 1098, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1170, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1104, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 1117, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1177, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 1190, 1191,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 1127, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 1172, 1173, 0, 1133, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1095, 276, 1214,
	474, 475, 476, 1118, 1166, 477, 1180, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 1105,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 1176, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 1106, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 1174, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 1221, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 1092, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	1186, 1187, 1188, 1189, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 1116, 612, 613, 614, 615, 0, 617,
	618, 0, 1099, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 688, 1183, 1220,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1096, 0,
	0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	277, 279, 278, 280, 281, 282, 283, 1122, 284, 285,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 4747, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1163, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 4746, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 0, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 1089, 1090, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 4745, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	1093, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 4747, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	1098, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 1095, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 1092, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 4746, 618, 0,
	1099, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1096, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 1091,
	0, 0, 0, 0, 0, 0, 1089, 1090, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 1093, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 4370, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 1098, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 4371, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 1095,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 1105, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 4369, 547, 1106, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 1092, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 1099, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1096, 0, 0, 0, 0, 1138, 1110, 1111, 1112, 3197,
	3198, 1121, 0, 1091, 0, 0, 0, 0, 0, 0,
	1089, 1090, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 1207, 1165,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 1214, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 617, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1096, 0, 0, 0, 0, 1138,
	1110, 1111, 1112, 3195, 3196, 1121, 0, 1091, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 1126, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 1175, 0, 294, 1182,
	295, 1181, 0, 1192, 296, 297, 298, 299, 300, 301,
	1128, 1161, 1093, 302, 1222, 1223, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 1185, 335, 337,
	1179, 1178, 1098, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 1170, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	1104, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 1117, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 1177, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 1190, 1191,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 1127, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 1172, 1173, 0, 1133, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 1095, 276, 1214,
	474, 475, 476, 1118, 1166, 477, 1180, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 1105,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 1176, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 1106, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 1174, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 1221, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 1092, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	1186, 1187, 1188, 1189, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 1116, 612, 613, 614, 615, 0, 617,
	618, 0, 1099, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 688, 1183, 1220,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 1096, 0,
	0, 0, 0, 1138, 1110, 1111, 1112, 1108, 1109, 1121,
	0, 1091, 0, 0, 0, 0, 0, 0, 1089, 1090,
	277, 279, 278, 280, 281, 282, 283, 1122, 284, 285,
	0, 1120, 0, 0, 0, 1162, 1126, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	1175, 0, 294, 1182, 295, 1181, 0, 1192, 296, 297,
	298, 299, 300, 301, 1128, 1161, 1093, 302, 1222, 1223,
	649, 0, 303, 304, 1168, 0, 1149, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 1152,
	1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333,
	334, 1185, 335, 337, 1179, 1178, 1098, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 1170, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 1104, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 1193, 1194, 368, 1117, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 1177, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 1190, 1191, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 1200, 0, 1127, 388, 0,
	389, 390, 391, 392, 393, 1163, 1164, 1167, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 1205, 404, 1172,
	1173, 0, 1133, 0, 406, 407, 1207, 1165, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 1201,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 1156, 1155, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 1095, 276, 1214, 474, 475, 476, 1118, 1166, 477,
	1180, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	1195, 489, 490, 1105, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 1196, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	1176, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 1106,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 1159, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 1174, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 1221, 588,
	589, 590, 591, 1197, 595, 596, 0, 597, 598, 1092,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 1186, 1187, 1188, 1189, 0, 616,
	0, 608, 609, 610, 1198, 611, 1199, 1116, 612, 613,
	614, 615, 0, 617, 618, 0, 1099, 619, 620, 621,
	623, 624, 622, 625, 1160, 626, 0, 0, 627, 628,
	629, 688, 1183, 1220, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1096, 0, 0, 0, 0, 1138, 1110, 1111,
	1112, 1108, 1109, 1121, 0, 1091, 0, 0, 0, 0,
	0, 0, 2454, 2455, 277, 279, 278, 280, 281, 282,
	283, 1122, 284, 285, 0, 1120, 0, 0, 0, 1162,
	1126, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 1175, 0, 294, 1182, 295, 1181,
	0, 1192, 296, 297, 298, 299, 300, 301, 1128, 1161,
	0, 302, 1222, 1223, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 1185, 335, 337, 1179, 1178,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 1170, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 1104, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 1117, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 1177, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 1190, 1191, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 1127, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 1172, 1173, 0, 1133, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 0, 276, 1214, 474, 475,
	476, 1118, 1166, 477, 1180, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 1105, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 1176, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 1106, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	1174, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 1221, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 1186, 1187,
	1188, 1189, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 1116, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 1183, 1220, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 1138, 1110, 1111, 1112, 1108, 1109, 1121, 0, 2713,
	0, 0, 0, 0, 0, 0, 2711, 2712, 277, 279,
	278, 280, 281, 282, 283, 1122, 284, 285, 0, 1120,
	0, 0, 0, 1162, 1126, 0, 0, 0, 286, 287,
	1202, 288, 289, 290, 291, 292, 293, 642, 1175, 0,
	294, 1182, 295, 1181, 0, 1192, 296, 297, 298, 299,
	300, 301, 1128, 1161, 0, 302, 1222, 1223, 649, 0,
	303, 304, 1168, 0, 1149, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 1203, 327, 328, 329, 1152, 1150, 1151,
	1158, 1154, 1153, 1157, 330, 331, 332, 333, 334, 1185,
	335, 337, 1179, 1178, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 1170,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 1104, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 1193, 1194, 368, 1117, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 1177, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 1204, 375, 376, 377,
	1190, 1191, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 1200, 0, 1127, 388, 0, 389, 390,
	391, 392, 393, 1163, 1164, 1167, 478, 1206, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 1205, 404, 1172, 1173, 0,
	1133, 0, 406, 407, 1207, 1165, 1208, 408, 409, 410,
	1209, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 1201, 1210, 422,
	423, 1211, 0, 424, 425, 426, 427, 428, 429, 432,
	1156, 1155, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 1212, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 1213, 473, 461, 0,
	276, 1214, 474, 475, 476, 1118, 1166, 477, 1180, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 1215, 488, 1216, 1195, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 1196, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 1176, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 1217, 543, 544, 545, 546, 547, 3190, 3191, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 1159,
	570, 571, 553, 554, 572, 573, 1218, 574, 575, 576,
	577, 578, 579, 580, 1174, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 1221, 588, 589, 590,
	591, 1197, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 1186, 1187, 1188, 1189, 0, 616, 0, 608,
	609, 610, 1198, 611, 1199, 1116, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 1160, 626, 0, 0, 627, 628, 629, 688,
	1183, 1220, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 1138, 1110, 1111, 1112, 1108,
	1109, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	2129, 2130, 277, 279, 278, 280, 281, 282, 283, 1122,
	284, 285, 0, 1120, 0, 0, 0, 1162, 1126, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 0, 1175, 0, 294, 1182, 295, 1181, 0, 1192,
	296, 297, 298, 299, 300, 301, 1128, 1161, 1093, 302,
	1222, 1223, 649, 0, 303, 304, 1168, 0, 1149, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	4747, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331,
	332, 333, 334, 1185, 335, 337, 1179, 1178, 1098, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 1104, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 1193, 1194, 368,
	1117, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	1177, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 1190, 1191, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 1200, 0, 1127,
	388, 0, 389, 390, 391, 392, 393, 1163, 1164, 1167,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 1205,
	404, 1172, 1173, 0, 1133, 0, 406, 407, 0, 1165,
	0, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 1201, 1210, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 1156, 1155, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 1095, 276, 0, 474, 475, 476, 1118,
	1166, 477, 1180, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 1195, 489, 490, 1105, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 1196, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 1176, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 1106, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 1159, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 1174, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	1221, 588, 589, 590, 591, 1197, 595, 596, 0, 597,
	598, 1092, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 1186, 1187, 1188, 1189,
	0, 616, 0, 608, 609, 610, 1198, 611, 1199, 1116,
	612, 613, 614, 615, 0, 4746, 618, 0, 1099, 619,
	620, 621, 623, 624, 622, 625, 1160, 626, 0, 0,
	627, 628, 629, 688, 1183, 1220, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 1082, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 1090, 277, 279, 278, 280,
	281, 282, 283, 1122, 284, 285, 0, 1120, 0, 0,
	0, 1162, 0, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 1161, 0, 302, 647, 648, 649, 0, 303, 304,
	1168, 0, 1149, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154,
	1153, 1157, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 1193, 1194, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 1200, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 1163, 1164, 1167, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 1205, 404, 664, 665, 0, 666, 0,
	406, 407, 1207, 1165, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 1246,
	418, 420, 419, 0, 421, 1201, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 1156, 1155,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 0, 276, 1214,
	474, 475, 476, 0, 1166, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 1252, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 1195, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	1196, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 678, 1254, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	236, 565, 566, 564, 567, 568, 569, 1159, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 1197,
	595, 596, 0, 597, 598, 0, 594, 585, 238, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	1198, 611, 1199, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	1160, 626, 0, 0, 627, 628, 629, 1624, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 230, 636, 637, 692, 638, 639, 640, 1260, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 1250, 0, 1972, 0, 0,
	1162, 0, 0, 0, 0, 286, 287, 1202, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	1161, 0, 302, 647, 648, 649, 0, 303, 304, 1168,
	0, 1149, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1193, 1194, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1204, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1200, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	1163, 1164, 1167, 478, 1206, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1205, 404, 664, 665, 0, 666, 0, 406,
	407, 1207, 1165, 1208, 408, 409, 410, 1209, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 1246, 418,
	420, 419, 0, 421, 1201, 1210, 422, 423, 1211, 0,
	424, 425, 426, 427, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1213, 473, 461, 0, 276, 1214, 474,
	475, 476, 0, 1166, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 1252, 483, 484, 485, 0, 0, 486,
	487, 671, 1215, 488, 1216, 1195, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 1196,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 1217, 543,
	544, 545, 546, 547, 678, 1254, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 236,
	565, 566, 564, 567, 568, 569, 1159, 570, 571, 553,
	554, 572, 573, 1218, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 1197, 595,
	596, 0, 597, 598, 0, 594, 585, 238, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 1198,
	611, 1199, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 1160,
	626, 0, 0, 627, 628, 629, 1624, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 0, 0, 0,
	230, 636, 637, 692, 638, 639, 640, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 3354, 0,
	1260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1250, 0, 1972, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 286, 287, 1202,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 1161, 0, 302, 647, 648, 649, 0, 303,
	304, 1168, 0, 1149, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 1203, 327, 328, 329, 1152, 1150, 1151, 1158,
	1154, 1153, 1157, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 1193, 1194, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 1204, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 1200, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 1163, 1164, 1167, 478, 1206, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 1205, 404, 664, 665, 0, 666,
	0, 406, 407, 1207, 1165, 1208, 408, 409, 410, 1209,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	1246, 418, 420, 419, 0, 421, 1201, 1210, 422, 423,
	1211, 0, 424, 425, 426, 427, 428, 429, 432, 1156,
	1155, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	1212, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 1213, 473, 461, 0, 276,
	1214, 474, 475, 476, 0, 1166, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 1252, 483, 484, 485, 0,
	0, 486, 487, 671, 1215, 488, 1216, 1195, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 1196, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	1217, 543, 544, 545, 546, 547, 678, 1254, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 1159, 570,
	571, 553, 554, 572, 573, 1218, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	1197, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 1198, 611, 1199, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 1160, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 0,
	1242, 0, 1260, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 1162, 0, 1250, 0, 1248, 286,
	287, 1202, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 1161, 0, 302, 647, 648, 649,
	0, 303, 304, 1168, 0, 1149, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1203, 327, 328, 329, 1152, 1150,
	1151, 1158, 1154, 1153, 1157, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 1193, 1194, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1204, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 1200, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 1163, 1164, 1167, 478, 1206, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 1205, 404, 664, 665,
	0, 666, 0, 406, 407, 1207, 1165, 1208, 408, 409,
	410, 1209, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 1246, 418, 420, 419, 0, 421, 1201, 1210,
	422, 423, 1211, 0, 424, 425, 426, 427, 428, 429,
	432, 1156, 1155, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1213, 473, 461,
	0, 276, 1214, 474, 475, 476, 0, 1166, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 1252, 483, 484,
	485, 0, 0, 486, 487, 671, 1215, 488, 1216, 1195,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 1196, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 1217, 543, 544, 545, 546, 547, 678, 1254,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	1159, 570, 571, 553, 554, 572, 573, 1218, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 1197, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 1198, 611, 1199, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 1160, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 0, 0, 0, 1260, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 1162, 0, 1250, 0,
	1248, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 1161, 0, 302, 647,
	648, 649, 0, 303, 304, 1168, 0, 1149, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	1152, 1150, 1151, 1158, 1154, 1153, 1157, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 1193, 1194, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 1200, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 1163, 1164, 1167, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 1205, 404,
	664, 665, 0, 666, 0, 406, 407, 1207, 1165, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 1246, 418, 420, 419, 0, 421,
	1201, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 1156, 1155, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 0, 276, 1214, 474, 475, 476, 0, 1166,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 1252,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 1195, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 1196, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	678, 1254, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 1159, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 1197, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 1198, 611, 1199, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 1160, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 1260, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 1162, 0,
	1250, 0, 1248, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 1161, 0,
	302, 647, 648, 649, 0, 303, 304, 1168, 0, 1149,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 1193, 1194,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 1200, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 1163, 1164,
	1167, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	1205, 404, 664, 665, 0, 666, 0, 406, 407, 1207,
	1165, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 1201, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 1156, 1155, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 0, 276, 1214, 474, 475, 476,
	0, 1166, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 1195, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 1196, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 1159, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 1197, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 1198, 611, 1199,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 1160, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 0, 0, 0, 1260, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 4191, 286, 287, 1202, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	1161, 0, 302, 647, 648, 649, 0, 303, 304, 1168,
	0, 1149, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1203, 327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153,
	1157, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	1193, 1194, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1204, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	1200, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	1163, 1164, 1167, 478, 1206, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 1205, 404, 664, 665, 0, 666, 0, 406,
	407, 1207, 1165, 1208, 408, 409, 410, 1209, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 1201, 1210, 422, 423, 1211, 0,
	424, 425, 426, 427, 428, 429, 432, 1156, 1155, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1213, 473, 461, 0, 276, 1214, 474,
	475, 476, 0, 1166, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 1215, 488, 1216, 1195, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 1196,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 1217, 543,
	544, 545, 546, 547, 678, 1254, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 1159, 570, 571, 553,
	554, 572, 573, 1218, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 1197, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 1198,
	611, 1199, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 1160,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 271, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 2558, 2559, 2560,
	2577, 2578, 2579, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 2580, 0, 641,
	0, 0, 0, 0, 286, 287, 1869, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	1854, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 2570,
	0, 313, 314, 315, 312, 316, 0, 317, 2566, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 2571, 2572, 2573, 2574, 369,
	370, 371, 656, 0, 0, 2565, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 2575,
	2576, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 2568, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 2569, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 1853, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 1342, 2555, 2556, 2557, 2581,
	2567, 2561, 0, 2563, 2564, 2562, 2549, 2550, 2551, 2552,
	2553, 2554, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 1347, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1205,
	404, 664, 665, 0, 666, 0, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 0, 0, 1214, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 236, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 238, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 1624, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 230, 636, 637,
	692, 638, 639, 640, 0, 0, 231, 1621, 0, 1342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 190, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 1202, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 1347, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 1203, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 1204, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 661, 662, 663, 478, 1206, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 1205, 404, 664, 665, 0, 666, 0,
	406, 407, 1207, 667, 1208, 408, 409, 410, 1209, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 1210, 422, 423, 1211,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 1212,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 1213, 473, 461, 0, 0, 1214,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 1215, 488, 1216, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 1217,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	236, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 1218, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 238, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 1624, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 0, 0,
	0, 230, 636, 637, 692, 638, 639, 640, 1342, 1341,
	231, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 190, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 1202, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 1347, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	1203, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 1204, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	661, 662, 663, 478, 1206, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 1205, 404, 664, 665, 0, 666, 0, 406,
	407, 1207, 667, 1208, 408, 409, 410, 1209, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 1210, 422, 423, 1211, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 1212, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 1213, 473, 461, 0, 0, 1214, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 1215, 488, 1216, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 1217, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 1218, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 0, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 1342, 1341, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 1646, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	1347, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1205, 404, 664, 665, 0, 666, 0, 406, 407,
	1207, 667, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 0, 0, 1214, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 3653, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 1347,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1205, 404, 664, 665, 0, 666, 0, 406, 407, 1207,
	667, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 0, 0, 1214, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 2327, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1342, 2238, 0, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 1646, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 1347, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1205,
	404, 664, 665, 0, 666, 0, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 2237, 420, 419, 0,
	421, 668, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 0, 0, 1214, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1342, 1341, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 1646, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 1347, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1205, 404,
	664, 665, 0, 666, 0, 406, 407, 1207, 667, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 0, 0, 1214, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 1082, 0, 271, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 1630, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 236, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 238, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 1624, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 230, 636,
	637, 692, 638, 639, 640, 0, 0, 231, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 190, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 1260, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 1986, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 1161,
	0, 302, 647, 648, 649, 0, 303, 304, 1168, 0,
	1149, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 1152, 1150, 1151, 1158, 1154, 1153, 1157,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 1193,
	1194, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 1200,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 1163,
	1164, 1167, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 1205, 404, 664, 665, 0, 666, 0, 406, 407,
	1207, 1165, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 1201, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 1156, 1155, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 0, 276, 1214, 474, 475,
	476, 0, 1166, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 1195, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 1196, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 1159, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 1197, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 1198, 611,
	1199, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 1160, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 3096, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 4916, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 271, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 3603, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 271, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 1618, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 3084, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 3766, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 914, 0, 819, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 2316, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 826, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 912,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 824, 599, 600, 601, 602, 603,
	825, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 819, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 2055,
	284, 285, 0, 0, 0, 0, 829, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 826, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 2054, 560, 561, 562, 563, 0, 2056, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 824, 599, 600, 601, 602, 603,
	825, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 2053, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 819, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 2006,
	284, 285, 0, 0, 0, 0, 829, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 826, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 2005, 560, 561, 562, 563, 0, 2007, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 824, 599, 600, 601, 602, 603,
	825, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 2004, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 817, 0, 819, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 829, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 826, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 824, 599, 600, 601, 602,
	603, 825, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 2028, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 0, 2034, 0, 294, 2024, 295, 2040, 0, 2047,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	2050, 2051, 0, 0, 303, 304, 0, 0, 1347, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 1185, 335, 337, 2038, 2037, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 1170, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 0, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 0, 0, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	2036, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 2045, 2046, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 0, 0, 0,
	388, 0, 389, 390, 391, 392, 393, 0, 0, 0,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1205,
	404, 2031, 2032, 0, 2027, 0, 406, 407, 1207, 0,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 0, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 0, 0, 1214, 474, 475, 476, 0,
	0, 477, 2039, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 0, 1215,
	488, 1216, 0, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 2021, 502,
	503, 504, 2022, 505, 506, 507, 0, 508, 0, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 2035, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 0, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 2033, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	2049, 588, 589, 590, 591, 0, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 2041, 2042, 2043, 2044,
	0, 616, 0, 608, 609, 610, 0, 611, 0, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 0, 2025, 2048, 0, 631, 630, 632,
	633, 0, 634, 635, 0, 0, 0, 0, 636, 637,
	0, 638, 639, 640, 819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 2015, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	826, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 824, 599, 600, 601, 602, 603, 825,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 819, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 829, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	826, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 2364, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	2365, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 824, 599, 600, 601, 602, 603, 825,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 2366, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 271, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 829, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 1342, 2103, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 829, 641, 0, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 1347, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 3047, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1205, 404,
	664, 665, 0, 666, 0, 406, 407, 1207, 667, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 0, 0, 1214, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 3048, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1342, 1341, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 1347, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1205, 404, 664,
	665, 0, 666, 0, 406, 407, 1207, 667, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 0, 0, 1214, 474, 475, 476, 3961, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1342, 1341, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 1202, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 1347, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 1203, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 1204, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 1206, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 1205, 404, 664, 665,
	0, 666, 0, 406, 407, 1207, 667, 1208, 408, 409,
	410, 1209, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 1210,
	422, 423, 1211, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 1212, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 1213, 473, 461,
	0, 0, 1214, 474, 475, 476, 3564, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 1215, 488, 1216, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 1217, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 1218, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 0, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 1674, 0, 1342, 1341, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 1347, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 1673, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1205, 404, 664,
	665, 0, 666, 0, 406, 407, 1207, 667, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 0, 0, 1214, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 1672, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	1671, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 0, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 1592, 0, 1342, 1341, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 1347, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 1591, 662, 663, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1205, 404,
	664, 665, 0, 666, 0, 406, 407, 1207, 667, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 0, 0, 1214, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 0, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 1551, 0, 1342, 1341, 0, 0, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 1347, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 1553, 662, 663,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1205,
	404, 664, 665, 0, 666, 0, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 0, 0, 1214, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 0, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 1516, 0, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 1347,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 1515, 662,
	663, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1205, 404, 664, 665, 0, 666, 0, 406, 407, 1207,
	667, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 0, 0, 1214, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 0, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 1336, 0, 1342, 1341, 0,
	0, 0, 0, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 1202, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	1347, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 1203,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 1204, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 1335,
	662, 663, 478, 1206, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 1205, 404, 664, 665, 0, 666, 0, 406, 407,
	1207, 667, 1208, 408, 409, 410, 1209, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 1210, 422, 423, 1211, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 1212, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 1213, 473, 461, 0, 0, 1214, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 1215, 488, 1216, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 1217, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 1218, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 0, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 1342, 1341, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 1202, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 1347,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 1203, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 1204, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 1206, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	1205, 404, 664, 665, 0, 666, 0, 406, 407, 1207,
	667, 1208, 408, 409, 410, 1209, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 1210, 422, 423, 1211, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 1212, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 1213, 473, 461, 0, 0, 1214, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	1215, 488, 1216, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 1217, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 1218, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 1342, 2103, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 1202, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 1347, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 1203, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 2100, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	1204, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 1206, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 1205,
	404, 664, 665, 0, 666, 0, 406, 407, 1207, 667,
	1208, 408, 409, 410, 1209, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 1210, 422, 423, 1211, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 1212, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	1213, 473, 461, 0, 0, 1214, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 1215,
	488, 1216, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 1217, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	1218, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 1342, 1341, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 1202, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 1347, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 1203, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 1204,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	1206, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 1205, 404,
	664, 665, 0, 666, 0, 406, 407, 1207, 667, 1208,
	408, 409, 410, 1209, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 1210, 422, 423, 1211, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 1212, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 1213,
	473, 461, 0, 0, 1214, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 1215, 488,
	1216, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 1217, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 1218,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 1342, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 1202, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 1347, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 1203, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 1204, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 1206,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 1205, 404, 664,
	665, 0, 666, 0, 406, 407, 1207, 667, 1208, 408,
	409, 410, 1209, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	1210, 422, 423, 1211, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 1212, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 1213, 473,
	461, 0, 0, 1214, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 1215, 488, 1216,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 1217, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 1218, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	2882, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 2879, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 2886, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 3109, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 2885, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	3106, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 3108, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 3105, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 2884, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 3107, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 2882,
	303, 304, 650, 0, 0, 2876, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	2879, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	2886, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 2885, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 2875, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 2884, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 2883, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	1751, 0, 271, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 1750, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 1749, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 1752, 552, 559, 560,
	561, 562, 563, 0, 1748, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 1746, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 1747, 630, 632, 633, 691, 634,
	635, 1491, 0, 271, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 1493, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 276, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 1252, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 1488, 0, 271, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 1490, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 1252,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 1396, 0, 271, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 1398, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	1252, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 724, 0, 271, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 723, 282, 283,
	713, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 716, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 717, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 718, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 712, 0, 271, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 713, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 716, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 717, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 718, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	713, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 716, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 717, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 718, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 713,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 716, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 3972, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 718, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 1252,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 3511, 473,
	461, 0, 276, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 3054, 0, 271, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 3053, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 2333, 0, 271, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 2272, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 2279, 0, 271, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 2278, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 2265, 0, 271, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 2267, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 274, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 2231, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 275, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 276, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	1252, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 1596, 0, 271, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 1595, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 1508, 0, 271, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 276, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 1501, 0, 271, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	1503, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 276, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 1326, 0, 271,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 1325, 662, 663, 478, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 664, 665, 0, 666, 0,
	406, 407, 0, 667, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 0, 488, 0, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 0, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 688, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 1316, 0,
	271, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 647, 648, 649, 0, 303,
	304, 650, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 659, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 1315, 662, 663, 478, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 664, 665, 0, 666,
	0, 406, 407, 0, 667, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 668, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 276,
	0, 474, 475, 476, 0, 669, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 0, 488, 0, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 0, 570,
	571, 553, 554, 572, 573, 0, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 686, 611, 687, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 0, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 1313,
	0, 271, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 1312, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	1308, 0, 271, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 274, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 1307, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	275, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 276, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 694, 0, 271, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 276, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 262, 0, 271, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	274, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 275, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 276, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 274,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 275, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 276, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	716, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 717, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 718, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 2373, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 274, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 275,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	276, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	271, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 647, 648, 649, 0, 303,
	304, 650, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 2371, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 0, 274, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 659, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 275, 401,
	402, 403, 405, 0, 0, 404, 664, 665, 0, 666,
	0, 406, 407, 0, 667, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 668, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 276,
	0, 474, 475, 476, 0, 669, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 0, 488, 0, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 0, 570,
	571, 553, 554, 572, 573, 0, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 686, 611, 687, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 0, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 271,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 2369, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 274, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 661, 662, 663, 478, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 275, 401, 402,
	403, 405, 0, 0, 404, 664, 665, 0, 666, 0,
	406, 407, 0, 667, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 276, 0,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 0, 488, 0, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 0, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 688, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 271, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 274, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	2285, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 275, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 276, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 271, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 274, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 2079,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 275, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 276, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 274, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 2073, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 275, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 276, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 901, 0, 271, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 900, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 899, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 3109, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 4268, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 1360, 0, 271, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 1363, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 1361, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 784, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 783, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 782, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 1364, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 780, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 1360, 0, 271, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 1363, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 1361, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	661, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 784, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 783,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 782, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 1364, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 780,
	683, 684, 685, 0, 616, 0, 608, 1362, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 703, 0, 271,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 702, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 661, 662, 663, 478, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 664, 665, 0, 666, 0,
	406, 407, 0, 667, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 0, 488, 0, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 701, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 0, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 688, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 271, 3096,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	661, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 271, 4278, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 4560, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 4164, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 3926, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 2766, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 3096, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	3093, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 2197, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 783, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 782, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 780, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	271, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 2343, 284, 285, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 647, 648, 649, 0, 303,
	304, 650, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 659, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 664, 665, 0, 666,
	0, 406, 407, 0, 667, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 668, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 476, 0, 669, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 0, 488, 0, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 0, 570,
	571, 553, 554, 572, 573, 0, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 686, 611, 687, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 0, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 2331,
	0, 271, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	2093, 0, 271, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 2060, 0, 271, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 774, 0, 271, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 770, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 775, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 784, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 783, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	782, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	1629, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 780, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 1602, 0, 271, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 1601, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 1586, 0, 271, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 1584, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 1579, 0, 271, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 661,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 1556, 0, 271, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	1554, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 1513, 0, 271,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 661, 662, 663, 478, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 664, 665, 0, 666, 0,
	406, 407, 0, 667, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 0, 488, 0, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 0, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 688, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 1496, 0,
	271, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 647, 648, 649, 0, 303,
	304, 650, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 659, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 661, 662, 663, 478, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 664, 665, 0, 666,
	0, 406, 407, 0, 667, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 668, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 476, 0, 669, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 0, 488, 0, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 0, 570,
	571, 553, 554, 572, 573, 0, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 686, 611, 687, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 0, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 1366,
	0, 271, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 783, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 782, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 780, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	1331, 0, 271, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 1330, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 1322, 0, 271, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 1321, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 1275, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 789, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	774, 0, 271, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 770, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 769, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 775,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 784, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 783, 544, 545, 546, 547, 771, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 782, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 772, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 780, 683, 684, 685, 0, 616, 0,
	608, 776, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 763, 0, 271, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 764, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 726, 0, 271, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 720, 0, 271, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 698, 0, 271, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 661, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 556, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 0, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 3623, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 570, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 661, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 783, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 782,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 780, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 3549, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 523, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 388, 0, 389, 390,
	391, 392, 393, 3527, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 517, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 548, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	271, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	0, 0, 0, 0, 0, 0, 0, 277, 279, 278,
	280, 281, 282, 283, 0, 284, 285, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 286, 287, 0,
	288, 289, 290, 291, 292, 293, 642, 643, 0, 294,
	644, 295, 645, 0, 646, 296, 297, 298, 299, 300,
	301, 0, 0, 0, 302, 647, 648, 649, 0, 303,
	304, 650, 0, 0, 0, 305, 306, 307, 308, 309,
	310, 311, 0, 0, 313, 314, 315, 312, 316, 0,
	317, 0, 318, 319, 320, 321, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 329, 0, 0, 0, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 335,
	337, 651, 652, 0, 340, 336, 338, 0, 341, 339,
	342, 0, 343, 344, 345, 0, 0, 346, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 653, 357, 358, 359, 361, 363, 360, 364, 365,
	366, 367, 654, 655, 368, 0, 0, 0, 0, 0,
	0, 0, 369, 370, 371, 656, 0, 0, 0, 372,
	0, 373, 374, 0, 0, 0, 375, 376, 377, 657,
	658, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, 659, 0, 660, 388, 0, 389, 390, 391,
	392, 393, 3524, 662, 663, 478, 0, 394, 395, 0,
	396, 397, 398, 399, 400, 0, 0, 0, 0, 401,
	402, 403, 405, 0, 0, 404, 664, 665, 0, 666,
	0, 406, 407, 0, 667, 0, 408, 409, 410, 0,
	411, 0, 0, 0, 412, 413, 414, 415, 416, 417,
	0, 418, 420, 419, 0, 421, 668, 0, 422, 423,
	0, 0, 424, 425, 426, 427, 428, 429, 432, 0,
	0, 430, 431, 433, 434, 0, 435, 436, 438, 441,
	437, 439, 440, 442, 455, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 457, 0, 456,
	0, 458, 459, 460, 467, 469, 470, 465, 466, 468,
	471, 472, 462, 463, 464, 0, 473, 461, 0, 0,
	0, 474, 475, 476, 0, 669, 477, 670, 479, 480,
	0, 0, 481, 0, 0, 0, 483, 484, 485, 0,
	0, 486, 487, 671, 0, 488, 0, 672, 489, 490,
	482, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	0, 500, 501, 673, 502, 503, 504, 674, 505, 506,
	507, 675, 508, 676, 509, 510, 0, 511, 512, 0,
	513, 514, 515, 516, 517, 518, 519, 677, 520, 521,
	523, 522, 524, 0, 525, 0, 526, 527, 528, 0,
	0, 0, 0, 0, 529, 0, 531, 532, 533, 534,
	530, 535, 536, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 544, 545, 546, 547, 678, 548, 0, 549,
	550, 556, 557, 558, 551, 552, 559, 560, 561, 562,
	563, 0, 565, 566, 564, 567, 568, 569, 0, 570,
	571, 553, 554, 572, 573, 0, 574, 575, 576, 577,
	578, 579, 580, 679, 0, 581, 0, 582, 583, 584,
	586, 555, 587, 592, 593, 680, 588, 589, 590, 591,
	681, 595, 596, 0, 597, 598, 0, 594, 585, 0,
	599, 600, 601, 602, 603, 604, 605, 362, 606, 0,
	607, 682, 683, 684, 685, 0, 616, 0, 608, 609,
	610, 686, 611, 687, 0, 612, 613, 614, 615, 0,
	617, 618, 0, 0, 619, 620, 621, 623, 624, 622,
	625, 0, 626, 0, 0, 627, 628, 629, 688, 689,
	690, 0, 631, 630, 632, 633, 691, 634, 635, 271,
	0, 0, 0, 636, 637, 692, 638, 639, 640, 0,
	0, 0, 0, 0, 0, 0, 277, 279, 278, 280,
	281, 282, 283, 0, 284, 285, 0, 0, 0, 0,
	0, 641, 0, 0, 0, 0, 286, 287, 0, 288,
	289, 290, 291, 292, 293, 642, 643, 0, 294, 644,
	295, 645, 0, 646, 296, 297, 298, 299, 300, 301,
	0, 0, 0, 302, 647, 648, 649, 0, 303, 304,
	650, 0, 0, 0, 305, 306, 307, 308, 309, 310,
	311, 0, 0, 313, 314, 315, 312, 316, 0, 317,
	0, 318, 319, 320, 321, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 329, 0, 0, 0, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 335, 337,
	651, 652, 0, 340, 336, 338, 0, 341, 339, 342,
	0, 343, 344, 345, 0, 0, 346, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	653, 357, 358, 359, 361, 363, 360, 364, 365, 366,
	367, 654, 655, 368, 0, 0, 0, 0, 0, 0,
	0, 369, 370, 371, 656, 0, 0, 0, 372, 0,
	373, 374, 0, 0, 0, 375, 376, 377, 657, 658,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 0,
	387, 659, 0, 660, 388, 0, 389, 390, 391, 392,
	393, 3476, 662, 663, 478, 0, 394, 395, 0, 396,
	397, 398, 399, 400, 0, 0, 0, 0, 401, 402,
	403, 405, 0, 0, 404, 664, 665, 0, 666, 0,
	406, 407, 0, 667, 0, 408, 409, 410, 0, 411,
	0, 0, 0, 412, 413, 414, 415, 416, 417, 0,
	418, 420, 419, 0, 421, 668, 0, 422, 423, 0,
	0, 424, 425, 426, 427, 428, 429, 432, 0, 0,
	430, 431, 433, 434, 0, 435, 436, 438, 441, 437,
	439, 440, 442, 455, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 457, 0, 456, 0,
	458, 459, 460, 467, 469, 470, 465, 466, 468, 471,
	472, 462, 463, 464, 0, 473, 461, 0, 0, 0,
	474, 475, 476, 0, 669, 477, 670, 479, 480, 0,
	0, 481, 0, 0, 0, 483, 484, 485, 0, 0,
	486, 487, 671, 0, 488, 0, 672, 489, 490, 482,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 0,
	500, 501, 673, 502, 503, 504, 674, 505, 506, 507,
	675, 508, 676, 509, 510, 0, 511, 512, 0, 513,
	514, 515, 516, 517, 518, 519, 677, 520, 521, 523,
	522, 524, 0, 525, 0, 526, 527, 528, 0, 0,
	0, 0, 0, 529, 0, 531, 532, 533, 534, 530,
	535, 536, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 544, 545, 546, 547, 678, 548, 0, 549, 550,
	556, 557, 558, 551, 552, 559, 560, 561, 562, 563,
	0, 565, 566, 564, 567, 568, 569, 0, 570, 571,
	553, 554, 572, 573, 0, 574, 575, 576, 577, 578,
	579, 580, 679, 0, 581, 0, 582, 583, 584, 586,
	555, 587, 592, 593, 680, 588, 589, 590, 591, 681,
	595, 596, 0, 597, 598, 0, 594, 585, 0, 599,
	600, 601, 602, 603, 604, 605, 362, 606, 0, 607,
	682, 683, 684, 685, 0, 616, 0, 608, 609, 610,
	686, 611, 687, 0, 612, 613, 614, 615, 0, 617,
	618, 0, 0, 619, 620, 621, 623, 624, 622, 625,
	0, 626, 0, 0, 627, 628, 629, 688, 689, 690,
	0, 631, 630, 632, 633, 691, 634, 635, 271, 0,
	0, 0, 636, 637, 692, 638, 639, 640, 0, 0,
	0, 0, 0, 0, 0, 277, 279, 278, 280, 281,
	282, 283, 0, 284, 285, 0, 0, 0, 0, 0,
	641, 0, 0, 0, 0, 286, 287, 0, 288, 289,
	290, 291, 292, 293, 642, 643, 0, 294, 644, 295,
	645, 0, 646, 296, 297, 298, 299, 300, 301, 0,
	0, 0, 302, 647, 648, 649, 0, 303, 304, 650,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	0, 0, 313, 314, 315, 312, 316, 0, 317, 0,
	318, 319, 320, 321, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 329, 0, 0, 0, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 335, 337, 651,
	652, 0, 340, 336, 338, 0, 341, 339, 342, 0,
	343, 344, 345, 0, 0, 346, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 653,
	357, 358, 359, 361, 363, 360, 364, 365, 366, 367,
	654, 655, 368, 0, 0, 0, 0, 0, 0, 0,
	369, 370, 371, 656, 0, 0, 0, 372, 0, 373,
	374, 0, 0, 0, 375, 376, 377, 657, 658, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 0, 387,
	659, 0, 660, 388, 0, 389, 390, 391, 392, 393,
	3474, 662, 663, 478, 0, 394, 395, 0, 396, 397,
	398, 399, 400, 0, 0, 0, 0, 401, 402, 403,
	405, 0, 0, 404, 664, 665, 0, 666, 0, 406,
	407, 0, 667, 0, 408, 409, 410, 0, 411, 0,
	0, 0, 412, 413, 414, 415, 416, 417, 0, 418,
	420, 419, 0, 421, 668, 0, 422, 423, 0, 0,
	424, 425, 426, 427, 428, 429, 432, 0, 0, 430,
	431, 433, 434, 0, 435, 436, 438, 441, 437, 439,
	440, 442, 455, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 457, 0, 456, 0, 458,
	459, 460, 467, 469, 470, 465, 466, 468, 471, 472,
	462, 463, 464, 0, 473, 461, 0, 0, 0, 474,
	475, 476, 0, 669, 477, 670, 479, 480, 0, 0,
	481, 0, 0, 0, 483, 484, 485, 0, 0, 486,
	487, 671, 0, 488, 0, 672, 489, 490, 482, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 0, 500,
	501, 673, 502, 503, 504, 674, 505, 506, 507, 675,
	508, 676, 509, 510, 0, 511, 512, 0, 513, 514,
	515, 516, 517, 518, 519, 677, 520, 521, 523, 522,
	524, 0, 525, 0, 526, 527, 528, 0, 0, 0,
	0, 0, 529, 0, 531, 532, 533, 534, 530, 535,
	536, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	544, 545, 546, 547, 678, 548, 0, 549, 550, 556,
	557, 558, 551, 552, 559, 560, 561, 562, 563, 0,
	565, 566, 564, 567, 568, 569, 0, 570, 571, 553,
	554, 572, 573, 0, 574, 575, 576, 577, 578, 579,
	580, 679, 0, 581, 0, 582, 583, 584, 586, 555,
	587, 592, 593, 680, 588, 589, 590, 591, 681, 595,
	596, 0, 597, 598, 0, 594, 585, 0, 599, 600,
	601, 602, 603, 604, 605, 362, 606, 0, 607, 682,
	683, 684, 685, 0, 616, 0, 608, 609, 610, 686,
	611, 687, 0, 612, 613, 614, 615, 0, 617, 618,
	0, 0, 619, 620, 621, 623, 624, 622, 625, 0,
	626, 0, 0, 627, 628, 629, 688, 689, 690, 0,
	631, 630, 632, 633, 691, 634, 635, 271, 0, 0,
	0, 636, 637, 692, 638, 639, 640, 0, 0, 0,
	0, 0, 0, 0, 277, 279, 278, 280, 281, 282,
	283, 0, 284, 285, 0, 0, 0, 0, 0, 641,
	0, 0, 0, 0, 286, 287, 0, 288, 289, 290,
	291, 292, 293, 642, 643, 0, 294, 644, 295, 645,
	0, 646, 296, 297, 298, 299, 300, 301, 0, 0,
	0, 302, 647, 648, 649, 0, 303, 304, 650, 0,
	0, 0, 305, 306, 307, 308, 309, 310, 311, 0,
	0, 313, 314, 315, 312, 316, 0, 317, 0, 318,
	319, 320, 321, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 329, 0, 0, 0, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 335, 337, 651, 652,
	0, 340, 336, 338, 0, 341, 339, 342, 0, 343,
	344, 345, 0, 0, 346, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 653, 357,
	358, 359, 361, 363, 360, 364, 365, 366, 367, 654,
	655, 368, 0, 0, 0, 0, 0, 0, 0, 369,
	370, 371, 656, 0, 0, 0, 372, 0, 373, 374,
	0, 0, 0, 375, 376, 377, 657, 658, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 387, 659,
	0, 660, 388, 0, 389, 390, 391, 392, 393, 3459,
	662, 663, 478, 0, 394, 395, 0, 396, 397, 398,
	399, 400, 0, 0, 0, 0, 401, 402, 403, 405,
	0, 0, 404, 664, 665, 0, 666, 0, 406, 407,
	0, 667, 0, 408, 409, 410, 0, 411, 0, 0,
	0, 412, 413, 414, 415, 416, 417, 0, 418, 420,
	419, 0, 421, 668, 0, 422, 423, 0, 0, 424,
	425, 426, 427, 428, 429, 432, 0, 0, 430, 431,
	433, 434, 0, 435, 436, 438, 441, 437, 439, 440,
	442, 455, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 457, 0, 456, 0, 458, 459,
	460, 467, 469, 470, 465, 466, 468, 471, 472, 462,
	463, 464, 0, 473, 461, 0, 0, 0, 474, 475,
	476, 0, 669, 477, 670, 479, 480, 0, 0, 481,
	0, 0, 0, 483, 484, 485, 0, 0, 486, 487,
	671, 0, 488, 0, 672, 489, 490, 482, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 0, 500, 501,
	673, 502, 503, 504, 674, 505, 506, 507, 675, 508,
	676, 509, 510, 0, 511, 512, 0, 513, 514, 515,
	516, 517, 518, 519, 677, 520, 521, 523, 522, 524,
	0, 525, 0, 526, 527, 528, 0, 0, 0, 0,
	0, 529, 0, 531, 532, 533, 534, 530, 535, 536,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 544,
	545, 546, 547, 678, 548, 0, 549, 550, 556, 557,
	558, 551, 552, 559, 560, 561, 562, 563, 0, 565,
	566, 564, 567, 568, 569, 0, 570, 571, 553, 554,
	572, 573, 0, 574, 575, 576, 577, 578, 579, 580,
	679, 0, 581, 0, 582, 583, 584, 586, 555, 587,
	592, 593, 680, 588, 589, 590, 591, 681, 595, 596,
	0, 597, 598, 0, 594, 585, 0, 599, 600, 601,
	602, 603, 604, 605, 362, 606, 0, 607, 682, 683,
	684, 685, 0, 616, 0, 608, 609, 610, 686, 611,
	687, 0, 612, 613, 614, 615, 0, 617, 618, 0,
	0, 619, 620, 621, 623, 624, 622, 625, 0, 626,
	0, 0, 627, 628, 629, 688, 689, 690, 0, 631,
	630, 632, 633, 691, 634, 635, 271, 0, 0, 0,
	636, 637, 692, 638, 639, 640, 0, 0, 0, 0,
	0, 0, 0, 277, 279, 278, 280, 281, 282, 283,
	0, 284, 285, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 286, 287, 0, 288, 289, 290, 291,
	292, 293, 642, 643, 0, 294, 644, 295, 645, 0,
	646, 296, 297, 298, 299, 300, 301, 0, 0, 0,
	302, 647, 648, 649, 0, 303, 304, 650, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 0, 0,
	313, 314, 315, 312, 316, 0, 317, 0, 318, 319,
	320, 321, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 329, 0, 0, 0, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 335, 337, 651, 652, 0,
	340, 336, 338, 0, 341, 339, 342, 0, 343, 344,
	345, 0, 0, 346, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 653, 357, 358,
	359, 361, 363, 360, 364, 365, 366, 367, 654, 655,
	368, 0, 0, 0, 0, 0, 0, 0, 369, 370,
	371, 656, 0, 0, 0, 372, 0, 373, 374, 0,
	0, 0, 375, 376, 377, 657, 658, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 0, 387, 659, 0,
	660, 388, 0, 389, 390, 391, 392, 393, 3064, 662,
	663, 478, 0, 394, 395, 0, 396, 397, 398, 399,
	400, 0, 0, 0, 0, 401, 402, 403, 405, 0,
	0, 404, 664, 665, 0, 666, 0, 406, 407, 0,
	667, 0, 408, 409, 410, 0, 411, 0, 0, 0,
	412, 413, 414, 415, 416, 417, 0, 418, 420, 419,
	0, 421, 668, 0, 422, 423, 0, 0, 424, 425,
	426, 427, 428, 429, 432, 0, 0, 430, 431, 433,
	434, 0, 435, 436, 438, 441, 437, 439, 440, 442,
	455, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 457, 0, 456, 0, 458, 459, 460,
	467, 469, 470, 465, 466, 468, 471, 472, 462, 463,
	464, 0, 473, 461, 0, 0, 0, 474, 475, 476,
	0, 669, 477, 670, 479, 480, 0, 0, 481, 0,
	0, 0, 483, 484, 485, 0, 0, 486, 487, 671,
	0, 488, 0, 672, 489, 490, 482, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 0, 500, 501, 673,
	502, 503, 504, 674, 505, 506, 507, 675, 508, 676,
	509, 510, 0, 511, 512, 0, 513, 514, 515, 516,
	517, 518, 519, 677, 520, 521, 523, 522, 524, 0,
	525, 0, 526, 527, 528, 0, 0, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 530, 535, 536, 537,
	538, 539, 0, 540, 541, 542, 0, 543, 544, 545,
	546, 547, 678, 548, 0, 549, 550, 556, 557, 558,
	551, 552, 559, 560, 561, 562, 563, 0, 565, 566,
	564, 567, 568, 569, 0, 570, 571, 553, 554, 572,
	573, 0, 574, 575, 576, 577, 578, 579, 580, 679,
	0, 581, 0, 582, 583, 584, 586, 555, 587, 592,
	593, 680, 588, 589, 590, 591, 681, 595, 596, 0,
	597, 598, 0, 594, 585, 0, 599, 600, 601, 602,
	603, 604, 605, 362, 606, 0, 607, 682, 683, 684,
	685, 0, 616, 0, 608, 609, 610, 686, 611, 687,
	0, 612, 613, 614, 615, 0, 617, 618, 0, 0,
	619, 620, 621, 623, 624, 622, 625, 0, 626, 0,
	0, 627, 628, 629, 688, 689, 690, 0, 631, 630,
	632, 633, 691, 634, 635, 271, 0, 0, 0, 636,
	637, 692, 638, 639, 640, 0, 0, 0, 0, 0,
	0, 0, 277, 279, 278, 280, 281, 282, 283, 0,
	284, 285, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 0, 286, 287, 0, 288, 289, 290, 291, 292,
	293, 642, 643, 0, 294, 644, 295, 645, 0, 646,
	296, 297, 298, 299, 300, 301, 0, 0, 0, 302,
	647, 648, 649, 0, 303, 304, 650, 0, 0, 0,
	305, 306, 307, 308, 309, 310, 311, 0, 0, 313,
	314, 315, 312, 316, 0, 317, 0, 318, 319, 320,
	321, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	329, 0, 0, 0, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 335, 337, 651, 652, 0, 340,
	336, 338, 0, 341, 339, 342, 0, 343, 344, 345,
	0, 0, 346, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 653, 357, 358, 359,
	361, 363, 360, 364, 365, 366, 367, 654, 655, 368,
	0, 0, 0, 0, 0, 0, 0, 369, 370, 371,
	656, 0, 0, 0, 372, 0, 373, 374, 0, 0,
	0, 375, 376, 377, 657, 658, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 387, 659, 0, 660,
	388, 0, 389, 390, 391, 392, 393, 661, 662, 663,
	478, 0, 394, 395, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 401, 402, 403, 405, 0, 0,
	404, 664, 665, 0, 666, 0, 406, 407, 0, 667,
	0, 408, 409, 410, 0, 411, 0, 0, 0, 412,
	413, 414, 415, 416, 417, 0, 418, 420, 419, 0,
	421, 668, 0, 422, 423, 0, 0, 424, 425, 426,
	427, 428, 429, 432, 0, 0, 430, 431, 433, 434,
	0, 435, 436, 438, 441, 437, 439, 440, 442, 455,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 457, 0, 456, 0, 458, 459, 460, 467,
	469, 470, 465, 466, 468, 471, 472, 462, 463, 464,
	0, 473, 461, 0, 0, 0, 474, 475, 476, 0,
	669, 477, 670, 479, 480, 0, 0, 481, 0, 0,
	0, 483, 484, 485, 0, 0, 486, 487, 671, 0,
	488, 0, 672, 489, 490, 482, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 0, 500, 501, 673, 502,
	503, 504, 674, 505, 506, 507, 675, 508, 676, 509,
	510, 0, 511, 512, 0, 513, 514, 515, 516, 517,
	518, 519, 677, 520, 521, 523, 522, 524, 0, 525,
	0, 526, 527, 528, 0, 0, 0, 0, 0, 529,
	0, 531, 532, 533, 534, 530, 535, 536, 537, 538,
	539, 0, 540, 541, 542, 0, 543, 544, 545, 546,
	547, 678, 548, 0, 549, 550, 764, 557, 558, 551,
	552, 559, 560, 561, 562, 563, 0, 565, 566, 564,
	567, 568, 569, 0, 570, 571, 553, 554, 572, 573,
	0, 574, 575, 576, 577, 578, 579, 580, 679, 0,
	581, 0, 582, 583, 584, 586, 555, 587, 592, 593,
	680, 588, 589, 590, 591, 681, 595, 596, 0, 597,
	598, 0, 594, 585, 0, 599, 600, 601, 602, 603,
	604, 605, 362, 606, 0, 607, 682, 683, 684, 685,
	0, 616, 0, 608, 609, 610, 686, 611, 687, 0,
	612, 613, 614, 615, 0, 617, 618, 0, 0, 619,
	620, 621, 623, 624, 622, 625, 0, 626, 0, 0,
	627, 628, 629, 688, 689, 690, 0, 631, 630, 632,
	633, 691, 634, 635, 271, 0, 0, 0, 636, 637,
	692, 638, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 277, 279, 278, 280, 281, 282, 283, 0, 284,
	285, 0, 0, 0, 0, 0, 641, 0, 2303, 0,
	0, 286, 287, 0, 288, 289, 290, 291, 292, 293,
	642, 643, 0, 294, 644, 295, 645, 0, 646, 296,
	297, 298, 299, 300, 301, 0, 0, 0, 302, 647,
	648, 649, 0, 303, 304, 650, 0, 0, 0, 305,
	306, 307, 308, 309, 310, 311, 0, 0, 313, 314,
	315, 312, 316, 0, 317, 0, 318, 319, 320, 321,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 329,
	0, 0, 0, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 335, 337, 651, 652, 0, 340, 336,
	338, 0, 341, 339, 342, 0, 343, 344, 345, 0,
	0, 346, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 653, 357, 358, 359, 361,
	363, 360, 364, 365, 366, 367, 654, 655, 368, 0,
	0, 0, 0, 0, 0, 0, 369, 370, 371, 656,
	0, 0, 0, 372, 0, 373, 374, 0, 0, 0,
	375, 376, 377, 657, 658, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 0, 387, 659, 0, 660, 388,
	0, 389, 390, 391, 392, 393, 661, 662, 663, 478,
	0, 394, 395, 0, 396, 397, 398, 399, 400, 0,
	0, 0, 0, 401, 402, 403, 405, 0, 0, 404,
	664, 665, 0, 666, 0, 406, 407, 0, 667, 0,
	408, 409, 410, 0, 411, 0, 0, 0, 412, 413,
	414, 415, 416, 417, 0, 418, 420, 419, 0, 421,
	668, 0, 422, 423, 0, 0, 424, 425, 426, 427,
	428, 429, 432, 0, 0, 430, 431, 433, 434, 0,
	435, 436, 438, 441, 437, 439, 440, 442, 455, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 457, 0, 456, 0, 458, 459, 460, 467, 469,
	470, 465, 466, 468, 471, 472, 462, 463, 464, 0,
	473, 461, 0, 0, 0, 474, 475, 476, 0, 669,
	477, 670, 479, 480, 0, 0, 481, 0, 0, 0,
	483, 484, 485, 0, 0, 486, 487, 671, 0, 488,
	0, 672, 489, 490, 482, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 0, 500, 501, 673, 502, 503,
	504, 674, 505, 506, 507, 675, 508, 676, 509, 510,
	0, 511, 512, 0, 513, 514, 515, 516, 517, 518,
	519, 677, 520, 521, 523, 522, 524, 0, 525, 0,
	526, 527, 528, 0, 0, 0, 0, 0, 529, 0,
	531, 532, 533, 534, 530, 535, 536, 537, 538, 539,
	0, 540, 541, 542, 0, 543, 544, 545, 546, 547,
	678, 548, 0, 549, 550, 556, 557, 558, 551, 552,
	559, 560, 561, 562, 563, 0, 565, 566, 564, 567,
	568, 569, 0, 0, 571, 553, 554, 572, 573, 0,
	574, 575, 576, 577, 578, 579, 580, 679, 0, 581,
	0, 582, 583, 584, 586, 555, 587, 592, 593, 680,
	588, 589, 590, 591, 681, 595, 596, 0, 597, 598,
	0, 594, 585, 0, 599, 600, 601, 602, 603, 604,
	605, 362, 606, 0, 607, 682, 683, 684, 685, 0,
	616, 0, 608, 609, 610, 686, 611, 687, 0, 612,
	613, 614, 615, 0, 617, 618, 0, 0, 619, 620,
	621, 623, 624, 622, 625, 0, 626, 0, 0, 627,
	628, 629, 688, 689, 690, 0, 631, 630, 632, 633,
	691, 634, 635, 271, 0, 0, 0, 636, 637, 692,
	638, 639, 640, 0, 0, 0, 0, 0, 0, 0,
	277, 279, 278, 280, 281, 282, 283, 0, 284, 285,
	0, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	286, 287, 0, 288, 289, 290, 291, 292, 293, 642,
	643, 0, 294, 644, 295, 645, 0, 646, 296, 297,
	298, 299, 300, 301, 0, 0, 0, 302, 647, 648,
	649, 0, 303, 304, 650, 0, 0, 0, 305, 306,
	307, 308, 309, 310, 311, 0, 0, 313, 314, 315,
	312, 316, 0, 317, 0, 318, 319, 320, 321, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 329, 0,
	0, 0, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 335, 337, 651, 652, 0, 340, 336, 338,
	0, 341, 339, 342, 0, 343, 344, 345, 0, 0,
	346, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 653, 357, 358, 359, 361, 363,
	360, 364, 365, 366, 367, 654, 655, 368, 0, 0,
	0, 0, 0, 0, 0, 369, 370, 371, 656, 0,
	0, 0, 372, 0, 373, 374, 0, 0, 0, 375,
	376, 377, 657, 658, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 387, 659, 0, 660, 388, 0,
	389, 390, 391, 392, 393, 1293, 662, 663, 478, 0,
	394, 395, 0, 396, 397, 398, 399, 400, 0, 0,
	0, 0, 401, 402, 403, 405, 0, 0, 404, 664,
	665, 0, 666, 0, 406, 407, 0, 667, 0, 408,
	409, 410, 0, 411, 0, 0, 0, 412, 413, 414,
	415, 416, 417, 0, 418, 420, 419, 0, 421, 668,
	0, 422, 423, 0, 0, 424, 425, 426, 427, 428,
	429, 432, 0, 0, 430, 431, 433, 434, 0, 435,
	436, 438, 441, 437, 439, 440, 442, 455, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	457, 0, 456, 0, 458, 459, 460, 467, 469, 470,
	465, 466, 468, 471, 472, 462, 463, 464, 0, 473,
	461, 0, 0, 0, 474, 475, 476, 0, 669, 477,
	670, 479, 480, 0, 0, 481, 0, 0, 0, 483,
	484, 485, 0, 0, 486, 487, 671, 0, 488, 0,
	672, 489, 490, 482, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 0, 500, 501, 673, 502, 503, 504,
	674, 505, 506, 507, 675, 508, 676, 509, 510, 0,
	511, 512, 0, 513, 514, 515, 516, 517, 518, 519,
	677, 520, 521, 523, 522, 524, 0, 525, 0, 526,
	527, 528, 0, 0, 0, 0, 0, 529, 0, 531,
	532, 533, 534, 530, 535, 536, 537, 538, 539, 0,
	540, 541, 542, 0, 543, 544, 545, 546, 547, 678,
	548, 0, 549, 550, 556, 557, 558, 551, 552, 559,
	560, 561, 562, 563, 0, 565, 566, 564, 567, 568,
	569, 0, 570, 571, 553, 554, 572, 573, 0, 574,
	575, 576, 577, 578, 579, 580, 679, 0, 581, 0,
	582, 583, 584, 586, 555, 587, 592, 593, 680, 588,
	589, 590, 591, 681, 595, 596, 0, 597, 598, 0,
	594, 585, 0, 599, 600, 601, 602, 603, 604, 605,
	362, 606, 0, 607, 682, 683, 684, 685, 0, 616,
	0, 608, 609, 610, 686, 611, 687, 0, 612, 613,
	614, 615, 0, 617, 618, 0, 0, 619, 620, 621,
	623, 624, 622, 625, 0, 626, 0, 0, 627, 628,
	629, 688, 689, 690, 0, 631, 630, 632, 633, 691,
	634, 635, 271, 0, 0, 0, 636, 637, 692, 638,
	639, 640, 0, 0, 0, 0, 0, 0, 0, 277,
	279, 278, 280, 281, 282, 283, 0, 284, 285, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 286,
	287, 0, 288, 289, 290, 291, 292, 293, 642, 643,
	0, 294, 644, 295, 645, 0, 646, 296, 297, 298,
	299, 300, 301, 0, 0, 0, 302, 647, 648, 649,
	0, 303, 304, 650, 0, 0, 0, 305, 306, 307,
	308, 309, 310, 311, 0, 0, 313, 314, 315, 312,
	316, 0, 317, 0, 318, 319, 320, 321, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 329, 0, 0,
	0, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 335, 337, 651, 652, 0, 340, 336, 338, 0,
	341, 339, 342, 0, 343, 344, 345, 0, 0, 346,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 653, 357, 358, 359, 361, 363, 360,
	364, 365, 366, 367, 654, 655, 368, 0, 0, 0,
	0, 0, 0, 0, 369, 370, 371, 656, 0, 0,
	0, 372, 0, 373, 374, 0, 0, 0, 375, 376,
	377, 657, 658, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 387, 659, 0, 660, 388, 0, 389,
	390, 391, 392, 393, 661, 662, 663, 478, 0, 394,
	395, 0, 396, 397, 398, 399, 400, 0, 0, 0,
	0, 401, 402, 403, 405, 0, 0, 404, 664, 665,
	0, 666, 0, 406, 407, 0, 667, 0, 408, 409,
	410, 0, 411, 0, 0, 0, 412, 413, 414, 415,
	416, 417, 0, 418, 420, 419, 0, 421, 668, 0,
	422, 423, 0, 0, 424, 425, 426, 427, 428, 429,
	432, 0, 0, 430, 431, 433, 434, 0, 435, 436,
	438, 441, 437, 439, 440, 442, 455, 443, 444, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 457,
	0, 456, 0, 458, 459, 460, 467, 469, 470, 465,
	466, 468, 471, 472, 462, 463, 464, 0, 473, 461,
	0, 0, 0, 474, 475, 476, 0, 669, 477, 670,
	479, 480, 0, 0, 481, 0, 0, 0, 483, 484,
	485, 0, 0, 486, 487, 671, 0, 488, 0, 672,
	489, 490, 482, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 0, 500, 501, 673, 502, 503, 504, 674,
	505, 506, 507, 675, 508, 676, 509, 510, 0, 511,
	512, 0, 513, 514, 515, 516, 517, 518, 519, 677,
	520, 521, 1225, 522, 524, 0, 525, 0, 526, 527,
	528, 0, 0, 0, 0, 0, 529, 0, 531, 532,
	533, 534, 530, 535, 536, 537, 538, 539, 0, 540,
	541, 542, 0, 543, 544, 545, 546, 547, 678, 548,
	0, 549, 550, 556, 557, 558, 551, 552, 559, 560,
	561, 562, 563, 0, 565, 566, 564, 567, 568, 569,
	0, 570, 571, 553, 554, 572, 573, 0, 574, 575,
	576, 577, 578, 579, 580, 679, 0, 581, 0, 582,
	583, 584, 586, 555, 587, 592, 593, 680, 588, 589,
	590, 591, 681, 595, 596, 0, 597, 598, 0, 594,
	585, 0, 599, 600, 601, 602, 603, 604, 605, 362,
	606, 0, 607, 682, 683, 684, 685, 0, 616, 0,
	608, 609, 610, 686, 611, 687, 0, 612, 613, 614,
	615, 0, 617, 618, 0, 0, 619, 620, 621, 623,
	624, 622, 625, 0, 626, 0, 0, 627, 628, 629,
	688, 689, 690, 0, 631, 630, 632, 633, 691, 634,
	635, 271, 0, 0, 0, 636, 637, 692, 638, 639,
	640, 0, 0, 0, 0, 0, 0, 0, 277, 279,
	278, 280, 281, 282, 283, 0, 284, 285, 0, 0,
	0, 0, 0, 641, 0, 0, 0, 0, 286, 287,
	0, 288, 289, 290, 291, 292, 293, 642, 643, 0,
	294, 644, 295, 645, 0, 646, 296, 297, 298, 299,
	300, 301, 0, 0, 0, 302, 647, 648, 649, 0,
	303, 304, 650, 0, 0, 0, 305, 306, 307, 308,
	309, 310, 311, 0, 0, 313, 314, 315, 312, 316,
	0, 317, 0, 318, 319, 320, 321, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 329, 0, 0, 0,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	335, 337, 651, 652, 0, 340, 336, 338, 0, 341,
	339, 342, 0, 343, 344, 345, 0, 0, 346, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 653, 357, 358, 359, 361, 363, 360, 364,
	365, 366, 367, 654, 655, 368, 0, 0, 0, 0,
	0, 0, 0, 369, 370, 371, 656, 0, 0, 0,
	372, 0, 373, 374, 0, 0, 0, 375, 376, 377,
	657, 658, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 0, 387, 659, 0, 660, 0, 0, 389, 390,
	391, 392, 393, 661, 662, 663, 478, 0, 394, 395,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	401, 402, 403, 405, 0, 0, 404, 664, 665, 0,
	666, 0, 406, 407, 0, 667, 0, 408, 409, 410,
	0, 411, 0, 0, 0, 412, 413, 414, 415, 416,
	417, 0, 418, 420, 419, 0, 421, 668, 0, 422,
	423, 0, 0, 424, 425, 426, 427, 428, 429, 432,
	0, 0, 430, 431, 433, 434, 0, 435, 436, 438,
	441, 437, 439, 440, 442, 455, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 457, 0,
	456, 0, 458, 459, 460, 467, 469, 470, 465, 466,
	468, 471, 472, 462, 463, 464, 0, 473, 461, 0,
	0, 0, 474, 475, 476, 0, 669, 477, 670, 479,
	480, 0, 0, 481, 0, 0, 0, 483, 484, 485,
	0, 0, 486, 487, 671, 0, 488, 0, 672, 489,
	490, 482, 491, 492, 0, 494, 495, 496, 497, 498,
	499, 0, 500, 501, 673, 502, 503, 504, 674, 505,
	506, 507, 675, 508, 676, 509, 510, 0, 511, 512,
	0, 513, 514, 515, 516, 0, 518, 519, 677, 520,
	521, 523, 522, 524, 0, 525, 0, 526, 527, 528,
	0, 0, 0, 0, 0, 529, 0, 531, 532, 533,
	534, 530, 535, 536, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 544, 545, 546, 547, 678, 0, 0,
	549, 550, 556, 557, 558, 551, 552, 559, 560, 561,
	562, 563, 0, 565, 566, 564, 567, 568, 569, 0,
	570, 571, 553, 554, 572, 573, 0, 574, 575, 576,
	577, 578, 579, 580, 679, 0, 581, 0, 582, 583,
	584, 586, 555, 587, 592, 593, 680, 588, 589, 590,
	591, 681, 595, 596, 0, 597, 598, 0, 594, 585,
	0, 599, 600, 601, 602, 603, 604, 605, 362, 606,
	0, 607, 682, 683, 684, 685, 0, 616, 0, 608,
	609, 610, 686, 611, 687, 0, 612, 613, 614, 615,
	0, 617, 618, 0, 0, 619, 620, 621, 623, 624,
	622, 625, 0, 626, 0, 0, 627, 628, 629, 688,
	689, 690, 0, 631, 630, 632, 633, 691, 634, 635,
	0, 0, 0, 0, 636, 637, 692, 638, 639, 640,
	1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1829, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1825, 1826, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 1839,
	0, 0, 1849, 1801, 0, 0, 0, 0, 0, 1828,
	1830, 0, 1848, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 0, 1806, 0, 1845, 0, 1846, 1854,
	0, 0, 0, 0, 0, 1815, 1816, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 1837, 0, 0, 0, 1817, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 1821, 0,
	0, 0, 1828, 1830, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1846, 0, 0, 0, 0, 0, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 1836, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 1851, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 1836, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 1845,
	0, 1846, 0, 0, 0, 0, 0, 0, 1815, 1816,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811,
	1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0,
	0, 1827, 4543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 1840, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 1798, 1799, 4354, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 1798, 1799, 4187, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 1798, 1799, 1800, 1831,
	1832, 1833, 1842, 1843, 1844, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 1835, 1829,
	0, 0, 1839, 0, 0, 1849, 1801, 0, 0, 0,
	0, 0, 1828, 1830, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 1846, 1854, 0, 0, 0, 0, 0, 1815, 1816,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 1837, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 1823, 1824, 1825, 1826, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 1839, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 1828, 1830, 0, 1836, 0, 1823, 1824, 1825,
	1826, 0, 0, 0, 0, 0, 1851, 1806, 0, 1845,
	0, 1846, 0, 0, 0, 0, 0, 0, 1815, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 1849, 0,
	0, 1821, 0, 0, 0, 1828, 1830, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 1846, 0, 0, 0, 0, 0,
	0, 1815, 1816, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 1821, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 1840, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 1827, 4117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 0, 4116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1819, 1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803,
	1804, 1805, 1807, 1808, 0, 0, 1798, 1799, 4115, 1831,
	1832, 1833, 1842, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1829,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 1798,
	1799, 1800, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1835, 1829, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1824, 1825,
	1826, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1829, 0, 0, 1839, 0, 0, 1849, 1801,
	0, 0, 0, 0, 0, 1828, 1830, 0, 1848, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 0,
	1806, 0, 1845, 0, 1846, 1854, 0, 0, 0, 0,
	0, 1815, 1816, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 1837,
	0, 0, 0, 1817, 0, 0, 0, 0, 1839, 0,
	0, 1849, 0, 0, 1821, 0, 0, 0, 1828, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 1846, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1836, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 1851,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 1839, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1828, 1830,
	0, 1836, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 1845, 0, 1846, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1819, 1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803,
	1804, 1805, 1807, 1808, 0, 0, 0, 1827, 3771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 1840, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 1798,
	1799, 3272, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 1835, 1829, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 1798,
	1799, 3271, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1829, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1831, 1832, 1833, 1842, 1843,
	1844, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 1835, 1829, 0, 0, 1839, 0,
	0, 1849, 1801, 0, 0, 0, 0, 0, 1828, 1830,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 1846, 1854, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1837, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 1839, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 1828, 1830,
	0, 1836, 0, 1823, 1824, 1825, 1826, 0, 0, 0,
	0, 0, 1851, 1806, 0, 1845, 0, 1846, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1849, 0, 0, 1821, 0, 0,
	0, 1828, 1830, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1846, 0, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	1821, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 1840, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0,
	1827, 3270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0,
	0, 3269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818, 1814,
	0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808,
	1798, 1799, 3234, 1831, 1832, 1833, 1842, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 1829, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1829, 0, 0, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1825, 1826, 1854, 0, 0, 0, 0,
	0, 1806, 4823, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 1828,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 1846, 0,
	0, 0, 0, 0, 0, 1815, 1816, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 1821, 0,
	1806, 0, 3334, 0, 0, 0, 3333, 0, 0, 0,
	0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1829, 0, 0, 1839, 0,
	3205, 1849, 1801, 1847, 0, 0, 0, 0, 1828, 1830,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 1845, 0, 1846, 1854, 0,
	0, 0, 0, 1851, 1815, 1816, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1837, 0, 0, 4822, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 3206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 1823, 1824, 1825, 1826, 0, 1840, 0,
	0, 0, 1851, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 1828, 1830, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1846, 0, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1840, 0, 0,
	1821, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811,
	1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2739, 0, 0, 0, 0, 0,
	0, 1798, 1799, 1822, 1831, 1832, 1833, 1842, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 1829, 0, 0, 0, 2738, 0,
	1840, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 1853, 0, 0, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818, 1814,
	0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808,
	0, 0, 1823, 1824, 1825, 1826, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833,
	1842, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1835, 1829, 0, 0,
	1839, 0, 0, 1849, 1801, 0, 0, 0, 0, 0,
	1828, 1830, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 1846,
	1854, 0, 0, 0, 0, 0, 1815, 1816, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 1837, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 1829, 0, 0, 0,
	0, 0, 0, 1801, 1847, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1836, 0, 1823, 1824, 1825, 1826, 1854,
	0, 0, 0, 0, 1851, 1806, 0, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 1828, 1830, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 1846, 0, 0, 0, 0, 0, 0, 1815,
	1816, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 1826, 0, 1840,
	0, 0, 1821, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 1831,
	1832, 1833, 1842, 1843, 1844, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 1835, 1829,
	0, 0, 1839, 0, 0, 1849, 1801, 1847, 0, 0,
	0, 0, 1828, 1830, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 1079, 0, 1845,
	0, 1846, 1854, 0, 0, 0, 0, 1851, 1815, 1816,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 1837, 0, 0, 0,
	1817, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 1823, 1824, 1825,
	1826, 0, 1840, 0, 0, 0, 1851, 1806, 0, 0,
	0, 0, 0, 3340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 1828, 1830, 0, 0, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 1846, 0, 0, 0, 0, 0,
	0, 1815, 1816, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1840, 0, 0, 1821, 0, 1812, 1813, 1819, 1841,
	1818, 1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805,
	1807, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3752, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1813, 1819, 1841, 1818,
	1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807,
	1808, 0, 0, 0, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 1822, 1831, 1832,
	1833, 1842, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 1829, 0,
	0, 0, 3335, 0, 1840, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 1853, 0, 0, 0, 0,
	1800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1813,
	1819, 1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803,
	1804, 1805, 1807, 1808, 0, 0, 1823, 1824, 1825, 1826,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	0, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 1829, 0, 0, 1839, 0, 0, 1849, 1801, 0,
	0, 0, 0, 0, 1828, 1830, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 1846, 1854, 0, 0, 0, 0, 0,
	1815, 1816, 0, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 1837, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 1799, 0,
	1831, 1832, 1833, 1842, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1829, 0, 0, 0, 3273, 0, 0, 1801, 1847, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 1823,
	1824, 1825, 1826, 1854, 0, 0, 0, 0, 1851, 1806,
	0, 0, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 1828, 1830, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 1846, 0, 0, 0,
	0, 0, 0, 1815, 1816, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 1823, 1824,
	1825, 1826, 0, 1840, 0, 0, 1821, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 1835, 1829, 0, 0, 1839, 0, 0, 1849,
	1801, 1847, 0, 0, 0, 0, 1828, 1830, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 1845, 0, 1846, 1854, 0, 0, 0,
	0, 1851, 1815, 1816, 0, 1800, 0, 0, 0, 0,
	0, 3300, 0, 0, 0, 1820, 0, 0, 0, 0,
	1837, 0, 0, 0, 1817, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 1812, 1813, 1819,
	1841, 1818, 1814, 0, 1811, 1809, 1810, 1802, 1803, 1804,
	1805, 1807, 1808, 0, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 1823, 1824, 1825, 1826, 0, 1840, 0, 0, 0,
	1851, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 1828,
	1830, 0, 0, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 1846, 0,
	0, 0, 0, 0, 0, 1815, 1816, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 1840, 0, 0, 1821, 0,
	1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809, 1810,
	1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	1813, 1819, 1841, 1818, 1814, 0, 1811, 1809, 1810, 1802,
	1803, 1804, 1805, 1807, 1808, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	1799, 1822, 1831, 1832, 1833, 1842, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 1829, 0, 0, 0, 0, 0, 1840, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 1853,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2318, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811,
	1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0,
	1823, 1824, 1825, 1826, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 0, 1831, 1832, 1833, 1842, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1829, 0, 0, 1839, 0,
	0, 1849, 1801, 0, 0, 0, 0, 0, 1828, 1830,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 1846, 1854, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 1837, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 0, 1831, 1832, 1833, 1842, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 1801, 1847, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 1823, 1824, 1825, 1826, 1854, 0, 0,
	0, 0, 1851, 1806, 0, 0, 1800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 1828, 1830, 0, 0, 0, 0, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1846, 0, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 1823, 1824, 1825, 1826, 0, 1840, 0, 0,
	1821, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1799, 0, 1831, 1832, 1833,
	1842, 1843, 1844, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	1839, 0, 0, 1849, 1801, 1847, 0, 0, 0, 0,
	1828, 1830, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 1846,
	1854, 0, 0, 0, 0, 1851, 1815, 1816, 0, 1800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 1837, 0, 0, 0, 1817, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 1812, 1813, 1819, 1841, 1818, 1814, 0, 1811, 1809,
	1810, 1802, 1803, 1804, 1805, 1807, 1808, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1824, 1825, 1826, 0,
	1840, 0, 0, 0, 1851, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1839, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 1828, 1830, 0, 0, 0, 0, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1816, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 1840,
	0, 0, 1821, 0, 1812, 1813, 1819, 1841, 1818, 1814,
	0, 1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1813, 1819, 1841, 1818, 1814, 0,
	1811, 1809, 1810, 1802, 1803, 1804, 1805, 1807, 1808, 0,
	0, 0, 1827, 962, 0, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 0, 968, 967, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 987,
	0, 0, 0, 0, 0, 969, 0, 0, 0, 0,
	972, 0, 0, 1853, 0, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 982, 983, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 974, 0, 0, 0, 0, 0, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 0, 0, 1838, 0, 0, 0,
	1009, 0, 0, 0, 0, 0, 1812, 1813, 1819, 1841,
	1818, 1814, 0, 1811, 1809, 1810, 1802, 1803, 1804, 1805,
	1807, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	1010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 988, 986, 0, 0, 0, 0, 0, 0,
	981, 0, 0, 0, 997, 0, 0, 1017, 1016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1019, 1008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 973,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 971, 0, 0, 0, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 1002, 0, 0,
	0, 0, 0, 0, 0, 1020, 998, 0, 0, 991,
	989, 0, 994, 0, 0, 0, 0, 0, 995, 0,
	0, 964, 0, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1006, 0, 996,
	0, 0, 0, 0, 0, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1003,
}

var sqlPact = [...]int{
	7443, -1000, -1000, -1000, -1000, 229, -1000, -1000, 226, 224,
	222, 220, 219, 218, 216, 215, 214, 213, 210, -1000,
	-1000, -1000, -1000, -1000, -1000, 209, -1000, -1000, 205, -1000,
	204, 203, 201, -1000, -1000, 199, -1000, 195, -1000, -1000,
	-1000, -1000, 194, 191, 190, 94550, 93989, 95109, 2299, 118072,
	101825, 2053, 83903, 117511, 83342, 116950, 2139, 10158, 116389, 2749,
	188, -1000, 115828, 187, 185, 181, -1000, 115267, -1000, 2004,
	-1000, 174, -1000, 9525, 70372, 167, 157, 156, 2295, 154,
	-1000, 149, 148, -1000, -1000, 147, -1000, 11106, 1502, -1000,
	146, 144, -1000, 339, 99583, 142, 141, 2235, 137, 136,
	68691, 131, 130, 2223, 2845, -1000, -1000, 2063, -1000, -1000,
	127, 125, 124, 123, 122, 121, 118, 117, 112, 111,
	109, 108, 106, -1000, 105, 103, 102, 100, 99, -1000,
	97, 96, 95, -1000, 92, -1000, 90, 89, 88, 86,
	85, 78, 77, 73, 72, 69, 67, 66, 62, 60,
	133291, -1000, -1000, 51, 1791, 1682, 1657, 1655, 1651, 1650,
	980, 49, 48, 47, 44, 42, 39, 35, 34, 33,
	32, 31, 30, 27, 26, 25, 24, 23, 21, 172,
	19, 15, 14, 13, 12, 11, 9, 4855, -1000, 1702,
	787, 32633, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	125898, 118631, 7, -111, 6, -1000, 3323, 1138, 56848, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 311, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 555, 2101, 775, -1000, -1000,
	-1000, 114708, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2298, -28, -1000, 2015, -1000, -1000, -1000, -1000, -1000, 773,
	-1000, 2296, 297, 2243, -1000, -1000, -1000, 3370, 2454, 3818,
	3817, 3815, 3814, 3813, 125339, 1785, 3811, 2516, 3777, 3776,
	3775, 3772, 3771, 3770, 3768, -1000, 93428, 1026, 92867, 92306,
	3383, 114149, 91745, 113588, 77173, 48821, 755, 3368, -1000, -1000,
	-1000, -1000, -1000, -1000, 118631, -1000, 1025, -1000, -1000, 3765,
	2025, 771, 101264, -1000, -1000, 113027, 1726, -1000, -1000, -1000,
	929, 1261, 34355, 34355, 34355, 308, -1000, -1000, -1000, -1000,
	-1000, -1000, 3764, 3761, 3760, 3759, 3756, -1000, -1000, 82781,
	25557, 82220, 81659, 112466, 24986, 91184, 90623, 3755, 3754, 3752,
	111905, 76602, 3524, 3520, 1024, 2008, 1412, -1000, -1000, -1000,
	-1000, -1000, -1000, -13, 72620, 3554, 118631, -1000, 302, -1000,
	-1000, -1000, -1000, -1000, -1000, 48247, 648, 47673, 679, 47099,
	678, -1000, -1000, -1000, -1000, 76031, -1000, 111344, 2433, 3750,
	3749, 1110, 3746, 3267, 1659, 3744, 1891, 1191, 3743, 3742,
	3741, 3739, 3738, 3737, 3736, 1352, 110783, 2948, 1476, 110222,
	1703, 75460, 1023, 90062, 95109, 2598, 109661, 1277, 1264, -1000,
	-1000, -1000, -1000, 3049, 2844, 2816, 1370, -1000, -1000, -1000,
	-1000, 60245, 6995, 6050, -1000, -1000, 10545, 109100, 63090, 95109,
	95109, -1000, -1000, -1000, -1000, -1000, 46525, 547, 45951, 736,
	-1000, -1000, 60814, 2909, -1000, -1000, -1000, -1000, 45377, 482,
	44803, 704, 118631, -1000, 2947, 1963, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2301, 1618, 3581, 2682, 74889, 2074,
	1421, 3325, 3042, 3035, 1527, 2006, 3034, 3731, 2608, 3025,
	3011, 2998, 2993, 2992, 1606, 2555, 613, 2571, 32059, 2935,
	1662, 44229, 1494, 1506, 2987, 2985, 3593, 1993, 1960, 2069,
	81098, 3726, 3724, 3290, 2979, 2977, 2750, 2973, -1000, 2908,
	1294, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1489, -1000,
	-1000, -1000, -1000, -1000, 85580, -1000, -1000, 1348, -1000, -1000,
	1348, -1000, -1000, -1000, -1000, -1000, 1241, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1702,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2772, -1000, 1994, -1000, -1000, 2477, 3264, 3264, 3264, 3367,
	540, 532, -1000, 172, -1000, -1000, 132398, -1000, -1000, 49395,
	49395, 49395, 49395, 49395, 49395, 49395, 49395, 2142, -1000, 769,
	-1000, -1000, 812, -1000, 768, 699, 646, -1000, -1000, -1000,
	-1000, -1000, -1000, 767, -1000, -1000, -1000, -1000, -1000, -1000,
	3554, -1000, 28482, -1000, -1000, -1000, 515, 763, 49395, -1000,
	-1000, 3608, 3607, 1021, -1000, 298, 958, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2946,
	761, 758, -1000, 756, 754, 753, 752, 750, -1000, 745,
	-1000, 744, 743, 741, 739, 738, 735, 734, 733, -1000,
	2026, -1000, -1000, -1000, -1000, -1000, -1000, 689, 687, 687,
	687, -1000, 1016, -1000, -1000, -1000, 333, 685, 318, 683,
	680, 676, -1000, 730, 727, 726, 723, 721, 713, 711,
	710, 708, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014,
	-1000, -1000, -1000, -1000, -14, 118631, -1000, 555, -14, -1000,
	-1000, 707, -1000, 36680, 36680, 36680, -1000, -1000, 2291, 49395,
	-1000, 2506, -1000, -7, -7, 906, 58534, -1000, 55704, 906,
	295, 825, 64211, -1000, 2903, -1000, -1000, 706, 286, -1000,
	-1000, -1000, -1000, 26126, 2899, 118631, 118631, 118631, 95109, 95109,
	95109, 3720, 3155, 49395, -1000, -1000, 69811, 118631, 95668, -1000,
	-1000, 3500, 70931, 69251, 118631, 2945, 108539, 3717, -1000, -1000,
	-1000, -1000, -1000, 3135, 3716, 3715, 3711, -1000, 118631, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 234, 3129, -1000, -1000,
	99022, 234, 3128, -1000, 234, 3127, -1000, 98463, -1000, -1000,
	2282, 3123, -1000, -1000, 242, 3117, -1000, -1000, -1000, 241,
	3116, -1000, -1000, 281, -47, 3115, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 132398, -1000,
	-1000, -1000, 107978, -1000, 3295, -1000, 118631, -1000, 49395, -1000,
	-1000, 3498, 1648, 78301, 3420, -1000, -1000, -24, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2495, 2473, 1147, 2327, -1000,
	3201, 1390, 34355, 3252, -1000, -1000, -1000, -1000, -1000, 271,
	26126, -1000, -1000, -1000, -1000, -1000, -1000, 2464, 3113, 1475,
	-1000, 2326, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2114,
	3107, -1000, 2021, 3106, 2022, -1000, -1000, 2470, -1000, 3285,
	-1000, -1000, 2105, 3103, -5, -1000, -1000, 2269, -1000, -1000,
	-1000, -1000, 1953, -1000, 1312, 3102, -1000, 2681, 2681, 89501,
	3105, 62521, 60814, 72620, -19, -1000, -1000, -1000, -1000, -139,
	-1000, 24411, 132398, -1000, -1000, -1000, -1000, 1782, 132398, 989,
	-1000, -1000, 3095, -1000, 132398, 987, -1000, -1000, 3090, -1000,
	2944, -1000, -1000, 2394, 2393, -1000, -1000, 3709, -1000, -1000,
	3708, -1000, 3707, 3706, 3704, -1000, 1572, 1998, 3703, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 88942, 2290, -1000,
	-1000, 87820, 2943, -1000, 2387, 3418, -1000, 88381, 1019, -1000,
	984, 2384, -1000, 97904, 1080, 2376, -1000, 3702, 3372, 2633,
	984, 2374, -1000, -1000, -1000, -1000, -1000, 1051, -1000, 66451,
	-1000, 66451, -1000, 1579, -1000, 124780, -7, 95109, 3554, -1000,
	-51, -1000, -1000, -1000, 1138, -1000, 59671, -1000, 59671, 100703,
	77742, 970, 815, 68129, 131969, -1000, 995, -1000, -1000, 132398,
	-1000, -1000, -1000, -185, 2679, -1000, 77742, 61952, 132398, -1000,
	-1000, -1000, -1000, 132398, -1000, -1000, -1000, 77742, 87820, -1000,
	107417, 87261, -1000, -1000, 1291, 2548, -1000, -1000, -1000, 77742,
	1315, 77742, 77742, 77742, -1000, 106856, -1000, -1000, 2104, 1247,
	3287, 2055, 95109, -1000, 1854, -1000, -1000, -1000, 3313, 3101,
	118631, -1000, -1000, 2936, -1000, 72060, 97345, -1000, 96786, -1000,
	96227, -1000, 95109, -1000, 95109, -1000, 3700, 3699, 3696, -1000,
	-1000, 3685, -1000, 3684, 3303, -1000, 623, 43655, 132398, 3302,
	-1000, 3683, 1949, 2935, 132398, -1000, 2986, 1677, 1642, 118631,
	-1000, -1000, 118631, -1000, 118631, -1000, -1000, -1000, 1497, -1000,
	-1000, 2494, -1000, -1000, -1000, -1000, 95109, 95109, 95109, 95109,
	1505, -1000, 43081, -1000, -1000, 2965, 3682, 1563, -1000, 1833,
	-1000, 2898, 3340, -1000, 1287, 1763, -1000, -1000, 243, -1000,
	-1000, -24, -1000, 124221, -1000, 2477, -1000, 118631, -1000, 2459,
	2926, 2932, 1635, 2306, 2593, -1000, 42507, 2551, 52839, 2324,
	172, -1000, -1000, 172, 172, 33781, -1000, -1000, 70931, 70931,
	26126, 1248, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395,
	49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395,
	49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395,
	49395, 49395, 49395, 49395, 49395, 49395, 49395, 49395, 2037, 49395,
	1238, 49395, 49395, 49395, 49395, 1585, -1000, -1000, 1902, 593,
	2049, 699, -1000, -1000, -1000, 3557, 3557, 3557, 423, 423,
	423, 132690, 132690, 696, 3681, 812, -1000, 49395, -1000, 110,
	59093, 49395, 26697, -1000, 532, 9838, 2476, -1000, 529, 27300,
	-1000, -1000, -1000, 28482, 646, 41904, 49395, 1004, 132398, -1000,
	-1000, 1387, 3564, 23836, 2960, 2741, 698, 886, 882, 31456,
	30853, 30250, 29647, 874, 716, 49395, 49395, 49395, 49395, 49395,
	49395, 49395, 49395, -1000, -1000, 3577, -1000, 3564, -1000, -1000,
	-1000, -1000, 3564, 1219, 1195, 3564, -1000, 3564, 3564, 8290,
	8290, 41330, 40756, 40182, 53413, 39608, 49395, 29073, 39034, 38460,
	-1000, 118631, -14, 3497, 49395, 223, -1000, 130590, -1000, 223,
	223, 697, -57, 132398, 2537, 2537, 57410, 2200, 2165, 2165,
	2165, -1000, 906, 19207, 906, 105179, 2194, 906, 906, 269,
	307, 528, 55135, 2506, 105179, 796, 695, 5, 3, 2,
	-1000, -1000, 1, -1, -1000, -1000, 95109, 693, 26697, 26126,
	267, 1966, -60, 2585, 2579, -1000, 2567, 2564, -1000, 2562,
	-1000, 1793, -62, 1233, 95109, 118631, 1269, 3680, -54, -1000,
	314, -63, -1000, 1351, 265, 3564, -1000, -1000, -1000, -1000,
	-1000, 3679, 3678, -1000, 1013, 691, 690, 602, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 689, 687, 687, 687,
	-1000, 333, 685, 318, 683, 680, 676, -1000, -1000, -1000,
	-1000, -1000, 2894, 95109, 118631, 1262, 3677, -139, 95668, -79,
	-1000, -1000, 118631, -1000, -1000, -1000, 3676, -1000, 95109, -1000,
	-1000, 95109, 234, 3087, -1000, 95109, -1000, 95109, 230, 3085,
	-1000, -1000, 118631, -1000, 95109, 95109, -1000, 118631, 118631, 118631,
	77742, 77742, 228, -1000, 95109, 905, -65, 1119, -24, -1000,
	-1000, -1000, -1000, -1000, 1348, -1000, 1689, -1000, -1000, -1000,
	-1000, -1000, -1000, 1376, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1021, -1000, -1000, -1000, -1000, -1000, -1000, 3572,
	3568, -15, -1000, -1000, 26126, -1000, -27, 1622, 1868, 1232,
	-1000, 80537, 2331, 3288, 3675, 2619, 3277, 1568, -1000, 1491,
	-1000, 3373, 85580, 3439, 3460, 1309, -1000, 2883, -1000, -1000,
	927, 1542, 1769, 1231, 1228, 85580, 2021, -1000, 70931, -1000,
	2617, 3366, 1407, 1410, 1407, 1407, 1405, -1000, 85580, 1764,
	1227, 1226, 1224, -1000, -1000, 1943, 1940, -1000, -1000, 106297,
	-1000, 1223, 1217, 3519, 2772, 2172, 841, 1939, -1000, -33,
	3437, 3457, 1308, -1000, 2877, 1216, -1000, -1000, -1000, 3361,
	95109, 26126, 1554, 1553, 1545, 1761, 1213, -18, -1000, 3431,
	1212, 1210, -1000, 1043, 5002, 3225, -1000, 77742, 1043, 1043,
	1880, 3084, 2659, 1681, -1000, 2678, 896, 2675, -1000, -1000,
	-1000, 896, -19, 72620, 118631, 263, -1000, 110, 49395, 49395,
	110, 49395, 110, 3391, 3083, 3080, -1000, -1000, -1000, -1000,
	-1000, 3672, 1970, 2512, -1000, -1000, 674, 2372, 2876, 118631,
	2597, -20, 95109, -1000, 71500, 3078, 73180, 2021, 2371, -1000,
	-1000, 86700, -1000, 3076, 555, 2369, -1000, 732, 3671, 3074,
	-1000, 123662, -1000, 3295, 1258, 3071, 1059, 572, 3496, -1000,
	572, 67011, -1000, 118631, -1000, -7, 617, 79419, -68, -73,
	524, -1000, 105738, 118631, 1058, 79978, 118631, 3240, 1974, 1965,
	981, 60814, -1000, 60814, -80, -185, 2671, 1462, 970, 970,
	896, -1000, 896, -1000, 95109, 2931, -1000, -1000, 77742, 970,
	970, 970, -1000, -1000, -1000, -1000, 3670, 3665, 3664, 3663,
	-1000, -1000, 982, 95109, 118631, 95109, -1000, -1000, 1591, -1000,
	258, -1000, 118631, -1000, 118631, 118631, 95109, -1000, 982, 118631,
	982, 118631, 982, 118631, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 110, -1000, -1000, 132398, -1000, 49395, -1000, -1000, 1482,
	3662, 1637, -1000, 2929, -1000, 2927, -1000, 37, -1000, -1000,
	1862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3661, 132398,
	-1000, 1929, -1000, -1000, -1000, -1000, 95109, 95109, 95109, 95109,
	118631, 3224, -1000, 118631, 3221, 95109, -1000, -1000, 85580, -1000,
	2459, 2926, -1000, -1000, -1000, -1000, -1000, -1000, 1660, 2252,
	-1000, 2541, -1000, 1512, -1000, -1000, -1000, 132398, 53987, -1000,
	-1000, 132398, 1806, -1000, 52265, 51691, -1000, -1000, 1742, 95109,
	2600, -1000, 2600, -114, -1000, 130161, 2539, 95109, -1000, -1000,
	-1000, -1000, -1000, 926, 1255, 1255, 1292, 1292, 1292, 1292,
	3395, 6634, 7541, 8737, 514, 514, 5990, 5990, 5990, 5990,
	5990, 514, 8651, 423, 423, 8651, 8651, 8651, 8651, 8651,
	423, 423, 423, 514, 514, 514, 423, 132690, 132581, 8690,
	49395, 49395, 1206, 1889, 593, 7633, 49395, 8762, 8762, 8762,
	8762, -1000, 1617, -1000, -1000, -1000, -1000, 2873, 670, 53413,
	53413, -1000, -1000, -1000, -1000, 27891, 49395, -1000, -1000, -1000,
	-1000, 37857, -1000, -1000, 129281, -320, 518, -1000, 256, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 516, -106, 38, -1000, 49395, 49395, 49395, 511,
	-1000, 255, 49395, 118631, -1000, 16962, 795, -153, -1000, -83,
	1428, -1000, 49395, -1000, -1000, 1203, -1000, 1201, 1197, 1192,
	-1000, 669, 486, -1000, 253, -1000, 2149, 667, 663, 49395,
	-1000, -1000, -1000, -1000, -1000, 129218, -1000, -1000, 129098, -1000,
	-1000, 128628, -1000, -1000, 128508, -1000, -1000, -1000, -1000, -1000,
	131786, 16485, 15852, 14810, 8569, 14022, 13574, -86, 485, -88,
	483, 920, 916, 480, 474, 473, -89, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -96,
	470, -1000, 2871, -106, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 467, -1000, 466, -1000, 131677, -106, 455, 6720,
	-1000, 53413, 53413, 53413, 53413, -1000, 450, -1000, 129978, -1000,
	131494, 37283, 37283, 37283, 448, 131065, 49395, -106, -97, -1000,
	-99, -1000, -1000, 564, -115, 1000, 36680, 56286, 26126, -1000,
	1000, 1000, 49395, -1000, 49395, 2553, -1000, -1000, -1000, -1000,
	2552, 2003, 2537, 57410, -1000, -1000, -1000, -1000, 105179, -1000,
	3554, 2939, -1000, 105179, -1000, -1000, 118631, 555, -1000, 105179,
	105179, 26126, 906, -1000, 906, 105179, 634, -1000, -1000, -1000,
	-1000, -1000, 446, 64773, 38, 250, 26126, 984, -1000, -1000,
	2670, 2670, 2670, 2670, 2670, -1000, -1000, 118631, 1187, -21,
	-107, 2666, -1000, 3529, -1000, 2043, -1000, 70931, -1000, 811,
	1260, 26126, -1000, -1000, -1000, 661, -1000, 3564, 3564, -1000,
	3564, 118631, 2870, 184, 2660, -1000, 159, 73180, 3656, -1000,
	-1000, 234, -1000, 95109, 234, 234, -1000, 95109, 95109, 2282,
	-1000, 242, -1000, 241, -1000, -1000, -47, -1000, 994, 34355,
	-1000, 1348, -1000, -1000, 1538, -1000, 1978, -1000, 1166, -1000,
	-1000, -1000, -1000, 34355, -1000, 2652, 118631, 118631, 95109, -1000,
	118631, -1000, 2160, 73180, -1000, 2365, 123103, 2358, 70931, 118631,
	-1000, -1000, 660, 937, 2538, 2535, 1053, 118631, 118631, 2531,
	122544, 121985, -1000, 3655, 118631, 2041, 49395, 3352, 2146, 2216,
	110, 110, -1000, 110, 110, 110, -1000, 659, 1345, 95109,
	95109, 118631, 73180, 95109, 1795, -1000, -1000, -1000, -1000, -1000,
	86139, -1000, -1000, 3576, 3574, -1000, 1407, -1000, -1000, -1000,
	1407, 2021, 1766, 118631, 73180, 95109, 73180, 121426, 120867, -1000,
	-1000, 1758, 118631, -1000, -1000, -1000, -1000, 1449, -1000, 841,
	2072, 110, 110, -1000, 110, 110, 110, 658, 26126, 1968,
	-1000, 2902, 118631, 3604, 120308, 3603, 118631, 118631, 118631, 73180,
	3270, 118631, 118631, 73180, -1000, 119749, 5002, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2065, 74318, 1064, 118631, 1312, -1000, -1000, 1721, 1186, 1182,
	85580, 2086, 1710, 1848, 118631, 60814, 977, 60814, 2623, -1000,
	-1000, 23261, -1000, 132398, 132398, -1000, 132398, -1000, 71500, 77742,
	118631, -1000, 1018, 118631, 79978, 946, 3070, 65891, -139, 970,
	77742, 95109, -20, 2597, 118631, -1000, -1000, -1000, -1000, -1000,
	2021, 3069, 555, 2364, -1000, 77742, 3493, 3046, 655, 3654,
	3653, -1000, 95109, 2283, 2362, -1000, -1000, 119190, 3146, 841,
	118631, 1000, 57410, 1938, -1000, 63652, 1033, 118631, 1857, 114,
	-1000, -1000, -1000, 17, 118631, -1000, 819, -1000, -1000, 617,
	617, 970, -186, 653, -1000, 876, 873, 61383, 77742, -117,
	-1000, -1000, -1000, -1000, 2358, 95109, 118631, 1301, 2630, 118631,
	-120, -1000, 249, 649, 870, 869, -1000, 2183, -1000, -185,
	-1000, 981, 60814, 2869, 2867, -1000, -1000, 993, -1000, 1274,
	970, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -8, 1836, 118631, -139, -139, -38, -21, -1000,
	982, -1000, 982, -1000, 982, -1000, 132398, -1000, -1000, -1000,
	1608, 1586, 118631, -1000, -1000, 118631, -1000, 26126, 118631, 95109,
	26126, 95109, 2925, 2924, -1000, -1000, -1000, 118631, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1083, -1000, 1806, 2250, -1000,
	646, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2472, -1000, -23, 33781, 899, -1000, -1000, 95109, -9, 49395,
	49395, 6738, 5862, 49395, 53413, 53413, -1000, 49395, 5190, -1000,
	-1000, -1000, -1000, -1000, 2865, 644, 49395, 70931, 7607, 6684,
	-1000, 444, 13099, 8651, -1000, 49395, -1000, 5548, -1000, 441,
	36106, -1000, 130773, -16, -132, -1000, 19795, -106, -134, -1000,
	-1000, 808, -1000, 2999, -1000, 49395, 130882, 2432, 1898, 1847,
	1661, 3564, 3602, 22686, -1000, 67570, 1002, 2211, 128445, -1000,
	-1000, -1000, -1000, 70931, 70931, 49395, 49395, -1000, 49395, 49395,
	49395, -1000, -1000, -1000, 3564, 907, -1000, -1000, -1000, 907,
	-1000, -1000, 1407, -1000, 1407, -1000, 49395, -1000, -1000, 2860,
	49395, -1000, 70931, 70931, 53413, 53413, 53413, 53413, 53413, 53413,
	53413, 53413, 53413, 53413, 53413, 53413, 53413, 53413, 53413, 53413,
	53413, 53413, 53413, 53413, 2513, 53413, 3549, 3549, 3549, 1020,
	-1000, 2814, 2860, 49395, 49395, 70931, 438, 437, 434, -1000,
	49395, -106, -1000, -1000, 7357, 641, -1000, 2462, -1000, 2740,
	-1000, 49395, -1000, -177, -1000, 2506, -1000, -1000, 2740, 2740,
	-140, 132398, 57410, 57410, -1000, 639, 49395, 2526, -1000, -1000,
	792, -318, -1000, 868, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 555, -1000, -1000, -1000, 248, 105179, 105179, 789, -1000,
	-141, -1000, -1000, -142, -1000, 3492, 433, 26126, -1000, 1000,
	2658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -139, 118631,
	118631, 1706, 2239, 3601, -1000, 3566, 807, 786, 247, 3564,
	432, 427, 426, -139, 118631, 118631, 1704, 118631, -1000, -1000,
	-1000, 234, -1000, -1000, -1000, 230, -1000, -1000, -1000, -1000,
	2614, -1000, -24, -1000, -1000, -1000, 49395, -1000, -1000, 3284,
	1180, 1179, -1000, -1000, -1000, 2810, -1000, 3038, -1000, 2355,
	-1000, 1027, -1000, 1577, -1000, 49395, 636, 2627, 631, 630,
	3649, 2064, 3645, 1055, 3037, 2282, 3032, 2282, -1000, -1000,
	-1000, 932, -1000, 132398, 2146, -1000, 627, 625, -1000, -27,
	1614, 1856, 1178, 991, -1000, -1000, -1000, -1000, 49395, 49395,
	104620, -1000, 492, 3285, -11, -1000, -1000, -1000, 1699, 1176,
	1172, -1000, -1000, -1000, -1000, 2021, 1675, 1168, 1167, -1000,
	-1000, -1000, -1000, -1000, 2354, -1000, -1000, 3030, 990, -1000,
	2984, 2982, 912, 118631, -1000, 988, -1000, -1000, -1000, -1000,
	49395, -1000, -33, 1158, 3429, 2350, 95109, -1000, 2282, 3022,
	1157, -1000, 1150, -1000, -1000, -1000, 3430, 3427, 1162, -1000,
	-1000, -1000, 77742, -1000, -1000, 73749, -1000, -1000, 1043, 118631,
	73180, 95109, 1631, -1000, -1000, 84462, 85021, 118631, 2659, -139,
	896, -1000, 2288, 896, 977, 2858, -1000, 2590, -1000, 986,
	95109, 3644, 421, -147, -34, 70931, 3489, -1000, 2271, 626,
	95109, 898, -1000, 3554, -1000, -1000, -1000, 985, -1000, 3402,
	95109, 3487, 3017, 984, 110, 95109, 3582, -1000, -1000, 3484,
	95109, 3014, 2279, 2348, 2502, 841, 78860, 984, 2202, -45,
	-1000, 1857, 35503, 3282, -148, -1000, -1000, -1000, 1000, 67011,
	57410, 49395, 3643, -156, -1000, -1000, -1000, -1000, -1000, 102384,
	102384, 77742, 77742, 77742, 970, 118631, 118631, 79978, -1000, -1000,
	624, 118631, 118631, 622, -1000, 118631, 118631, 3641, 77742, 77742,
	77742, -35, 620, -1000, 867, 866, 863, -1000, -1000, -1000,
	-1000, -1000, -1000, 861, 981, -1000, -185, 60814, 110, -1000,
	2228, 95109, -1000, 22111, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 982, -139, -1000, -1000, 2100, 2312, 2100, 1830, 1824,
	-1000, -1000, 2249, -1000, -1000, -1000, -1000, 2595, 3257, 26126,
	3408, 8762, 49395, 49395, 403, 5114, 4994, 8762, 49395, 49395,
	70931, 132873, -157, 49395, 49395, -1000, 49395, 785, 132398, -1000,
	3600, 49395, 412, 410, -1000, -1000, -1000, 3556, -1000, -1000,
	-1000, 132398, 49395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	402, -1000, 240, -1000, -1000, -1000, 126457, -1000, 49395, 401,
	3351, -1000, 385, 383, 10858, 6581, 127855, 127792, 127672, 381,
	-1000, -1000, 370, 356, 132398, 2814, 132398, -1000, -1000, 1070,
	1070, 1394, 1394, 1394, 1394, 3549, 369, 414, 384, 334,
	334, 334, 469, 1020, 1020, 334, 334, 334, 1020, 2854,
	2521, 619, 7730, -1000, -1000, 132398, 132398, 355, -1000, -1000,
	-1000, -106, 354, 7357, -1000, 2726, 3350, 132398, -1000, 57410,
	2726, 2726, -1000, -1000, 2003, 118631, 132398, 57410, -1000, 2939,
	-1000, 20381, -1000, 26126, -1000, -1000, -1000, -1000, 3554, -1000,
	64773, -1000, 618, -1000, 18, -1000, 2658, -1000, 858, -1000,
	-1000, 77742, 77742, -139, -210, 118631, -1000, -1000, 781, 3638,
	803, 26126, 351, -1000, -1000, -1000, -139, -139, 118631, -139,
	-1000, -1000, -1000, 3239, 132398, 118631, 118631, 1508, 104061, 118631,
	3009, -1000, 2303, -1000, 1053, 127202, 57972, -1000, 57972, 118631,
	-1000, -1000, -1000, -1000, 1923, 1436, 3637, 1099, -1000, 3317,
	118631, -1000, 118631, -1000, -1000, -1000, 118631, 118631, 95109, 118631,
	-1000, 73180, 2995, -158, 132398, -36, -1000, 857, -1000, 1417,
	-1000, 21536, 118631, 73180, 95109, 118631, 73180, 95109, 3008, 118631,
	2133, -1000, -1000, 2975, -1000, 2994, -164, 26126, -1000, 3599,
	3598, 3007, 3321, -1000, 118631, 3596, 118631, 95109, 3238, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1670, 1145, 1144, 2276,
	-37, 2274, 2234, -38, 2086, 977, -39, 616, -1000, 856,
	-1000, -1000, 854, -1000, 977, -1000, 77742, 60814, 3636, 555,
	-1000, 2618, -1000, 100142, 2247, 110, -1000, 3635, 102943, 614,
	-1000, 2226, -1000, 780, -1000, 2458, 73180, 2021, 110, 95109,
	-1000, -1000, 555, 350, -40, -1000, 3048, 1045, 26126, 95109,
	3004, 2505, 841, 78860, -1000, 1258, 2593, -1000, -44, -1000,
	575, 110, 2202, -1000, -45, 132398, -1000, 853, -1000, -165,
	-1000, -1000, 346, -1000, 3237, 3231, -1000, 2737, 57972, 611,
	610, 118631, 3230, -1000, -1000, -171, -1000, -1000, 2594, 2594,
	77742, 60814, 77742, 77742, -1000, 981, 896, -1000, 2370, -1000,
	-1000, -1000, -1000, -1000, 26126, 1537, -1000, 609, 607, -1000,
	-1000, -1000, -1000, 3257, 8762, 8762, 49395, 49395, 49395, 8762,
	132873, -174, -1000, 8762, 8762, -106, -1000, -1000, 130773, -1000,
	-1000, -1000, 132398, -1000, 20961, 2102, -1000, 127082, -1000, 33781,
	-1000, -1000, 49395, 49395, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 53413, 2846, 606, 70931, -1000, -1000, 345, 997,
	49395, 51117, 2506, 997, 997, -1000, -176, -1000, -1000, -1000,
	3554, 18, -1000, -1000, 3634, 26126, -1000, 77742, -1000, -1000,
	3633, -155, 801, -1000, 3632, -1000, -1000, 113, -1000, -1000,
	-1000, 2655, 3481, -1000, 1932, -1000, 118631, -1000, 118631, -1000,
	26126, 118631, 2723, 1230, -1000, 937, 2524, 603, 53413, 1071,
	95109, 943, 2702, 2697, -1000, 3509, 3348, 2725, -179, -1000,
	118631, 49395, 118631, -190, -197, 2335, -1000, -1000, 1069, 1215,
	49395, 1068, -1000, -1000, -1000, 70931, 601, 2282, 2282, -198,
	-203, -1000, -1000, -1000, 49395, 1143, 118631, 34929, -1000, 3629,
	3285, -1000, -1000, -1000, -1000, -1000, -1000, 118631, -1000, 118631,
	-1000, 49395, 1142, -1000, -1000, -1000, 3594, 2282, 26126, 2282,
	-1000, 2282, 3321, 1095, 118631, 73180, 95109, 1759, 1759, 2788,
	-1000, -1000, -1000, 2445, 2445, 77742, 60814, -1000, -47, 977,
	-1000, 3480, 2613, 3626, -1000, -1000, -1000, -1000, 2522, -1000,
	-1000, 118631, 2517, 973, -1000, -205, -1000, 851, 849, 79978,
	946, 951, -1000, -48, 599, -1000, 845, -1000, -1000, -1000,
	-1000, 555, 3472, -1000, 3586, 597, 595, 118631, 2270, 594,
	26126, 3280, 841, 78860, -1000, 3146, 1857, -1000, 2344, 118631,
	3276, -1000, 2593, 593, -1000, 970, 588, 585, 2525, 2525,
	-213, 57972, 57972, -214, 584, 970, -1000, -219, -1000, -1000,
	-1000, -1000, -1000, -1000, -49, -1000, 924, 914, -1000, -1000,
	95109, 95109, 49395, 49395, -1000, 8762, 8762, 8762, -1000, 341,
	-1000, -1000, 2202, 3344, -1000, -50, 127019, 18437, 7919, 53413,
	70931, -220, -1000, -1000, 118631, 132398, -78, -1000, 132398, 583,
	582, 472, -1000, -1000, -1000, 778, -1000, -1000, -1000, 118631,
	3624, -1000, 118631, 103502, 118631, -1000, -1000, 1640, -1000, -1000,
	-1000, 118631, 2346, -1000, -1000, -1000, 1050, 49395, 7730, 53413,
	576, 49395, -1000, 570, 569, 3469, 3206, -1000, 2611, 2800,
	1904, 57972, -1000, 3257, -1000, 17832, -1000, 1039, 1948, -1000,
	-1000, -1000, -1000, 132398, 53413, 3321, 57972, -1000, -1000, 568,
	566, 132398, 565, 843, 2843, -1000, -1000, -1000, -1000, -1000,
	132398, 562, 3429, -1000, -1000, -1000, -1000, 2282, 95109, -1000,
	-1000, -1000, 1141, -1000, -1000, -1000, -1000, 3623, 3622, 2836,
	84462, -1000, -221, -1000, -1000, 1961, 110, 2081, 2648, -1000,
	2247, 560, -1000, -1000, 2248, 2583, -1000, 102943, 34355, 34355,
	340, 3464, 951, -1000, 3547, -1000, 3223, 3223, 49395, 3459,
	110, -1000, 3582, 57972, -1000, 95109, 57972, 2263, 2005, 2487,
	78860, -1000, 2502, -1000, -1000, -228, 118631, 1857, -1000, -1000,
	77742, 77742, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1039, -229, -230, -1000, 77742, -1000, -1000,
	2370, -1000, 118631, -1000, 118631, -1000, -1000, -238, -240, -1000,
	2024, 49395, 33781, -1000, -1000, 7919, -241, -1000, -85, -1000,
	3458, 51117, 3621, 3619, 3615, -1000, -139, -1000, -139, -1000,
	1927, -1000, -1000, -1000, 3000, 2727, 17567, 7730, 2460, 118631,
	11950, 2021, 2021, -1000, 3443, 2784, -1000, -1000, 2613, 558,
	-1000, -1000, -1000, -1000, 899, 118631, 2613, 2718, 95109, 7730,
	1047, -246, 2100, 2100, 49395, 33207, 2131, 49395, -1000, -1000,
	3321, 118631, -1000, -1000, 118631, 2261, -1000, 2771, 3565, -1000,
	946, -1000, 2117, 118631, -1000, 3307, -1000, 3229, -1000, -1000,
	-1000, 2618, 110, -1000, -1000, -1000, -248, 132398, 110, -1000,
	337, -253, 1045, -254, 95109, 1916, -1000, 841, -1000, 2505,
	1000, -1000, -1000, -255, -263, 1904, 1039, 2072, -268, -1000,
	-270, -271, -1000, -1000, 331, 50543, 50543, 50543, -106, -114,
	-1000, 118631, 556, -1000, -1000, -1000, -1000, -1000, 2971, 976,
	-1000, 880, 1910, 315, 1077, 225, 40, -1000, -1000, -1000,
	2072, 118631, -1000, -1000, -1000, 975, 555, -1000, 49395, 1039,
	-273, -1000, 1032, -276, -1000, 1031, -278, -1000, 2829, -1000,
	-279, 2282, -249, 228, 1759, 974, 3389, -1000, -1000, -1000,
	2248, 95109, -281, -1000, -1000, 2430, -1000, 2613, 973, -1000,
	-1000, -1000, 1039, 554, 1904, 553, 1430, 841, -1000, -1000,
	1407, 3280, 3120, 970, 970, 2613, 1904, 964, -1000, 970,
	-1000, -1000, -1000, 3013, -1000, 54561, 2278, 1822, 129869, 3013,
	3013, -1000, -1000, 118631, 3376, -1000, 884, 883, 1495, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2725, -284, 3345,
	2460, 132398, 2613, -1000, 2100, 2646, -1000, 2100, 2809, -1000,
	2111, -1000, -1000, -1000, 2747, -1000, 2780, -1000, 1772, 3535,
	2478, 551, -1000, 118631, 1781, 1711, 3614, 2081, 2248, 1904,
	57972, 2613, 57972, 2047, -1000, 118631, -1000, 2005, 1380, -1000,
	-1000, 2072, 2613, 1000, 550, -1000, -1000, 1834, 3462, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 838, -1000, 3162,
	-1000, 1067, 2099, 2099, 1000, -1000, 836, 880, -1000, -1000,
	548, -1000, 546, -1000, 2233, 118631, 2214, -1000, -1000, -1000,
	-1000, 118631, -1000, -1000, 3612, -1000, 946, -1000, 2613, -287,
	2072, -289, -1000, -1000, -1000, -139, 1916, -1000, 1565, 964,
	2072, -1000, 1792, -1000, -1000, 2182, 49969, 49395, -1000, 3532,
	-1000, -1000, 2547, -1000, -1000, 49395, 2725, 49395, 49395, -1000,
	228, 65332, -292, -1000, 2248, 2072, 1039, 964, 1904, 1430,
	67011, 1000, 964, -1000, -1000, -1000, 132398, -1000, -1000, -1000,
	132398, -1000, -294, -295, -1000, -186, 102384, 2280, 2478, 964,
	1904, 1000, 2613, 2047, -265, -1000, 1000, 2072, 1136, -307,
	-1000, -1000, -1000, -1000, 1000, 2613, -1000, 2072, -1000, -1000,
	-1000, -1000, -1000, 543, -1000, -1000, 2072, 964, 49395, 964,
	1000, -310, 1000, -1000, 2072, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4433, 4430, 4428, 4426, 4424, 4423, 4421, 4420, 4416,
	4415, 4414, 4410, 134, 4409, 4408, 4407, 4406, 4405, 4404,
	4403, 4399, 4397, 4396, 4395, 4392, 4387, 4386, 4385, 4384,
	4377, 4376, 4374, 4372, 4371, 4369, 4367, 4366, 4365, 4355,
	4353, 4347, 4342, 4341, 4340, 4337, 4336, 4331, 4329, 4327,
	4324, 4321, 4320, 4317, 4313, 4312, 4310, 4308, 4307, 4303,
	4302, 4300, 4297, 4296, 4295, 4293, 4291, 55, 4290, 4287,
	4286, 4284, 4282, 4281, 4280, 4279, 4278, 4277, 4276, 4275,
	4274, 4273, 4272, 4271, 4268, 4263, 4259, 4255, 70, 4253,
	283, 4252, 4251, 4250, 4249, 4248, 4247, 4245, 4244, 4243,
	4241, 4240, 4238, 280, 4236, 123, 161, 4230, 4227, 3822,
	4225, 4224, 277, 4222, 4221, 4216, 4214, 286, 4213, 4209,
	4204, 4203, 4200, 4199, 4198, 4197, 4196, 4195, 4190, 118,
	208, 4189, 4187, 537, 4186, 4185, 4183, 4182, 4178, 4175,
	4172, 4170, 4168, 4167, 4162, 252, 175, 4161, 270, 4159,
	4158, 4157, 4156, 4155, 4154, 4151, 4150, 4149, 4147, 4145,
	4144, 4143, 4142, 4140, 4139, 4137, 4135, 4134, 4133, 4129,
	4128, 4127, 4124, 4122, 4120, 4119, 4118, 4116, 4115, 4112,
	4103, 4102, 4101, 4098, 4097, 4095, 4094, 4092, 246, 215,
	191, 4086, 4085, 269, 267, 4081, 4078, 4074, 4073, 4072,
	126, 11, 52, 4071, 4070, 91, 92, 83, 122, 105,
	93, 4069, 109, 4068, 148, 62, 4059, 18, 2, 262,
	243, 5261, 238, 4058, 4057, 4056, 244, 196, 4055, 241,
	4053, 4052, 4051, 4050, 4048, 4047, 82, 53, 179, 181,
	173, 178, 110, 4046, 158, 104, 87, 59, 45, 17,
	86, 216, 21, 1, 261, 4045, 260, 12, 140, 7,
	35, 4044, 4042, 4041, 4040, 3458, 149, 4039, 265, 248,
	169, 4035, 4034, 4033, 813, 4032, 4029, 51, 4027, 202,
	88, 141, 8, 142, 4025, 143, 171, 37, 4023, 176,
	66, 4022, 160, 98, 95, 10728, 9799, 4021, 4020, 116,
	72, 164, 4305, 220, 203, 197, 205, 163, 167, 115,
	214, 213, 174, 180, 4017, 253, 4016, 3440, 71, 187,
	146, 5901, 4015, 4014, 4013, 77, 206, 111, 4009, 4008,
	68, 19, 15, 4, 6, 137, 23, 22, 10, 4005,
	30, 121, 44, 25, 4004, 28, 4003, 4001, 4000, 3999,
	3998, 47, 170, 3997, 3996, 284, 3995, 103, 50, 60,
	3993, 39, 221, 3992, 231, 127, 3991, 3989, 257, 210,
	189, 3986, 74, 236, 3984, 3983, 3982, 3980, 3978, 131,
	3, 125, 3977, 3976, 156, 3974, 54, 242, 198, 3973,
	63, 3972, 3971, 182, 58, 145, 271, 147, 224, 117,
	232, 188, 234, 3970, 3969, 3962, 200, 3961, 3960, 225,
	157, 3958, 3955, 249, 288, 94, 48, 81, 240, 78,
	194, 155, 3951, 204, 3949, 3946, 285, 183, 218, 24,
	16, 100, 152, 3944, 5, 237, 154, 222, 114, 3943,
	7587, 2665, 2541, 3941, 3936, 153, 119, 76, 136, 139,
	264, 102, 3935, 3933, 476, 3931, 3929, 3928, 3927, 190,
	3926, 3925, 3924, 150, 144, 228, 3923, 84, 79, 49,
	29, 112, 250, 272, 113, 227, 168, 259, 3921, 3920,
	3918, 184, 3917, 97, 166, 159, 201, 256, 57, 3916,
	120, 3915, 151, 1915, 65, 162, 3914, 229, 3913, 3912,
	3911, 3910, 3909, 3908, 3906, 275, 235, 3904, 3903, 3902,
	34, 193, 3901, 263, 172, 195, 96, 80, 3900, 99,
	4038, 3898, 254, 247, 69, 268, 509, 3896, 1432, 56,
	3893, 0, 14713, 8930, 12704, 14327, 3891, 2227, 3890, 3889,
	3888, 212, 138, 3887, 3885, 3884, 106, 3883, 89, 3882,
	3881, 67, 3880, 26, 14, 20, 32, 27, 648, 266,
	3879, 3878, 41, 132, 129, 3877, 281, 233, 3876, 3874,
	3873, 3870, 85, 3869, 40, 3868, 38, 3867, 3866, 46,
	13, 31, 3865, 3864, 209, 3861, 219, 255, 3860, 165,
	3859, 73, 135, 3858, 3857, 3856, 64, 61, 258, 90,
	3855, 282, 3854, 199, 3852, 3848, 3848, 36, 3847, 3846,
	245, 108, 107, 3845, 251, 133, 43, 211, 185, 217,
	3843, 3841, 177, 3840, 3839, 3837, 279, 3836, 3835, 33,
	3834, 3832, 3831, 9, 3828, 3827, 207, 3195, 3826, 3825,
	42, 3824, 186,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	598, 598, 617, 617, 23, 23, 45, 45, 24, 46,
	17, 599, 599, 599, 599, 36, 25, 47, 29, 29,
	29, 29, 29, 203, 203, 203, 203, 22, 22, 41,
	41, 239, 239, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	594, 594, 241, 241, 240, 233, 233, 234, 234, 235,
	235, 600, 600, 242, 242, 242, 244, 244, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 494, 494,
	494, 526, 526, 526, 525, 525, 621, 621, 622, 622,
	622, 622, 622, 132, 132, 392, 392, 392, 56, 56,
	56, 56, 56, 589, 589, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 79, 79, 606, 606, 607,
	607, 605, 604, 604, 604, 608, 608, 608, 204, 204,
	204, 128, 128, 128, 128, 128, 128, 129, 129, 130,
	130, 208, 208, 208, 210, 210, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 214, 16, 16, 16,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 108,
	108, 528, 528, 529, 529, 199, 199, 200, 200, 200,
	200, 201, 201, 202, 202, 202, 70, 70, 211, 211,
	213, 213, 212, 212, 212, 212, 212, 58, 58, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 68, 68, 68, 68, 68, 68, 190, 190, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 76, 76, 76, 76, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 624, 624, 625, 625, 626,
	626, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 627,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 85, 85, 353,
	353, 316, 316, 86, 86, 86, 87, 87, 88, 88,
	72, 72, 587, 587, 369, 369, 485, 485, 73, 595,
	595, 595, 597, 597, 596, 596, 90, 90, 391, 391,
	91, 91, 91, 91, 91, 91, 92, 92, 92, 92,
	92, 92, 92, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 100, 100, 100,
	100, 100, 101, 101, 101, 98, 98, 98, 95, 95,
	95, 94, 94, 94, 99, 99, 99, 586, 305, 305,
	97, 97, 97, 96, 96, 96, 370, 370, 102, 102,
	102, 102, 317, 103, 103, 103, 103, 103, 103, 103,
	103, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 487, 487, 104, 104,
	104, 452, 452, 109, 109, 109, 407, 407, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 131, 131, 131, 131, 131, 131, 131, 131,
	591, 591, 362, 362, 268, 268, 268, 268, 121, 121,
	121, 121, 122, 122, 122, 123, 123, 195, 195, 138,
	138, 138, 138, 137, 137, 137, 137, 137, 137, 137,
	137, 62, 62, 62, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 67, 67, 67, 141, 141, 618,
	618, 143, 140, 140, 140, 140, 140, 139, 139, 142,
	142, 142, 142, 144, 146, 146, 146, 146, 146, 145,
	145, 145, 145, 147, 147, 519, 519, 378, 378, 517,
	517, 538, 538, 518, 518, 323, 323, 323, 323, 323,
	324, 324, 324, 527, 527, 527, 527, 527, 527, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 196, 196, 197, 198, 198, 198, 198, 198,
	173, 173, 173, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 176, 176, 176, 160, 160, 149, 149,
	149, 149, 149, 149, 149, 154, 154, 154, 154, 154,
	154, 154, 154, 150, 150, 162, 162, 162, 162, 162,
	155, 155, 156, 156, 156, 157, 157, 157, 157, 183,
	183, 159, 159, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 151, 151, 151, 151, 164, 164, 164, 164,
	414, 414, 414, 188, 188, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 186, 186, 186, 186, 186, 186, 609, 609, 610,
	610, 610, 180, 180, 180, 180, 180, 180, 466, 466,
	174, 174, 174, 174, 179, 179, 179, 179, 182, 182,
	182, 182, 397, 397, 171, 171, 171, 172, 172, 172,
	177, 177, 178, 354, 354, 175, 175, 181, 181, 181,
	181, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	153, 153, 184, 184, 170, 170, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 628, 628, 166,
	166, 166, 165, 165, 165, 165, 168, 168, 169, 169,
	169, 169, 169, 169, 167, 158, 187, 588, 588, 584,
	584, 584, 584, 584, 584, 584, 584, 585, 585, 585,
	585, 590, 590, 114, 114, 114, 114, 114, 124, 124,
	124, 124, 124, 115, 115, 115, 115, 115, 115, 115,
	117, 117, 116, 116, 116, 116, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 259, 259, 217, 217,
	217, 342, 342, 218, 218, 331, 331, 331, 331, 215,
	215, 216, 216, 82, 82, 629, 629, 629, 601, 601,
	601, 602, 602, 602, 602, 602, 602, 325, 325, 326,
	326, 432, 432, 432, 432, 432, 329, 329, 329, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 332, 332,
	243, 243, 243, 340, 341, 341, 333, 333, 339, 338,
	338, 337, 337, 336, 336, 334, 335, 335, 335, 344,
	344, 343, 346, 346, 345, 431, 547, 547, 549, 549,
	549, 549, 549, 549, 549, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 415, 415, 630, 630, 631, 632, 545, 545,
	545, 546, 541, 541, 542, 542, 542, 542, 542, 327,
	327, 328, 328, 328, 328, 543, 544, 360, 360, 470,
	548, 548, 550, 550, 552, 633, 633, 633, 633, 633,
	633, 634, 634, 634, 430, 430, 429, 429, 351, 351,
	553, 553, 553, 553, 554, 554, 554, 554, 554, 557,
	556, 555, 555, 555, 555, 555, 84, 84, 84, 394,
	394, 393, 393, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 192, 192,
	271, 271, 271, 78, 78, 78, 12, 12, 12, 12,
	12, 12, 12, 286, 286, 13, 13, 13, 603, 603,
	603, 83, 83, 83, 83, 83, 83, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 593,
	593, 592, 592, 272, 272, 636, 636, 89, 89, 89,
	89, 89, 89, 89, 89, 488, 488, 489, 489, 77,
	77, 77, 77, 77, 416, 416, 413, 413, 412, 412,
	359, 359, 468, 468, 468, 469, 276, 276, 277, 277,
	236, 236, 236, 31, 30, 21, 21, 26, 26, 27,
	27, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	28, 28, 49, 49, 49, 49, 50, 50, 50, 50,
	53, 53, 54, 54, 48, 48, 48, 48, 51, 51,
	44, 44, 55, 55, 55, 55, 55, 611, 613, 613,
	612, 612, 616, 616, 616, 616, 616, 616, 614, 614,
	615, 615, 619, 619, 620, 620, 120, 120, 125, 125,
	125, 125, 125, 126, 126, 126, 126, 127, 127, 127,
	127, 136, 136, 191, 191, 191, 191, 191, 191, 191,
	57, 57, 57, 57, 69, 69, 69, 69, 134, 638,
	638, 638, 135, 135, 135, 637, 637, 269, 269, 426,
	426, 427, 427, 639, 639, 428, 428, 428, 428, 428,
	262, 261, 263, 263, 264, 264, 75, 75, 75, 252,
	252, 251, 253, 253, 254, 254, 249, 249, 530, 530,
	256, 256, 256, 257, 257, 245, 245, 246, 246, 247,
	247, 248, 248, 260, 260, 640, 640, 112, 112, 112,
	194, 194, 315, 315, 315, 423, 423, 423, 352, 352,
	283, 283, 425, 425, 425, 425, 390, 390, 390, 193,
	193, 367, 367, 380, 380, 381, 381, 482, 482, 382,
	118, 118, 119, 119, 133, 133, 221, 221, 219, 219,
	219, 219, 219, 219, 219, 219, 226, 226, 227, 227,
	228, 228, 229, 230, 230, 230, 230, 371, 371, 231,
	231, 231, 220, 220, 220, 222, 222, 222, 222, 222,
	222, 222, 225, 225, 225, 225, 232, 232, 232, 224,
	224, 564, 564, 564, 566, 566, 568, 568, 567, 567,
	563, 563, 565, 565, 635, 635, 396, 396, 396, 349,
	350, 347, 347, 348, 348, 357, 357, 355, 356, 356,
	358, 358, 467, 467, 467, 237, 237, 237, 387, 387,
	387, 387, 388, 388, 419, 419, 417, 417, 417, 417,
	418, 418, 420, 420, 420, 421, 421, 422, 422, 384,
	384, 385, 385, 386, 386, 386, 386, 448, 448, 223,
	223, 223, 364, 364, 364, 365, 365, 438, 438, 438,
	438, 438, 438, 438, 438, 439, 439, 437, 437, 437,
	437, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	472, 473, 473, 366, 366, 474, 424, 424, 582, 582,
	582, 583, 583, 465, 465, 475, 475, 475, 475, 475,
	475, 463, 463, 464, 464, 483, 484, 484, 400, 400,
	400, 400, 398, 398, 401, 401, 401, 401, 401, 399,
	399, 476, 476, 476, 476, 389, 389, 477, 477, 477,
	477, 478, 479, 479, 480, 480, 433, 434, 434, 490,
	490, 490, 490, 492, 363, 363, 363, 363, 363, 540,
	539, 539, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 507, 507, 507, 507, 507, 507, 507,
	493, 493, 493, 493, 493, 497, 497, 497, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 498,
	498, 503, 503, 504, 504, 504, 499, 500, 505, 505,
	505, 505, 641, 641, 509, 509, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 495, 495, 495, 502, 502,
	502, 409, 409, 409, 409, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 408, 408, 410, 410, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 442,
	442, 442, 442, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 558, 558,
	558, 558, 558, 558, 558, 558, 444, 444, 561, 561,
	562, 562, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 569, 569, 570, 570, 572, 572, 573,
	573, 574, 575, 575, 575, 576, 577, 577, 571, 571,
	578, 578, 578, 578, 579, 579, 580, 580, 580, 580,
	580, 581, 581, 581, 581, 581, 454, 454, 455, 455,
	461, 461, 461, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 322, 322,
	321, 273, 273, 273, 273, 273, 273, 376, 376, 374,
	374, 374, 377, 377, 375, 375, 373, 373, 372, 372,
	451, 451, 449, 449, 453, 453, 402, 402, 508, 508,
	508, 508, 508, 508, 508, 508, 403, 403, 403, 411,
	404, 404, 405, 405, 405, 405, 405, 445, 446, 406,
	406, 406, 447, 447, 456, 460, 460, 459, 458, 458,
	457, 457, 435, 435, 436, 436, 383, 383, 642, 642,
	379, 379, 481, 481, 481, 481, 319, 319, 368, 368,
	318, 318, 310, 310, 311, 311, 311, 311, 361, 361,
	462, 462, 510, 510, 511, 511, 512, 512, 513, 513,
	514, 515, 516, 450, 450, 294, 293, 280, 281, 292,
	291, 290, 279, 282, 287, 288, 289, 284, 285, 301,
	300, 299, 250, 255, 306, 307, 307, 309, 309, 308,
	308, 296, 297, 298, 486, 278, 312, 312, 313, 313,
	313, 314, 314, 314, 314, 274, 274, 275, 275, 302,
	302, 303, 304, 304, 295, 295, 295, 265, 265, 265,
	266, 266, 267, 267, 524, 524, 521, 521, 521, 522,
	522, 522, 523, 523, 523, 523, 520, 520, 520, 520,
	520, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 532, 532, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 534, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 537, 537,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 6, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 3, 4, 3, 3, 4,
	3, 4, 4, 4, 3, 5, 7, 3, 3, 4,
	3, 3, 3, 3, 3, 2, 0, 1, 0, 1,
	0, 4, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 7, 2,
	5, 0, 1, 3, 3, 1, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 10,
	5, 2, 6, 4, 7, 7, 7, 10, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 3, 2, 2, 6, 3, 3, 3,
	3, 4, 4, 3, 1, 3, 3, 2, 2, 1,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	3, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 13, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 605, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-191, -196, -197, -198, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -148, -192, -193, -194, 32, 31, 100, 80, 156,
	129, 138, 204, 388, 433, 445, 403, 143, 424, 408,
	-142, -143, 463, -57, -69, -135, -134, 73, 130, 418,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -623, 102, -565, -93,
	-96, -127, -627, 163, 222, -115, -116, 370, -122, -123,
	426, -125, -126, 429, 164, -64, -63, 158, -219, -221,
	-140, -139, -141, -195, -149, -150, -151, -152, -153, -154,
	-155, -157, -183, -158, -159, -160, -161, -162, -163, -167,
	-186, -164, -165, -166, -169, -168, -170, -175, -171, -172,
	-173, -174, -176, -177, -179, -180, -181, -182, -184, -185,
	468, -178, -187, -156, 529, 49, 483, 82, 148, 437,
	21, -5, -6, -7, -8, -9, -10, -11, -15, -14,
	-55, -75, -77, -80, -81, -82, -89, -83, -84, -564,
	-94, -95, -98, -100, -101, -97, -99, 425, -222, -220,
	602, 544, -18, -23, -24, -19, -20, -22, -25, -21,
	-26, -27, -28, -40, -45, -46, -42, -43, -41, -44,
	-47, -48, -49, -50, -51, -52, -53, -54, -30, -36,
	-37, -31, -32, -33, -34, -35, -38, -39, -17, -29,
	566, 575, -225, -223, -224, -232, 455, 552, 503, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, -317, 2, -296, -302, -303, -304, -295, -265, -534,
	-537, 4, -531, -535, 170, 232, 333, 21, 23, 22,
	24, 25, 26, 27, 29, 30, 41, 42, 44, 45,
	46, 47, 48, 49, 53, 55, 59, 60, 61, 62,
	63, 64, 68, 73, 74, 79, 80, 81, 82, 83,
	84, 85, 91, 88, 89, 90, 92, 94, 96, 97,
	98, 99, 100, 101, 103, 104, 105, 107, 108, 109,
	117, 118, 119, 120, 121, 123, 129, 124, 130, 133,
	128, 132, 134, 136, 137, 138, 141, 142, 143, 145,
	146, 147, 149, 150, 151, 153, 154, 156, 157, 158,
	161, 159, 511, 160, 162, 163, 164, 165, 168, 176,
	177, 178, 183, 185, 186, 190, 191, 192, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 205, 209, 211,
	212, 213, 214, 215, 221, 222, 224, 225, 226, 227,
	228, 233, 234, 235, 239, 236, 245, 246, 250, 251,
	252, 254, 258, 259, 260, 261, 262, 263, 265, 267,
	266, 269, 272, 273, 276, 277, 278, 279, 280, 281,
	285, 286, 282, 287, 288, 290, 291, 294, 292, 295,
	296, 293, 297, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 298, 313, 311, 315, 316,
	317, 331, 326, 327, 328, 321, 322, 318, 323, 319,
	320, 324, 325, 330, 335, 336, 337, 340, 219, 342,
	343, 346, 364, 350, 351, 352, 355, 356, 359, 362,
	363, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	375, 376, 378, 379, 380, 382, 383, 384, 386, 388,
	389, 391, 392, 394, 395, 396, 397, 398, 399, 400,
	402, 403, 405, 404, 406, 408, 410, 411, 412, 418,
	424, 420, 421, 422, 423, 425, 426, 427, 428, 429,
	431, 432, 433, 435, 436, 437, 438, 439, 441, 443,
	444, 448, 449, 465, 466, 485, 445, 446, 447, 450,
	451, 452, 453, 454, 458, 456, 457, 459, 460, 461,
	463, 464, 467, 468, 470, 471, 472, 473, 474, 475,
	476, 479, 481, 482, 483, 502, 484, 486, 490, 491,
	492, 493, 487, 488, 501, 495, 496, 498, 499, 504,
	505, 506, 507, 508, 509, 510, 512, 514, 522, 523,
	524, 526, 529, 530, 531, 532, 520, 534, 535, 538,
	539, 540, 543, 541, 542, 544, 546, 549, 550, 551,
	557, 556, 558, 559, 561, 562, 567, 568, 570, 571,
	572, 36, 50, 51, 54, 56, 58, 69, 70, 71,
	75, 125, 126, 155, 166, 167, 179, 193, 194, 206,
	208, 216, 217, 218, 240, 241, 243, 248, 270, 339,
	341, 357, 361, 377, 381, 385, 387, 401, 440, 477,
	489, 494, 515, 516, 517, 518, 525, 527, 552, 553,
	554, 560, 569, -317, 2, -296, 348, -289, 2, -265,
	-265, 388, 28, 2, 28, 376, 457, 506, 508, 2,
	-591, -362, 2, 28, -268, -265, 102, 204, 455, -289,
	2, -591, -362, 25, 2, -265, 2, 362, 22, 27,
	66, 77, 98, 141, 165, 187, 190, -626, 364, 395,
	443, 459, 501, 512, 526, 2, 556, 291, 456, 503,
	232, 120, 531, 450, -603, 448, 449, 362, 393, 435,
	207, 545, -269, 2, 445, -265, 291, 2, 605, 94,
	74, 440, 460, -145, 2, 281, 523, -146, -147, -144,
	515, -519, 450, 435, 313, -265, 605, 605, 605, 28,
	-278, -265, 503, 232, 450, 120, 499, 605, 2, 503,
	367, 556, 456, 120, 398, 232, 531, 190, 141, 27,
	450, -603, 580, 581, 291, 127, -589, 2, -584, 4,
	-535, -531, -311, -310, 503, 509, 120, -304, -295, 595,
	-303, 605, 605, 605, 2, 251, 252, 397, 396, 460,
	461, 605, 605, 605, 605, 448, 2, 165, 22, 27,
	66, 93, 98, 127, 187, 190, 353, -624, 364, 395,
	459, 501, 505, 512, 526, -602, 484, 68, 423, 450,
	-601, -603, 291, 531, 141, -412, 120, 281, 202, 539,
	508, 506, 537, 133, 239, 542, 541, 605, 605, -106,
	2, 602, 32, 31, -105, -109, 143, 463, -214, 503,
	244, 2, -265, 605, 605, 2, 251, 252, 448, 449,
	605, 605, 188, -584, 2, 605, 605, 2, 251, 252,
	448, 449, 244, 2, 68, 452, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 2, -189, 460, 484, 213, 47, 46, 74,
	28, 394, 79, 368, 121, 127, 150, 532, 205, 232,
	233, 259, 93, 94, -414, 44, 252, 68, 251, 449,
	-609, 448, -466, 504, 451, 457, 498, 263, 445, 523,
	102, 546, 436, 572, 398, 399, 496, 412, 282, 159,
	189, 4, 120, 313, 435, 462, 267, 266, 515, 281,
	444, 371, 84, 605, -635, 2, 503, -637, 2, 523,
	523, 2, -637, 2, -637, 2, -637, 2, -638, 523,
	569, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, -220,
	-222, -221, 605, 605, 605, 605, 605, 605, 605, -189,
	460, 2, 74, 28, -355, -357, 536, 242, 152, 354,
	-219, -221, 2, -564, -517, 2, -440, -538, -442, 593,
	594, 586, 500, 67, -321, 332, 573, -454, 127, 537,
	348, -537, -443, -456, 155, 364, 440, -377, 8, 9,
	5, 6, 7, -274, -444, -450, 528, 169, 338, -314,
	606, 10, 602, -561, -221, -455, 37, 208, 65, -521,
	-313, -275, -493, 243, -312, -295, -558, -559, 4, -531,
	-532, -522, -496, -504, -500, -501, -507, -265, -534, 77,
	111, 112, 110, 115, 114, 284, 283, 116, 113, 462,
	545, 66, 36, 216, 217, 248, 339, 218, 75, -560,
	142, -533, 240, 241, 477, 51, 401, 179, 126, 125,
	341, 56, 54, 553, -505, 122, 515, 516, 517, 518,
	193, 194, 58, 166, 167, 361, 385, 494, 525, 527,
	206, 270, 43, 106, 189, 238, 220, 247, 249, 253,
	271, 274, 314, 329, 334, 358, 360, 434, 469, -641,
	554, 489, 69, 70, -566, 404, -567, -289, -566, 605,
	605, 607, 605, -347, -349, -350, 2, 28, 139, 602,
	2, -471, 2, -472, -476, -221, 264, -475, 602, -473,
	600, -296, 349, -562, 441, -558, -559, -274, -295, -313,
	4, -531, -533, 604, -351, 602, 120, 450, 503, 78,
	232, 165, -407, 602, -265, 28, 348, 519, 607, -348,
	392, -452, 602, 348, 188, 351, 60, 295, 2, 2,
	2, 2, 2, 216, -265, 503, 119, 2, 262, 2,
	2, 2, 2, 2, 2, 2, -370, 216, 2, -296,
	556, -370, 216, 2, -370, 216, 2, -413, 2, 87,
	-279, 216, 2, -265, -305, 216, 2, -300, -302, -309,
	216, 2, -307, -265, -529, 216, 2, -528, -524, 10,
	-523, 5, 4, -531, -535, -532, -534, 77, -440, 2,
	-133, 2, 60, -265, 556, 2, 465, 2, 602, -145,
	2, 71, 523, 43, 460, -146, 2, -427, 2, -428,
	-261, -262, -263, -483, -264, 250, 391, 400, 576, 131,
	332, 572, -618, 188, 585, 519, -517, -517, -517, -378,
	604, 2, 2, 2, 2, 2, 2, -476, 216, -296,
	2, -293, -520, 4, -531, -535, -532, -536, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 57, 65, 66,
	72, 76, 78, 87, 93, 102, 110, 111, 113, 112,
	114, 115, 116, 127, 131, 135, 139, 140, 144, 148,
	152, 169, 171, 184, 187, 188, 204, 207, 210, 223,
	237, 242, 244, 264, 268, 275, 283, 284, 332, 338,
	344, 348, 349, 353, 354, 374, 390, 407, 430, 455,
	462, 480, 497, 503, 513, 519, 521, 528, 536, 537,
	545, 547, 555, 563, 564, 565, 566, -537, 2, -476,
	216, 2, -299, 216, -476, -302, 2, -279, 2, -292,
	-520, 2, -318, 216, -296, -298, -302, -300, 2, 2,
	2, 2, -307, 2, -528, 216, 2, 28, 28, 556,
	392, 244, 519, 607, -368, -310, -311, -516, 8, -361,
	-265, 604, -440, 2, -133, -117, 2, 184, -440, 216,
	2, -133, 216, 2, -440, 216, 2, -133, 216, 2,
	-604, 2, -528, 216, 216, -265, 2, 295, 2, 2,
	526, 2, 98, 503, 119, 2, 422, -625, 443, 530,
	2, 2, 2, 2, 2, 2, 2, 503, -284, 2,
	-265, 184, 487, -307, 216, -308, 2, 456, -636, 404,
	-528, 216, 2, 556, -300, 216, 2, -300, 232, 246,
	-279, 216, 2, 508, 506, 508, 506, 188, 2, 244,
	2, 244, 2, -477, 2, -478, -472, -479, 600, 349,
	-487, 2, -486, -523, 552, -106, 602, -106, 602, 460,
	602, -528, -296, -296, -440, 2, -133, -117, 2, -440,
	2, -133, 2, -130, -528, -129, 602, 188, -440, 2,
	-133, -117, 2, -440, 2, -133, 2, -214, 184, 2,
	120, 503, -189, 2, 184, 547, 2, 8, 2, 223,
	-528, 451, 399, 176, 2, 465, 2, 466, 74, -414,
	572, 74, 188, 2, 188, 2, -397, 2, 566, 392,
	188, 2, 2, -588, 2, 348, 188, 2, 188, 2,
	188, 2, 188, 2, 188, 2, -188, 461, 524, 502,
	396, 252, 2, -133, 563, -117, 252, 251, -440, 563,
	2, -610, 184, 449, -440, 2, 522, 261, 160, 188,
	-397, 2, 188, 2, 188, 2, 5, 2, 397, 485,
	2, 250, 391, 485, 2, -296, 503, 556, 456, 120,
	28, 2, 448, 2, 2, 88, 89, 188, 2, 188,
	2, 203, 188, 2, 188, 503, 572, 2, -389, -476,
	-426, -427, -426, 519, -355, -357, -189, 465, 2, -226,
	-387, -228, 184, -417, -418, -229, 275, 171, 344, -230,
	-396, 28, 139, -396, -396, 60, 603, 603, 11, 12,
	76, 41, 593, 594, 595, 596, 182, 597, 598, 591,
	592, 590, 583, 584, 588, 256, 257, 95, 587, 585,
	86, 289, 442, 172, 173, 174, 175, 419, 230, 34,
	231, 14, 15, 16, -321, 33, 353, 274, 573, 220,
	469, 586, 17, 18, 19, 247, 249, 334, 50, 223,
	-273, 364, -320, 500, 67, -440, -440, -440, -440, -440,
	-440, -440, -440, 360, 602, -383, -435, 600, -221, 602,
	602, 602, 602, -516, -221, -440, -454, 603, -375, 602,
	-221, -454, -449, 602, 440, 600, 602, -457, -440, 5,
	5, 5, 602, 604, -569, 567, 184, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 387, -498, 602, -497, 602, -497, -497,
	557, -495, 602, 575, 568, 602, -495, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	557, 607, -566, -351, 602, -379, -481, -440, 595, -379,
	-379, 348, -372, -440, 106, -400, 253, 314, 189, 271,
	434, 238, -437, 606, -437, -465, 575, -221, -473, -295,
	-221, -475, 602, -471, -465, -107, -516, -90, -103, -112,
	-133, -148, -193, -194, 595, -296, 602, 188, 602, 604,
	-520, 188, -361, -279, -306, -265, -296, -312, -313, -318,
	2, 138, -372, -584, 531, 450, 28, 456, -361, -268,
	38, -451, -490, -491, -540, 606, -539, -493, -503, -499,
	-502, 377, 381, -522, 54, 553, -505, 243, 4, -531,
	-533, 240, 241, 477, 51, 401, 179, 126, 125, 341,
	56, 515, 516, 517, 518, 193, 194, 58, 554, 489,
	69, 70, -584, 531, 450, 28, 456, -361, 184, -361,
	2, 2, 155, 2, 2, 2, -265, -242, 607, 64,
	427, 155, -370, 216, -242, 155, -242, 155, -319, 216,
	-318, -242, 155, -242, 607, 155, -242, 607, 155, 604,
	607, 155, -361, 2, -413, -519, -372, 38, -427, 2,
	127, -525, -523, 5, -639, 607, 273, -324, 288, 331,
	212, 349, 570, 342, 131, -527, 5, 4, -450, -462,
	127, 281, 243, -510, -512, 8, -511, 9, -513, 593,
	594, -518, -517, 109, 604, -520, -239, 420, 463, 363,
	-238, 24, 29, 143, 234, 317, 550, 161, -337, 235,
	-334, 367, 155, 481, 540, -598, -599, 447, 510, 511,
	90, 342, 463, 363, 420, 155, -393, -395, 38, 118,
	317, 362, 61, 227, 293, 294, 483, 560, 155, 463,
	363, 420, 363, -13, -254, 24, 143, -256, -251, 463,
	-599, 99, 420, 579, 425, 373, 495, 390, -599, -241,
	481, 540, -598, -599, 447, 420, -240, -339, -334, 367,
	155, 606, 24, 143, 420, 463, 363, -621, -622, 29,
	420, 363, -592, -286, -563, 223, 566, 155, -286, -286,
	-476, 216, -614, 184, 2, -607, -129, 265, 5, 10,
	-528, -129, -368, 607, 607, -520, 595, 449, 448, 155,
	155, 155, 155, 184, 332, 332, 2, 2, 2, 2,
	2, 190, -601, -626, 2, 2, -296, 216, -353, 348,
	-587, -369, 503, -296, 184, 332, 43, -299, 216, 2,
	-302, 556, -592, 332, -301, 216, -296, 38, 602, 332,
	2, -413, 2, 232, -563, 332, -477, -315, -296, -472,
	-315, 463, -289, 38, -437, -296, 603, 607, -487, -487,
	-528, -202, 566, 188, 102, 602, 602, -214, 566, 566,
	-484, 607, -483, 223, -529, -130, -528, 423, -528, -587,
	-279, 2, -296, 2, 503, 254, -528, -202, 223, -528,
	-528, -528, -519, 28, 466, 2, -188, 461, 524, 89,
	466, 2, -296, 503, 120, 232, 80, -614, 184, 2,
	-265, -590, 184, -585, 435, 450, 531, -584, -296, 120,
	-296, 120, -296, 120, -296, -296, 2, 2, 2, 2,
	2, 85, 2, -133, -440, 2, 85, 2, 46, 482,
	-610, 184, 2, 522, 2, 522, 2, -265, -265, -265,
	484, 273, -296, -296, -296, -297, -302, 504, 449, -440,
	2, -628, 2, 188, 184, 2, 503, 232, 503, 232,
	120, 188, 74, 120, 28, 503, 446, -242, 607, -269,
	-226, -387, -519, -388, -387, -227, -226, -229, 184, 400,
	541, 317, 467, 258, -418, -417, 28, -440, -422, 178,
	316, -440, -420, -442, 593, 594, -511, -513, -371, 342,
	-220, -220, -220, -358, -467, -440, 390, 232, -492, -490,
	-490, -294, -520, 515, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	274, 220, 469, 50, 223, -440, 519, -440, -440, -440,
	-440, 311, 332, 338, 528, 169, 538, 139, 342, -642,
	497, 40, -447, -221, -376, 602, -461, 35, 480, 28,
	-454, 602, 2, -435, -440, -436, -322, -320, -265, 593,
	594, 595, 596, 597, 598, 583, 584, 585, 14, 15,
	16, 588, 592, 590, 591, 182, 95, 587, 289, 442,
	86, 172, 173, 174, 175, 256, 257, 17, 18, 19,
	34, 586, -373, -372, -372, 603, 555, 28, 139, 595,
	2, 603, 607, 38, 603, -440, -373, -453, -449, -372,
	-460, -459, 563, -408, -409, 571, 298, 123, 214, 296,
	-410, 454, -514, 8, -520, 595, -570, 177, 207, 602,
	603, 2, 603, 2, 603, -440, 2, 603, -440, 2,
	603, -440, 2, 603, -440, 2, 603, 2, 603, 2,
	-440, -440, -440, -440, -440, -440, -440, -372, 8, -514,
	-514, 515, 515, -514, -514, -514, -506, 377, 378, 379,
	380, 276, 277, 278, 279, 381, 382, 383, 384, 303,
	304, 305, 306, 299, 300, 301, 302, 307, 308, 309,
	310, 198, 199, 200, 201, 194, 195, 196, 197, -506,
	-402, 2, -508, -372, 4, 571, 298, 123, 214, 296,
	454, 5, -402, 2, -403, 2, -440, -372, -404, -441,
	-442, 593, 594, 586, -321, -454, -405, 2, -440, -373,
	-440, 57, 268, 521, -406, -440, 188, -372, -372, 2,
	-372, 2, -567, 38, -372, -364, 607, 188, 38, 4,
	-364, -364, 602, 603, 607, -401, 211, 292, 287, 246,
	-401, -471, -400, 253, -398, 358, -398, -398, -465, -280,
	600, 608, -520, -465, -464, -463, 38, -289, 355, -465,
	-465, 604, 603, -464, 601, -582, 602, 605, 605, 605,
	605, 605, -296, 602, -372, -520, 604, 486, 2, 603,
	247, 247, 247, 247, 247, 441, 603, 519, -586, -305,
	-309, 504, 2, 566, -105, 350, 603, 607, -363, 37,
	600, 604, -514, 2, 2, -509, 557, 602, 602, -409,
	602, 188, -586, -309, 504, 2, -362, 519, -265, 2,
	-296, -370, -242, 155, -370, -370, -242, 607, 155, -279,
	-300, -305, -307, -309, -265, -528, -529, -242, -301, -618,
	603, 523, -428, -323, 400, 479, 421, 458, 499, 8,
	9, 8, 9, 607, -520, 607, -619, 93, 519, 78,
	450, -258, 282, 519, -431, 216, 78, -541, -282, 93,
	-542, -265, 72, 537, 390, 187, 153, -619, 93, 390,
	-619, 93, 2, 234, 93, 463, 484, 28, 60, -476,
	41, 41, 28, -617, 330, 269, 562, 188, 572, 503,
	232, 450, 519, 519, -476, -395, -490, 118, 293, 294,
	60, -515, -510, 593, 594, -515, 60, -515, -515, -515,
	566, -299, -476, 450, 519, 519, 519, 410, 410, -251,
	-146, 519, 519, 28, -189, 428, 127, -640, 585, 410,
	607, 41, 41, 28, -617, 330, 269, 188, 519, -318,
	-280, 551, 42, 551, 42, 551, 519, 42, 450, 519,
	607, 42, 519, 519, -13, 463, -593, -270, 105, 323,
	286, 324, 97, 320, 96, 319, 103, 321, 104, 322,
	558, 335, 559, 336, 63, 318, 297, 325, -271, -272,
	146, 369, 549, 120, -528, -13, -13, 463, 363, 420,
	155, -615, 223, 28, -603, 223, -484, 223, -484, -310,
	-265, 604, -133, -440, -440, -133, -440, -133, 46, 155,
	155, 2, -636, 262, 602, -327, 332, 188, -361, -485,
	244, 607, -369, -584, 155, -526, -525, 116, 462, -394,
	-393, 332, -301, 216, 2, 155, -351, 332, 149, 602,
	398, 2, 155, -281, 216, -266, -265, -413, -245, 507,
	155, -391, 547, -423, -133, 602, 127, 38, -423, -380,
	-381, -482, -382, -282, 602, -289, -437, -106, -486, 603,
	603, 603, -201, 352, -200, -265, 5, -214, 547, -326,
	-432, -431, -545, -546, -541, 274, 232, 537, 246, 170,
	-352, -283, -282, 119, 402, 402, -208, 566, -129, -130,
	603, -484, 223, 487, -202, -202, -484, -484, -296, 184,
	-528, -202, -202, -202, 2, 2, 2, 2, -397, -296,
	-279, -318, -296, 28, 604, -361, -361, -309, -305, -397,
	-279, -397, -279, -397, -279, -133, -440, 484, 2, 460,
	184, 184, 604, -397, -354, 430, 2, 398, 120, 503,
	367, 232, -296, -318, -296, -318, -279, 120, -279, 121,
	-296, -476, -388, -227, 349, 258, 467, -420, -421, -442,
	440, 441, -421, 440, 441, 8, 9, 8, 9, -231,
	471, 337, -370, 607, -236, 39, 135, 258, -296, 572,
	151, -440, -440, 519, -642, 497, -447, 151, -440, 311,
	338, 528, 169, 538, 139, 342, 188, 602, -441, -441,
	603, -374, -440, -440, 601, 610, 603, 604, 603, -357,
	607, -355, -440, -372, -372, 603, 604, -372, -361, 601,
	601, 607, 603, -458, -459, 144, -440, 519, 519, 519,
	519, 602, 603, 604, -575, 359, 602, 602, -440, 603,
	603, 603, 603, 38, 607, 607, 607, 603, 607, 607,
	607, 603, 603, 603, 607, 603, 572, 572, 603, 603,
	603, 603, 607, 603, 607, 603, 188, 603, 603, -411,
	374, 603, 11, 12, 593, 594, 595, 596, 182, 597,
	598, 591, 592, 590, 583, 584, 585, 86, 289, 442,
	14, 15, 16, -321, 247, 223, -441, -441, -441, -441,
	603, -445, -446, 188, 184, 38, -406, -406, -406, 603,
	188, -372, 603, 603, 602, -568, 291, 332, 603, -434,
	-433, 564, -481, -365, 2, -471, -291, -520, -434, -434,
	-372, -440, 253, 253, -399, 547, 348, -401, -471, -464,
	-516, -439, -438, 186, 39, 135, 326, 327, 328, 219,
	-464, -289, -351, -464, -464, -520, -465, -465, -463, 603,
	-583, -516, 603, -366, -474, -562, -357, 604, -520, -211,
	-563, -190, 5, 338, -190, -190, -190, -190, -361, 519,
	519, 223, 25, 375, -490, 600, 601, 8, -520, 602,
	-514, -514, -514, -361, 188, 188, 223, 188, -526, 2,
	-242, -370, -242, -242, -318, -319, -242, -242, -242, -392,
	566, -517, -427, 535, 83, 400, 515, -517, -238, 420,
	-282, -282, -296, -306, 202, 411, -526, 332, -431, 216,
	-244, 332, -490, -290, -265, 602, -415, 568, 258, 258,
	547, -282, -290, 258, 216, -282, 216, -290, 2, -290,
	-594, 400, 343, -440, 60, -335, 280, 398, 333, -239,
	420, 463, 363, -133, -133, -133, -133, -133, 602, -618,
	547, 138, -296, -318, -296, -306, -526, -301, 463, 363,
	420, 329, -312, -515, -515, -393, 463, 363, 420, -306,
	-526, -299, -526, -250, 216, -265, -250, 216, 450, -279,
	410, 572, 45, -640, -240, -133, -133, -133, -133, -133,
	602, -280, -241, 420, 5, 216, -282, 5, -282, 216,
	5, -265, -282, -306, -526, -622, 24, 143, -282, -306,
	-526, -270, 369, -528, 338, 543, -279, -592, -286, 450,
	519, 519, -476, -611, -612, 204, 433, 450, 436, -361,
	-129, -205, 566, -129, -199, 228, 595, -589, -528, -265,
	556, -265, -325, -328, -326, -282, -217, -218, 568, 566,
	155, -316, -296, 600, -202, -528, -296, -485, -307, -308,
	155, -351, 332, -528, 38, 155, 602, 2, 2, -300,
	348, 332, -281, 216, -246, 145, -640, -279, -434, -365,
	-390, -425, 430, 348, -352, 552, -289, -390, -367, 607,
	188, 585, 604, -352, -480, 595, -106, -106, -202, 607,
	602, 585, 585, 602, -528, -528, 603, 607, -244, -296,
	-281, 232, 232, -288, -266, 603, 607, 604, 602, 585,
	585, -210, 352, -209, 147, 260, 245, 473, 474, 475,
	476, 137, 472, 124, -484, -208, -130, 188, 188, -65,
	566, 503, -202, 606, 436, -265, -397, -397, -397, 460,
	460, -265, -361, -292, -279, -296, -293, -318, 184, 184,
	-279, 541, -421, 349, 285, -467, -237, 574, -296, 606,
	-440, -440, 151, 151, -440, -441, -441, -440, 151, 188,
	602, -440, -451, 33, 33, 603, 607, -436, -440, -320,
	603, 555, -357, -357, 603, 595, -520, 606, 603, -449,
	148, -440, 513, 298, 214, 296, -410, 296, -410, -410,
	-514, 5, -520, 595, -576, -285, 602, -265, 564, -356,
	354, 603, -492, -490, -440, -440, -440, -440, -440, -514,
	-495, -495, -510, -510, -440, -445, -440, -492, -490, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, 139,
	332, 342, -441, -446, -445, -440, -440, -490, 603, 603,
	603, -372, -105, 602, 291, -384, 207, -440, -484, 607,
	-384, -384, 603, -471, -471, 602, -440, 253, 601, 607,
	609, 585, -351, 604, -463, -464, 601, 603, 607, 603,
	607, -424, 38, 603, -520, -434, -213, -212, 136, 53,
	107, 134, 338, -361, -361, 450, 351, 5, 8, 600,
	601, 604, -514, 603, 603, 603, -361, -361, 450, -361,
	-242, -242, 119, 317, -440, 519, 519, 60, 223, 155,
	332, 549, -547, -542, 153, -440, 602, 232, 602, 602,
	2, -233, -234, -235, 143, 463, 24, -620, 2, 547,
	155, -242, 155, -242, 570, -335, 602, 602, 519, 450,
	-258, 519, 566, -372, -440, -203, 127, -519, -599, 606,
	-599, 606, 450, 519, 519, 450, 519, 519, 332, 155,
	566, 168, 168, 572, -250, 566, -372, 519, -494, 48,
	26, 332, -300, -242, 155, 519, 519, 531, 463, -528,
	-528, 338, -13, -306, -526, -301, 463, 363, 420, -591,
	-362, -591, 204, -309, -615, -484, -207, 352, -206, 147,
	432, 137, 260, 225, -484, -205, 188, 244, 566, -301,
	2, 603, 603, 607, -548, 38, 346, 346, 602, -296,
	-86, 566, -483, -516, -595, 566, 43, -299, 38, 155,
	-592, -133, -301, -488, -489, 5, 38, -296, 155, 348,
	332, -247, 267, -640, -524, -563, -357, -390, -379, 333,
	91, 603, -434, -381, -365, -440, 2, 603, -200, -201,
	-528, -528, -528, -202, -214, -214, -432, -329, 602, -281,
	-266, 602, -214, -283, 2, -529, -528, -528, 607, 602,
	585, 585, 585, 585, -208, -484, -129, -133, 352, -296,
	595, -397, -341, -340, 367, 342, -341, 440, 440, 349,
	178, 263, -236, -280, -440, -440, 151, 33, 33, -440,
	-440, -451, 603, -440, -440, -372, 601, 5, -440, 603,
	603, 8, -440, 603, 604, -577, -265, -440, 603, 60,
	603, 603, 607, 607, 603, 603, 603, 603, 603, 603,
	603, -446, 188, 139, 342, 602, 603, 603, -105, -448,
	210, 60, -471, -448, -448, -399, -361, -471, -438, -280,
	600, -520, -516, -474, 602, 604, -212, 585, -528, -528,
	566, -309, 601, 2, 600, -520, 603, -309, 119, -282,
	-282, 503, 440, -250, 390, -431, 155, -549, 93, -551,
	76, 170, 102, 332, 338, 537, 390, 72, 127, 348,
	407, -630, -631, -632, 38, 577, 578, 603, -359, -468,
	-562, 602, -265, -359, -361, 332, 492, 127, 348, 332,
	127, 348, 561, 119, 2, 531, 79, -282, -290, -361,
	-361, -296, -306, -526, 162, 603, 607, 585, 2, 595,
	595, -306, -526, -301, -306, -526, -299, 155, -250, 365,
	168, 162, 603, -280, 5, 5, 155, -277, 76, -282,
	5, -282, -300, 119, 450, 519, 519, 348, 348, 351,
	-611, -612, -205, 607, 602, 585, 585, -205, -529, -129,
	2, -351, -342, 234, -282, -546, -543, -544, 390, -550,
	-552, 170, 390, -133, 2, -216, -215, -265, 5, 602,
	-327, 352, 601, -597, 352, -596, 117, 137, -526, -394,
	-133, -301, -351, 603, 607, 149, -416, 547, -280, -296,
	155, -248, 266, -640, -524, -245, -419, -417, 140, 602,
	348, -133, -357, 585, 603, 603, 119, 119, 226, 154,
	-359, 602, 602, -361, 119, 603, -209, -210, -528, -129,
	-528, -528, -208, -484, -66, -67, 232, 93, 372, -293,
	503, 232, 602, 602, -236, -440, -440, -440, 603, -357,
	-520, 595, -571, 367, 603, -467, -440, -440, -441, 188,
	602, -451, 603, -572, 565, -440, -385, -386, -440, 438,
	108, 208, -572, -572, 603, -516, 2, -528, 2, 519,
	600, 2, 188, 223, 38, 410, -431, -290, -294, -287,
	-265, 170, 216, 338, 561, -415, 258, 602, -441, 541,
	-296, 602, 2, 215, 215, 30, 60, -633, 131, 237,
	603, 607, -469, -276, -265, -440, -469, 603, 603, 338,
	541, 338, 561, -440, 541, -490, 602, -242, -242, 603,
	603, -440, 519, -519, 100, -517, 2, -599, -250, -279,
	-440, 519, 5, -242, -294, -242, -242, -277, 531, -306,
	-526, -301, -616, 504, 457, 532, 451, 191, 439, -616,
	184, -206, -207, -528, -129, -205, 38, -332, 236, 2,
	-548, 258, -287, 258, -629, 566, 603, 607, 585, 585,
	-325, -217, -87, -88, 520, -483, 607, 602, 585, -351,
	38, 5, 602, 602, -265, 348, 602, -280, -260, 92,
	-640, -524, -246, -390, 333, -361, 93, -419, -447, -202,
	602, 602, -330, 81, 94, 128, 215, 192, 233, 484,
	490, 28, -330, 603, -359, -359, 603, 602, -202, 603,
	607, 28, 602, 28, 602, -296, -318, -372, -372, 603,
	-357, 60, 607, 603, 603, -441, -451, 603, -573, -574,
	-285, 607, 602, 602, 464, 601, -361, 2, -361, -250,
	390, -265, -551, -287, 332, 547, -440, -441, -267, 602,
	-440, 602, 602, 38, 127, 237, 132, 221, -430, -634,
	101, 493, 224, -468, -236, 603, -429, 547, 407, -441,
	-277, -359, 602, 602, 602, 585, 188, 602, -494, -242,
	-300, 519, 2, 2, 188, -591, 603, -605, 405, -133,
	-336, -337, 223, 602, -331, 348, 119, 317, -215, -517,
	-517, 603, 38, -88, 9, -596, -597, -440, 38, -133,
	-488, -359, -296, -359, 348, -252, -251, 275, -524, -247,
	603, -290, -390, -529, -529, -429, 603, 603, -529, -67,
	-361, -361, 603, 603, -578, 398, 441, 209, -372, -358,
	603, 607, 38, -386, 2, 2, 2, 410, 155, 211,
	603, -553, 290, -265, 603, -394, -394, 38, 132, 221,
	-332, 602, -237, -469, -332, 211, -296, -600, 547, 603,
	-344, -343, -340, -346, -345, -340, -372, -517, 100, 365,
	-372, -277, -361, -361, 348, -608, 189, -607, 5, 10,
	-217, 365, -360, -470, -282, 82, 119, -342, -133, 603,
	-133, 603, 603, -416, 603, -296, -249, -530, 410, 412,
	-640, -248, -434, 603, 603, -430, -429, -338, -334, 603,
	603, 603, 603, -579, -580, 50, 534, 109, -440, -579,
	-579, -574, -576, 170, 566, -554, -557, -556, 582, 470,
	189, 366, 603, 492, 560, 603, 603, -338, -361, 566,
	-351, -440, -429, 603, 607, 552, 603, 607, 552, 603,
	188, 603, -242, -613, 566, -242, -616, -204, 566, 46,
	-331, -296, 603, 607, 389, 133, 143, -332, -629, -429,
	602, -430, 602, -257, -256, -640, -510, -260, 140, -202,
	-202, -332, -430, -218, 566, -202, -581, 153, -580, 386,
	183, 440, 386, 183, -581, -581, -287, 55, -556, 582,
	-557, 582, 541, 133, -633, 603, 55, -553, -332, -343,
	223, -345, 188, 365, 204, 188, 448, -607, 30, -259,
	-258, 602, -470, 441, 441, 2, -336, -331, -430, -359,
	-332, -359, -253, -254, -255, -361, -252, 333, 541, -338,
	-332, -434, 109, 207, 514, 317, 33, 585, -555, 317,
	427, 64, 463, -555, -434, 585, -554, 602, 602, 351,
	-361, 352, -361, 2, -217, -332, 603, -338, 603, -249,
	463, -218, -338, 440, 356, -580, -440, 23, 338, 127,
	-440, -633, -372, -372, -242, -201, 602, 603, -331, -338,
	-429, -218, -430, -257, -380, -434, -218, 603, 603, -201,
	-243, 64, 427, -259, -218, -430, -434, -332, -253, -434,
	-434, -333, -334, 519, 603, -434, -332, -338, 602, -338,
	-218, -372, -218, -434, 603, -434, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 553, 554, 556, 557, 558, 560,
	561, 563, 565, 567, 568, 569, 571, 572, 574, 575,
	576, 577, 578, 580, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	649, 651, 0, 1413, 1415, 1417, 1419, 0, 804, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 0, 369,
	371, 372, 374, 376, 377, 378, 380, -2, 0, 486,
	487, 489, 491, -2, 0, 1013, 1015, 0, 638, 640,
	0, 1018, 1020, 0, 0, 661, 662, 0, 1524, -2,
	653, 655, 657, 659, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 748, 750, 752, 754, 756, 758,
	759, 761, 763, 765, 766, 768, 769, 771, 773, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	-2, 798, 799, 800, -2, -2, 0, -2, -2, -2,
	1431, 41, 43, 45, 47, 49, 51, 53, 55, 57,
	59, 430, 432, 434, 436, 438, 441, 443, 445, 1582,
	493, 495, 497, 499, 501, 503, 505, 0, -2, 1596,
	0, 0, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 109, 110, 111, 112, 113, 114, 115,
	116, 75, 76, 77, 79, 80, 81, 82, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 107, 73,
	0, 0, 1555, 1557, 1559, 1561, -2, 0, 0, 5,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 27,
	29, 555, 559, 562, 564, 566, 570, 573, 579, 581,
	583, 538, 539, 542, 2291, 2309, 2310, 2311, 2314, 2315,
	2316, 2317, 2318, 2319, 2777, 2858, 2859, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 540, 541, 1199, 0, 607, 605, 2276,
	608, 2573, 610, 612, 480, 481, 482, 483, 484, 485,
	0, 631, 621, 1594, 632, 634, 635, 636, 637, 602,
	600, 0, 631, 2345, 629, 1411, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 409, 1258,
	1259, 1260, 1396, 1397, 2620, 1438, 0, 234, 650, -2,
	-2, 2742, -2, 684, 685, -2, -2, 699, 702, 694,
	2746, 0, 2623, 2607, -2, 705, 1414, 1416, 1418, 802,
	803, 2295, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 244, -2,
	-2, -2, -2, 0, 0, 2668, 2397, 2244, 2311, 2247,
	2242, 338, 340, 342, 343, 0, 0, 0, 0, 0,
	0, 370, 373, 375, 379, -2, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1076,
	1068, 1069, 1318, 0, 0, 0, -2, 488, 490, 543,
	544, 0, 1583, 1583, 551, 552, -2, 0, 0, 0,
	0, 308, 296, 1014, 1016, 1017, 0, 0, 0, 0,
	639, 641, 0, 0, 276, 1019, 1021, 1022, 0, 0,
	0, 0, 0, 310, 0, 0, 654, 656, 658, 660,
	730, 732, 734, 736, 738, 740, 742, 744, 746, 749,
	751, 753, 755, 757, 760, 762, 764, 767, 770, 772,
	774, 776, 778, 780, 782, 784, 786, 788, 790, 792,
	794, 796, 797, 810, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 909,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 994, 0,
	0, 813, 815, 816, 817, 818, 819, 820, 0, 882,
	907, 908, 918, 801, 0, 1239, 1584, 1440, 1421, 1435,
	1440, 1423, 1424, 1425, 1426, 1427, 1432, 1434, 1428, 1429,
	1430, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 431, 433, 435, 437, 439, 442, 444, 446, -2,
	1553, 1554, 494, 496, 498, 500, 502, 504, 506, 642,
	0, 644, 0, 814, -2, 0, 1588, 1588, 1588, 0,
	0, 1554, 1552, 0, 647, 648, 709, 710, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 2118, 1946, 0,
	711, -2, 1979, 1981, 2717, 2546, 2742, 2117, 1983, 1984,
	1985, 1986, 1987, 0, 1989, 1990, 1991, 1992, 1993, 1994,
	0, 1996, 0, 2001, 2002, 2003, 0, 2724, 2221, 2305,
	-2, 0, 0, 2730, 2301, 0, 2084, 2019, -2, -2,
	2328, 2307, 1790, 1791, 1792, 1793, 1794, -2, -2, 2760,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 0, 2705, 2725, 2726, 2731, 2733, 2727, 2714, 2044,
	2411, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1817, 1826, -2, -2, -2, -2,
	-2, -2, -2, 2718, 2719, 2736, 2739, 2745, 2750, 2751,
	2723, 2732, 2759, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 1818,
	-2, -2, -2, -2, 1571, 2587, 1574, 1199, 1572, 1556,
	1558, 0, 1560, 0, 0, 0, 1565, 1591, 1589, 0,
	1640, 1569, 1570, 1660, 1660, 1684, 0, 1665, 0, 1684,
	1583, 1711, 0, 1671, 2612, 2020, 2021, 0, 2311, 2306,
	-2, -2, 2757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 609, 611, 0, 0, 0, 630,
	1593, 0, 0, 0, 0, 0, 0, 0, 412, 413,
	414, 415, 416, 2725, 0, 0, 0, 421, 0, 423,
	424, 425, 426, 427, 428, 429, 205, 2725, 511, 536,
	0, 205, 2725, 514, 205, 2725, 517, 0, 520, 1316,
	205, 2725, 523, 2272, 205, 2725, 526, 528, 2280, 205,
	2725, 532, 2287, 2285, 533, 2725, 535, 313, 311, 312,
	2324, 2325, 2332, 2333, 2334, 2335, 2758, 2760, 1407, 1408,
	1409, 1410, 0, 1437, 1317, 652, 0, 678, 0, 682,
	683, 2713, -2, 0, 2632, 687, 688, -2, 690, 1441,
	1445, 1446, 1447, 1448, 1449, 0, 0, 0, 0, 1454,
	0, 0, 0, 0, 679, 680, 697, 698, 703, 706,
	0, 805, 806, 807, 808, 809, 72, 0, 2725, 1711,
	74, 0, 2266, 2336, 2337, 2338, 2339, 2340, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 78, 0,
	2725, 83, 0, 2725, 0, -2, 96, 0, 108, 0,
	2269, 117, 0, 2725, 0, 2241, -2, 0, 217, 297,
	298, 299, 0, 1043, -2, 2725, 1252, 1254, 1254, 0,
	-2, 0, 0, 0, 1004, 2238, 2243, 1005, 2262, 1006,
	2248, 0, 344, 345, 346, 347, 348, 0, 349, 2725,
	351, 352, 0, 354, 355, 2725, 357, 358, 0, 360,
	0, 256, 262, 2725, 2725, 383, 385, 0, 387, 388,
	0, 390, 0, 0, 0, 394, -2, 410, 0, 407,
	397, 398, 400, 401, 402, 403, 404, 0, 450, 448,
	2277, 0, 0, -2, 2725, 0, 1040, 0, 0, 1296,
	-2, 2725, 1245, 0, 1303, 2725, 1299, 0, -2, 0,
	1581, 2725, 1458, 1072, 1073, 1074, 1075, 1723, 477, 0,
	1489, 0, 1491, 0, 1510, 1717, 1660, 0, 0, 1722,
	0, -2, 596, 2294, -2, 546, 0, 547, 0, -2,
	0, 325, 0, 0, 1023, 1025, 1026, 1028, 1029, 1032,
	1033, 1034, 1035, 1697, 277, 279, 0, 0, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 0, 0, 663,
	0, 0, 811, 812, 0, 0, 825, 826, 827, 0,
	325, 2624, 2582, 2433, 834, 0, 837, 840, -2, 0,
	0, 0, 0, 844, 0, 849, 850, 851, 0, -2,
	0, 858, 860, 1012, 862, 0, 0, 864, 0, 868,
	0, 871, 0, 873, 0, 875, -2, -2, -2, 883,
	884, -2, 889, -2, 0, 893, -2, 0, 896, 0,
	899, -2, 0, 909, 905, 906, 0, 0, 0, 0,
	926, 927, 0, 936, 0, 939, 940, 941, 0, 945,
	946, 0, 948, 949, 950, 951, 0, 2695, 2629, 2397,
	0, 957, -2, 963, 965, 0, -2, 0, 981, 0,
	985, 0, 0, 993, 0, 0, 821, 822, 205, 1715,
	1420, -2, 1422, 0, -2, 0, 643, 0, 646, 1613,
	1539, 1536, 0, 1610, 1611, 1540, 0, 0, 0, 1547,
	0, 1586, 1587, 0, 0, 0, 1526, 1527, 0, 0,
	0, 0, 2123, 2124, 2125, 2126, 2139, 2127, 2128, 2138,
	2136, 2137, 2129, 2130, 2135, 2149, 2150, 2140, 2141, 2131,
	2144, 2142, 2143, 2145, 2146, 2147, 2148, 0, 0, 2154,
	0, 2132, 2133, 2134, 2162, 0, 0, 2163, 0, 2165,
	0, 2155, 2151, 2152, 2153, 0, 1925, 1927, 2229, 0,
	0, 0, 2161, 2156, 2157, 1863, 1864, 1865, 1866, 1867,
	1900, 1904, 1905, 0, 0, 1980, 2226, 2225, 1982, 0,
	0, 2177, 0, 1995, -2, 0, 2118, 2172, 0, 0,
	2004, 2005, 2006, 0, 0, 2177, 0, 0, 2220, 2016,
	2017, 1855, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 1803, 0, 1805, 0, 1806, 1807,
	1814, 1827, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 2201, -2, 0, 0, 0, 0,
	1819, 0, 1573, 0, 0, 1644, 2230, 2234, 2235, 1644,
	1644, 0, 0, 2178, 1708, 1708, 0, 0, 1703, 1703,
	1703, 1701, 1684, 0, 1684, 1694, 0, 1684, 1684, 0,
	-2, 1665, 0, 0, 1694, 0, 1678, 584, 586, 588,
	590, 591, 592, 594, 1712, 1713, 0, 0, 0, 0,
	2312, 0, 0, 0, 0, 2284, 0, 0, 2297, 0,
	366, 0, 0, 0, 2678, 2623, 0, -2, 614, 633,
	1583, 0, 2180, 1738, 1742, 0, 1744, 1745, 1746, 1747,
	1748, 0, 0, 1739, -2, 1815, 1817, 1838, 2329, 2330,
	2331, 1798, 1799, 1800, 1801, 1802, 1810, 1797, 1797, 1797,
	1808, 1837, 1829, 1837, 1833, 1783, 1784, 1785, 1820, 1821,
	1822, 1823, 0, 2678, 2623, 0, -2, 623, 0, 0,
	1521, 411, 0, 418, 419, 420, 0, 507, 0, 203,
	204, 0, 205, 2725, 512, 0, 515, 0, 205, 2725,
	2236, 521, 0, 524, 0, 0, 530, 0, 0, 0,
	0, 0, 205, 1523, 0, 0, 0, 0, -2, 692,
	700, 701, 224, 225, 0, 1443, 0, 1450, 720, 721,
	722, 1452, 1453, 0, 1455, 695, 723, 724, 725, 726,
	727, 728, 0, 2250, 2251, 2252, 2253, 2256, 2257, 0,
	0, 693, 713, 696, 0, 707, 118, 1393, 0, 0,
	161, 0, 1393, 1393, 0, 0, 0, 0, 188, 0,
	1111, 0, 0, 0, 0, 133, 146, 157, 130, 131,
	0, 0, 0, 0, 0, 0, 84, 1221, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 1237, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	145, 0, 0, 0, 0, 0, 1486, 0, 140, 120,
	0, 0, 133, 147, 159, 0, 192, 194, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 226, 0,
	0, 0, 1246, 0, 0, 0, 1580, 0, 0, 0,
	0, 2725, 1391, 0, 1376, 0, 1697, 2482, -2, -2,
	277, 1697, 1003, 0, 0, 2312, 2246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 389, 391, 392,
	393, 0, 1295, 0, 399, 440, 1170, 2725, 0, 0,
	467, 462, 0, 464, 0, 0, 0, 1220, 2725, 1218,
	2281, 0, 1243, 0, 1199, 2725, 2279, 0, 0, 0,
	1304, 2321, 1313, 1317, 1476, 0, 479, 0, 1492, 1494,
	0, 0, 1718, 0, 1720, 1660, 1583, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 1696, 0, 0, 1697, 277, 2598, 325, 325,
	1697, 665, 1697, 667, 0, 0, 828, 829, 0, 325,
	325, 325, 835, 836, 838, 839, -2, -2, -2, -2,
	841, 842, 933, 0, 0, 0, 932, 852, 0, 854,
	857, 861, 0, 997, 2607, 2623, 2678, 1010, 933, 2397,
	933, 2397, 933, 2397, 872, 874, 877, 921, 929, 888,
	895, 0, 890, 894, 897, 900, 0, 902, 910, 0,
	-2, 0, 913, 0, 915, 0, 917, 933, 934, 937,
	944, 947, 952, 953, 954, 955, 2292, 956, -2, 960,
	961, 0, 972, 977, 978, 974, 0, 0, 0, 0,
	0, 0, 988, 989, 0, 0, 996, 1238, 0, 1433,
	1613, 1539, 645, 1530, 1612, 1531, 1538, 1541, 0, 0,
	1543, 0, 1545, 0, 1608, 1609, 1616, 1617, 0, 1627,
	1628, 1620, 0, -2, 0, 0, 1623, 1624, 1549, 0,
	1566, 1567, 1568, 1597, 1600, 1332, 0, 2858, 1859, 1733,
	1860, 1861, 2265, 0, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, -2, -2, -2, -2, -2, -2,
	-2, -2, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, -2, -2, -2, 1901, 1902, 1903, -2,
	2164, 2166, 0, 2229, 0, -2, 0, -2, -2, -2,
	-2, 1922, 0, 1924, 1929, 1931, 1933, 0, 0, 0,
	0, 2228, 1943, 2212, 2213, 0, 0, 2120, 2121, 2122,
	1928, 0, 1947, 2227, 2224, 0, 0, 2158, 0, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 0, 2176, 1596, 2008, 0, 0, 0, 0,
	2015, 2000, 2174, 0, 2173, 0, 0, 0, 2184, 0,
	2219, 2215, 0, 2263, 1854, 1841, 1842, 1843, 1844, 1845,
	1846, 1856, 0, 2260, 2298, 2304, 2094, 0, 0, 0,
	2045, 2046, 2047, 2048, 2049, 0, 2051, 2052, 0, 2054,
	2055, 0, 2057, 2058, 0, 2060, 2061, 2062, 2063, 2064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 0,
	0, 2066, 0, 2187, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2068, 0, 2070, 2178, 2198, 0, 0,
	1948, 0, 0, 0, 0, 2118, 0, 2073, 2178, 2206,
	0, 0, 0, 0, 0, 2178, 0, 2211, 0, 2080,
	0, 2082, 1575, 0, 0, 1728, 0, 0, 0, 2233,
	1728, 1728, 0, 1639, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 1708, 0, 1698, 1702, 1699, 1700, 1694, 1657,
	0, 0, 2267, 1694, 1663, 1693, 0, 1199, 1683, 1694,
	1694, 0, -2, 1667, 1684, 0, 0, 585, 587, 589,
	593, 595, 0, 0, 1596, -2, 0, -2, 327, 1198,
	0, 0, 0, 0, 0, 604, 606, 0, 0, 527,
	0, 0, 620, 0, 598, 0, 601, 0, 1729, 1732,
	0, 0, 1743, 1749, 1750, 0, -2, 0, 0, 1839,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 422,
	537, 205, 509, 0, 205, 205, 518, 0, 0, 205,
	529, 205, 2288, 205, 2286, 314, 534, 1522, 237, 0,
	681, 0, 1442, 1451, 0, 717, 0, 719, 0, 2254,
	2258, 2255, 2259, 0, 708, 0, 0, 0, 0, 1392,
	0, 1339, 0, 0, 165, 2725, 0, 207, 0, 0,
	1163, 2273, 0, 1153, 0, 0, 2419, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 1223, 1225, 1232, 1234,
	0, 1228, 2261, 0, 0, 1229, 0, 1231, 1233, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	1255, 0, 0, 1256, 1257, 1464, 1465, 0, 1485, 1486,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	2240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 1291, 1289, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	0, 0, 0, 0, -2, 1250, 1251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 316, 2239,
	2249, 0, 1030, 1031, 350, 353, 356, 359, 243, 0,
	0, 395, 0, 0, 1078, 1053, 0, 0, 449, 325,
	0, 0, 463, 467, 2290, 1038, 221, 222, 223, 1216,
	1219, 0, 1199, 2725, 1266, 0, 0, 0, 0, 0,
	0, 1302, 0, 0, 2725, 2268, 2320, 2321, 1478, 1486,
	0, 1728, 0, 1508, 1495, 0, 0, 0, 1508, 1512,
	1513, 1515, 1516, 0, 0, 1719, 1725, 545, 597, 1583,
	1583, 325, 323, 2549, 321, 318, 320, 0, 0, 0,
	1079, 1081, 1082, 1083, 207, 0, 2321, 1153, 2471, 2321,
	0, 1498, 1500, 0, 0, 0, 271, 0, 280, 1697,
	278, 283, 0, 0, 0, 461, 664, 669, 823, 0,
	325, 831, 832, 833, 879, 923, 931, 976, 843, 845,
	846, 847, 0, 0, 0, 1011, 1007, 1008, 1009, 863,
	933, 866, 933, 869, 933, 892, 898, 911, 904, 912,
	0, 0, 0, 925, 942, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 982, 983, 984, 986, 991, 990,
	995, 1716, 1534, 1535, 1537, 0, 1546, 0, 0, 1622,
	-2, -2, 1621, 1625, 1626, -2, -2, -2, -2, 1542,
	0, 1551, 1548, 0, 1607, 1330, 1331, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1944, 0, -2, 1923,
	1926, 1930, 1932, 1934, 0, 0, 0, 0, 0, 0,
	2167, 0, 2169, 1945, 2222, 2225, 2160, 0, 2116, 0,
	0, 1595, 1596, 1596, 0, 2014, 0, 2175, 0, 2182,
	2183, 0, 2007, 0, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 0, 2050,
	2053, 2056, 2059, 0, 0, 0, 0, 2039, 0, 0,
	0, 2043, 1809, 1795, 0, 1837, 1835, 1836, 1830, 1837,
	1834, 1787, 0, 1786, 0, 2065, 0, 2067, 2069, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1951, 1952, 1953, 1973,
	2072, 2204, 2205, 0, 0, 0, 0, 0, 0, 2078,
	0, 2210, 2079, 2081, 1583, 0, 1576, 0, 1641, 1630,
	1727, 0, 2231, 1697, 1643, 1645, 2232, 2270, 1630, 1630,
	0, 2179, 0, 0, 1688, 0, 0, 0, 1690, 1661,
	0, 0, 1655, 0, 1649, 1650, 1651, 1652, 1653, 1654,
	1662, 1199, 1692, 1664, 1668, 2298, 0, 1694, 0, 1679,
	0, 1681, 1714, 0, 1673, 1676, 0, 0, 2313, 1728,
	0, 361, 367, 368, 362, 363, 364, 365, 613, 0,
	0, 0, 0, 0, 2181, 0, 1734, 0, 1740, 0,
	0, 0, 0, 622, 0, 0, 0, 0, 1520, 417,
	508, 205, 513, 516, 2237, 205, 522, 525, 531, 233,
	0, 677, -2, 715, 716, 718, 0, 714, 162, 1393,
	0, 0, 1335, 1337, 1341, 1347, 1350, 0, 167, 2725,
	179, 0, 1127, 0, 2271, 0, 0, 0, 0, 0,
	0, 1395, 0, 0, 2725, 205, 2725, 205, 182, 184,
	187, 0, 191, 189, 0, 1115, 0, 0, 1118, 119,
	1393, 0, 0, 122, 126, 134, 135, 138, 0, 0,
	0, 144, 0, 0, 0, 1352, 1356, 1364, 0, 0,
	0, 1226, 1227, 1230, 1236, 85, 0, 0, 0, 1360,
	1362, 1368, 97, 100, 2725, 2282, 102, 2725, 0, 1334,
	0, 0, 0, 0, 193, 124, 128, 136, 137, 139,
	0, 1370, 121, 0, 220, 0, 0, 210, 205, 2725,
	0, 212, 0, 213, 214, 227, 0, 0, 0, 1041,
	1042, 1290, 0, 1241, 1242, 0, 1253, 1247, 0, 0,
	0, 0, 0, 1372, 1373, 0, 0, 0, 1391, 1388,
	1697, 239, 0, 1697, 247, 0, 2245, 0, 263, 382,
	0, 0, 0, 0, 1077, 1181, 0, 1048, 0, 0,
	0, 455, 451, 0, 460, 466, 465, 471, -2, 0,
	0, 0, 0, -2, 0, 0, 1306, 1300, 1301, 0,
	0, 0, 0, 2725, 1480, 1486, 0, 1581, 1596, 478,
	1487, 1508, 0, 0, 0, 1497, 1493, 1490, 1728, 0,
	0, 0, 0, 0, 1721, 1724, 548, 549, 300, 0,
	0, 0, 0, 0, 325, 0, 0, 0, 1084, 1088,
	0, 2321, 2321, 0, 2275, 0, 0, 0, 0, 0,
	0, 281, 0, 284, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 0, 283, 273, 1697, 0, 0, 666,
	0, 0, 830, 0, 853, 856, 865, 867, 870, 914,
	916, 933, 943, 966, 967, 1105, 0, 1105, 0, 0,
	987, 1544, 0, 1619, 1550, 1601, 1602, 0, 1332, 0,
	1862, 1907, 0, 0, -2, 0, 0, 1911, 0, 0,
	0, -2, 0, 0, 0, 2168, 2170, 0, 2224, 2159,
	2009, 0, 0, 0, 2013, 1997, 1998, 0, 2119, 2185,
	2214, 2218, 0, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	0, 2264, 2299, 2303, 2092, 2093, 2097, 2278, 0, 0,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 1832, 0, 0, 2186, 2197, 2199, 1949, 1950, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, -2,
	-2, -2, 1967, 1968, 1969, -2, -2, -2, 1974, 0,
	0, 0, 2200, 2202, 2203, 2207, 2208, 0, 2075, 2076,
	2077, 2209, 0, 1583, 1577, 1638, 0, 1726, 1642, 0,
	1638, 1638, 1590, 1686, 0, 0, 1710, 0, 1658, 0,
	1659, 0, 1691, 0, 1666, 1669, 1670, 1680, 0, 1672,
	0, 1675, 0, 2009, -2, 326, 328, 330, 0, 333,
	334, 0, 0, 616, 617, 0, 615, 599, 0, 0,
	1736, 0, 0, 1812, 1816, 1840, 625, 626, 0, 624,
	510, 519, 235, 0, 1695, 0, 0, 0, 0, 0,
	0, 206, 1125, 1162, 0, 0, 0, 1152, 0, 0,
	1168, 169, 170, 171, 0, 0, 0, 0, 180, 0,
	0, 177, 0, 186, 190, 1112, 0, 0, 0, 0,
	1340, 0, 0, 0, 141, 142, 143, 0, 148, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1471, 0, 1461, 0, 0, 0, 208, 0,
	0, 0, 1329, 229, 0, 0, 0, 0, 0, 1240,
	1293, 1294, 1249, 1353, 1357, 1365, 0, 0, 0, 0,
	631, 0, 636, 1390, 0, 247, 245, 0, 248, 0,
	251, 252, 0, 254, 247, 241, 0, 0, 0, 1199,
	396, 1051, 1169, 0, 1171, 0, 1049, 0, 0, 1170,
	447, 0, 454, 0, 468, 0, 0, 1220, 0, 0,
	1244, 1264, 1199, 0, 1305, 1307, 0, 1315, 0, 0,
	0, 1482, 1486, 0, 1475, 1476, 1615, 1488, 1506, -2,
	0, 0, 1596, 1514, 1511, 1517, 1518, 0, 322, 0,
	317, 319, 0, 303, 0, 0, 1080, 1085, 0, 0,
	0, 0, 0, 1499, 1501, 0, 1024, 1027, 0, 0,
	0, 0, 0, 0, 272, 283, 1697, 309, 0, 824,
	848, 924, 968, 1104, 0, 0, 970, 0, 0, 1618,
	1605, 1606, 1603, 1332, 1909, 1913, 0, 0, 0, 1915,
	-2, 0, 1937, -2, -2, 2171, 2223, 1988, 1596, 2010,
	2012, 1999, 2217, 1857, 0, 2099, 2096, 0, 2083, 0,
	2034, 2035, 0, 0, 2038, 2040, 2041, 2042, 1796, 1789,
	1788, 2196, 0, 0, 0, 0, 2074, 1578, 0, 2088,
	0, 0, 1646, 2088, 2088, 1687, 0, 1689, 1656, 1647,
	0, 2299, 1682, 1674, 0, 0, 331, 0, 335, 336,
	0, 0, 1730, 1735, 0, 1741, 1811, 0, 236, 163,
	164, 1344, 1348, 1345, 0, 166, 0, 1126, 0, 1129,
	0, 0, 0, 0, 1136, 1153, 0, 0, 0, 0,
	0, 0, 1155, 0, 1154, 0, 0, 1185, 0, 1320,
	1327, 0, -2, 0, 0, 0, 173, 196, 0, 0,
	0, 0, 199, 1394, 175, 0, 0, 205, 205, 0,
	0, 1336, 1338, 1351, 0, 0, 0, 0, 151, 0,
	0, 1354, 1358, 1366, 1361, 1363, 1369, 0, 103, 0,
	1472, 0, 0, 1371, 218, 219, 0, 205, 0, 205,
	211, 205, 1329, 0, 0, 0, 0, 0, 0, 0,
	1374, 1375, 238, 0, 0, 0, 0, 240, 315, 247,
	384, 0, 1099, 0, 1181, 1173, 1174, 1175, 0, 1180,
	1182, 0, 0, 1065, 1050, 0, 1061, 0, 0, 1078,
	1053, 0, 452, 469, 0, 472, 0, 475, 1039, 1217,
	1261, 1199, 0, 1297, 0, 0, 0, 0, 0, 0,
	0, 1484, 1486, 0, 1477, 1478, 1508, 1614, 0, 0,
	0, 1496, 1615, 0, 324, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 285, 0, 286, 287,
	288, 295, 274, 275, 668, 670, 0, 0, 676, 1103,
	0, 0, 0, 0, 1604, 1917, -2, -2, 1938, 0,
	2300, 2302, 1596, 0, 2085, 1598, 0, 0, -2, 0,
	0, 0, 1579, 1562, 0, 1637, 1629, 1631, 1633, 2610,
	2392, 2724, 1563, 1564, 1709, 0, 1677, 332, 618, 0,
	0, 1737, 0, 0, 0, 1346, 168, 0, 1130, 1131,
	2274, 1133, 0, 1135, 1137, 1138, 1139, 0, 1142, 0,
	2323, 0, 1147, 1150, 1151, 0, 0, 1164, 1186, 0,
	1195, 0, 1322, 1332, 1326, 0, 1324, 1197, 0, 172,
	198, 174, 200, 195, 0, 1329, 0, 176, 185, 0,
	0, 123, 0, 0, 2386, 154, 152, 150, 101, 1333,
	125, 0, 220, 228, 1328, 230, 215, 205, 0, 1355,
	1359, 1367, 0, 1382, 1383, 1384, 1385, 0, 0, 0,
	0, 249, 0, 250, 253, 0, 0, 1114, 0, 1052,
	1172, 0, 1183, 1184, 1055, 0, 1054, 0, 0, 0,
	0, 0, 453, 456, 0, 459, 0, 0, 0, 0,
	0, 1308, 1306, 0, 1314, 0, 0, 0, 1460, 0,
	0, 1479, 1480, 476, 1502, 0, 0, 1508, 1519, 302,
	0, 0, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1087, 1197, 0, 0, 1161, 0, 307, 282,
	0, 672, 0, 674, 0, 969, 971, 0, 0, 2011,
	2103, 0, 0, 2036, 2037, -2, 0, 1977, 2087, 2089,
	0, 0, 0, 0, 0, 1648, 619, 1731, 627, 1342,
	0, 1349, 1128, 1132, 0, 0, 0, 1143, 1203, 0,
	0, 1220, 1220, 1156, 0, 0, 1189, 1190, 1099, 0,
	1191, 1192, 1193, 1321, 1607, 1327, 1099, 0, 0, 197,
	202, 0, 0, 0, 0, 0, 0, 0, 209, 231,
	1329, 0, 1386, 1387, 0, 0, 246, 267, 0, 1262,
	1053, 1113, 0, 0, 1063, 0, 1066, 0, 1062, 1059,
	1060, 1051, 0, 457, 458, 473, 0, 474, 0, 1265,
	0, 0, 1315, 0, 0, 1467, 1459, 1486, 1481, 1482,
	1728, 1505, 1509, 0, 0, 1195, 1197, 1110, 0, 671,
	0, 0, 979, 980, 0, 0, 0, 0, 2098, 1599,
	1978, 0, 0, 1632, 1634, 1635, 1636, 1343, 0, 0,
	1141, 1208, 0, 0, 0, 0, 0, 1157, 1187, 1188,
	1110, 0, 1325, 1323, 1166, 0, 1199, 178, 0, 1197,
	0, 1119, 0, 0, 1122, 0, 0, 155, 2386, 153,
	0, 205, 1379, 205, 0, 270, 0, 261, 259, 260,
	1055, 0, 0, 1177, 1179, 0, 1067, 1099, 1065, 470,
	1263, 1298, 1197, 0, 1195, 0, 1474, 1486, 1468, 1469,
	0, 1484, 0, 325, 325, 1099, 1195, 1053, 1109, 325,
	673, 675, 2095, 2115, 2104, -2, 2681, 2393, 0, 2115,
	2115, 2090, 2091, 0, 0, 1144, 1204, 1205, 0, 1200,
	1201, 1202, 2322, 1145, 1146, 1148, 1149, 1185, 0, 0,
	1203, 201, 1099, 1116, 0, 0, 1117, 0, 0, 158,
	0, 160, 232, 1377, 0, 1380, 0, 255, 0, 0,
	1047, 0, 1176, 0, 0, 0, 0, 1114, 1055, 1195,
	0, 1099, 0, 1463, 1473, 0, 1483, 1460, 0, 304,
	305, 1110, 1099, 1728, 0, 306, 2100, 0, 0, 2106,
	2107, 2108, 2109, 2110, 2101, 2102, 1134, 0, 1206, 0,
	1207, 0, 0, 0, 1728, 1194, 0, 1208, 183, 1120,
	0, 1123, 0, 156, 0, 0, 0, 265, 266, 1044,
	1046, 0, 1178, 1056, 0, 1058, 1053, 1064, 1099, 0,
	1110, 0, 1456, 1462, 1466, 2283, 1467, 1503, 0, 1053,
	1110, 1160, 0, 2112, 2113, 0, 0, 0, 1209, 0,
	1212, 1213, 0, 1210, 1165, 0, 1185, 0, 0, 1378,
	205, 0, 0, 1057, 1055, 1110, 1197, 1053, 1195, 1474,
	0, 1728, 1053, 2111, 2114, 2105, 1140, 1211, 1214, 1215,
	1196, 1167, 0, 0, 1381, 268, 0, 1102, 1047, 1053,
	1195, 1728, 1099, 1463, 1728, 1158, 1728, 1107, 0, 0,
	1098, 1100, 1101, 1045, 1728, 1099, 1311, 1110, 1457, 1504,
	1159, 1121, 1106, 0, 269, 1309, 1110, 1053, 0, 1053,
	1728, 0, 1728, 1312, 1107, 1310, 1124,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	602, 603, 595, 593, 607, 594, 604, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 610, 3,
	583, 585, 584, 588, 606, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 600, 3, 601, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 608, 590, 609, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 605, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1503
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2466
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2517
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2548
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2623
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2632
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2802
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3040
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3081
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3090
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3096
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3101
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3111
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3116
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3147
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3223
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3407
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3447
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3450
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			return helpWith(sqllex, "CREATE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "create access method")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "create cast")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "create publication")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplemented(sqllex, "create rule")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create server")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3491
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3494
		{
		}
	case 408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3495
		{
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3498
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "drop server")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3584
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3681
		{

			sqlVAL.union.val = nil
		}
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3713
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3741
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return helpWith(sqllex, "DELETE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3768
		{
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "DROP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3994
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4024
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4060
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4092
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "DELETE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "DELETE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "INSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4173
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4206
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4296
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4311
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "GRANT")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4374
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "RESET")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "USE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4460
		{
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4667
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			return unimplemented(sqllex, "set from current")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4725
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4730
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = tree.Low
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = tree.Normal
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = tree.High
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4862
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4910
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4946
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.str = "client_encoding"
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.str = "timezone"
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4982
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4997
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5027
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5054
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5086
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5207
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5228
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = true
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5337
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5430
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5437
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = true
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = false
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5507
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = true
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = false
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5546
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5554
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5565
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5587
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5615
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5625
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5630
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5654
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5698
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5706
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5737
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
		}
	case 979:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5750
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5773
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5844
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5854
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5861
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6001
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6104
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6114
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6144
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6146
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6157
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6197
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6299
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6315
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{

			sqlVAL.union.val = nil
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.str = ""
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = nil
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6383
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6413
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6427
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6442
		{
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6443
		{
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6444
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6499
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6549
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6565
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.str = ""
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6713
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6746
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6817
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{

			sqlVAL.union.val = true
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = false
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6879
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6979
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6990
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7007
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7017
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7097
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7098
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7102
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7258
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7267
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7275
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7301
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7303
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7307
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7315
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7393
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = true
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{

			sqlVAL.union.val = true
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = false
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7442
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7456
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7468
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7480
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7490
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7500
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = nil
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7619
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7644
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7646
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7648
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7650
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7652
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7654
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7692
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7710
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7729
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7746
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7763
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = false
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = true
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = false
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = false
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7827
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7833
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.str = ""
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.str = ""
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7900
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7906
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8131
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8137
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8149
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8155
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8169
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8175
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8208
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8234
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = false
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.Types
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8290
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8294
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8323
		{
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8326
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8327
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8338
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8386
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8394
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8440
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8477
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8492
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8513
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8514
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8561
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8650
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8660
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8673
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{

		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8710
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.str = ""
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.str = ""
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.str = ""
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.str = ""
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8765
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8808
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8839
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8888
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8957
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8989
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9010
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9025
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9111
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9119
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9204
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9206
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = false
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9381
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = nil
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9394
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9395
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = false
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9425
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9429
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9496
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9610
		{
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9683
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9698
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9720
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9730
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9751
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9782
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9823
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9868
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9879
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9909
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9942
		{
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = nil
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = true
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = false
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.str = tree.AstFull
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.str = tree.AstRight
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.str = tree.AstInner
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10062
		{
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.str = tree.AstHash
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.str = ""
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10136
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10154
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10166
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10176
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = true
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = false
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10238
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10246
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10265
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10275
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10295
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10356
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10357
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = types.Geography
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10406
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10414
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10440
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10448
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = nil
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = types.Int2
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = types.Int
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = types.Float4
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = types.Float
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10507
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = types.Bool
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = types.Float
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10540
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10546
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10568
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = types.String
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = true
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = false
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = types.Date
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10625
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10639
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10648
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10656
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10673
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = true
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = false
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = false
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = types.Interval
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10697
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10781
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = nil
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10826
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10886
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10939
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11035
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11222
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11244
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11352
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11360
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11461
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11487
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11511
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11545
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11556
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11557
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11581
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11647
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11772
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11833
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11848
		{
			return unimplemented(sqllex, "treat")
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.str = ""
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12023
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12120
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12536
		{
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12537
		{
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12609
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12617
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12690
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12702
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12706
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12715
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12726
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12743
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12760
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12935
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12979
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12999
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.str = ""
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
