// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14510

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1714,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	270, 441,
	-2, 0,
	-1, 71,
	8, 898,
	29, 898,
	618, 898,
	619, 898,
	-2, 0,
	-1, 72,
	8, 898,
	29, 898,
	618, 898,
	619, 898,
	-2, 0,
	-1, 79,
	252, 266,
	540, 266,
	-2, 0,
	-1, 93,
	240, 1447,
	254, 1447,
	270, 437,
	408, 437,
	419, 1194,
	460, 437,
	474, 1194,
	524, 1194,
	552, 437,
	579, 1194,
	-2, 0,
	-1, 99,
	137, 1714,
	247, 1714,
	563, 1714,
	564, 1714,
	-2, 0,
	-1, 117,
	156, 1685,
	176, 1685,
	189, 1685,
	250, 1685,
	283, 1685,
	357, 1685,
	368, 1685,
	558, 1685,
	-2, 1656,
	-1, 159,
	164, 1025,
	269, 1025,
	411, 986,
	479, 986,
	523, 986,
	543, 1025,
	545, 986,
	-2, 0,
	-1, 164,
	4, 1716,
	21, 1716,
	22, 1716,
	23, 1716,
	24, 1716,
	25, 1716,
	26, 1716,
	27, 1716,
	28, 1716,
	30, 1716,
	31, 1716,
	37, 1716,
	41, 1716,
	43, 1716,
	44, 1716,
	46, 1716,
	47, 1716,
	48, 1716,
	49, 1716,
	50, 1716,
	51, 1716,
	52, 1716,
	53, 1716,
	54, 1716,
	56, 1716,
	57, 1716,
	58, 1716,
	59, 1716,
	61, 1716,
	62, 1716,
	63, 1716,
	64, 1716,
	65, 1716,
	66, 1716,
	67, 1716,
	71, 1716,
	72, 1716,
	73, 1716,
	74, 1716,
	76, 1716,
	77, 1716,
	78, 1716,
	82, 1716,
	83, 1716,
	84, 1716,
	85, 1716,
	86, 1716,
	87, 1716,
	88, 1716,
	89, 1716,
	92, 1716,
	93, 1716,
	94, 1716,
	95, 1716,
	96, 1716,
	98, 1716,
	100, 1716,
	101, 1716,
	102, 1716,
	103, 1716,
	104, 1716,
	105, 1716,
	107, 1716,
	108, 1716,
	109, 1716,
	111, 1716,
	112, 1716,
	113, 1716,
	121, 1716,
	122, 1716,
	123, 1716,
	124, 1716,
	125, 1716,
	127, 1716,
	128, 1716,
	129, 1716,
	130, 1716,
	132, 1716,
	133, 1716,
	134, 1716,
	136, 1716,
	137, 1716,
	138, 1716,
	140, 1716,
	141, 1716,
	142, 1716,
	145, 1716,
	146, 1716,
	147, 1716,
	149, 1716,
	150, 1716,
	151, 1716,
	153, 1716,
	154, 1716,
	155, 1716,
	157, 1716,
	158, 1716,
	159, 1716,
	160, 1716,
	161, 1716,
	162, 1716,
	163, 1716,
	164, 1716,
	165, 1716,
	166, 1716,
	167, 1716,
	168, 1716,
	169, 1716,
	170, 1716,
	171, 1716,
	172, 1716,
	173, 1716,
	175, 1716,
	181, 1716,
	182, 1716,
	183, 1716,
	184, 1716,
	188, 1716,
	190, 1716,
	191, 1716,
	192, 1716,
	194, 1716,
	197, 1716,
	198, 1716,
	199, 1716,
	200, 1716,
	201, 1716,
	202, 1716,
	203, 1716,
	204, 1716,
	205, 1716,
	206, 1716,
	207, 1716,
	208, 1716,
	209, 1716,
	210, 1716,
	212, 1716,
	213, 1716,
	215, 1716,
	216, 1716,
	218, 1716,
	219, 1716,
	220, 1716,
	221, 1716,
	222, 1716,
	223, 1716,
	224, 1716,
	225, 1716,
	226, 1716,
	227, 1716,
	229, 1716,
	230, 1716,
	232, 1716,
	233, 1716,
	234, 1716,
	235, 1716,
	236, 1716,
	240, 1716,
	241, 1716,
	242, 1716,
	243, 1716,
	246, 1716,
	247, 1716,
	248, 1716,
	249, 1716,
	251, 1716,
	253, 1716,
	254, 1716,
	256, 1716,
	258, 1716,
	259, 1716,
	260, 1716,
	262, 1716,
	266, 1716,
	267, 1716,
	268, 1716,
	269, 1716,
	270, 1716,
	271, 1716,
	273, 1716,
	274, 1716,
	275, 1716,
	277, 1716,
	278, 1716,
	280, 1716,
	281, 1716,
	284, 1716,
	285, 1716,
	286, 1716,
	287, 1716,
	288, 1716,
	289, 1716,
	290, 1716,
	293, 1716,
	294, 1716,
	295, 1716,
	296, 1716,
	298, 1716,
	299, 1716,
	300, 1716,
	301, 1716,
	302, 1716,
	303, 1716,
	304, 1716,
	305, 1716,
	306, 1716,
	307, 1716,
	308, 1716,
	309, 1716,
	310, 1716,
	311, 1716,
	312, 1716,
	313, 1716,
	314, 1716,
	315, 1716,
	316, 1716,
	317, 1716,
	318, 1716,
	319, 1716,
	320, 1716,
	322, 1716,
	324, 1716,
	325, 1716,
	326, 1716,
	327, 1716,
	328, 1716,
	329, 1716,
	330, 1716,
	331, 1716,
	332, 1716,
	333, 1716,
	334, 1716,
	335, 1716,
	336, 1716,
	337, 1716,
	338, 1716,
	339, 1716,
	340, 1716,
	342, 1716,
	343, 1716,
	345, 1716,
	347, 1716,
	348, 1716,
	349, 1716,
	350, 1716,
	352, 1716,
	353, 1716,
	354, 1716,
	355, 1716,
	356, 1716,
	359, 1716,
	361, 1716,
	363, 1716,
	364, 1716,
	365, 1716,
	366, 1716,
	369, 1716,
	370, 1716,
	371, 1716,
	373, 1716,
	375, 1716,
	376, 1716,
	377, 1716,
	378, 1716,
	379, 1716,
	380, 1716,
	381, 1716,
	382, 1716,
	383, 1716,
	384, 1716,
	385, 1716,
	386, 1716,
	387, 1716,
	389, 1716,
	390, 1716,
	391, 1716,
	392, 1716,
	393, 1716,
	394, 1716,
	395, 1716,
	396, 1716,
	397, 1716,
	398, 1716,
	399, 1716,
	400, 1716,
	401, 1716,
	402, 1716,
	403, 1716,
	405, 1716,
	406, 1716,
	407, 1716,
	409, 1716,
	410, 1716,
	411, 1716,
	412, 1716,
	413, 1716,
	414, 1716,
	415, 1716,
	416, 1716,
	417, 1716,
	418, 1716,
	419, 1716,
	420, 1716,
	421, 1716,
	423, 1716,
	425, 1716,
	426, 1716,
	427, 1716,
	433, 1716,
	434, 1716,
	435, 1716,
	437, 1716,
	438, 1716,
	439, 1716,
	440, 1716,
	441, 1716,
	442, 1716,
	443, 1716,
	444, 1716,
	445, 1716,
	446, 1716,
	448, 1716,
	449, 1716,
	450, 1716,
	452, 1716,
	453, 1716,
	454, 1716,
	455, 1716,
	456, 1716,
	457, 1716,
	458, 1716,
	460, 1716,
	461, 1716,
	462, 1716,
	463, 1716,
	464, 1716,
	465, 1716,
	466, 1716,
	467, 1716,
	468, 1716,
	469, 1716,
	470, 1716,
	471, 1716,
	472, 1716,
	474, 1716,
	475, 1716,
	476, 1716,
	477, 1716,
	478, 1716,
	479, 1716,
	481, 1716,
	482, 1716,
	483, 1716,
	484, 1716,
	485, 1716,
	486, 1716,
	488, 1716,
	489, 1716,
	490, 1716,
	491, 1716,
	492, 1716,
	493, 1716,
	494, 1716,
	495, 1716,
	497, 1716,
	499, 1716,
	500, 1716,
	501, 1716,
	502, 1716,
	503, 1716,
	504, 1716,
	505, 1716,
	506, 1716,
	507, 1716,
	508, 1716,
	509, 1716,
	510, 1716,
	511, 1716,
	512, 1716,
	513, 1716,
	514, 1716,
	515, 1716,
	516, 1716,
	517, 1716,
	519, 1716,
	520, 1716,
	522, 1716,
	523, 1716,
	525, 1716,
	526, 1716,
	527, 1716,
	528, 1716,
	529, 1716,
	530, 1716,
	532, 1716,
	533, 1716,
	535, 1716,
	536, 1716,
	537, 1716,
	538, 1716,
	539, 1716,
	541, 1716,
	543, 1716,
	544, 1716,
	545, 1716,
	546, 1716,
	547, 1716,
	548, 1716,
	549, 1716,
	551, 1716,
	552, 1716,
	553, 1716,
	554, 1716,
	556, 1716,
	557, 1716,
	560, 1716,
	561, 1716,
	562, 1716,
	563, 1716,
	564, 1716,
	565, 1716,
	566, 1716,
	567, 1716,
	569, 1716,
	572, 1716,
	573, 1716,
	574, 1716,
	575, 1716,
	576, 1716,
	577, 1716,
	579, 1716,
	580, 1716,
	581, 1716,
	582, 1716,
	583, 1716,
	584, 1716,
	585, 1716,
	586, 1716,
	591, 1716,
	592, 1716,
	593, 1716,
	594, 1716,
	595, 1716,
	596, 1716,
	-2, 0,
	-1, 165,
	1, 1564,
	135, 1564,
	258, 1564,
	344, 1564,
	406, 1564,
	415, 1564,
	600, 1564,
	631, 1564,
	-2, 0,
	-1, 167,
	1, 1564,
	631, 1564,
	-2, 0,
	-1, 168,
	1, 1564,
	631, 1564,
	-2, 0,
	-1, 169,
	1, 1564,
	540, 1564,
	631, 1564,
	-2, 0,
	-1, 201,
	156, 1684,
	176, 1684,
	189, 1684,
	250, 1684,
	283, 1684,
	357, 1684,
	368, 1684,
	558, 1684,
	-2, 1659,
	-1, 251,
	4, 1723,
	5, 1723,
	6, 1723,
	7, 1723,
	8, 1723,
	9, 1723,
	10, 1723,
	21, 1723,
	22, 1723,
	23, 1723,
	24, 1723,
	25, 1723,
	26, 1723,
	27, 1723,
	28, 1723,
	30, 1723,
	31, 1723,
	37, 1723,
	38, 1723,
	41, 1723,
	43, 1723,
	44, 1723,
	45, 1723,
	46, 1723,
	47, 1723,
	48, 1723,
	49, 1723,
	50, 1723,
	51, 1723,
	52, 1723,
	53, 1723,
	54, 1723,
	56, 1723,
	57, 1723,
	58, 1723,
	59, 1723,
	61, 1723,
	62, 1723,
	63, 1723,
	64, 1723,
	65, 1723,
	66, 1723,
	67, 1723,
	68, 1723,
	69, 1723,
	70, 1723,
	71, 1723,
	72, 1723,
	73, 1723,
	74, 1723,
	76, 1723,
	77, 1723,
	78, 1723,
	80, 1723,
	82, 1723,
	83, 1723,
	84, 1723,
	85, 1723,
	86, 1723,
	87, 1723,
	88, 1723,
	89, 1723,
	92, 1723,
	93, 1723,
	94, 1723,
	95, 1723,
	96, 1723,
	98, 1723,
	100, 1723,
	101, 1723,
	102, 1723,
	103, 1723,
	104, 1723,
	105, 1723,
	107, 1723,
	108, 1723,
	109, 1723,
	110, 1723,
	111, 1723,
	112, 1723,
	113, 1723,
	114, 1723,
	115, 1723,
	116, 1723,
	117, 1723,
	118, 1723,
	119, 1723,
	120, 1723,
	121, 1723,
	122, 1723,
	123, 1723,
	124, 1723,
	125, 1723,
	126, 1723,
	127, 1723,
	128, 1723,
	129, 1723,
	130, 1723,
	131, 1723,
	132, 1723,
	133, 1723,
	134, 1723,
	136, 1723,
	137, 1723,
	138, 1723,
	140, 1723,
	141, 1723,
	142, 1723,
	145, 1723,
	146, 1723,
	147, 1723,
	149, 1723,
	150, 1723,
	151, 1723,
	153, 1723,
	154, 1723,
	155, 1723,
	157, 1723,
	158, 1723,
	159, 1723,
	160, 1723,
	161, 1723,
	162, 1723,
	163, 1723,
	164, 1723,
	165, 1723,
	166, 1723,
	167, 1723,
	168, 1723,
	169, 1723,
	170, 1723,
	171, 1723,
	172, 1723,
	173, 1723,
	174, 1723,
	175, 1723,
	181, 1723,
	182, 1723,
	183, 1723,
	184, 1723,
	188, 1723,
	190, 1723,
	191, 1723,
	192, 1723,
	194, 1723,
	196, 1723,
	197, 1723,
	198, 1723,
	199, 1723,
	200, 1723,
	201, 1723,
	202, 1723,
	203, 1723,
	204, 1723,
	205, 1723,
	206, 1723,
	207, 1723,
	208, 1723,
	209, 1723,
	210, 1723,
	212, 1723,
	213, 1723,
	215, 1723,
	216, 1723,
	218, 1723,
	219, 1723,
	220, 1723,
	221, 1723,
	222, 1723,
	223, 1723,
	224, 1723,
	225, 1723,
	226, 1723,
	227, 1723,
	228, 1723,
	229, 1723,
	230, 1723,
	232, 1723,
	233, 1723,
	234, 1723,
	235, 1723,
	236, 1723,
	240, 1723,
	241, 1723,
	242, 1723,
	243, 1723,
	245, 1723,
	246, 1723,
	247, 1723,
	248, 1723,
	249, 1723,
	251, 1723,
	253, 1723,
	254, 1723,
	255, 1723,
	256, 1723,
	257, 1723,
	258, 1723,
	259, 1723,
	260, 1723,
	261, 1723,
	262, 1723,
	266, 1723,
	267, 1723,
	268, 1723,
	269, 1723,
	270, 1723,
	271, 1723,
	273, 1723,
	274, 1723,
	275, 1723,
	277, 1723,
	278, 1723,
	279, 1723,
	280, 1723,
	281, 1723,
	282, 1723,
	284, 1723,
	285, 1723,
	286, 1723,
	287, 1723,
	288, 1723,
	289, 1723,
	290, 1723,
	291, 1723,
	292, 1723,
	293, 1723,
	294, 1723,
	295, 1723,
	296, 1723,
	298, 1723,
	299, 1723,
	300, 1723,
	301, 1723,
	302, 1723,
	303, 1723,
	304, 1723,
	305, 1723,
	306, 1723,
	307, 1723,
	308, 1723,
	309, 1723,
	310, 1723,
	311, 1723,
	312, 1723,
	313, 1723,
	314, 1723,
	315, 1723,
	316, 1723,
	317, 1723,
	318, 1723,
	319, 1723,
	320, 1723,
	322, 1723,
	323, 1723,
	324, 1723,
	325, 1723,
	326, 1723,
	327, 1723,
	328, 1723,
	329, 1723,
	330, 1723,
	331, 1723,
	332, 1723,
	333, 1723,
	334, 1723,
	335, 1723,
	336, 1723,
	337, 1723,
	338, 1723,
	339, 1723,
	340, 1723,
	341, 1723,
	342, 1723,
	343, 1723,
	344, 1723,
	345, 1723,
	346, 1723,
	347, 1723,
	348, 1723,
	349, 1723,
	350, 1723,
	351, 1723,
	352, 1723,
	353, 1723,
	354, 1723,
	355, 1723,
	356, 1723,
	359, 1723,
	361, 1723,
	364, 1723,
	365, 1723,
	366, 1723,
	369, 1723,
	370, 1723,
	371, 1723,
	372, 1723,
	373, 1723,
	374, 1723,
	375, 1723,
	376, 1723,
	377, 1723,
	378, 1723,
	379, 1723,
	380, 1723,
	381, 1723,
	382, 1723,
	383, 1723,
	384, 1723,
	385, 1723,
	386, 1723,
	387, 1723,
	389, 1723,
	390, 1723,
	391, 1723,
	392, 1723,
	393, 1723,
	394, 1723,
	395, 1723,
	396, 1723,
	397, 1723,
	398, 1723,
	399, 1723,
	400, 1723,
	401, 1723,
	402, 1723,
	403, 1723,
	405, 1723,
	406, 1723,
	407, 1723,
	409, 1723,
	410, 1723,
	411, 1723,
	412, 1723,
	413, 1723,
	414, 1723,
	415, 1723,
	416, 1723,
	417, 1723,
	418, 1723,
	419, 1723,
	420, 1723,
	421, 1723,
	423, 1723,
	425, 1723,
	426, 1723,
	427, 1723,
	433, 1723,
	434, 1723,
	435, 1723,
	437, 1723,
	438, 1723,
	439, 1723,
	440, 1723,
	441, 1723,
	442, 1723,
	443, 1723,
	444, 1723,
	445, 1723,
	446, 1723,
	448, 1723,
	449, 1723,
	450, 1723,
	451, 1723,
	452, 1723,
	453, 1723,
	454, 1723,
	455, 1723,
	456, 1723,
	457, 1723,
	458, 1723,
	460, 1723,
	461, 1723,
	462, 1723,
	463, 1723,
	464, 1723,
	465, 1723,
	466, 1723,
	467, 1723,
	468, 1723,
	469, 1723,
	470, 1723,
	471, 1723,
	472, 1723,
	474, 1723,
	475, 1723,
	476, 1723,
	477, 1723,
	478, 1723,
	479, 1723,
	480, 1723,
	481, 1723,
	482, 1723,
	483, 1723,
	484, 1723,
	485, 1723,
	486, 1723,
	487, 1723,
	488, 1723,
	489, 1723,
	490, 1723,
	491, 1723,
	492, 1723,
	493, 1723,
	494, 1723,
	495, 1723,
	497, 1723,
	499, 1723,
	500, 1723,
	501, 1723,
	502, 1723,
	503, 1723,
	504, 1723,
	505, 1723,
	506, 1723,
	507, 1723,
	508, 1723,
	509, 1723,
	510, 1723,
	511, 1723,
	512, 1723,
	513, 1723,
	514, 1723,
	515, 1723,
	516, 1723,
	517, 1723,
	519, 1723,
	520, 1723,
	521, 1723,
	522, 1723,
	523, 1723,
	525, 1723,
	526, 1723,
	527, 1723,
	528, 1723,
	529, 1723,
	530, 1723,
	532, 1723,
	533, 1723,
	535, 1723,
	536, 1723,
	537, 1723,
	538, 1723,
	539, 1723,
	541, 1723,
	543, 1723,
	544, 1723,
	545, 1723,
	546, 1723,
	547, 1723,
	548, 1723,
	549, 1723,
	550, 1723,
	551, 1723,
	552, 1723,
	553, 1723,
	554, 1723,
	556, 1723,
	557, 1723,
	559, 1723,
	560, 1723,
	561, 1723,
	562, 1723,
	563, 1723,
	564, 1723,
	565, 1723,
	566, 1723,
	567, 1723,
	568, 1723,
	569, 1723,
	572, 1723,
	573, 1723,
	574, 1723,
	575, 1723,
	576, 1723,
	577, 1723,
	579, 1723,
	580, 1723,
	581, 1723,
	582, 1723,
	583, 1723,
	584, 1723,
	585, 1723,
	586, 1723,
	591, 1723,
	592, 1723,
	593, 1723,
	594, 1723,
	595, 1723,
	596, 1723,
	597, 1723,
	611, 1723,
	618, 1723,
	619, 1723,
	620, 1723,
	628, 1723,
	632, 1723,
	-2, 0,
	-1, 793,
	4, 1445,
	21, 1445,
	22, 1445,
	23, 1445,
	24, 1445,
	25, 1445,
	26, 1445,
	27, 1445,
	28, 1445,
	30, 1445,
	31, 1445,
	37, 1445,
	41, 1445,
	43, 1445,
	44, 1445,
	46, 1445,
	47, 1445,
	48, 1445,
	49, 1445,
	50, 1445,
	51, 1445,
	52, 1445,
	53, 1445,
	54, 1445,
	56, 1445,
	57, 1445,
	58, 1445,
	59, 1445,
	61, 1445,
	62, 1445,
	63, 1445,
	64, 1445,
	65, 1445,
	66, 1445,
	67, 1445,
	71, 1445,
	72, 1445,
	73, 1445,
	74, 1445,
	76, 1445,
	77, 1445,
	78, 1445,
	82, 1445,
	83, 1445,
	84, 1445,
	85, 1445,
	86, 1445,
	87, 1445,
	88, 1445,
	89, 1445,
	92, 1445,
	93, 1445,
	94, 1445,
	95, 1445,
	96, 1445,
	98, 1445,
	100, 1445,
	101, 1445,
	102, 1445,
	103, 1445,
	104, 1445,
	105, 1445,
	107, 1445,
	108, 1445,
	109, 1445,
	111, 1445,
	112, 1445,
	113, 1445,
	121, 1445,
	122, 1445,
	123, 1445,
	124, 1445,
	125, 1445,
	127, 1445,
	128, 1445,
	129, 1445,
	130, 1445,
	132, 1445,
	133, 1445,
	134, 1445,
	136, 1445,
	137, 1445,
	138, 1445,
	140, 1445,
	141, 1445,
	142, 1445,
	145, 1445,
	146, 1445,
	147, 1445,
	149, 1445,
	150, 1445,
	151, 1445,
	153, 1445,
	154, 1445,
	155, 1445,
	157, 1445,
	158, 1445,
	159, 1445,
	160, 1445,
	161, 1445,
	162, 1445,
	163, 1445,
	164, 1445,
	165, 1445,
	166, 1445,
	167, 1445,
	168, 1445,
	169, 1445,
	170, 1445,
	171, 1445,
	172, 1445,
	173, 1445,
	175, 1445,
	181, 1445,
	182, 1445,
	183, 1445,
	184, 1445,
	188, 1445,
	190, 1445,
	191, 1445,
	192, 1445,
	194, 1445,
	197, 1445,
	198, 1445,
	199, 1445,
	200, 1445,
	201, 1445,
	202, 1445,
	203, 1445,
	204, 1445,
	205, 1445,
	206, 1445,
	207, 1445,
	208, 1445,
	209, 1445,
	210, 1445,
	212, 1445,
	213, 1445,
	215, 1445,
	216, 1445,
	218, 1445,
	219, 1445,
	220, 1445,
	221, 1445,
	222, 1445,
	223, 1445,
	224, 1445,
	225, 1445,
	226, 1445,
	227, 1445,
	229, 1445,
	230, 1445,
	232, 1445,
	233, 1445,
	234, 1445,
	235, 1445,
	236, 1445,
	240, 1445,
	241, 1445,
	242, 1445,
	243, 1445,
	246, 1445,
	247, 1445,
	248, 1445,
	249, 1445,
	251, 1445,
	253, 1445,
	254, 1445,
	256, 1445,
	258, 1445,
	259, 1445,
	260, 1445,
	262, 1445,
	266, 1445,
	267, 1445,
	268, 1445,
	269, 1445,
	270, 1445,
	271, 1445,
	273, 1445,
	274, 1445,
	275, 1445,
	277, 1445,
	278, 1445,
	280, 1445,
	281, 1445,
	284, 1445,
	285, 1445,
	286, 1445,
	287, 1445,
	288, 1445,
	289, 1445,
	290, 1445,
	293, 1445,
	294, 1445,
	295, 1445,
	296, 1445,
	298, 1445,
	299, 1445,
	300, 1445,
	301, 1445,
	302, 1445,
	303, 1445,
	304, 1445,
	305, 1445,
	306, 1445,
	307, 1445,
	308, 1445,
	309, 1445,
	310, 1445,
	311, 1445,
	312, 1445,
	313, 1445,
	314, 1445,
	315, 1445,
	316, 1445,
	317, 1445,
	318, 1445,
	319, 1445,
	320, 1445,
	322, 1445,
	324, 1445,
	325, 1445,
	326, 1445,
	327, 1445,
	328, 1445,
	329, 1445,
	330, 1445,
	331, 1445,
	332, 1445,
	333, 1445,
	334, 1445,
	335, 1445,
	336, 1445,
	337, 1445,
	338, 1445,
	339, 1445,
	340, 1445,
	342, 1445,
	343, 1445,
	345, 1445,
	347, 1445,
	348, 1445,
	349, 1445,
	350, 1445,
	352, 1445,
	353, 1445,
	354, 1445,
	355, 1445,
	356, 1445,
	359, 1445,
	361, 1445,
	364, 1445,
	365, 1445,
	366, 1445,
	369, 1445,
	370, 1445,
	371, 1445,
	373, 1445,
	375, 1445,
	376, 1445,
	377, 1445,
	378, 1445,
	379, 1445,
	380, 1445,
	381, 1445,
	382, 1445,
	383, 1445,
	384, 1445,
	385, 1445,
	386, 1445,
	387, 1445,
	389, 1445,
	390, 1445,
	391, 1445,
	392, 1445,
	393, 1445,
	394, 1445,
	395, 1445,
	396, 1445,
	397, 1445,
	398, 1445,
	399, 1445,
	400, 1445,
	401, 1445,
	402, 1445,
	403, 1445,
	405, 1445,
	406, 1445,
	407, 1445,
	409, 1445,
	410, 1445,
	411, 1445,
	412, 1445,
	413, 1445,
	414, 1445,
	415, 1445,
	416, 1445,
	417, 1445,
	418, 1445,
	419, 1445,
	420, 1445,
	421, 1445,
	423, 1445,
	425, 1445,
	426, 1445,
	427, 1445,
	433, 1445,
	434, 1445,
	435, 1445,
	437, 1445,
	438, 1445,
	439, 1445,
	440, 1445,
	441, 1445,
	442, 1445,
	443, 1445,
	444, 1445,
	445, 1445,
	446, 1445,
	448, 1445,
	449, 1445,
	450, 1445,
	452, 1445,
	453, 1445,
	454, 1445,
	455, 1445,
	456, 1445,
	457, 1445,
	458, 1445,
	460, 1445,
	461, 1445,
	462, 1445,
	463, 1445,
	464, 1445,
	465, 1445,
	466, 1445,
	467, 1445,
	468, 1445,
	469, 1445,
	470, 1445,
	471, 1445,
	472, 1445,
	474, 1445,
	475, 1445,
	476, 1445,
	477, 1445,
	478, 1445,
	479, 1445,
	481, 1445,
	482, 1445,
	483, 1445,
	484, 1445,
	485, 1445,
	486, 1445,
	488, 1445,
	489, 1445,
	490, 1445,
	491, 1445,
	492, 1445,
	493, 1445,
	494, 1445,
	495, 1445,
	497, 1445,
	499, 1445,
	500, 1445,
	501, 1445,
	502, 1445,
	503, 1445,
	504, 1445,
	505, 1445,
	506, 1445,
	507, 1445,
	508, 1445,
	509, 1445,
	510, 1445,
	511, 1445,
	512, 1445,
	513, 1445,
	514, 1445,
	515, 1445,
	516, 1445,
	517, 1445,
	519, 1445,
	520, 1445,
	522, 1445,
	523, 1445,
	525, 1445,
	526, 1445,
	527, 1445,
	528, 1445,
	529, 1445,
	530, 1445,
	532, 1445,
	533, 1445,
	535, 1445,
	536, 1445,
	537, 1445,
	538, 1445,
	539, 1445,
	541, 1445,
	543, 1445,
	544, 1445,
	545, 1445,
	546, 1445,
	547, 1445,
	548, 1445,
	549, 1445,
	551, 1445,
	552, 1445,
	553, 1445,
	554, 1445,
	556, 1445,
	557, 1445,
	560, 1445,
	561, 1445,
	562, 1445,
	563, 1445,
	564, 1445,
	565, 1445,
	566, 1445,
	567, 1445,
	569, 1445,
	572, 1445,
	573, 1445,
	574, 1445,
	575, 1445,
	576, 1445,
	577, 1445,
	579, 1445,
	580, 1445,
	581, 1445,
	582, 1445,
	583, 1445,
	584, 1445,
	585, 1445,
	586, 1445,
	591, 1445,
	592, 1445,
	593, 1445,
	594, 1445,
	595, 1445,
	596, 1445,
	-2, 0,
	-1, 812,
	195, 2519,
	540, 2519,
	610, 2519,
	630, 2519,
	-2, 0,
	-1, 813,
	195, 2505,
	540, 2505,
	610, 2505,
	630, 2505,
	-2, 0,
	-1, 815,
	195, 2783,
	540, 2783,
	610, 2783,
	630, 2783,
	-2, 0,
	-1, 818,
	195, 2633,
	540, 2633,
	610, 2633,
	630, 2633,
	-2, 0,
	-1, 819,
	195, 2827,
	540, 2827,
	610, 2827,
	630, 2827,
	-2, 0,
	-1, 827,
	195, 2661,
	540, 2661,
	610, 2661,
	630, 2661,
	-2, 764,
	-1, 843,
	8, 897,
	29, 897,
	618, 897,
	619, 897,
	-2, 902,
	-1, 847,
	1, 2573,
	631, 2573,
	-2, 902,
	-1, 848,
	1, 2621,
	631, 2621,
	-2, 902,
	-1, 851,
	1, 2666,
	631, 2666,
	-2, 895,
	-1, 852,
	1, 2722,
	631, 2722,
	-2, 896,
	-1, 853,
	1, 2578,
	631, 2578,
	-2, 899,
	-1, 854,
	1, 2492,
	631, 2492,
	-2, 900,
	-1, 889,
	630, 2451,
	633, 2451,
	-2, 1111,
	-1, 890,
	630, 2453,
	633, 2453,
	-2, 1112,
	-1, 891,
	630, 2452,
	633, 2452,
	-2, 1113,
	-1, 892,
	633, 2377,
	-2, 1114,
	-1, 917,
	189, 285,
	-2, 0,
	-1, 941,
	45, 2424,
	-2, 0,
	-1, 942,
	579, 1423,
	-2, 1195,
	-1, 958,
	4, 1857,
	21, 1857,
	22, 1857,
	23, 1857,
	24, 1857,
	25, 1857,
	26, 1857,
	27, 1857,
	28, 1857,
	30, 1857,
	31, 1857,
	37, 1857,
	41, 1857,
	43, 1857,
	44, 1857,
	46, 1857,
	47, 1857,
	48, 1857,
	49, 1857,
	50, 1857,
	51, 1857,
	52, 1857,
	53, 1857,
	54, 1857,
	56, 1857,
	57, 1857,
	58, 1857,
	59, 1857,
	61, 1857,
	62, 1857,
	63, 1857,
	64, 1857,
	65, 1857,
	66, 1857,
	67, 1857,
	71, 1857,
	72, 1857,
	73, 1857,
	74, 1857,
	76, 1857,
	77, 1857,
	78, 1857,
	82, 1857,
	83, 1857,
	84, 1857,
	85, 1857,
	86, 1857,
	87, 1857,
	88, 1857,
	89, 1857,
	92, 1857,
	93, 1857,
	94, 1857,
	95, 1857,
	96, 1857,
	98, 1857,
	100, 1857,
	101, 1857,
	102, 1857,
	103, 1857,
	104, 1857,
	105, 1857,
	107, 1857,
	108, 1857,
	109, 1857,
	111, 1857,
	112, 1857,
	113, 1857,
	121, 1857,
	122, 1857,
	123, 1857,
	124, 1857,
	125, 1857,
	127, 1857,
	128, 1857,
	129, 1857,
	130, 1857,
	132, 1857,
	133, 1857,
	134, 1857,
	136, 1857,
	137, 1857,
	138, 1857,
	140, 1857,
	141, 1857,
	142, 1857,
	145, 1857,
	146, 1857,
	147, 1857,
	149, 1857,
	150, 1857,
	151, 1857,
	153, 1857,
	154, 1857,
	155, 1857,
	157, 1857,
	158, 1857,
	159, 1857,
	160, 1857,
	161, 1857,
	162, 1857,
	163, 1857,
	164, 1857,
	165, 1857,
	166, 1857,
	167, 1857,
	168, 1857,
	169, 1857,
	170, 1857,
	171, 1857,
	172, 1857,
	173, 1857,
	175, 1857,
	181, 1857,
	182, 1857,
	183, 1857,
	184, 1857,
	188, 1857,
	190, 1857,
	191, 1857,
	192, 1857,
	194, 1857,
	197, 1857,
	198, 1857,
	199, 1857,
	200, 1857,
	201, 1857,
	202, 1857,
	203, 1857,
	204, 1857,
	205, 1857,
	206, 1857,
	207, 1857,
	208, 1857,
	209, 1857,
	210, 1857,
	212, 1857,
	213, 1857,
	215, 1857,
	216, 1857,
	218, 1857,
	219, 1857,
	220, 1857,
	221, 1857,
	222, 1857,
	223, 1857,
	224, 1857,
	225, 1857,
	226, 1857,
	227, 1857,
	229, 1857,
	230, 1857,
	232, 1857,
	233, 1857,
	234, 1857,
	235, 1857,
	236, 1857,
	240, 1857,
	241, 1857,
	242, 1857,
	243, 1857,
	246, 1857,
	247, 1857,
	248, 1857,
	249, 1857,
	251, 1857,
	253, 1857,
	254, 1857,
	256, 1857,
	258, 1857,
	259, 1857,
	260, 1857,
	262, 1857,
	266, 1857,
	267, 1857,
	268, 1857,
	269, 1857,
	270, 1857,
	271, 1857,
	273, 1857,
	274, 1857,
	275, 1857,
	277, 1857,
	278, 1857,
	280, 1857,
	281, 1857,
	284, 1857,
	285, 1857,
	286, 1857,
	287, 1857,
	288, 1857,
	289, 1857,
	290, 1857,
	293, 1857,
	294, 1857,
	295, 1857,
	296, 1857,
	298, 1857,
	299, 1857,
	300, 1857,
	301, 1857,
	302, 1857,
	303, 1857,
	304, 1857,
	305, 1857,
	306, 1857,
	307, 1857,
	308, 1857,
	309, 1857,
	310, 1857,
	311, 1857,
	312, 1857,
	313, 1857,
	314, 1857,
	315, 1857,
	316, 1857,
	317, 1857,
	318, 1857,
	319, 1857,
	320, 1857,
	322, 1857,
	324, 1857,
	325, 1857,
	326, 1857,
	327, 1857,
	328, 1857,
	329, 1857,
	330, 1857,
	331, 1857,
	332, 1857,
	333, 1857,
	334, 1857,
	335, 1857,
	336, 1857,
	337, 1857,
	338, 1857,
	339, 1857,
	340, 1857,
	342, 1857,
	343, 1857,
	345, 1857,
	347, 1857,
	348, 1857,
	349, 1857,
	350, 1857,
	352, 1857,
	353, 1857,
	354, 1857,
	355, 1857,
	356, 1857,
	359, 1857,
	361, 1857,
	364, 1857,
	365, 1857,
	366, 1857,
	369, 1857,
	370, 1857,
	371, 1857,
	373, 1857,
	375, 1857,
	376, 1857,
	377, 1857,
	378, 1857,
	379, 1857,
	380, 1857,
	381, 1857,
	382, 1857,
	383, 1857,
	384, 1857,
	385, 1857,
	386, 1857,
	387, 1857,
	389, 1857,
	390, 1857,
	391, 1857,
	392, 1857,
	393, 1857,
	394, 1857,
	395, 1857,
	396, 1857,
	397, 1857,
	398, 1857,
	399, 1857,
	400, 1857,
	401, 1857,
	402, 1857,
	403, 1857,
	405, 1857,
	406, 1857,
	407, 1857,
	409, 1857,
	410, 1857,
	411, 1857,
	412, 1857,
	413, 1857,
	414, 1857,
	415, 1857,
	416, 1857,
	417, 1857,
	418, 1857,
	419, 1857,
	420, 1857,
	421, 1857,
	423, 1857,
	425, 1857,
	426, 1857,
	427, 1857,
	433, 1857,
	434, 1857,
	435, 1857,
	437, 1857,
	438, 1857,
	439, 1857,
	440, 1857,
	441, 1857,
	442, 1857,
	443, 1857,
	444, 1857,
	445, 1857,
	446, 1857,
	448, 1857,
	449, 1857,
	450, 1857,
	452, 1857,
	453, 1857,
	454, 1857,
	455, 1857,
	456, 1857,
	457, 1857,
	458, 1857,
	460, 1857,
	461, 1857,
	462, 1857,
	463, 1857,
	464, 1857,
	465, 1857,
	466, 1857,
	467, 1857,
	468, 1857,
	469, 1857,
	470, 1857,
	471, 1857,
	472, 1857,
	474, 1857,
	475, 1857,
	476, 1857,
	477, 1857,
	478, 1857,
	479, 1857,
	481, 1857,
	482, 1857,
	483, 1857,
	484, 1857,
	485, 1857,
	486, 1857,
	488, 1857,
	489, 1857,
	490, 1857,
	491, 1857,
	492, 1857,
	493, 1857,
	494, 1857,
	495, 1857,
	497, 1857,
	499, 1857,
	500, 1857,
	501, 1857,
	502, 1857,
	503, 1857,
	504, 1857,
	505, 1857,
	506, 1857,
	507, 1857,
	508, 1857,
	509, 1857,
	510, 1857,
	511, 1857,
	512, 1857,
	513, 1857,
	514, 1857,
	515, 1857,
	516, 1857,
	517, 1857,
	519, 1857,
	520, 1857,
	522, 1857,
	523, 1857,
	525, 1857,
	526, 1857,
	527, 1857,
	528, 1857,
	529, 1857,
	530, 1857,
	532, 1857,
	533, 1857,
	535, 1857,
	536, 1857,
	537, 1857,
	538, 1857,
	539, 1857,
	541, 1857,
	543, 1857,
	544, 1857,
	545, 1857,
	546, 1857,
	547, 1857,
	548, 1857,
	549, 1857,
	551, 1857,
	552, 1857,
	553, 1857,
	554, 1857,
	556, 1857,
	557, 1857,
	560, 1857,
	561, 1857,
	562, 1857,
	563, 1857,
	564, 1857,
	565, 1857,
	566, 1857,
	567, 1857,
	569, 1857,
	572, 1857,
	573, 1857,
	574, 1857,
	575, 1857,
	576, 1857,
	577, 1857,
	579, 1857,
	580, 1857,
	581, 1857,
	582, 1857,
	583, 1857,
	584, 1857,
	585, 1857,
	586, 1857,
	591, 1857,
	592, 1857,
	593, 1857,
	594, 1857,
	595, 1857,
	596, 1857,
	-2, 0,
	-1, 968,
	270, 441,
	-2, 0,
	-1, 1047,
	411, 987,
	479, 987,
	523, 987,
	545, 987,
	-2, 0,
	-1, 1048,
	411, 986,
	479, 986,
	523, 986,
	545, 986,
	-2, 915,
	-1, 1052,
	1, 1039,
	627, 1039,
	629, 1039,
	631, 1039,
	-2, 0,
	-1, 1054,
	1, 961,
	627, 961,
	629, 961,
	631, 961,
	-2, 0,
	-1, 1055,
	1, 965,
	627, 965,
	629, 965,
	631, 965,
	-2, 0,
	-1, 1056,
	1, 1110,
	189, 1110,
	627, 1110,
	629, 1110,
	631, 1110,
	-2, 0,
	-1, 1064,
	1, 992,
	627, 992,
	629, 992,
	631, 992,
	-2, 0,
	-1, 1071,
	1, 1039,
	627, 1039,
	629, 1039,
	631, 1039,
	-2, 0,
	-1, 1072,
	1, 1041,
	627, 1041,
	629, 1041,
	631, 1041,
	-2, 0,
	-1, 1073,
	1, 1044,
	627, 1044,
	629, 1044,
	631, 1044,
	-2, 0,
	-1, 1081,
	1, 1074,
	627, 1074,
	629, 1074,
	631, 1074,
	-2, 0,
	-1, 1082,
	1, 1076,
	627, 1076,
	629, 1076,
	631, 1076,
	-2, 0,
	-1, 1087,
	1, 1104,
	627, 1104,
	629, 1104,
	631, 1104,
	-2, 0,
	-1, 1141,
	176, 1727,
	189, 1727,
	283, 1727,
	357, 1727,
	-2, 1663,
	-1, 1157,
	176, 1726,
	189, 1726,
	283, 1726,
	357, 1726,
	-2, 1660,
	-1, 1184,
	630, 2450,
	-2, 772,
	-1, 1213,
	5, 2442,
	628, 2440,
	-2, 2431,
	-1, 1221,
	5, 2463,
	628, 2460,
	-2, 2451,
	-1, 1222,
	5, 2464,
	628, 2461,
	-2, 2452,
	-1, 1230,
	630, 2448,
	-2, 2430,
	-1, 1231,
	628, 2915,
	-2, 2449,
	-1, 1254,
	628, 2914,
	-2, 2465,
	-1, 1255,
	5, 1932,
	-2, 2885,
	-1, 1256,
	5, 1933,
	-2, 2886,
	-1, 1257,
	5, 1934,
	-2, 2900,
	-1, 1258,
	5, 1935,
	-2, 2864,
	-1, 1259,
	5, 1936,
	-2, 2898,
	-1, 1260,
	5, 1944,
	-2, 2877,
	-1, 1261,
	5, 1931,
	-2, 2873,
	-1, 1262,
	5, 1931,
	-2, 2872,
	-1, 1263,
	5, 1931,
	-2, 2891,
	-1, 1264,
	5, 1942,
	-2, 2866,
	-1, 1265,
	5, 1947,
	-2, 2865,
	-1, 1266,
	5, 1949,
	-2, 2910,
	-1, 1269,
	5, 1971,
	-2, 2903,
	-1, 1270,
	5, 1963,
	-2, 2904,
	-1, 1271,
	5, 1971,
	-2, 2905,
	-1, 1272,
	5, 1967,
	-2, 2906,
	-1, 1273,
	5, 1917,
	-2, 2878,
	-1, 1274,
	5, 1918,
	-2, 2879,
	-1, 1275,
	5, 1919,
	-2, 2867,
	-1, 1303,
	5, 1954,
	-2, 2911,
	-1, 1304,
	5, 1955,
	-2, 2901,
	-1, 1305,
	5, 1956,
	580, 1956,
	-2, 2868,
	-1, 1306,
	5, 1957,
	580, 1957,
	-2, 2869,
	-1, 1344,
	628, 2460,
	-2, 2451,
	-1, 1345,
	628, 2461,
	-2, 2452,
	-1, 1443,
	195, 2827,
	540, 2827,
	610, 2827,
	630, 2827,
	-2, 0,
	-1, 1448,
	1, 748,
	631, 748,
	-2, 1572,
	-1, 1595,
	377, 2425,
	437, 2425,
	481, 2425,
	620, 2425,
	-2, 2415,
	-1, 1601,
	195, 145,
	277, 145,
	342, 145,
	586, 145,
	-2, 2823,
	-1, 1602,
	195, 146,
	277, 146,
	342, 146,
	586, 146,
	-2, 2564,
	-1, 1603,
	195, 147,
	277, 147,
	342, 147,
	586, 147,
	-2, 2744,
	-1, 1609,
	632, 2425,
	-2, 2427,
	-1, 1633,
	1, 1420,
	442, 1375,
	481, 1375,
	603, 1375,
	627, 1420,
	629, 1420,
	631, 1420,
	-2, 1712,
	-1, 1639,
	211, 1517,
	231, 1517,
	450, 1517,
	-2, 0,
	-1, 1688,
	419, 1194,
	579, 1194,
	-2, 436,
	-1, 1705,
	45, 2423,
	-2, 1157,
	-1, 1712,
	1, 1420,
	627, 1420,
	629, 1420,
	631, 1420,
	-2, 1712,
	-1, 1720,
	4, 1445,
	21, 1445,
	22, 1445,
	23, 1445,
	24, 1445,
	25, 1445,
	26, 1445,
	27, 1445,
	28, 1445,
	30, 1445,
	31, 1445,
	37, 1445,
	41, 1445,
	43, 1445,
	44, 1445,
	46, 1445,
	47, 1445,
	48, 1445,
	49, 1445,
	50, 1445,
	51, 1445,
	52, 1445,
	53, 1445,
	54, 1445,
	56, 1445,
	57, 1445,
	58, 1445,
	59, 1445,
	61, 1445,
	62, 1445,
	63, 1445,
	64, 1445,
	65, 1445,
	66, 1445,
	67, 1445,
	71, 1445,
	72, 1445,
	73, 1445,
	74, 1445,
	76, 1445,
	77, 1445,
	78, 1445,
	82, 1445,
	83, 1445,
	84, 1445,
	85, 1445,
	86, 1445,
	87, 1445,
	88, 1445,
	89, 1445,
	92, 1445,
	93, 1445,
	94, 1445,
	95, 1445,
	96, 1445,
	98, 1445,
	100, 1445,
	101, 1445,
	102, 1445,
	103, 1445,
	104, 1445,
	105, 1445,
	107, 1445,
	108, 1445,
	109, 1445,
	111, 1445,
	112, 1445,
	113, 1445,
	121, 1445,
	122, 1445,
	123, 1445,
	124, 1445,
	125, 1445,
	127, 1445,
	128, 1445,
	129, 1445,
	130, 1445,
	132, 1445,
	133, 1445,
	134, 1445,
	136, 1445,
	137, 1445,
	138, 1445,
	140, 1445,
	141, 1445,
	142, 1445,
	145, 1445,
	146, 1445,
	147, 1445,
	149, 1445,
	150, 1445,
	151, 1445,
	153, 1445,
	154, 1445,
	155, 1445,
	157, 1445,
	158, 1445,
	159, 1445,
	160, 1445,
	161, 1445,
	162, 1445,
	163, 1445,
	164, 1445,
	165, 1445,
	166, 1445,
	167, 1445,
	168, 1445,
	169, 1445,
	170, 1445,
	171, 1445,
	172, 1445,
	173, 1445,
	181, 1445,
	182, 1445,
	183, 1445,
	184, 1445,
	188, 1445,
	190, 1445,
	191, 1445,
	192, 1445,
	194, 1445,
	197, 1445,
	198, 1445,
	199, 1445,
	200, 1445,
	201, 1445,
	202, 1445,
	203, 1445,
	204, 1445,
	205, 1445,
	206, 1445,
	207, 1445,
	208, 1445,
	209, 1445,
	210, 1445,
	212, 1445,
	213, 1445,
	215, 1445,
	216, 1445,
	218, 1445,
	219, 1445,
	220, 1445,
	221, 1445,
	222, 1445,
	223, 1445,
	224, 1445,
	225, 1445,
	226, 1445,
	227, 1445,
	229, 1445,
	230, 1445,
	232, 1445,
	233, 1445,
	234, 1445,
	235, 1445,
	236, 1445,
	241, 1445,
	242, 1445,
	243, 1445,
	246, 1445,
	247, 1445,
	248, 1445,
	249, 1445,
	251, 1445,
	253, 1445,
	254, 1445,
	256, 1445,
	258, 1445,
	259, 1445,
	260, 1445,
	262, 1445,
	266, 1445,
	267, 1445,
	268, 1445,
	269, 1445,
	270, 1445,
	271, 1445,
	273, 1445,
	274, 1445,
	275, 1445,
	277, 1445,
	278, 1445,
	280, 1445,
	281, 1445,
	284, 1445,
	285, 1445,
	286, 1445,
	287, 1445,
	288, 1445,
	289, 1445,
	290, 1445,
	293, 1445,
	294, 1445,
	295, 1445,
	296, 1445,
	298, 1445,
	299, 1445,
	300, 1445,
	301, 1445,
	302, 1445,
	303, 1445,
	304, 1445,
	305, 1445,
	306, 1445,
	307, 1445,
	308, 1445,
	309, 1445,
	310, 1445,
	311, 1445,
	312, 1445,
	313, 1445,
	314, 1445,
	315, 1445,
	316, 1445,
	317, 1445,
	318, 1445,
	319, 1445,
	320, 1445,
	322, 1445,
	324, 1445,
	325, 1445,
	326, 1445,
	327, 1445,
	328, 1445,
	329, 1445,
	330, 1445,
	331, 1445,
	332, 1445,
	333, 1445,
	334, 1445,
	335, 1445,
	336, 1445,
	337, 1445,
	338, 1445,
	339, 1445,
	340, 1445,
	342, 1445,
	343, 1445,
	347, 1445,
	348, 1445,
	349, 1445,
	350, 1445,
	352, 1445,
	353, 1445,
	354, 1445,
	355, 1445,
	356, 1445,
	359, 1445,
	361, 1445,
	362, 1445,
	364, 1445,
	365, 1445,
	366, 1445,
	369, 1445,
	370, 1445,
	371, 1445,
	373, 1445,
	375, 1445,
	376, 1445,
	377, 1445,
	378, 1445,
	379, 1445,
	380, 1445,
	381, 1445,
	382, 1445,
	383, 1445,
	384, 1445,
	385, 1445,
	386, 1445,
	387, 1445,
	389, 1445,
	390, 1445,
	391, 1445,
	392, 1445,
	393, 1445,
	394, 1445,
	395, 1445,
	396, 1445,
	397, 1445,
	398, 1445,
	399, 1445,
	400, 1445,
	401, 1445,
	402, 1445,
	403, 1445,
	405, 1445,
	406, 1445,
	407, 1445,
	409, 1445,
	410, 1445,
	411, 1445,
	412, 1445,
	413, 1445,
	414, 1445,
	415, 1445,
	416, 1445,
	417, 1445,
	418, 1445,
	419, 1445,
	420, 1445,
	421, 1445,
	423, 1445,
	425, 1445,
	426, 1445,
	427, 1445,
	433, 1445,
	434, 1445,
	435, 1445,
	437, 1445,
	438, 1445,
	439, 1445,
	440, 1445,
	441, 1445,
	442, 1445,
	443, 1445,
	444, 1445,
	445, 1445,
	446, 1445,
	448, 1445,
	449, 1445,
	450, 1445,
	452, 1445,
	453, 1445,
	454, 1445,
	455, 1445,
	456, 1445,
	457, 1445,
	458, 1445,
	460, 1445,
	461, 1445,
	462, 1445,
	463, 1445,
	464, 1445,
	465, 1445,
	466, 1445,
	467, 1445,
	468, 1445,
	469, 1445,
	470, 1445,
	471, 1445,
	472, 1445,
	474, 1445,
	475, 1445,
	476, 1445,
	477, 1445,
	478, 1445,
	479, 1445,
	481, 1445,
	482, 1445,
	483, 1445,
	484, 1445,
	485, 1445,
	486, 1445,
	488, 1445,
	489, 1445,
	490, 1445,
	491, 1445,
	492, 1445,
	493, 1445,
	494, 1445,
	495, 1445,
	497, 1445,
	499, 1445,
	500, 1445,
	501, 1445,
	502, 1445,
	503, 1445,
	504, 1445,
	505, 1445,
	506, 1445,
	507, 1445,
	508, 1445,
	509, 1445,
	510, 1445,
	511, 1445,
	512, 1445,
	513, 1445,
	514, 1445,
	515, 1445,
	516, 1445,
	517, 1445,
	519, 1445,
	520, 1445,
	522, 1445,
	523, 1445,
	525, 1445,
	526, 1445,
	527, 1445,
	528, 1445,
	529, 1445,
	530, 1445,
	532, 1445,
	533, 1445,
	535, 1445,
	536, 1445,
	537, 1445,
	538, 1445,
	539, 1445,
	541, 1445,
	543, 1445,
	544, 1445,
	545, 1445,
	546, 1445,
	547, 1445,
	548, 1445,
	549, 1445,
	551, 1445,
	552, 1445,
	553, 1445,
	554, 1445,
	556, 1445,
	557, 1445,
	560, 1445,
	561, 1445,
	562, 1445,
	563, 1445,
	564, 1445,
	565, 1445,
	566, 1445,
	567, 1445,
	569, 1445,
	572, 1445,
	573, 1445,
	574, 1445,
	575, 1445,
	576, 1445,
	577, 1445,
	579, 1445,
	580, 1445,
	581, 1445,
	582, 1445,
	583, 1445,
	584, 1445,
	585, 1445,
	586, 1445,
	591, 1445,
	592, 1445,
	593, 1445,
	594, 1445,
	595, 1445,
	596, 1445,
	-2, 0,
	-1, 1743,
	1, 583,
	627, 583,
	629, 583,
	631, 583,
	-2, 1683,
	-1, 1746,
	4, 2909,
	11, 2909,
	12, 2909,
	14, 2909,
	15, 2909,
	16, 2909,
	17, 2909,
	18, 2909,
	19, 2909,
	21, 2909,
	22, 2909,
	23, 2909,
	24, 2909,
	25, 2909,
	26, 2909,
	27, 2909,
	28, 2909,
	30, 2909,
	31, 2909,
	34, 2909,
	35, 2909,
	37, 2909,
	39, 2909,
	41, 2909,
	43, 2909,
	44, 2909,
	46, 2909,
	47, 2909,
	48, 2909,
	49, 2909,
	50, 2909,
	51, 2909,
	52, 2909,
	53, 2909,
	54, 2909,
	56, 2909,
	57, 2909,
	58, 2909,
	59, 2909,
	61, 2909,
	62, 2909,
	63, 2909,
	64, 2909,
	65, 2909,
	66, 2909,
	67, 2909,
	70, 2909,
	71, 2909,
	72, 2909,
	73, 2909,
	74, 2909,
	76, 2909,
	77, 2909,
	78, 2909,
	79, 2909,
	82, 2909,
	83, 2909,
	84, 2909,
	85, 2909,
	86, 2909,
	87, 2909,
	88, 2909,
	89, 2909,
	90, 2909,
	92, 2909,
	93, 2909,
	94, 2909,
	95, 2909,
	96, 2909,
	98, 2909,
	99, 2909,
	100, 2909,
	101, 2909,
	102, 2909,
	103, 2909,
	104, 2909,
	105, 2909,
	107, 2909,
	108, 2909,
	109, 2909,
	110, 2909,
	111, 2909,
	112, 2909,
	113, 2909,
	121, 2909,
	122, 2909,
	123, 2909,
	124, 2909,
	125, 2909,
	127, 2909,
	128, 2909,
	129, 2909,
	130, 2909,
	132, 2909,
	133, 2909,
	134, 2909,
	136, 2909,
	137, 2909,
	138, 2909,
	140, 2909,
	141, 2909,
	142, 2909,
	145, 2909,
	146, 2909,
	147, 2909,
	149, 2909,
	150, 2909,
	151, 2909,
	153, 2909,
	154, 2909,
	155, 2909,
	157, 2909,
	158, 2909,
	159, 2909,
	160, 2909,
	161, 2909,
	162, 2909,
	163, 2909,
	164, 2909,
	165, 2909,
	166, 2909,
	167, 2909,
	168, 2909,
	169, 2909,
	170, 2909,
	171, 2909,
	172, 2909,
	173, 2909,
	177, 2909,
	178, 2909,
	179, 2909,
	180, 2909,
	181, 2909,
	182, 2909,
	183, 2909,
	184, 2909,
	187, 2909,
	188, 2909,
	190, 2909,
	191, 2909,
	192, 2909,
	194, 2909,
	196, 2909,
	197, 2909,
	198, 2909,
	199, 2909,
	200, 2909,
	201, 2909,
	202, 2909,
	203, 2909,
	204, 2909,
	205, 2909,
	206, 2909,
	207, 2909,
	208, 2909,
	209, 2909,
	210, 2909,
	212, 2909,
	213, 2909,
	215, 2909,
	216, 2909,
	218, 2909,
	219, 2909,
	220, 2909,
	221, 2909,
	222, 2909,
	223, 2909,
	224, 2909,
	225, 2909,
	226, 2909,
	227, 2909,
	228, 2909,
	229, 2909,
	230, 2909,
	231, 2909,
	232, 2909,
	233, 2909,
	234, 2909,
	235, 2909,
	236, 2909,
	238, 2909,
	239, 2909,
	241, 2909,
	242, 2909,
	243, 2909,
	245, 2909,
	246, 2909,
	247, 2909,
	248, 2909,
	249, 2909,
	251, 2909,
	253, 2909,
	254, 2909,
	255, 2909,
	256, 2909,
	257, 2909,
	258, 2909,
	259, 2909,
	260, 2909,
	261, 2909,
	262, 2909,
	264, 2909,
	265, 2909,
	266, 2909,
	267, 2909,
	268, 2909,
	269, 2909,
	270, 2909,
	271, 2909,
	273, 2909,
	274, 2909,
	275, 2909,
	277, 2909,
	278, 2909,
	279, 2909,
	280, 2909,
	281, 2909,
	282, 2909,
	284, 2909,
	285, 2909,
	286, 2909,
	287, 2909,
	288, 2909,
	289, 2909,
	290, 2909,
	293, 2909,
	294, 2909,
	295, 2909,
	296, 2909,
	297, 2909,
	298, 2909,
	299, 2909,
	300, 2909,
	301, 2909,
	302, 2909,
	303, 2909,
	304, 2909,
	305, 2909,
	306, 2909,
	307, 2909,
	308, 2909,
	309, 2909,
	310, 2909,
	311, 2909,
	312, 2909,
	313, 2909,
	314, 2909,
	315, 2909,
	316, 2909,
	317, 2909,
	318, 2909,
	319, 2909,
	320, 2909,
	322, 2909,
	323, 2909,
	324, 2909,
	325, 2909,
	326, 2909,
	327, 2909,
	328, 2909,
	329, 2909,
	330, 2909,
	331, 2909,
	332, 2909,
	333, 2909,
	334, 2909,
	335, 2909,
	336, 2909,
	337, 2909,
	338, 2909,
	339, 2909,
	340, 2909,
	342, 2909,
	343, 2909,
	346, 2909,
	347, 2909,
	348, 2909,
	349, 2909,
	350, 2909,
	352, 2909,
	353, 2909,
	354, 2909,
	355, 2909,
	356, 2909,
	359, 2909,
	361, 2909,
	364, 2909,
	365, 2909,
	366, 2909,
	367, 2909,
	369, 2909,
	370, 2909,
	371, 2909,
	373, 2909,
	375, 2909,
	376, 2909,
	377, 2909,
	378, 2909,
	379, 2909,
	380, 2909,
	381, 2909,
	382, 2909,
	383, 2909,
	384, 2909,
	385, 2909,
	386, 2909,
	387, 2909,
	389, 2909,
	390, 2909,
	391, 2909,
	392, 2909,
	393, 2909,
	394, 2909,
	395, 2909,
	396, 2909,
	397, 2909,
	398, 2909,
	399, 2909,
	400, 2909,
	401, 2909,
	402, 2909,
	403, 2909,
	405, 2909,
	406, 2909,
	407, 2909,
	409, 2909,
	410, 2909,
	411, 2909,
	412, 2909,
	413, 2909,
	414, 2909,
	415, 2909,
	416, 2909,
	417, 2909,
	418, 2909,
	419, 2909,
	420, 2909,
	421, 2909,
	423, 2909,
	425, 2909,
	426, 2909,
	427, 2909,
	433, 2909,
	434, 2909,
	435, 2909,
	436, 2909,
	437, 2909,
	438, 2909,
	439, 2909,
	440, 2909,
	441, 2909,
	442, 2909,
	443, 2909,
	444, 2909,
	445, 2909,
	446, 2909,
	448, 2909,
	449, 2909,
	450, 2909,
	451, 2909,
	452, 2909,
	453, 2909,
	454, 2909,
	455, 2909,
	456, 2909,
	457, 2909,
	458, 2909,
	459, 2909,
	460, 2909,
	461, 2909,
	462, 2909,
	463, 2909,
	464, 2909,
	465, 2909,
	466, 2909,
	467, 2909,
	468, 2909,
	469, 2909,
	470, 2909,
	471, 2909,
	472, 2909,
	474, 2909,
	475, 2909,
	476, 2909,
	477, 2909,
	478, 2909,
	479, 2909,
	481, 2909,
	482, 2909,
	483, 2909,
	484, 2909,
	485, 2909,
	486, 2909,
	487, 2909,
	488, 2909,
	489, 2909,
	490, 2909,
	491, 2909,
	492, 2909,
	493, 2909,
	494, 2909,
	495, 2909,
	497, 2909,
	499, 2909,
	500, 2909,
	501, 2909,
	502, 2909,
	503, 2909,
	504, 2909,
	505, 2909,
	506, 2909,
	507, 2909,
	508, 2909,
	509, 2909,
	510, 2909,
	511, 2909,
	512, 2909,
	513, 2909,
	514, 2909,
	515, 2909,
	516, 2909,
	517, 2909,
	519, 2909,
	520, 2909,
	521, 2909,
	522, 2909,
	523, 2909,
	525, 2909,
	526, 2909,
	527, 2909,
	528, 2909,
	529, 2909,
	530, 2909,
	532, 2909,
	533, 2909,
	535, 2909,
	536, 2909,
	537, 2909,
	538, 2909,
	539, 2909,
	541, 2909,
	543, 2909,
	544, 2909,
	545, 2909,
	546, 2909,
	547, 2909,
	548, 2909,
	549, 2909,
	551, 2909,
	552, 2909,
	553, 2909,
	554, 2909,
	556, 2909,
	557, 2909,
	560, 2909,
	561, 2909,
	562, 2909,
	563, 2909,
	564, 2909,
	565, 2909,
	566, 2909,
	567, 2909,
	569, 2909,
	572, 2909,
	573, 2909,
	574, 2909,
	575, 2909,
	576, 2909,
	577, 2909,
	579, 2909,
	580, 2909,
	581, 2909,
	582, 2909,
	583, 2909,
	584, 2909,
	585, 2909,
	586, 2909,
	591, 2909,
	592, 2909,
	593, 2909,
	594, 2909,
	595, 2909,
	596, 2909,
	597, 2909,
	599, 2909,
	608, 2909,
	609, 2909,
	610, 2909,
	611, 2909,
	612, 2909,
	613, 2909,
	615, 2909,
	616, 2909,
	617, 2909,
	618, 2909,
	619, 2909,
	620, 2909,
	621, 2909,
	622, 2909,
	623, 2909,
	626, 2909,
	629, 2909,
	630, 2909,
	632, 2909,
	633, 2909,
	-2, 0,
	-1, 1751,
	195, 2783,
	540, 2783,
	610, 2783,
	630, 2783,
	-2, 0,
	-1, 1805,
	411, 987,
	479, 987,
	523, 987,
	545, 987,
	-2, 0,
	-1, 1816,
	1, 1517,
	627, 1517,
	629, 1517,
	631, 1517,
	-2, 0,
	-1, 1833,
	1, 982,
	627, 982,
	629, 982,
	631, 982,
	-2, 0,
	-1, 1834,
	1, 1026,
	627, 1026,
	629, 1026,
	631, 1026,
	-2, 0,
	-1, 1835,
	1, 1034,
	627, 1034,
	629, 1034,
	631, 1034,
	-2, 0,
	-1, 1838,
	1, 991,
	627, 991,
	629, 991,
	631, 991,
	-2, 0,
	-1, 1840,
	1, 997,
	627, 997,
	629, 997,
	631, 997,
	-2, 0,
	-1, 1843,
	1, 993,
	627, 993,
	629, 993,
	631, 993,
	-2, 0,
	-1, 1848,
	1, 1007,
	627, 1007,
	629, 1007,
	631, 1007,
	-2, 0,
	-1, 1882,
	1, 2765,
	627, 2765,
	629, 2765,
	630, 2765,
	631, 2765,
	-2, 0,
	-1, 1886,
	1, 1085,
	627, 1085,
	629, 1085,
	631, 1085,
	-2, 0,
	-1, 1903,
	1, 1567,
	631, 1567,
	-2, 1572,
	-1, 1906,
	176, 1726,
	189, 1726,
	283, 1726,
	357, 1726,
	-2, 1664,
	-1, 2006,
	156, 1685,
	176, 1685,
	189, 1685,
	250, 1685,
	283, 1685,
	357, 1685,
	368, 1685,
	558, 1685,
	-2, 2136,
	-1, 2067,
	629, 2311,
	-2, 0,
	-1, 2103,
	156, 1685,
	176, 1685,
	189, 1685,
	250, 1685,
	283, 1685,
	357, 1685,
	368, 1685,
	558, 1685,
	-2, 1818,
	-1, 2143,
	540, 2780,
	630, 2780,
	633, 2780,
	-2, 0,
	-1, 2160,
	628, 1959,
	-2, 1947,
	-1, 2192,
	195, 2780,
	630, 2780,
	633, 2780,
	-2, 0,
	-1, 2235,
	1, 750,
	631, 750,
	-2, 1572,
	-1, 2409,
	231, 280,
	-2, 2459,
	-1, 2410,
	231, 281,
	-2, 336,
	-1, 2521,
	1, 984,
	627, 984,
	629, 984,
	631, 984,
	-2, 0,
	-1, 2522,
	1, 1028,
	627, 1028,
	629, 1028,
	631, 1028,
	-2, 0,
	-1, 2523,
	1, 1036,
	627, 1036,
	629, 1036,
	631, 1036,
	-2, 0,
	-1, 2524,
	1, 1087,
	627, 1087,
	629, 1087,
	631, 1087,
	-2, 0,
	-1, 2565,
	1, 1009,
	627, 1009,
	629, 1009,
	631, 1009,
	-2, 0,
	-1, 2587,
	1, 1070,
	627, 1070,
	629, 1070,
	631, 1070,
	-2, 0,
	-1, 2634,
	457, 1753,
	458, 1753,
	-2, 1992,
	-1, 2665,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2012,
	-1, 2666,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2013,
	-1, 2667,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2014,
	-1, 2668,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2015,
	-1, 2669,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2016,
	-1, 2670,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2017,
	-1, 2671,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2018,
	-1, 2672,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2019,
	-1, 2684,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2031,
	-1, 2685,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2032,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2033,
	-1, 2690,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2040,
	-1, 2696,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2044,
	-1, 2698,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2052,
	-1, 2699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2053,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2054,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2055,
	-1, 2875,
	5, 2463,
	195, 2322,
	628, 2460,
	-2, 2451,
	-1, 2876,
	195, 2323,
	-2, 2860,
	-1, 2877,
	195, 2324,
	-2, 2659,
	-1, 2878,
	195, 2325,
	-2, 2537,
	-1, 2879,
	195, 2326,
	-2, 2597,
	-1, 2880,
	195, 2327,
	-2, 2644,
	-1, 2881,
	195, 2328,
	-2, 2778,
	-1, 2882,
	195, 2329,
	-2, 2119,
	-1, 2954,
	1, 1819,
	2, 1819,
	110, 1819,
	156, 1819,
	176, 1819,
	189, 1819,
	196, 1819,
	214, 1819,
	217, 1819,
	245, 1819,
	250, 1819,
	261, 1819,
	279, 1819,
	283, 1819,
	323, 1819,
	357, 1819,
	362, 1819,
	368, 1819,
	447, 1819,
	451, 1819,
	558, 1819,
	570, 1819,
	588, 1819,
	589, 1819,
	590, 1819,
	600, 1819,
	627, 1819,
	629, 1819,
	631, 1819,
	633, 1819,
	-2, 1818,
	-1, 2967,
	628, 2432,
	-2, 2446,
	-1, 2969,
	1, 353,
	588, 353,
	-2, 1712,
	-1, 2999,
	628, 1958,
	-2, 1948,
	-1, 3213,
	1, 1420,
	442, 1375,
	481, 1375,
	603, 1375,
	627, 1420,
	629, 1420,
	631, 1420,
	-2, 1712,
	-1, 3391,
	363, 1756,
	-2, 2899,
	-1, 3392,
	363, 1757,
	-2, 2762,
	-1, 3396,
	457, 2388,
	458, 2388,
	-2, 2117,
	-1, 3397,
	457, 2392,
	458, 2392,
	-2, 2118,
	-1, 3398,
	457, 2389,
	458, 2389,
	-2, 2117,
	-1, 3399,
	457, 2393,
	458, 2393,
	-2, 2118,
	-1, 3412,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2042,
	-1, 3413,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2046,
	-1, 3419,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2048,
	-1, 3646,
	1, 745,
	627, 745,
	629, 745,
	631, 745,
	-2, 1572,
	-1, 3844,
	45, 2423,
	-2, 1158,
	-1, 3849,
	1, 1420,
	627, 1420,
	629, 1420,
	631, 1420,
	-2, 1712,
	-1, 3955,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2050,
	-1, 3962,
	255, 0,
	257, 0,
	346, 0,
	-2, 2069,
	-1, 4030,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2098,
	-1, 4031,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2099,
	-1, 4032,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2100,
	-1, 4036,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2104,
	-1, 4037,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2105,
	-1, 4038,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2106,
	-1, 4086,
	628, 2433,
	-2, 2447,
	-1, 4295,
	630, 3016,
	-2, 1638,
	-1, 4351,
	255, 0,
	257, 0,
	346, 0,
	-2, 2070,
	-1, 4354,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2073,
	-1, 4355,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2075,
	-1, 4469,
	630, 2448,
	-2, 1455,
	-1, 4631,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2074,
	-1, 4632,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2076,
	-1, 4643,
	255, 0,
	-2, 2109,
	-1, 4831,
	255, 0,
	-2, 2110,
	-1, 5051,
	53, 0,
	228, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2863,
}

const sqlPrivate = 57344

const sqlLast = 147143

var sqlAct = [...]int{
	291, 5242, 4986, 3167, 1424, 4699, 3830, 5113, 5169, 3550,
	5097, 4871, 3287, 4985, 5050, 4879, 5037, 3137, 5063, 5183,
	4923, 4942, 5019, 2406, 4976, 4997, 3829, 5065, 5064, 4800,
	3841, 5000, 2295, 4334, 4777, 4096, 4764, 2484, 4748, 4835,
	5061, 3995, 5049, 4590, 4585, 5122, 4579, 3947, 4546, 4519,
	3257, 2644, 4704, 1480, 4620, 1416, 4652, 3672, 4287, 3675,
	4465, 1348, 4570, 3866, 1619, 1769, 4279, 4908, 4572, 4783,
	1414, 4202, 3405, 4446, 752, 1421, 4466, 3309, 2204, 2494,
	891, 2907, 3071, 2713, 3860, 2496, 1915, 4595, 2217, 1167,
	4252, 3814, 4233, 3803, 2127, 4235, 2457, 2652, 2304, 3678,
	2147, 3896, 1499, 4648, 824, 3894, 3735, 3276, 891, 3660,
	3271, 3245, 3273, 3819, 3070, 3796, 3818, 1158, 3662, 3795,
	4089, 2148, 3661, 2645, 3573, 1407, 3565, 3821, 4390, 3596,
	3533, 763, 3556, 2981, 970, 3304, 4333, 1767, 3288, 966,
	4, 3554, 2393, 2078, 2395, 3220, 2382, 3168, 1166, 191,
	5098, 1592, 3699, 1337, 2316, 888, 3532, 2793, 3603, 285,
	4056, 2649, 2947, 284, 2014, 2332, 4836, 1649, 1984, 2946,
	961, 2726, 3249, 2053, 116, 1707, 1419, 2791, 3152, 3303,
	3389, 2394, 2444, 886, 820, 3182, 2380, 2109, 2372, 2360,
	2353, 3258, 1217, 1463, 1328, 2287, 2283, 2215, 1393, 2079,
	1903, 2782, 2710, 1482, 2633, 1222, 2616, 797, 1813, 1478,
	2614, 2982, 3281, 2927, 1744, 1710, 892, 893, 2375, 3095,
	2443, 3096, 1621, 2098, 1041, 3056, 3010, 840, 4943, 3822,
	1450, 2785, 2917, 2048, 1331, 2088, 1310, 2763, 2936, 897,
	1185, 2492, 2095, 900, 2837, 2871, 1998, 201, 191, 1916,
	1917, 805, 2615, 2617, 1345, 2949, 1848, 202, 2403, 1404,
	1742, 2904, 1327, 987, 2470, 816, 1833, 897, 1643, 1735,
	120, 900, 106, 5114, 2384, 1600, 5170, 1475, 2638, 1198,
	756, 753, 46, 765, 45, 43, 881, 34, 32, 30,
	1333, 1308, 1922, 780, 1213, 942, 3442, 833, 836, 1902,
	1220, 943, 1062, 1655, 4070, 3436, 4071, 739, 5253, 5245,
	3552, 761, 2926, 3776, 4097, 5059, 5233, 2206, 2206, 2206,
	2926, 4672, 2206, 2206, 2206, 2739, 2740, 2741, 2758, 2759,
	2760, 5232, 5202, 5200, 5143, 2926, 4703, 4703, 2415, 5099,
	4669, 1162, 3876, 5100, 1930, 1931, 2761, 5089, 5087, 5084,
	5081, 2926, 2926, 5085, 5082, 3875, 5047, 2227, 5046, 5045,
	2415, 5035, 2415, 3314, 4666, 4703, 3503, 3504, 1961, 5033,
	5028, 5023, 3631, 4703, 4786, 4703, 1933, 3628, 1163, 5022,
	4995, 1986, 2919, 4703, 4703, 4962, 1325, 4955, 4954, 2990,
	4947, 2926, 2926, 4922, 2415, 4919, 4901, 2415, 4833, 4703,
	4536, 2751, 2990, 1986, 4814, 4779, 3776, 4722, 4313, 4130,
	2747, 2415, 1932, 4721, 4710, 4709, 4702, 2415, 2415, 4703,
	4703, 4659, 4633, 1459, 1151, 2415, 2990, 1930, 1931, 4417,
	1963, 1964, 1965, 1974, 1975, 1976, 4606, 4603, 4514, 1142,
	3314, 3776, 2926, 4493, 4353, 1459, 3613, 2926, 2990, 1141,
	1967, 1961, 1162, 2485, 4303, 3251, 2493, 2224, 3889, 1933,
	4297, 4249, 4161, 4129, 3889, 4250, 4162, 4130, 3012, 1980,
	4081, 4079, 2227, 4063, 4082, 4080, 3979, 2926, 4060, 3975,
	2415, 3888, 2415, 2926, 1363, 3889, 1986, 2227, 2752, 2753,
	2754, 2755, 3404, 3549, 2986, 1932, 3250, 2926, 2746, 1157,
	3544, 1311, 1311, 3543, 2926, 3494, 1952, 2926, 3492, 3495,
	3484, 2926, 3493, 3482, 3485, 1949, 4963, 2926, 3453, 3451,
	1938, 4837, 2926, 3313, 3298, 3452, 3297, 3314, 2480, 3035,
	2480, 4828, 2989, 2926, 4816, 1224, 2990, 2227, 1312, 2224,
	2979, 2971, 3509, 2925, 2926, 2415, 2479, 2926, 1343, 251,
	2480, 1371, 4786, 1314, 1340, 1315, 3314, 4060, 1930, 1931,
	2918, 2227, 4583, 4536, 2224, 4494, 4313, 4251, 3144, 2309,
	3055, 1960, 1962, 2241, 2205, 2756, 2757, 1364, 2221, 3250,
	1364, 2414, 1961, 3162, 3046, 2074, 1642, 4179, 3950, 3922,
	1933, 2096, 2365, 1955, 1956, 1957, 1958, 2963, 3877, 1815,
	253, 2962, 2961, 1938, 4597, 2960, 2926, 2959, 2749, 1316,
	251, 1313, 1150, 1149, 2788, 1148, 1147, 1986, 3878, 1839,
	1146, 1145, 1144, 1140, 1139, 1138, 1932, 1648, 1137, 1136,
	1953, 1135, 1134, 1133, 1132, 1131, 1130, 1952, 1129, 3360,
	4819, 1128, 1127, 1126, 1971, 1125, 1949, 1981, 1124, 1123,
	1122, 252, 3519, 1121, 1960, 1962, 1103, 1039, 1038, 1037,
	1036, 253, 1035, 1034, 1033, 1032, 245, 1031, 1030, 1029,
	1028, 1977, 1027, 1978, 1026, 246, 1025, 1024, 1023, 1022,
	1947, 1948, 1219, 1021, 3503, 3504, 1020, 3521, 3522, 3523,
	1019, 1018, 1017, 1016, 2207, 2207, 2207, 1015, 1969, 2207,
	2207, 2207, 4347, 1014, 203, 1013, 1012, 1648, 1011, 2789,
	1010, 1983, 252, 1953, 962, 2820, 1009, 3441, 1008, 1007,
	1006, 1005, 1004, 1003, 1955, 1956, 1957, 1958, 992, 991,
	990, 985, 984, 1983, 1938, 977, 976, 975, 960, 959,
	916, 915, 78, 914, 965, 964, 913, 904, 903, 902,
	1196, 5074, 901, 2224, 863, 862, 2557, 3063, 831, 2224,
	79, 830, 1979, 3518, 1669, 203, 829, 811, 3063, 279,
	2750, 278, 277, 276, 275, 274, 4408, 84, 2224, 273,
	3875, 272, 271, 1968, 270, 1960, 1962, 99, 269, 3503,
	3504, 2790, 1954, 2787, 1983, 268, 267, 266, 1426, 1222,
	265, 264, 263, 262, 261, 260, 1657, 259, 2818, 258,
	1364, 1947, 1948, 4365, 3520, 2224, 257, 256, 93, 255,
	2918, 254, 4599, 4106, 4075, 3890, 1222, 1222, 1222, 3599,
	3464, 3447, 1985, 3266, 1779, 3438, 3250, 3340, 3230, 2994,
	2056, 2968, 3547, 2099, 1953, 2953, 2804, 2055, 2802, 2606,
	2268, 2226, 1959, 3284, 1985, 2056, 2122, 2025, 1897, 968,
	3509, 1651, 2055, 1471, 1347, 5073, 5070, 1502, 3518, 5048,
	5032, 1222, 51, 1929, 115, 1954, 2059, 1222, 1624, 1222,
	99, 112, 1426, 2227, 3022, 2205, 1633, 3548, 2224, 2221,
	2609, 2054, 4817, 4927, 4825, 4840, 4647, 4604, 4694, 1454,
	4582, 4423, 4388, 1972, 4387, 1663, 4381, 1222, 2016, 1222,
	4380, 1222, 4379, 4372, 1267, 1467, 1468, 1469, 1624, 2736,
	2737, 2738, 2762, 2748, 2742, 1983, 2744, 2745, 2743, 2730,
	2731, 2732, 2733, 2734, 2735, 4167, 1339, 1985, 4371, 4369,
	2023, 4364, 100, 1610, 1426, 4361, 3061, 4360, 1712, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 4248, 4110, 2792,
	1605, 4262, 1760, 4109, 1624, 3509, 4108, 4085, 3503, 3504,
	3519, 1624, 3513, 3505, 3506, 3507, 3508, 3510, 3511, 4051,
	1222, 4050, 1222, 1959, 1324, 5248, 1668, 1624, 4049, 1364,
	1398, 1401, 3971, 3966, 3594, 1597, 1222, 3540, 1222, 3531,
	3502, 3499, 3498, 1446, 1341, 3496, 1954, 1411, 3491, 3490,
	1656, 3489, 3486, 1970, 1783, 3483, 1716, 1719, 3463, 3446,
	1448, 1657, 3439, 3437, 1944, 1945, 1951, 1973, 1950, 1946,
	3299, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	1764, 2018, 1432, 2954, 2775, 4375, 1929, 1624, 2016, 4374,
	2422, 1983, 3503, 3504, 897, 1485, 1486, 1631, 900, 1165,
	1495, 1928, 1589, 1594, 2460, 1930, 1931, 1222, 1985, 1474,
	1222, 2420, 1930, 1931, 1722, 3519, 5191, 2017, 5190, 2015,
	5112, 1440, 2786, 1646, 5110, 1349, 3997, 4987, 4598, 4263,
	251, 4906, 251, 3268, 4891, 3060, 104, 1933, 4887, 3503,
	3504, 4886, 4885, 3620, 1933, 159, 3060, 4177, 4865, 4864,
	4862, 1645, 1644, 191, 191, 3003, 4839, 4838, 1705, 1627,
	4812, 1477, 3503, 3504, 2716, 1487, 1488, 1662, 4798, 4795,
	4794, 4787, 3520, 1932, 1784, 1747, 1749, 4775, 1163, 4774,
	1932, 253, 4718, 253, 3509, 4689, 4645, 4628, 4627, 1657,
	4566, 4562, 4559, 4537, 199, 107, 1983, 4407, 111, 1950,
	1946, 4386, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 3545, 4314, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1930, 1931, 4165, 4164, 251, 1745, 1454, 4145, 4144,
	1454, 4142, 252, 969, 252, 251, 3060, 1657, 159, 4066,
	4054, 3961, 1930, 1931, 1841, 1961, 1222, 245, 2003, 245,
	3891, 3885, 1222, 1933, 3852, 3756, 246, 3710, 246, 2722,
	3677, 1738, 3622, 3468, 3467, 3462, 1961, 251, 3509, 3428,
	4263, 3244, 3088, 2062, 1933, 251, 253, 3520, 2061, 4820,
	1986, 1938, 1930, 1931, 2060, 203, 253, 203, 1938, 1932,
	2057, 2049, 2047, 3001, 3519, 3000, 2965, 2958, 2924, 1907,
	2800, 1986, 2002, 164, 2121, 2077, 1961, 1789, 2071, 2070,
	1932, 2069, 2068, 2067, 1933, 3509, 2066, 2065, 253, 204,
	1857, 3515, 3516, 3517, 1759, 2064, 253, 252, 3514, 3512,
	3513, 3505, 3506, 3507, 3508, 3510, 3511, 252, 3509, 1901,
	1778, 1986, 245, 2063, 2044, 251, 2043, 2042, 3267, 2041,
	1932, 246, 245, 2040, 2039, 200, 2038, 2037, 1222, 1222,
	1222, 246, 2036, 2035, 1222, 2034, 2033, 4842, 3591, 252,
	2032, 1345, 2031, 1345, 2030, 1983, 2029, 252, 3519, 2018,
	963, 4841, 2819, 2004, 245, 2001, 1996, 1439, 1502, 1368,
	3283, 1806, 245, 246, 1359, 4569, 253, 1938, 4419, 4357,
	1222, 246, 4105, 891, 1426, 1736, 4078, 4069, 1842, 2165,
	891, 3450, 1426, 2076, 1426, 2956, 251, 1908, 1938, 41,
	1163, 4667, 203, 1741, 4421, 4104, 2017, 3618, 3881, 1999,
	203, 2005, 4496, 3514, 3512, 3513, 3505, 3506, 3507, 3508,
	3510, 3511, 2992, 2117, 1466, 2085, 3138, 252, 1960, 1962,
	1904, 1912, 1911, 1481, 1142, 2133, 3520, 1464, 1938, 1983,
	1481, 5182, 245, 4895, 1141, 3503, 3504, 253, 4888, 1960,
	1962, 246, 1983, 251, 1426, 2817, 4788, 1481, 1906, 2144,
	1222, 2138, 3713, 2132, 4602, 2058, 4540, 2194, 4539, 2196,
	1481, 4538, 4495, 1925, 1926, 4410, 5066, 4321, 4320, 4319,
	203, 4318, 2082, 2083, 1222, 2106, 4317, 1953, 4316, 1960,
	1962, 1479, 1502, 2803, 1465, 2801, 2126, 2211, 252, 4315,
	2213, 251, 4131, 191, 253, 251, 2218, 4073, 1953, 1983,
	2220, 4818, 3114, 245, 4072, 2223, 2050, 2051, 2298, 3893,
	3520, 1459, 246, 3892, 1215, 3780, 2343, 1163, 3778, 2229,
	3777, 251, 5139, 251, 5137, 5062, 2259, 2125, 2139, 2039,
	2099, 2233, 897, 1454, 4693, 2188, 900, 4784, 1953, 897,
	251, 203, 253, 900, 4266, 252, 253, 3948, 1930, 1931,
	2039, 1899, 2232, 4193, 1459, 3180, 2130, 2056, 1983, 3488,
	245, 2247, 3746, 2266, 2055, 3487, 1460, 2107, 3410, 246,
	3099, 1462, 253, 2024, 253, 1311, 4160, 2104, 1805, 1983,
	1933, 2097, 3514, 3512, 3513, 3505, 3506, 3507, 3508, 3510,
	3511, 253, 3832, 252, 3831, 3679, 1459, 252, 203, 1119,
	4125, 4858, 4126, 2027, 4857, 2485, 2209, 1814, 245, 4778,
	5095, 2075, 245, 4580, 3310, 1858, 1932, 246, 2362, 1983,
	1323, 246, 3804, 252, 4858, 252, 4526, 2116, 1815, 2115,
	2114, 2101, 2112, 2111, 2110, 1343, 2397, 1343, 245, 1954,
	245, 1340, 252, 1340, 4271, 4256, 203, 246, 1120, 246,
	203, 1624, 1624, 4245, 2235, 2145, 1740, 245, 2131, 2396,
	1954, 4649, 1502, 2461, 3552, 4199, 246, 3512, 3513, 3505,
	3506, 3507, 3508, 3510, 3511, 4190, 203, 2342, 203, 4170,
	2513, 3919, 1934, 1935, 1936, 1937, 1939, 1940, 3456, 1456,
	3644, 1936, 1937, 1939, 1940, 203, 2578, 2309, 2490, 2428,
	1954, 1985, 3999, 3097, 2783, 2231, 2339, 5071, 2347, 2999,
	4713, 2788, 2072, 2273, 2357, 2274, 2407, 2412, 3507, 3508,
	3510, 3511, 1985, 3140, 2052, 2281, 2282, 3812, 2349, 2454,
	1715, 1638, 3619, 1435, 1397, 5086, 1741, 3159, 5083, 3505,
	3506, 3507, 3508, 3510, 3511, 2236, 4506, 3871, 4136, 3339,
	3156, 2262, 2254, 3154, 4880, 4586, 4994, 3682, 4155, 1624,
	3280, 1624, 1985, 1624, 4685, 1772, 2275, 2276, 2352, 2307,
	2376, 3787, 1466, 2279, 2280, 1461, 5141, 5140, 4716, 5072,
	4712, 1624, 1624, 2303, 4691, 955, 3073, 3942, 2352, 5174,
	1099, 3648, 2248, 2352, 2315, 1624, 4480, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 4477, 4743, 2789, 1624, 1856, 1624,
	1624, 1624, 897, 4482, 2587, 4212, 900, 2584, 1161, 1934,
	1935, 1936, 1937, 1939, 1940, 1682, 3222, 2624, 2399, 2400,
	1690, 1117, 2350, 891, 3036, 1640, 2337, 1457, 2571, 1115,
	5244, 1113, 1465, 2401, 2569, 2512, 1458, 4896, 5119, 1111,
	1466, 1108, 4736, 4724, 4529, 1222, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 2455, 4528, 4210, 4139, 1645,
	1644, 2450, 4209, 2585, 1793, 4201, 4185, 2467, 1460, 4184,
	3712, 2336, 4182, 4181, 2333, 2348, 4169, 4211, 2790, 2622,
	2787, 2356, 2377, 1222, 4128, 956, 4127, 3793, 3792, 2434,
	2488, 3748, 2586, 3612, 3076, 3461, 3460, 3459, 2386, 3059,
	2385, 2386, 1160, 2385, 2159, 2389, 3059, 2517, 3458, 2498,
	1465, 2413, 1691, 2505, 3414, 3057, 3178, 3177, 3161, 1222,
	3150, 1222, 3057, 1163, 803, 1163, 3142, 3132, 1222, 3131,
	3744, 2165, 2165, 1502, 4714, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1745, 1222, 1745, 1222, 1222, 1222, 1222, 2542, 2608,
	2464, 2477, 897, 2436, 2435, 1449, 900, 3679, 4686, 1740,
	2993, 1456, 1738, 2475, 2472, 3118, 2472, 5175, 2473, 2469,
	1222, 803, 2351, 2626, 1222, 1222, 2504, 4476, 2397, 2481,
	4497, 2482, 1222, 1339, 2613, 1339, 1222, 1440, 1222, 1222,
	1162, 1459, 2351, 1483, 1484, 4478, 1502, 2351, 2308, 2485,
	1483, 1484, 1222, 1222, 1222, 1222, 2623, 3511, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 2792, 1483, 1484, 3503,
	3504, 1791, 2650, 2651, 2253, 2252, 5120, 2305, 1481, 2261,
	1483, 1484, 4461, 1855, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 2521, 1222, 2532, 3124, 1461, 1222, 3650,
	3123, 1341, 3122, 1341, 3104, 2764, 2765, 1807, 3103, 2334,
	1345, 2073, 2301, 3064, 2624, 2980, 2697, 1502, 4454, 2764,
	2780, 3745, 4447, 1905, 2833, 3075, 1345, 2565, 2832, 3277,
	1728, 2654, 1727, 1641, 2621, 4428, 3007, 2783, 1460, 1837,
	4445, 4438, 1222, 1502, 2637, 2306, 2828, 2984, 2087, 4449,
	4626, 1726, 3920, 1725, 3101, 1898, 1686, 1837, 2604, 1457,
	2509, 5177, 1786, 860, 2596, 2874, 2874, 2888, 1458, 2764,
	1940, 1895, 2908, 2910, 4455, 2302, 2622, 2610, 2309, 2916,
	2612, 2611, 802, 1699, 2618, 2625, 1105, 2340, 1854, 2786,
	1142, 2728, 1383, 1142, 1142, 2317, 1163, 3043, 2345, 1431,
	2641, 2256, 2779, 2642, 2643, 1815, 1163, 2522, 4437, 2712,
	1163, 3317, 5140, 1815, 3127, 2712, 1872, 2983, 4448, 3402,
	2321, 958, 957, 2966, 4474, 1834, 2599, 2830, 3125, 2970,
	1159, 2335, 2831, 2117, 2091, 2834, 2378, 2835, 2836, 953,
	2529, 952, 2933, 3158, 1704, 3509, 3355, 4873, 1426, 1426,
	1874, 1836, 3030, 3087, 4753, 1868, 2576, 3387, 2106, 802,
	2720, 1456, 5178, 2620, 2724, 2563, 3006, 2718, 4479, 1836,
	4152, 5206, 3647, 2523, 1438, 2777, 5068, 3157, 2318, 858,
	3074, 1803, 2526, 2094, 1787, 5176, 2520, 5186, 3009, 1502,
	3155, 1835, 2708, 3153, 1910, 2941, 3086, 2955, 804, 2089,
	1163, 3028, 4225, 2162, 3128, 2474, 2987, 1654, 3017, 1661,
	751, 1667, 3025, 3929, 3021, 191, 2792, 2092, 3126, 2390,
	2379, 2258, 2932, 2706, 3031, 2899, 1711, 2870, 3032, 2995,
	2883, 2914, 2387, 2623, 2912, 2922, 2923, 746, 2165, 2940,
	1454, 2945, 2598, 3005, 2951, 2952, 2934, 1461, 3033, 3928,
	1311, 2938, 2939, 1459, 3357, 3519, 2530, 4848, 3401, 2257,
	2104, 2090, 4226, 4527, 4183, 3024, 4180, 4113, 4100, 3988,
	3799, 2388, 3729, 2058, 4875, 804, 5180, 3791, 4166, 2309,
	1758, 1709, 1763, 1109, 3039, 3058, 1502, 4450, 4461, 2570,
	2322, 1109, 4150, 1109, 4451, 2568, 1777, 3985, 1782, 3425,
	3567, 1110, 1624, 1109, 1343, 4456, 4224, 3041, 1001, 1457,
	1340, 2621, 3742, 3160, 3121, 3002, 3102, 2694, 1458, 1426,
	1343, 3027, 3065, 3213, 4454, 3368, 1340, 3016, 2050, 2051,
	3423, 3019, 3730, 3020, 4625, 3653, 1983, 4472, 3100, 3050,
	1222, 1222, 3011, 1222, 2288, 3042, 3034, 4453, 2595, 2289,
	1850, 2307, 1792, 5152, 3026, 4475, 3062, 2323, 2324, 3107,
	5069, 2331, 1853, 2605, 1840, 4457, 3040, 993, 891, 2702,
	1426, 2344, 1869, 3151, 3256, 5161, 3728, 2366, 2944, 3986,
	4455, 5160, 2373, 2978, 2319, 3721, 2159, 2159, 2346, 2093,
	3106, 3037, 5208, 2703, 994, 1091, 2419, 2418, 5127, 3119,
	2704, 1624, 3394, 3395, 2709, 3923, 4339, 859, 4338, 3300,
	3217, 3797, 4754, 3800, 1624, 3091, 1624, 3520, 3868, 3869,
	1155, 2341, 1624, 3051, 3052, 4752, 2343, 3053, 3054, 3105,
	3364, 4750, 2320, 2206, 1624, 3078, 3081, 2792, 3068, 3264,
	1688, 3371, 3120, 3130, 3136, 3722, 4971, 3172, 5184, 4677,
	2363, 3112, 3113, 3115, 3116, 3117, 3741, 1685, 1426, 861,
	1426, 3320, 3321, 857, 2288, 2338, 2290, 3171, 5067, 2289,
	3218, 3260, 3327, 3328, 3329, 3738, 3420, 2392, 3049, 3311,
	3179, 4749, 1222, 5179, 2294, 3214, 3215, 3129, 3134, 3720,
	3141, 3139, 2692, 1382, 897, 2695, 3148, 2890, 900, 2367,
	2345, 3666, 4452, 1459, 3868, 4473, 3759, 3421, 3566, 3291,
	4751, 3426, 2329, 3164, 3216, 1092, 3343, 3165, 3166, 5039,
	1870, 5040, 3305, 3254, 4881, 4903, 2597, 897, 1711, 3308,
	3248, 900, 3223, 3341, 3649, 3342, 4959, 2391, 3307, 3337,
	2528, 3302, 1866, 3694, 4462, 4463, 2691, 2792, 191, 801,
	1222, 1645, 3228, 3312, 1816, 4874, 1222, 1222, 2325, 3318,
	5126, 2291, 2296, 5105, 5185, 1639, 2363, 1366, 4556, 3225,
	3295, 3242, 2330, 5106, 3227, 3336, 3505, 3506, 3507, 3508,
	3510, 3511, 3370, 2045, 1788, 3416, 2290, 2342, 2263, 2264,
	3346, 2711, 3348, 4450, 3350, 2346, 3616, 3700, 747, 2705,
	4451, 5187, 3693, 2344, 2294, 3373, 3286, 3375, 1106, 2707,
	3784, 4456, 1222, 1222, 3367, 3296, 2328, 2564, 1222, 1871,
	2308, 2363, 2359, 1745, 995, 996, 4151, 4335, 3059, 2719,
	5150, 1222, 1222, 2969, 2113, 2299, 4638, 1222, 1222, 4622,
	2326, 3294, 2312, 1222, 3079, 3376, 3275, 2292, 3378, 2358,
	3798, 1873, 3293, 4453, 3702, 1437, 3334, 5005, 1867, 2387,
	3315, 3223, 1802, 1804, 2525, 1097, 1096, 3322, 2519, 3323,
	4508, 4457, 3345, 3344, 3347, 1909, 3349, 5204, 3351, 3352,
	770, 2291, 2296, 748, 2354, 2774, 1995, 905, 1222, 1222,
	1222, 3466, 1339, 4917, 1222, 2937, 3706, 5209, 2388, 3417,
	2299, 3361, 2313, 2091, 1222, 2950, 3422, 1002, 1339, 1162,
	4001, 4573, 5193, 1093, 912, 4568, 3424, 2306, 3667, 2087,
	4328, 1222, 3701, 4664, 3382, 3369, 4532, 4101, 1372, 2370,
	1821, 4574, 1370, 4957, 3393, 749, 978, 750, 4340, 3384,
	4238, 3944, 3383, 3385, 4924, 5011, 2311, 2355, 4909, 4941,
	4236, 2693, 2094, 2637, 3388, 4744, 3704, 4797, 3135, 3403,
	1341, 2297, 4910, 983, 4238, 2162, 2162, 2292, 2935, 4531,
	3444, 3445, 5125, 2159, 4236, 3448, 1341, 4530, 4958, 4285,
	3856, 3630, 4621, 1353, 2977, 2442, 2092, 2084, 1919, 2368,
	1369, 1362, 738, 2153, 4261, 4040, 4911, 4557, 1920, 1355,
	3705, 1914, 1919, 3440, 2575, 2091, 4336, 2640, 4452, 1171,
	2207, 1163, 2310, 1222, 1222, 1222, 1222, 3415, 2249, 4711,
	2299, 4384, 1222, 1222, 1222, 4806, 1350, 1222, 3673, 5104,
	997, 998, 4855, 2369, 4286, 4240, 3604, 5214, 4205, 1222,
	1345, 1502, 1790, 1094, 1091, 1222, 2246, 1222, 4186, 4137,
	4462, 4463, 3559, 3560, 2094, 4135, 1345, 3857, 3848, 4240,
	3669, 3265, 3449, 4913, 3259, 3246, 2468, 4239, 2462, 1155,
	2089, 1095, 1356, 2456, 1502, 2448, 3655, 2427, 2426, 3175,
	3984, 2297, 4925, 1679, 4091, 1374, 1345, 4912, 2092, 1502,
	4791, 4239, 2293, 2630, 4055, 1918, 810, 4121, 2928, 1357,
	4977, 1426, 1919, 3455, 3945, 4914, 3063, 4944, 3542, 1918,
	2577, 2165, 2242, 4288, 3108, 1502, 4591, 3243, 4341, 1385,
	3656, 4770, 4768, 2244, 4688, 1426, 3561, 1098, 4623, 3685,
	2510, 3584, 2090, 1426, 2931, 3681, 3680, 3632, 3408, 4092,
	3386, 2502, 1354, 4068, 906, 907, 4095, 3564, 2288, 3563,
	2491, 3080, 2424, 2289, 1838, 1222, 4571, 4244, 2093, 1844,
	1843, 1734, 2976, 2975, 1092, 4234, 4093, 1222, 4090, 1920,
	2245, 2974, 2973, 2972, 3575, 2930, 3611, 1732, 2298, 1000,
	2929, 1720, 3251, 1920, 4868, 1426, 1160, 4547, 3569, 3668,
	3084, 2165, 2272, 979, 980, 1721, 4041, 4700, 4257, 3807,
	3626, 4143, 2466, 5147, 3598, 4772, 4342, 4042, 1222, 1918,
	2383, 4675, 2293, 4132, 2298, 3634, 4673, 3221, 3636, 3637,
	1995, 3916, 849, 3640, 1426, 3641, 3629, 3642, 3718, 3614,
	3570, 3638, 3617, 4385, 3602, 3582, 1454, 2631, 3553, 3597,
	3590, 3585, 3586, 1426, 3645, 1426, 3316, 3732, 4237, 3734,
	3571, 3226, 3606, 3607, 3608, 3609, 3651, 5213, 850, 3684,
	2093, 3224, 3689, 1222, 1222, 3691, 3593, 2362, 3568, 2495,
	2290, 1502, 4237, 3576, 2362, 2396, 3665, 3747, 3623, 3624,
	4771, 3625, 1426, 3537, 3538, 3539, 3770, 4926, 2294, 1796,
	1822, 3657, 3658, 3109, 3110, 4790, 909, 908, 3588, 1426,
	3589, 3670, 4122, 3782, 4683, 4696, 4701, 4695, 4432, 4983,
	3715, 3760, 3676, 3683, 1097, 1096, 3687, 3717, 4431, 4991,
	4974, 3719, 4391, 3775, 3583, 3574, 3581, 3697, 4869, 4057,
	2799, 1624, 4414, 5013, 1343, 4665, 3731, 3635, 1891, 5151,
	1340, 3639, 5149, 2558, 1426, 1624, 4756, 1624, 5088, 4899,
	1343, 1502, 2162, 4684, 3739, 4889, 1340, 3646, 891, 1624,
	4671, 3580, 1093, 910, 911, 2291, 2296, 4644, 4915, 4425,
	1351, 3654, 1624, 4383, 4916, 3769, 2591, 1893, 3743, 4094,
	1343, 4133, 3605, 4243, 1426, 3534, 1340, 4430, 3849, 3762,
	3960, 3764, 3781, 809, 3768, 3733, 3917, 2271, 3774, 981,
	982, 1345, 4984, 3914, 3749, 289, 1890, 3837, 3703, 3864,
	3802, 1733, 3805, 3711, 1888, 3862, 2381, 3627, 1862, 3801,
	1860, 4870, 1832, 1624, 3724, 3497, 1352, 1731, 1830, 999,
	3427, 3727, 3247, 3149, 3143, 1624, 3098, 1624, 3004, 2600,
	2501, 1180, 3847, 2486, 3725, 1500, 2124, 2120, 3726, 3757,
	1894, 2292, 1771, 3535, 3752, 3940, 3939, 3884, 3788, 3931,
	1828, 3855, 3758, 2567, 2534, 1826, 1824, 1818, 1914, 3359,
	3873, 3771, 3577, 3578, 3579, 1812, 3789, 1810, 1730, 3817,
	3779, 3358, 3325, 2619, 3921, 3130, 1849, 3783, 1502, 2405,
	2537, 1502, 1094, 2447, 2425, 5060, 2195, 2193, 2028, 1785,
	2286, 1703, 1307, 2798, 2299, 3840, 3858, 3253, 4509, 4192,
	4191, 4513, 4492, 3912, 4973, 3790, 4589, 897, 3305, 4518,
	1095, 900, 1107, 4505, 3863, 1222, 2131, 3305, 4443, 4442,
	3761, 1222, 1222, 3106, 3794, 1222, 1222, 1222, 4284, 1222,
	4275, 3809, 3865, 4208, 4414, 4188, 4158, 3843, 1222, 2165,
	4156, 3845, 3844, 3838, 4134, 2153, 2153, 1222, 3851, 3846,
	2284, 3833, 1222, 2593, 3278, 2297, 191, 191, 1502, 2592,
	1892, 3981, 3270, 3263, 3913, 2137, 1098, 1222, 1163, 3861,
	3938, 3255, 3239, 3870, 3238, 1502, 3219, 3023, 3882, 3883,
	3018, 2423, 3879, 3937, 2421, 2165, 2165, 1222, 1222, 1889,
	1222, 1222, 1222, 2398, 2285, 2364, 2327, 1887, 2314, 2300,
	1184, 1861, 2228, 1859, 3935, 1831, 2225, 5141, 1222, 2222,
	4584, 1829, 1222, 3941, 2165, 2165, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
	1222, 1222, 1222, 1222, 1222, 1222, 2159, 1222, 3946, 3963,
	2566, 2533, 3932, 1827, 2219, 1222, 1222, 2165, 1825, 1823,
	1817, 3872, 1222, 2214, 2212, 2208, 2199, 4013, 1811, 4014,
	1809, 1729, 5123, 1222, 3910, 3925, 2404, 3926, 1320, 3927,
	3915, 3973, 3974, 2411, 1345, 1345, 5118, 5044, 1222, 3943,
	1112, 1114, 1116, 3772, 4573, 1343, 2293, 3406, 2373, 1923,
	2250, 1340, 2238, 2239, 3379, 1321, 4867, 2603, 3377, 3212,
	5025, 4935, 4605, 4525, 4574, 4429, 2650, 4004, 3306, 3652,
	1502, 2267, 1339, 1684, 4808, 3059, 2159, 3970, 3968, 3085,
	4801, 4087, 4296, 1426, 1426, 2309, 2524, 3980, 1339, 2465,
	3991, 3057, 1406, 4052, 3059, 2650, 4019, 2561, 1426, 1426,
	1405, 891, 1426, 3996, 2556, 2601, 4003, 3987, 3989, 3990,
	3082, 1885, 1886, 4010, 5024, 4074, 2531, 1153, 1339, 1091,
	4483, 1222, 4520, 3176, 1154, 1930, 1931, 4016, 4048, 1808,
	4011, 1930, 1931, 4044, 4012, 4018, 1476, 838, 4827, 4698,
	1341, 3089, 4392, 4370, 1155, 3698, 3407, 3090, 1222, 3111,
	5135, 1927, 2602, 1433, 1373, 4053, 1341, 1933, 4098, 4099,
	4045, 1473, 280, 1924, 191, 3773, 4064, 4065, 3156, 1322,
	4204, 5096, 3906, 4111, 4112, 3090, 3237, 4118, 1406, 2237,
	4272, 1222, 1222, 2449, 4119, 3904, 1341, 1444, 4120, 1406,
	4061, 4062, 1154, 1932, 4203, 3897, 3154, 3163, 3147, 1932,
	3094, 3145, 3092, 1865, 4982, 4964, 4934, 4928, 841, 841,
	855, 735, 3146, 4866, 3093, 4792, 4763, 4676, 4282, 1222,
	1222, 4076, 4274, 4260, 4084, 3850, 3285, 1222, 4138, 4077,
	2915, 2234, 2146, 5181, 4697, 5015, 4157, 3133, 4159, 1092,
	5016, 1637, 1636, 1630, 1156, 3615, 2383, 5212, 1624, 1624,
	4107, 1624, 3503, 3504, 5015, 1624, 4114, 4930, 1624, 5016,
	897, 5154, 4171, 1426, 900, 1648, 4059, 4222, 3231, 1930,
	1931, 3234, 4362, 3236, 2278, 3045, 2123, 2277, 3044, 1795,
	3908, 2794, 1647, 4176, 4178, 1794, 1648, 4175, 2165, 4103,
	3362, 2829, 2153, 2278, 2277, 1864, 4281, 3899, 1863, 4793,
	4737, 4522, 4517, 4206, 4516, 4358, 4332, 4102, 4200, 3992,
	3766, 3763, 3898, 4207, 3365, 2022, 4216, 2021, 3381, 2607,
	3282, 4163, 5197, 3282, 4194, 4230, 4168, 5162, 1343, 1343,
	5030, 4968, 4967, 1624, 1340, 1340, 4966, 4898, 4897, 1222,
	4844, 4269, 4227, 4228, 4766, 4728, 4668, 1345, 1222, 4289,
	4253, 4662, 3106, 4564, 4298, 4544, 4221, 1624, 4481, 4304,
	4223, 4420, 1624, 1624, 1624, 4309, 4302, 4247, 4154, 3907,
	4242, 4146, 3854, 3853, 3690, 2162, 3633, 3366, 3356, 4246,
	3333, 3332, 3331, 3330, 4267, 1624, 3269, 1624, 3241, 1097,
	1096, 3240, 3083, 1502, 4213, 4306, 3172, 4290, 3014, 3008,
	2269, 4293, 2997, 2996, 2985, 4255, 3353, 2723, 2594, 3676,
	4259, 2562, 2555, 2554, 2553, 2552, 4231, 2551, 4278, 2463,
	2437, 1502, 2433, 2432, 1222, 1222, 4220, 2431, 2430, 2429,
	1222, 1222, 2165, 1339, 2159, 1222, 1222, 1093, 1222, 2202,
	2201, 2200, 2198, 1222, 2136, 2135, 1884, 4310, 1883, 1819,
	4324, 1698, 4292, 1697, 1222, 2162, 1696, 1695, 4322, 1694,
	3291, 1693, 4276, 4325, 1692, 1687, 1683, 1681, 4273, 1680,
	1222, 1614, 1613, 1612, 3305, 1493, 1492, 1491, 4291, 1490,
	2159, 2159, 4294, 1489, 4299, 1436, 1392, 1391, 4300, 1390,
	1389, 1388, 4343, 4307, 4268, 4308, 1387, 1386, 1384, 1379,
	1378, 1341, 1377, 1376, 1375, 967, 8, 1302, 2240, 2159,
	2159, 1118, 1104, 4872, 4232, 4460, 4459, 4241, 4458, 4356,
	2590, 98, 1689, 929, 4326, 92, 2371, 4153, 1068, 5012,
	4902, 1345, 4352, 1672, 3905, 3900, 3901, 3902, 3903, 1345,
	937, 4993, 2159, 1502, 1502, 4337, 1502, 4270, 3692, 3181,
	2536, 1820, 2538, 1345, 3592, 2957, 4956, 4366, 3465, 4834,
	4637, 2797, 2026, 3546, 1624, 1624, 94, 1094, 1206, 1252,
	4555, 4554, 4444, 4140, 3909, 3820, 4551, 1502, 4550, 2150,
	2416, 1184, 1184, 1184, 2152, 1170, 1505, 5038, 2251, 5203,
	1212, 2265, 2260, 1152, 2998, 1095, 2873, 1229, 1226, 4344,
	2154, 2156, 1222, 1228, 4415, 4416, 1227, 2155, 2046, 4331,
	1225, 2149, 4280, 1345, 3289, 1345, 3880, 4382, 1739, 1737,
	1070, 2255, 1586, 2717, 2781, 4323, 4418, 3454, 1230, 2019,
	1186, 1208, 2778, 1367, 1197, 3572, 3551, 3867, 4083, 4424,
	1426, 1343, 4427, 2629, 4491, 947, 3500, 1340, 2784, 1358,
	1502, 1098, 1426, 2896, 2889, 1426, 4500, 2885, 3643, 4503,
	4394, 4395, 4396, 4393, 4389, 4399, 3279, 1900, 4651, 1222,
	1629, 4398, 1502, 191, 1997, 4470, 287, 287, 287, 4409,
	741, 742, 4406, 757, 741, 757, 768, 3290, 4485, 808,
	1896, 4436, 1470, 828, 1190, 2715, 2010, 3432, 835, 835,
	835, 835, 2639, 3874, 4397, 3595, 3597, 2991, 287, 5018,
	4439, 4000, 4433, 4434, 1624, 1624, 1339, 1339, 4441, 4426,
	3363, 4400, 4402, 4435, 4413, 2441, 1319, 1318, 1365, 974,
	1317, 4999, 4490, 4996, 2361, 4558, 287, 3815, 4405, 3816,
	2243, 4484, 3038, 1426, 2727, 4499, 3834, 4575, 4502, 4501,
	1202, 4486, 4524, 1608, 2582, 1502, 3933, 3557, 4258, 1700,
	1624, 4705, 1214, 1982, 3208, 4507, 4467, 3207, 4467, 4861,
	1455, 1453, 1452, 1451, 5171, 3174, 4592, 2374, 4545, 4149,
	4543, 4148, 4147, 4471, 1341, 1341, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 4521, 4576, 4523, 4535, 250, 3400, 4542,
	1921, 1913, 4487, 4488, 247, 4541, 1502, 4504, 249, 248,
	4581, 3696, 4088, 2162, 3601, 5094, 4173, 4534, 1222, 1222,
	1222, 4533, 3806, 2159, 4593, 1343, 25, 842, 843, 844,
	3048, 1340, 2270, 1343, 1472, 4548, 1502, 4560, 4553, 1340,
	4561, 1222, 4578, 4565, 1222, 1222, 4567, 1343, 4549, 4596,
	4515, 4124, 4610, 1340, 1222, 24, 4614, 2165, 23, 2162,
	2162, 2653, 1222, 1222, 22, 21, 121, 44, 20, 4594,
	163, 4616, 161, 138, 741, 741, 158, 283, 157, 1502,
	130, 1624, 287, 156, 155, 4607, 4601, 4629, 2162, 2162,
	4608, 154, 153, 152, 160, 151, 1426, 150, 145, 149,
	148, 147, 146, 144, 142, 143, 137, 1343, 4624, 1343,
	141, 1617, 140, 1340, 139, 1340, 136, 135, 1502, 134,
	133, 2162, 132, 131, 129, 162, 1222, 128, 127, 205,
	126, 125, 124, 4587, 123, 122, 821, 822, 63, 1222,
	62, 118, 3707, 3708, 119, 3709, 19, 4634, 1222, 4682,
	42, 1674, 14, 2165, 2795, 67, 68, 4646, 18, 13,
	37, 97, 110, 1222, 4640, 2153, 1222, 2159, 4657, 4658,
	109, 4670, 108, 4679, 38, 4680, 105, 36, 17, 16,
	15, 1222, 103, 102, 1222, 101, 35, 33, 11, 9,
	39, 1502, 4708, 2108, 12, 3753, 3754, 2008, 3755, 1426,
	5, 2013, 196, 4746, 1753, 195, 198, 194, 197, 1624,
	1624, 1624, 96, 193, 192, 4681, 95, 31, 10, 2298,
	1768, 188, 4687, 4782, 4265, 87, 4678, 190, 189, 1339,
	1345, 187, 186, 4719, 4720, 185, 4617, 88, 4618, 85,
	4755, 184, 91, 183, 4742, 2153, 86, 90, 89, 4765,
	29, 2967, 6, 66, 7, 4727, 4619, 4769, 3918, 4660,
	1502, 4661, 113, 1624, 4781, 114, 40, 4729, 4738, 4725,
	4740, 83, 4741, 82, 4717, 4760, 4761, 81, 80, 4802,
	1797, 28, 4730, 65, 27, 180, 229, 228, 4739, 227,
	4773, 226, 4745, 225, 224, 223, 4747, 1341, 1222, 1222,
	4758, 222, 4757, 1586, 4732, 217, 221, 4762, 219, 4767,
	4789, 218, 4811, 220, 4813, 1222, 2165, 216, 4785, 241,
	240, 239, 238, 232, 231, 237, 236, 4803, 4780, 4805,
	235, 234, 233, 230, 244, 76, 215, 1426, 214, 213,
	1426, 211, 1426, 1426, 4731, 207, 210, 212, 209, 4804,
	208, 3817, 206, 243, 242, 77, 4810, 178, 4596, 4809,
	1222, 179, 1222, 75, 1222, 4856, 4815, 177, 176, 175,
	174, 173, 172, 171, 1345, 74, 182, 181, 26, 4823,
	4824, 2, 1, 4467, 4854, 4822, 0, 1222, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 3047, 0, 0,
	4776, 0, 2162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4843, 1339, 0, 4845, 4832, 4846, 4847, 1184,
	0, 1339, 0, 0, 4853, 4826, 0, 1586, 0, 0,
	0, 0, 4852, 0, 0, 1339, 4807, 4883, 4799, 0,
	0, 0, 0, 0, 0, 1345, 1345, 4907, 4877, 4884,
	4876, 0, 4849, 0, 0, 0, 0, 0, 0, 1222,
	0, 4905, 0, 0, 0, 0, 1345, 0, 0, 1345,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 4892,
	2634, 1341, 0, 1624, 4894, 0, 0, 0, 0, 1341,
	0, 4893, 0, 0, 0, 1339, 0, 1339, 1222, 1222,
	0, 4900, 0, 1341, 0, 4920, 4921, 0, 1222, 0,
	4918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4932, 0, 4929, 0, 1343, 4931, 4938, 4467, 0, 4940,
	1340, 4937, 4785, 4946, 0, 0, 0, 4945, 4948, 0,
	0, 4951, 4467, 4949, 0, 0, 2162, 0, 0, 4969,
	4961, 0, 0, 0, 0, 0, 4990, 0, 1222, 1222,
	0, 0, 1222, 1341, 4965, 1341, 1624, 1426, 4950, 0,
	1426, 0, 1360, 0, 4970, 0, 0, 0, 0, 4960,
	4972, 0, 0, 0, 0, 4980, 4981, 0, 0, 4998,
	5001, 0, 2159, 0, 0, 4988, 5017, 5014, 4467, 4467,
	0, 4989, 0, 2153, 0, 5021, 1381, 1586, 0, 0,
	0, 0, 0, 0, 5007, 0, 0, 0, 287, 4467,
	287, 287, 4467, 1410, 287, 1420, 2891, 5043, 1222, 1222,
	1222, 5008, 5041, 0, 0, 0, 1434, 0, 0, 5002,
	0, 0, 5009, 5006, 828, 5010, 5026, 828, 5003, 2153,
	2153, 0, 0, 5031, 5034, 0, 4952, 0, 4953, 0,
	5042, 5075, 0, 0, 0, 1222, 0, 0, 1343, 0,
	835, 5055, 5056, 5057, 1340, 0, 5058, 0, 2153, 2153,
	0, 5080, 0, 1343, 0, 0, 0, 0, 2159, 1340,
	0, 5020, 0, 0, 287, 0, 287, 287, 1410, 2298,
	287, 287, 5077, 5101, 0, 0, 0, 5103, 5102, 1420,
	0, 2153, 0, 0, 0, 5091, 0, 5111, 0, 5109,
	5093, 0, 1222, 287, 5078, 1650, 5115, 0, 0, 4765,
	1426, 0, 5108, 5107, 0, 0, 5124, 0, 5134, 1343,
	1343, 1670, 5117, 0, 0, 1340, 1340, 0, 1677, 0,
	0, 0, 0, 5121, 0, 5142, 5090, 5145, 0, 5092,
	1343, 5133, 5136, 1343, 5138, 5116, 1340, 1702, 0, 1340,
	1420, 5130, 5131, 5144, 287, 287, 5155, 1410, 5146, 0,
	5159, 1345, 0, 1345, 5158, 5157, 4998, 5148, 0, 5001,
	5153, 5165, 0, 5156, 0, 5167, 0, 0, 828, 5164,
	287, 287, 0, 0, 5163, 5132, 0, 0, 0, 5173,
	0, 0, 1765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 1773, 0, 5076, 0, 0, 974, 0,
	0, 5188, 0, 5189, 5194, 0, 0, 0, 0, 5196,
	0, 5166, 5195, 5168, 5201, 0, 0, 0, 0, 5199,
	0, 2159, 1222, 1222, 5198, 0, 0, 0, 0, 5207,
	5205, 1222, 1222, 0, 0, 5215, 5210, 5219, 0, 0,
	0, 0, 5222, 1415, 5221, 0, 5224, 0, 0, 5223,
	0, 5226, 0, 5229, 5227, 5020, 5225, 5231, 1586, 5230,
	0, 0, 5228, 0, 5234, 0, 0, 5192, 0, 1426,
	4277, 0, 5235, 5239, 5236, 5243, 0, 5237, 5240, 287,
	5241, 5238, 1339, 0, 0, 5247, 0, 0, 0, 1222,
	0, 5246, 0, 5249, 0, 5254, 5243, 5250, 0, 5252,
	0, 0, 0, 287, 4467, 0, 4467, 0, 0, 0,
	0, 5218, 5216, 5217, 0, 0, 1595, 0, 0, 1609,
	1415, 0, 0, 5172, 0, 0, 0, 0, 3429, 3430,
	0, 3291, 0, 0, 0, 3906, 0, 4327, 0, 0,
	0, 2162, 0, 3199, 0, 0, 0, 0, 3904, 0,
	1341, 1586, 0, 0, 0, 0, 2483, 2721, 3897, 0,
	0, 3291, 2153, 0, 0, 0, 0, 0, 0, 0,
	5251, 0, 0, 2008, 2497, 2499, 0, 3189, 3187, 0,
	0, 0, 0, 0, 3191, 3193, 3183, 0, 2503, 0,
	0, 0, 0, 1415, 1415, 0, 0, 0, 0, 0,
	2511, 0, 2514, 2515, 2516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3558,
	0, 0, 1586, 0, 0, 0, 1339, 3209, 1629, 0,
	0, 0, 0, 0, 0, 1629, 0, 2162, 0, 0,
	0, 1339, 0, 3908, 0, 1343, 0, 1343, 1586, 0,
	0, 1340, 3587, 1340, 0, 0, 0, 0, 0, 0,
	3899, 0, 0, 0, 0, 0, 0, 3600, 0, 0,
	0, 0, 0, 0, 0, 3898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3621, 1341, 0, 0, 1339, 1339, 0,
	0, 0, 0, 0, 0, 0, 2153, 0, 741, 1341,
	3527, 3528, 3529, 3530, 0, 0, 864, 0, 1339, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 287, 3907, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 0, 0, 1650, 1410,
	2128, 287, 0, 287, 2134, 0, 0, 0, 0, 3390,
	0, 287, 877, 757, 0, 1341, 1341, 0, 287, 0,
	0, 3185, 0, 3895, 0, 0, 0, 0, 0, 0,
	0, 0, 3201, 0, 2203, 876, 1341, 0, 0, 1341,
	0, 0, 0, 0, 1586, 0, 287, 0, 0, 0,
	2162, 0, 0, 287, 0, 0, 3200, 3190, 3188, 3192,
	3194, 3184, 3186, 3202, 3204, 0, 0, 4511, 0, 0,
	0, 0, 0, 0, 3196, 3198, 3206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 828, 0, 869, 0,
	2891, 2891, 0, 0, 0, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 874,
	3210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 0, 835, 0, 0, 0,
	4563, 0, 0, 0, 0, 0, 835, 835, 0, 0,
	0, 1586, 0, 0, 4577, 0, 0, 3905, 3900, 3901,
	3902, 3903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 873, 0, 0, 0, 0, 0, 4600, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 0, 803, 3600,
	1974, 1975, 1976, 0, 0, 0, 0, 3909, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 871, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3203, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 2891, 2891, 2891, 2891, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 1339, 0, 287, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 3211,
	4674, 0, 1609, 0, 0, 0, 0, 0, 3195, 3197,
	3205, 0, 0, 0, 0, 0, 3934, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 866, 0, 0, 287, 0,
	1938, 1341, 287, 1341, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	287, 2153, 287, 0, 0, 0, 741, 0, 287, 0,
	0, 1971, 0, 0, 1981, 0, 3977, 0, 0, 0,
	828, 1960, 1962, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 3993, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 880, 0, 287, 3173, 1410, 287, 868, 0,
	0, 1629, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 287, 0,
	1953, 0, 0, 0, 0, 0, 2535, 0, 0, 0,
	0, 287, 287, 0, 287, 0, 287, 2153, 287, 0,
	287, 0, 0, 3956, 3957, 0, 0, 0, 865, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2572, 0, 0, 2573, 0,
	2574, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 1629, 1629, 0, 287, 287, 287, 287, 0,
	0, 0, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 867, 0, 0, 0, 0, 4086, 0,
	0, 0, 0, 0, 808, 3319, 0, 0, 828, 0,
	0, 0, 0, 0, 0, 0, 0, 3326, 882, 883,
	0, 879, 0, 4020, 4021, 4022, 4023, 4024, 4025, 4026,
	4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036,
	4037, 4038, 4039, 0, 4043, 0, 0, 1930, 1931, 1959,
	0, 0, 0, 0, 4890, 0, 0, 2453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 1954, 78, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 4904, 0, 0, 0, 0, 0, 0,
	2153, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 2729, 0, 0, 0, 0, 1986, 0, 84, 0,
	0, 0, 4936, 0, 0, 1932, 0, 0, 0, 0,
	3503, 3504, 0, 3521, 3522, 3523, 1952, 0, 0, 0,
	0, 0, 0, 0, 1985, 1949, 0, 0, 0, 0,
	0, 0, 0, 4349, 0, 0, 1586, 0, 0, 93,
	0, 0, 0, 0, 1629, 1629, 1629, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 1586,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	968, 3959, 0, 0, 1586, 0, 0, 741, 0, 3518,
	0, 0, 0, 51, 287, 115, 741, 0, 0, 0,
	1970, 99, 112, 1955, 1956, 1957, 1958, 0, 287, 0,
	1586, 0, 0, 1938, 1973, 1950, 1946, 2583, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 287,
	1420, 0, 0, 0, 0, 2891, 2891, 0, 5027, 0,
	0, 0, 0, 0, 5029, 0, 0, 0, 0, 0,
	1184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 100, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 1420,
	0, 0, 757, 0, 757, 0, 3509, 0, 3013, 0,
	1947, 1948, 0, 0, 287, 0, 0, 287, 0, 0,
	0, 287, 0, 287, 0, 0, 0, 0, 1410, 0,
	287, 287, 0, 1420, 1420, 3029, 0, 0, 0, 0,
	287, 0, 0, 1953, 0, 2891, 2891, 2891, 2891, 2891,
	2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
	2891, 2891, 2891, 2891, 2891, 0, 2891, 0, 0, 0,
	0, 0, 0, 0, 3525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 835, 835, 1586, 0, 835, 835,
	0, 0, 0, 0, 0, 0, 0, 3072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 3519, 0, 0, 0,
	0, 0, 0, 287, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 104, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 828, 0, 0,
	1177, 0, 0, 0, 78, 0, 48, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 0, 0, 0,
	0, 0, 79, 287, 0, 0, 165, 0, 0, 0,
	0, 0, 1959, 0, 4404, 287, 287, 3169, 1650, 84,
	0, 0, 0, 0, 0, 199, 107, 1983, 1415, 111,
	69, 0, 0, 0, 0, 1954, 0, 50, 0, 167,
	0, 0, 0, 0, 0, 4422, 0, 0, 0, 0,
	0, 0, 0, 287, 3229, 0, 251, 0, 49, 0,
	93, 0, 0, 0, 969, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 1650, 0, 0, 287, 0, 287, 52, 70, 0,
	0, 0, 0, 287, 0, 0, 53, 1985, 0, 0,
	0, 59, 0, 3274, 0, 0, 168, 253, 3520, 1415,
	1415, 0, 0, 3072, 51, 741, 115, 0, 0, 0,
	0, 0, 99, 112, 3169, 974, 3072, 0, 0, 0,
	71, 0, 0, 1586, 164, 0, 1586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 54, 0, 287, 1410, 287,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 1420,
	287, 0, 246, 1410, 100, 1410, 200, 1410, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 1586, 0, 1595, 0, 1629, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 0, 0, 0, 287, 287, 287, 287, 1410, 0,
	0, 1410, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 1609, 0, 3785, 0, 0, 3515, 3516, 3517,
	0, 72, 0, 0, 3514, 3512, 3513, 3505, 3506, 3507,
	3508, 3510, 3511, 0, 1500, 0, 0, 0, 0, 287,
	0, 0, 3810, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 3839, 0, 0, 0, 0,
	0, 0, 0, 0, 4635, 0, 0, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 0, 0, 0, 3887, 4635, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 3911, 0,
	0, 0, 0, 0, 0, 1586, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 2653, 73, 0, 0,
	0, 0, 0, 0, 0, 60, 199, 107, 0, 0,
	111, 0, 0, 0, 56, 0, 0, 0, 169, 0,
	0, 0, 0, 1650, 0, 0, 57, 0, 1609, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 1415,
	0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
	159, 4643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 2653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 1609, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 4690, 3503, 3504, 0, 3521, 3522, 3523,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 78, 0, 0, 0, 0, 0, 4348, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 79,
	0, 0, 0, 246, 0, 0, 0, 200, 287, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 741,
	0, 0, 203, 0, 741, 3, 0, 741, 0, 0,
	741, 741, 0, 3518, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 93, 0, 0,
	3503, 3504, 0, 3521, 3522, 3523, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 287, 287, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 3518,
	3509, 0, 0, 0, 0, 3072, 3072, 287, 0, 3663,
	2128, 0, 4831, 0, 0, 0, 3072, 0, 2134, 0,
	0, 0, 0, 0, 0, 0, 1586, 3072, 2134, 0,
	3072, 2134, 0, 0, 2134, 0, 0, 3663, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 287,
	287, 2128, 0, 287, 0, 0, 0, 0, 0, 4860,
	0, 0, 0, 2891, 0, 0, 0, 0, 3525, 0,
	2128, 0, 287, 0, 3737, 0, 3737, 0, 0, 0,
	0, 1410, 0, 0, 4882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3509, 0, 0, 0,
	0, 0, 0, 3072, 0, 3072, 0, 3767, 3072, 2128,
	3519, 0, 3072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2128, 0, 0, 828,
	0, 4214, 4215, 0, 0, 2891, 0, 0, 4217, 0,
	0, 4218, 0, 0, 0, 0, 0, 0, 1586, 1586,
	0, 1586, 2866, 2867, 2868, 2869, 2862, 2863, 2864, 2865,
	0, 1410, 0, 0, 3525, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 2988, 0, 0, 0, 0,
	0, 0, 1586, 0, 0, 0, 287, 0, 3811, 0,
	0, 1983, 3813, 3072, 0, 104, 287, 0, 0, 287,
	0, 0, 3842, 0, 1420, 0, 3519, 1184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	1609, 1609, 0, 0, 3274, 0, 0, 1410, 0, 287,
	0, 0, 3072, 0, 741, 2842, 2843, 2844, 2845, 0,
	4305, 3072, 0, 0, 0, 2497, 4311, 4312, 0, 0,
	0, 0, 0, 199, 107, 1586, 0, 111, 0, 2854,
	2855, 2856, 2857, 2850, 2851, 2852, 2853, 2858, 2859, 2860,
	2861, 0, 3520, 0, 0, 0, 0, 1586, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 1983, 0, 3924,
	0, 0, 969, 0, 0, 0, 0, 159, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3930,
	0, 0, 0, 1650, 0, 0, 0, 1410, 287, 0,
	287, 2453, 0, 0, 2891, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 78, 2838, 2839, 2840, 2841, 2846, 2847, 2848, 2849,
	0, 0, 2086, 0, 0, 0, 0, 287, 0, 79,
	1586, 0, 164, 0, 0, 0, 0, 0, 3520, 0,
	0, 2891, 0, 0, 0, 0, 84, 0, 204, 0,
	0, 0, 0, 0, 1930, 1931, 252, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 2891, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 1967, 1961, 0,
	246, 1586, 0, 0, 200, 3998, 1933, 93, 0, 0,
	0, 3515, 3516, 3517, 0, 0, 1980, 0, 3514, 3512,
	3513, 3505, 3506, 3507, 3508, 3510, 3511, 0, 0, 203,
	0, 1586, 0, 1986, 0, 0, 0, 4411, 4412, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 968, 0,
	1966, 0, 0, 1952, 0, 0, 0, 0, 1415, 0,
	0, 51, 1949, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 287, 0, 0, 0, 3515, 3516, 3517,
	0, 0, 0, 1586, 3514, 3512, 3513, 3505, 3506, 3507,
	3508, 3510, 3511, 0, 0, 0, 0, 741, 741, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 1169, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 1629, 0, 1609,
	0, 1184, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 2497, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 1969, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 1586, 0, 0, 1961, 4609,
	1953, 4611, 4612, 4613, 0, 4615, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 4187, 0, 0,
	4189, 0, 0, 0, 0, 104, 3737, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 287, 1932, 0, 0, 0, 0, 0, 0, 1979,
	1966, 0, 0, 1952, 0, 3169, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 287, 0, 0, 0, 757, 757, 1420, 0,
	0, 1983, 0, 199, 107, 0, 1629, 111, 0, 0,
	0, 287, 0, 0, 4663, 0, 0, 0, 0, 0,
	0, 0, 287, 3274, 0, 0, 3274, 2134, 0, 0,
	0, 0, 287, 0, 251, 0, 0, 0, 0, 3842,
	0, 0, 969, 0, 0, 287, 0, 159, 0, 0,
	287, 0, 0, 1629, 0, 287, 0, 0, 0, 1959,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 3072, 287, 3503, 3504, 1629, 3521,
	3522, 3523, 1954, 0, 3169, 253, 0, 974, 3072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3964,
	0, 0, 0, 0, 3503, 3504, 0, 3521, 3522, 3523,
	1972, 1971, 164, 0, 1981, 0, 0, 0, 0, 287,
	0, 1960, 1962, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	1966, 0, 4759, 0, 1985, 0, 0, 1947, 1948, 0,
	0, 245, 0, 0, 0, 3518, 1966, 0, 0, 0,
	246, 0, 0, 0, 200, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 3518, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 1966, 0, 0, 4367, 0, 0, 1966,
	0, 0, 0, 0, 0, 1966, 0, 0, 0, 0,
	1415, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	1970, 0, 3503, 3504, 0, 3521, 3522, 3523, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 3509, 0, 0, 0, 0, 0, 0, 287,
	0, 1983, 0, 0, 0, 1650, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3509, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2453, 0, 0, 1966, 0, 1420,
	0, 3518, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 287, 1420, 1966, 0, 0, 1959,
	3525, 1966, 0, 0, 3526, 0, 3072, 3072, 0, 3663,
	0, 0, 3737, 3072, 0, 0, 0, 0, 0, 0,
	0, 4469, 1954, 4469, 1650, 0, 0, 0, 3525, 0,
	0, 0, 0, 0, 0, 3072, 0, 2134, 0, 0,
	0, 3663, 3519, 1650, 1650, 287, 2128, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 2128,
	0, 287, 2128, 0, 287, 0, 1966, 3737, 0, 0,
	3519, 0, 1966, 0, 0, 0, 0, 0, 3509, 0,
	0, 1429, 0, 0, 1985, 0, 0, 3072, 0, 3072,
	287, 0, 0, 0, 0, 0, 2497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 1169,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 1983, 0, 0, 0, 0, 0, 3072,
	3072, 0, 0, 0, 0, 3274, 3274, 0, 79, 0,
	0, 0, 3663, 0, 0, 0, 3525, 0, 0, 0,
	0, 1983, 0, 1599, 287, 84, 0, 0, 0, 1615,
	1970, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 3519, 1652,
	0, 1658, 0, 1664, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 3520, 0, 0, 0, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 3520, 0, 0, 0, 0, 968, 0, 0,
	0, 1966, 0, 1415, 0, 0, 0, 0, 0, 0,
	51, 0, 115, 0, 0, 0, 0, 0, 99, 112,
	0, 0, 1756, 0, 1761, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	1780, 0, 0, 0, 0, 0, 0, 2895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 2453, 0, 0, 0, 0, 0, 0,
	100, 3072, 2134, 0, 2134, 0, 0, 3842, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 4706, 0, 4706, 1845,
	3520, 0, 1851, 3515, 3516, 3517, 0, 0, 0, 0,
	3514, 3512, 3513, 3505, 3506, 3507, 3508, 3510, 3511, 0,
	0, 0, 0, 828, 0, 0, 0, 0, 0, 0,
	0, 3515, 3516, 3517, 3737, 1650, 0, 1410, 3514, 3512,
	3513, 3505, 3506, 3507, 3508, 3510, 3511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2128, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3842, 0, 0, 4469, 0,
	0, 1650, 0, 0, 0, 3072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 0, 0, 4796, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 2020, 0, 0, 0, 0, 3515,
	3516, 3517, 0, 0, 287, 287, 3514, 3512, 3513, 3505,
	3506, 3507, 3508, 3510, 3511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3998, 0,
	0, 0, 199, 107, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3737, 4851, 0, 0, 0, 0,
	0, 0, 3842, 251, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 4469, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 0, 0, 4469, 0, 0,
	2080, 2080, 2080, 0, 0, 0, 0, 1961, 0, 0,
	0, 0, 0, 0, 253, 1933, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 0,
	0, 164, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 4469, 4469, 0, 0, 204, 0, 0,
	0, 0, 1952, 0, 0, 252, 0, 0, 0, 0,
	0, 1949, 0, 0, 4469, 0, 287, 4469, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 2134, 0, 246,
	0, 0, 0, 200, 0, 0, 0, 1650, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4978, 0, 0, 0, 0, 1169, 0, 0, 1955,
	1956, 1957, 1958, 0, 1609, 0, 0, 4706, 0, 1938,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 3072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 1981, 0, 0, 0, 0, 0, 1966,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 3998, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 1966, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 1966, 0, 1953,
	0, 1415, 0, 0, 0, 0, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 1966,
	1966, 1966, 0, 0, 0, 0, 0, 1966, 1979, 1966,
	1966, 1966, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 2895, 2895, 0, 0, 0, 0, 0, 0, 3842,
	0, 78, 0, 0, 0, 0, 1966, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 3072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4469,
	0, 4469, 0, 0, 1650, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	1966, 1954, 0, 1966, 0, 0, 1966, 0, 0, 0,
	0, 0, 1966, 1966, 1966, 1966, 1966, 1966, 1966, 0,
	0, 0, 0, 0, 0, 3072, 0, 0, 968, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3169, 115, 0, 0, 0, 0, 0, 99,
	112, 0, 0, 0, 0, 3072, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 3169,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 3524, 0, 2895, 2895, 2895, 2895, 0, 0, 1966,
	0, 1966, 0, 0, 0, 0, 1966, 2559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 2628, 0, 2632, 0, 0, 0, 0, 0, 0,
	2646, 0, 0, 0, 0, 0, 0, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 0, 2696, 0, 2698, 2699, 2700, 2701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 104, 0, 0, 2776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2806, 2809, 2812, 2815, 0, 0,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 2887, 0,
	2898, 2900, 2905, 199, 107, 0, 0, 111, 0, 0,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 969, 0, 0, 0, 1986, 159, 0, 0,
	0, 0, 1930, 1931, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	1930, 1931, 0, 0, 0, 1949, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 1966, 1966, 0, 1966, 0, 0, 0,
	0, 1986, 164, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 204, 1986,
	0, 1952, 0, 0, 0, 0, 252, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 245, 0, 1955, 1956, 1957, 1958, 0, 1949, 0,
	246, 0, 0, 1938, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 1966, 0, 0, 1938, 0,
	0, 1977, 0, 1978, 0, 0, 1955, 1956, 1957, 1958,
	1947, 1948, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 1966, 1966, 0, 2895, 2895, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	3524, 3524, 0, 0, 1966, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 1218, 0, 0, 0,
	0, 0, 1979, 1947, 1948, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	1966, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 3232, 3233, 1983, 3235, 1953, 0, 0, 0,
	0, 0, 0, 0, 286, 286, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2895, 2895, 2895, 2895,
	2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895, 2895,
	2895, 2895, 2895, 2895, 2895, 2895, 898, 2895, 3524, 3524,
	3524, 3524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 1954, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3354, 1959, 0, 1985, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 1966, 0, 1987, 1988,
	1342, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 3478, 0, 0, 0, 3479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 1966, 0, 3412, 3413, 0, 0, 0, 0,
	3419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3433,
	3434, 0, 0, 0, 0, 2776, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3443, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 3457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 3469, 0, 0, 0, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 1966, 0, 0, 1966, 3524, 3524, 1966,
	0, 0, 0, 1966, 2905, 2905, 2905, 0, 0, 0,
	1966, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 1966, 0, 0, 0, 0, 0, 3562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 1966, 1966, 1966, 1966,
	1966, 1938, 0, 0, 0, 0, 1966, 0, 1966, 0,
	0, 3524, 3524, 3524, 3524, 3524, 3524, 3524, 3524, 3524,
	3524, 3524, 3524, 3524, 3524, 3524, 3524, 3524, 3524, 3524,
	3524, 0, 0, 0, 3524, 0, 0, 1966, 1966, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 1966,
	0, 0, 1960, 1962, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1254, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	3695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 1966, 1966, 0, 0,
	0, 0, 1983, 0, 0, 3750, 3751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 286, 286,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 286, 0, 286, 286, 0, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 1985, 1966, 1966, 0, 0,
	0, 1966, 1966, 0, 0, 1966, 1966, 0, 0, 0,
	1966, 0, 0, 0, 1966, 0, 0, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2895, 0, 0, 0, 1346, 0,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 286,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 2772, 0, 0, 2895, 2773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2646, 0, 0,
	0, 0, 0, 3951, 3952, 0, 0, 3955, 0, 0,
	0, 3958, 0, 0, 0, 0, 0, 0, 0, 0,
	3962, 0, 0, 0, 0, 0, 0, 0, 0, 3969,
	0, 0, 0, 0, 3562, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 3982,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4005,
	4006, 0, 4007, 4008, 4009, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	4015, 0, 0, 0, 4017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 4046, 4047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4058, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	4067, 1966, 1966, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 1966, 3524, 2895, 0, 0, 0, 0,
	0, 1966, 0, 1986, 1966, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 3524, 2895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 4123, 0, 0, 1966, 2895, 0, 0,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1966, 0, 1966, 0, 3954, 0,
	4141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 4172, 0, 0, 2102, 0, 1342,
	0, 0, 0, 286, 0, 0, 1930, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	2102, 286, 0, 0, 0, 0, 0, 0, 0, 898,
	1961, 4195, 4196, 0, 0, 0, 898, 0, 1933, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 1986, 0, 1947, 1948, 0,
	0, 286, 0, 0, 1932, 0, 0, 0, 0, 0,
	1966, 3524, 0, 0, 1966, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	1953, 0, 0, 3524, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	3953, 2080, 1980, 0, 1966, 0, 0, 0, 0, 0,
	4301, 0, 0, 1335, 0, 0, 0, 0, 0, 1986,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 1932, 0,
	0, 1983, 1938, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 282, 737, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 1960, 1962, 0, 4345, 4346, 0, 1959,
	0, 0, 4350, 4351, 0, 0, 0, 4354, 4355, 0,
	0, 0, 0, 0, 0, 4359, 0, 0, 0, 1947,
	1948, 0, 1954, 0, 0, 0, 4363, 0, 0, 0,
	0, 0, 1346, 0, 0, 1966, 1955, 1956, 1957, 1958,
	0, 0, 4368, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	1966, 0, 0, 0, 0, 286, 0, 0, 0, 898,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 1985, 1346, 0, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 286, 0, 0, 0,
	286, 0, 0, 1983, 0, 0, 286, 0, 0, 0,
	0, 1969, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 286, 0,
	286, 1346, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 1930, 1931, 1169, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 1959, 1966, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 1979, 0, 0, 0, 0,
	0, 0, 286, 0, 1954, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 286, 1983, 0, 0,
	1932, 4512, 0, 0, 0, 0, 0, 0, 0, 898,
	286, 1952, 286, 0, 286, 0, 286, 0, 286, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 286, 286, 286, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3418, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 1972, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	1985, 0, 0, 0, 0, 0, 788, 0, 0, 0,
	4630, 4631, 4632, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 771, 0, 0,
	0, 0, 772, 2646, 0, 0, 4641, 4642, 0, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 4650, 4653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 0, 0,
	0, 0, 0, 773, 0, 0, 1970, 0, 1953, 0,
	0, 0, 1346, 0, 774, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 2166, 0, 0, 775, 0, 0, 0,
	0, 0, 4373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	0, 4707, 0, 0, 0, 0, 1342, 0, 0, 0,
	4715, 0, 0, 0, 0, 0, 0, 0, 0, 776,
	0, 0, 1342, 0, 0, 4723, 0, 0, 1169, 1983,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 4733, 777, 0, 4735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 779, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	1954, 0, 0, 0, 793, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 286, 0, 0, 0, 286,
	0, 286, 0, 0, 0, 0, 0, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1396, 0, 1396, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 4859, 0, 0, 0, 4863, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 1346, 1346, 0, 0, 0,
	800, 0, 781, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 1497,
	0, 286, 801, 0, 782, 1607, 0, 0, 0, 0,
	0, 0, 0, 286, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4933, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 898, 0, 0, 783, 0, 0, 0, 0, 798,
	799, 0, 796, 0, 0, 0, 0, 0, 791, 0,
	0, 784, 0, 1346, 0, 1346, 0, 1346, 0, 0,
	0, 2646, 286, 0, 898, 0, 0, 0, 0, 0,
	4653, 286, 0, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 785, 0, 792, 0,
	0, 1346, 0, 1346, 1346, 1346, 0, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 787, 0, 0, 0, 286, 795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 286, 0, 286, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5054, 5054, 5054, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 286, 286, 286, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 286, 5079, 0, 0,
	0, 0, 0, 0, 0, 2166, 2166, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 1346, 0, 0, 0, 1949, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 5054, 5211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2129, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1396, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 1342, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 1969, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 2166, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 0, 0, 286, 0, 1933, 0, 286,
	286, 0, 0, 0, 0, 1979, 0, 1980, 0, 0,
	0, 0, 1207, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1968, 0, 0, 0,
	1346, 0, 0, 1932, 0, 286, 0, 1983, 0, 0,
	0, 0, 0, 0, 1952, 0, 1346, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 286, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 2102, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 1346, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	1346, 0, 0, 0, 0, 0, 1346, 1930, 1931, 0,
	0, 0, 0, 2439, 0, 0, 0, 2446, 1346, 0,
	1985, 0, 1971, 0, 0, 1981, 0, 0, 0, 2459,
	0, 1961, 1960, 1962, 0, 0, 286, 0, 0, 1933,
	0, 0, 0, 0, 1143, 2471, 0, 2471, 0, 1977,
	0, 1978, 0, 2478, 898, 0, 1164, 0, 1947, 1948,
	0, 0, 0, 0, 286, 0, 1986, 286, 0, 0,
	0, 0, 0, 0, 0, 1932, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 286, 0, 0,
	0, 1953, 0, 0, 0, 1949, 1970, 1342, 0, 2446,
	0, 0, 2507, 0, 0, 0, 1329, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 2527, 0, 0, 788, 0, 0, 0,
	0, 0, 3967, 0, 0, 0, 0, 2543, 0, 2545,
	1979, 2547, 0, 2549, 0, 2550, 0, 771, 0, 1231,
	0, 3411, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 286, 0, 286, 0,
	2579, 2580, 2581, 773, 0, 0, 0, 288, 288, 288,
	0, 0, 0, 0, 774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 775, 0, 0, 288,
	1959, 0, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 0,
	0, 0, 0, 1954, 0, 0, 0, 288, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 778, 0, 0,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	1342, 1342, 0, 920, 0, 0, 0, 0, 921, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 790, 1346, 1346, 0, 3481, 0, 922,
	0, 939, 1959, 2964, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 898, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 923, 1346, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 925, 0, 0, 0, 2166, 0, 0, 0, 1346,
	0, 0, 781, 0, 0, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 3015,
	0, 0, 1396, 0, 0, 0, 1396, 0, 1396, 0,
	919, 0, 801, 0, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 950,
	0, 0, 0, 0, 803, 2166, 802, 0, 0, 286,
	0, 0, 0, 0, 783, 0, 0, 0, 0, 798,
	799, 0, 796, 0, 0, 0, 0, 0, 791, 0,
	0, 784, 0, 0, 0, 0, 0, 0, 1950, 1946,
	286, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 785, 0, 792, 949,
	286, 0, 117, 0, 0, 1346, 0, 786, 0, 944,
	0, 0, 0, 286, 0, 0, 0, 0, 286, 0,
	0, 0, 787, 286, 0, 0, 0, 795, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2446, 2446, 804, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 928, 0, 1346,
	0, 1346, 0, 0, 0, 1346, 0, 286, 930, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 3252,
	117, 0, 117, 0, 117, 0, 0, 0, 2459, 0,
	931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 802, 0, 0, 0, 1164, 117, 117, 1346,
	0, 1346, 0, 3324, 0, 917, 0, 0, 941, 0,
	0, 0, 0, 117, 0, 117, 0, 932, 0, 0,
	0, 0, 3335, 0, 3338, 0, 0, 0, 0, 117,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 938, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 1346, 0, 1342, 0, 0,
	0, 0, 933, 0, 0, 1342, 934, 953, 0, 952,
	0, 0, 0, 935, 0, 0, 0, 0, 0, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 936, 3372,
	1607, 3374, 1607, 945, 0, 0, 0, 117, 3380, 954,
	0, 951, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 286, 2166, 0, 0, 0, 0, 0, 288,
	0, 288, 288, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 1346, 0, 1396, 0, 0, 0, 0, 2102,
	0, 2102, 3409, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2166,
	2166, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 286, 0, 0, 0, 0, 0, 2166, 2166,
	0, 0, 0, 0, 0, 288, 1506, 288, 288, 1143,
	0, 288, 288, 0, 0, 0, 0, 1506, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 2166, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 0,
	0, 0, 2012, 0, 0, 0, 0, 1506, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 288, 288, 0, 0, 0,
	0, 0, 286, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	1506, 288, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 1506, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 292, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 2100, 0, 2103, 0, 117, 0, 0,
	0, 0, 0, 1986, 0, 0, 1506, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	890, 0, 1346, 1346, 0, 1346, 0, 0, 0, 1346,
	0, 3610, 1346, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 1607, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 3659, 0, 0, 0, 2102, 0, 1977, 0,
	1978, 1346, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 1346, 0, 0, 0, 0, 1346, 1346, 1346, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 3714, 3716, 0, 0, 2459, 1346,
	1953, 1346, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2166, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	1968, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 1983, 288, 288, 288, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 288,
	2102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 1959,
	286, 3835, 0, 0, 2446, 1346, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 1346, 1346, 0,
	1346, 0, 1954, 0, 0, 0, 0, 1346, 0, 0,
	0, 2102, 2102, 0, 0, 0, 0, 0, 1346, 1346,
	0, 1164, 0, 1164, 0, 0, 0, 0, 0, 0,
	1972, 1346, 2102, 0, 286, 2102, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 1346, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3936, 1346, 1607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 3949, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 1346, 1346,
	0, 0, 0, 0, 0, 0, 3480, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 0, 1143, 1143,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1346,
	1506, 1506, 288, 0, 1346, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 1346, 1346, 1346, 1346, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 2714, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 288, 1164, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 2006, 288, 0, 0, 2006, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 288, 0, 0, 0, 0, 0, 288,
	0, 2166, 0, 0, 0, 0, 0, 0, 1506, 0,
	1506, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 1346, 0, 0, 0, 0,
	1506, 1506, 0, 0, 0, 0, 0, 2102, 0, 2102,
	0, 0, 0, 0, 1506, 288, 0, 0, 288, 0,
	0, 0, 1329, 0, 0, 0, 1506, 0, 1506, 1506,
	1506, 0, 1346, 0, 0, 0, 0, 0, 2103, 288,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 288, 0, 288, 0, 288, 0, 288,
	0, 288, 0, 0, 0, 0, 0, 2166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 288, 288, 288, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1503,
	0, 0, 0, 1346, 1346, 1346, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 1346, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 4254, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 4264, 0, 0,
	2166, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 2459, 0, 0, 0, 0,
	4283, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 117, 1506, 0, 117, 0, 117, 0, 0, 1346,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 1346, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 117, 0, 0, 117, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 288, 0,
	0, 0, 288, 0, 288, 0, 0, 0, 0, 0,
	0, 288, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	4489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 1506, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 1506, 0, 0, 0, 890, 0, 0, 0, 0,
	0, 0, 890, 0, 0, 0, 0, 0, 2714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2459,
	0, 0, 0, 0, 0, 288, 0, 288, 0, 4588,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1503, 1506, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	288, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 288, 288, 288, 288, 0,
	1932, 0, 0, 0, 288, 0, 0, 0, 0, 288,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 4692, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 1625, 1626, 1625, 1977, 0, 1978, 0,
	0, 1626, 0, 0, 0, 1947, 1948, 0, 0, 4821,
	1607, 0, 0, 1625, 1625, 117, 117, 1626, 117, 0,
	0, 0, 0, 1969, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 1625,
	0, 1625, 1625, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 890, 0, 0, 117, 117,
	0, 117, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 1503, 0, 1959, 0, 0,
	0, 4939, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	1954, 0, 0, 1329, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	117, 117, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 288, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 4992, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	288, 288, 0, 0, 288, 5036, 0, 0, 0, 1980,
	0, 288, 0, 0, 0, 0, 0, 0, 1970, 1503,
	0, 0, 0, 288, 0, 0, 1986, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 1932, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 1503, 1952, 0, 0, 0,
	1506, 0, 0, 0, 3477, 1949, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 1506, 0, 1506, 0, 0, 0,
	1506, 0, 0, 1955, 1956, 1957, 1958, 288, 1506, 0,
	0, 0, 0, 1938, 0, 0, 0, 288, 117, 0,
	288, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1329, 1329, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 1971, 0, 0, 1981, 0, 0,
	0, 1503, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 1978, 1506, 0, 1506, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 288,
	1506, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 1625, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 1626, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 1506, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 1625, 0, 1625, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 0, 0, 0,
	0, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 1626,
	0, 1626, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 1329,
	0, 1626, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 1626,
	1626, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 288, 1329, 0, 0, 0, 0, 0, 0,
	0, 1329, 0, 0, 0, 0, 0, 1506, 1506, 0,
	1506, 0, 0, 0, 1506, 0, 0, 1506, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 1506, 1506, 1506, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 1506, 0, 1506, 0, 0, 0,
	288, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1503, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1506, 0, 1506, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 1504, 0, 0, 1506,
	0, 0, 288, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 1506, 0, 0, 1625, 0, 1625,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	890, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1625, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 288, 0, 0, 0, 1506,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 2714, 1626, 0, 0, 0,
	0, 0, 1626, 0, 0, 1506, 1506, 1506, 1506, 1506,
	1506, 1506, 0, 0, 1626, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 1625, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 1967, 1961, 0, 0, 0, 0, 1506, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	1980, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 1503, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 1506,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 1506,
	0, 0, 1506, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 288, 288, 0, 0, 0,
	0, 117, 0, 0, 0, 1971, 0, 117, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 0, 0, 0,
	0, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	1625, 1625, 1506, 1625, 0, 1504, 0, 1625, 0, 0,
	1625, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 1625, 1625, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 1625,
	0, 288, 0, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 1626, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 1626, 0, 1626, 0, 0,
	3475, 1504, 0, 0, 0, 0, 0, 0, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 1626, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 1503, 1503, 0, 1503, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 1625, 1625, 0, 1986,
	0, 0, 0, 0, 0, 1626, 0, 1626, 1932, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1503, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 1625, 1625, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 0, 1978, 1503, 0, 0,
	0, 0, 1625, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 1625, 1625,
	1625, 1625, 1625, 1625, 1625, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1503, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 1503, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 1625, 1625, 1625, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 1626, 1626,
	0, 1626, 0, 0, 1980, 1626, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 1503, 0, 0, 1625, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 2773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 1626, 1626, 1626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 1626, 0, 1626, 1938, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 1969, 0, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 1967, 1961, 1953, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 1504, 1504, 0, 1504, 1979, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 1626, 1626, 0, 0, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 1504, 1625, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	1971, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1626, 0, 1977, 0, 1978,
	0, 0, 1985, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1953,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 1626, 1626, 1626,
	1626, 1626, 1626, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 1979, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 1968,
	4979, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1626, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1504, 0, 0, 1626, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 4975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1501, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 1507, 304, 305, 1508,
	1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306, 1515,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 1516, 688, 318,
	319, 320, 321, 322, 323, 1517, 1518, 0, 324, 689,
	690, 691, 1519, 325, 326, 692, 1520, 1587, 1521, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 1522, 336,
	337, 338, 335, 339, 1523, 340, 1626, 341, 342, 343,
	344, 345, 346, 1524, 347, 348, 349, 1286, 350, 351,
	352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 1532, 363,
	359, 361, 1533, 364, 362, 365, 1534, 366, 367, 368,
	1535, 1536, 369, 370, 371, 1537, 372, 373, 374, 1538,
	375, 376, 377, 1539, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 1540, 293, 1541, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 1542, 396, 397, 398,
	1543, 399, 1544, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 1545, 412,
	701, 1546, 702, 413, 1547, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 1548, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 1549, 1288, 509, 430, 706, 707, 1550, 708, 1551,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 1552,
	443, 445, 444, 1553, 446, 710, 1293, 447, 448, 1294,
	1554, 449, 450, 451, 452, 453, 454, 457, 1555, 1556,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1557, 295, 1297, 503, 504, 505, 506, 1558, 711,
	507, 712, 510, 511, 1559, 0, 512, 0, 513, 1560,
	1561, 515, 516, 517, 1562, 1563, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 1564, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 1565, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 1566,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 1567, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	1568, 601, 602, 600, 603, 604, 605, 1569, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 1570, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 1571, 636, 637, 0, 632,
	623, 1572, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 1573, 646, 724, 725, 726, 727, 1574, 656, 1575,
	647, 648, 649, 650, 728, 651, 729, 1576, 652, 653,
	654, 655, 0, 657, 658, 1577, 1578, 659, 660, 662,
	664, 665, 661, 663, 666, 1579, 667, 1580, 0, 668,
	669, 670, 730, 731, 732, 1581, 672, 671, 673, 674,
	675, 733, 676, 677, 1582, 1583, 1584, 1585, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 2942, 0, 0, 0, 0, 0, 0,
	0, 2943, 296, 297, 299, 298, 300, 301, 302, 303,
	1507, 304, 305, 1508, 1509, 1510, 0, 1511, 683, 1512,
	1513, 1514, 306, 1515, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 1516, 688, 318, 319, 320, 321, 322, 323, 1517,
	1518, 0, 324, 689, 690, 691, 1519, 325, 326, 692,
	1520, 1587, 1521, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 1522, 336, 337, 338, 335, 339, 1523, 340,
	0, 341, 342, 343, 344, 345, 346, 1524, 347, 348,
	349, 1286, 350, 351, 352, 1525, 1526, 1528, 1527, 1529,
	1530, 1531, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 1532, 363, 359, 361, 1533, 364, 362, 365,
	1534, 366, 367, 368, 1535, 1536, 369, 370, 371, 1537,
	372, 373, 374, 1538, 375, 376, 377, 1539, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 1540, 293, 1541, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	1542, 396, 397, 398, 1543, 399, 1544, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 1545, 412, 701, 1546, 702, 413, 1547, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 1548, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 1549, 1288, 509, 430, 706,
	707, 1550, 708, 1551, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 1552, 443, 445, 444, 1553, 446, 710,
	1293, 447, 448, 1294, 1554, 449, 450, 451, 452, 453,
	454, 457, 1555, 1556, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1557, 295, 1297, 503, 504,
	505, 506, 1558, 711, 507, 712, 510, 511, 1559, 0,
	512, 0, 513, 1560, 1561, 515, 516, 517, 1562, 1563,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 1564,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 1565, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 1566, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 1567, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 1568, 601, 602, 600, 603, 604,
	605, 1569, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 1570,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 1571,
	636, 637, 0, 632, 623, 1572, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 1573, 646, 724, 725, 726,
	727, 1574, 656, 1575, 647, 648, 649, 650, 728, 651,
	729, 1576, 652, 653, 654, 655, 0, 657, 658, 1577,
	1578, 659, 660, 662, 664, 665, 661, 663, 666, 1579,
	667, 1580, 0, 668, 669, 670, 730, 731, 732, 1581,
	672, 671, 673, 674, 675, 733, 676, 677, 1582, 1583,
	1584, 1585, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 3976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3978, 296, 297, 299, 298, 300, 301,
	302, 303, 1507, 304, 305, 1508, 1509, 1510, 0, 1511,
	683, 1512, 1513, 1514, 306, 1515, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 1516, 688, 318, 319, 320, 321, 322,
	323, 1517, 1518, 0, 324, 689, 690, 691, 1519, 325,
	326, 692, 1520, 1587, 1521, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 1522, 336, 337, 338, 335, 339,
	1523, 340, 0, 341, 342, 343, 344, 345, 346, 1524,
	347, 348, 349, 1286, 350, 351, 352, 1525, 1526, 1528,
	1527, 1529, 1530, 1531, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 1532, 363, 359, 361, 1533, 364,
	362, 365, 1534, 366, 367, 368, 1535, 1536, 369, 370,
	371, 1537, 372, 373, 374, 1538, 375, 376, 377, 1539,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 1540, 293, 1541,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 1542, 396, 397, 398, 1543, 399, 1544, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 1545, 412, 701, 1546, 702, 413,
	1547, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 1548, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 1549, 1288, 509,
	430, 706, 707, 1550, 708, 1551, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 1552, 443, 445, 444, 1553,
	446, 710, 1293, 447, 448, 1294, 1554, 449, 450, 451,
	452, 453, 454, 457, 1555, 1556, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1557, 295, 1297,
	503, 504, 505, 506, 1558, 711, 507, 712, 510, 511,
	1559, 0, 512, 0, 513, 1560, 1561, 515, 516, 517,
	1562, 1563, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 1564, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 1565, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 1566, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	1567, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 1568, 601, 602, 600,
	603, 604, 605, 1569, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 1570, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 1571, 636, 637, 0, 632, 623, 1572, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 1573, 646, 724,
	725, 726, 727, 1574, 656, 1575, 647, 648, 649, 650,
	728, 651, 729, 1576, 652, 653, 654, 655, 0, 657,
	658, 1577, 1578, 659, 660, 662, 664, 665, 661, 663,
	666, 1579, 667, 1580, 0, 668, 669, 670, 730, 731,
	732, 1581, 672, 671, 673, 674, 675, 733, 676, 677,
	1582, 1583, 1584, 1585, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4403,
	296, 297, 299, 298, 300, 301, 302, 303, 1507, 304,
	305, 1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514,
	306, 1515, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 1516,
	688, 318, 319, 320, 321, 322, 323, 1517, 1518, 0,
	324, 689, 690, 691, 1519, 325, 326, 692, 1520, 1587,
	1521, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	1522, 336, 337, 338, 335, 339, 1523, 340, 0, 341,
	342, 343, 344, 345, 346, 1524, 347, 348, 349, 1286,
	350, 351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	1532, 363, 359, 361, 1533, 364, 362, 365, 1534, 366,
	367, 368, 1535, 1536, 369, 370, 371, 1537, 372, 373,
	374, 1538, 375, 376, 377, 1539, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 1540, 293, 1541, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 1542, 396,
	397, 398, 1543, 399, 1544, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	1545, 412, 701, 1546, 702, 413, 1547, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 1289, 420, 421,
	1548, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 1549, 1288, 509, 430, 706, 707, 1550,
	708, 1551, 431, 432, 1290, 709, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 1552, 443, 445, 444, 1553, 446, 710, 1293, 447,
	448, 1294, 1554, 449, 450, 451, 452, 453, 454, 457,
	1555, 1556, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1557, 295, 1297, 503, 504, 505, 506,
	1558, 711, 507, 712, 510, 511, 1559, 0, 512, 0,
	513, 1560, 1561, 515, 516, 517, 1562, 1563, 518, 519,
	713, 1298, 520, 1299, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 1564, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 1565, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 1566, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 1567, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 1568, 601, 602, 600, 603, 604, 605, 1569,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 1570, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 1571, 636, 637,
	0, 632, 623, 1572, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 1573, 646, 724, 725, 726, 727, 1574,
	656, 1575, 647, 648, 649, 650, 728, 651, 729, 1576,
	652, 653, 654, 655, 0, 657, 658, 1577, 1578, 659,
	660, 662, 664, 665, 661, 663, 666, 1579, 667, 1580,
	0, 668, 669, 670, 730, 731, 732, 1581, 672, 671,
	673, 674, 675, 733, 676, 677, 1582, 1583, 1584, 1585,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4401, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4636, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4498, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4330, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3994, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3808, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2796, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 1498, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 296, 297, 299, 298,
	300, 301, 302, 303, 1507, 304, 305, 1508, 1509, 1510,
	0, 1511, 683, 1512, 1513, 1514, 306, 1515, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 1516, 688, 318, 319, 320,
	321, 322, 323, 1517, 1518, 0, 324, 689, 690, 691,
	1519, 325, 326, 692, 1520, 1587, 1521, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1522, 336, 337, 338,
	335, 339, 1523, 340, 0, 341, 342, 343, 344, 345,
	346, 1524, 347, 348, 349, 1286, 350, 351, 352, 1525,
	1526, 1528, 1527, 1529, 1530, 1531, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 1532, 363, 359, 361,
	1533, 364, 362, 365, 1534, 366, 367, 368, 1535, 1536,
	369, 370, 371, 1537, 372, 373, 374, 1538, 375, 376,
	377, 1539, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 1540,
	293, 1541, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 1542, 396, 397, 398, 1543, 399,
	1544, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 1545, 412, 701, 1546,
	702, 413, 1547, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 1548, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 1549,
	1288, 509, 430, 706, 707, 1550, 708, 1551, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 1552, 443, 445,
	444, 1553, 446, 710, 1293, 447, 448, 1294, 1554, 449,
	450, 451, 452, 453, 454, 457, 1555, 1556, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1557,
	295, 1297, 503, 504, 505, 506, 1558, 711, 507, 712,
	510, 511, 1559, 0, 512, 0, 513, 1560, 1561, 515,
	516, 517, 1562, 1563, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 1564, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 1565,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 1566, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 1567, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 1568, 601,
	602, 600, 603, 604, 605, 1569, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 1570, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 1571, 636, 637, 0, 632, 623, 1572,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 1573,
	646, 724, 725, 726, 727, 1574, 656, 1575, 647, 648,
	649, 650, 728, 651, 729, 1576, 652, 653, 654, 655,
	0, 657, 658, 1577, 1578, 659, 660, 662, 664, 665,
	661, 663, 666, 1579, 667, 1580, 0, 668, 669, 670,
	730, 731, 732, 1581, 672, 671, 673, 674, 675, 733,
	676, 677, 1582, 1583, 1584, 1585, 678, 679, 734, 680,
	681, 682, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 1507, 304, 305,
	1508, 1509, 1510, 0, 1511, 683, 1512, 1513, 1514, 306,
	1515, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 1516, 688,
	318, 319, 320, 321, 322, 323, 1517, 1518, 0, 324,
	689, 690, 691, 1519, 325, 326, 692, 1520, 1587, 1521,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1522,
	336, 337, 338, 335, 339, 1523, 340, 0, 341, 342,
	343, 344, 345, 346, 1524, 347, 348, 349, 1286, 350,
	351, 352, 1525, 1526, 1528, 1527, 1529, 1530, 1531, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 1532,
	363, 359, 361, 1533, 364, 362, 365, 1534, 366, 367,
	368, 1535, 1536, 369, 370, 371, 1537, 372, 373, 374,
	1538, 375, 376, 377, 1539, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 1540, 293, 1541, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 1542, 396, 397,
	398, 1543, 399, 1544, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 1545,
	412, 701, 1546, 702, 413, 1547, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 1548,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 1549, 1288, 509, 430, 706, 707, 1550, 708,
	1551, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1552, 443, 445, 444, 1553, 446, 710, 1293, 447, 448,
	1294, 1554, 449, 450, 451, 452, 453, 454, 457, 1555,
	1556, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1557, 295, 1297, 503, 504, 505, 506, 1558,
	711, 507, 712, 510, 511, 1559, 0, 512, 0, 513,
	1560, 1561, 515, 516, 517, 1562, 1563, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 1564, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 1565, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	1566, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 1567, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 1568, 601, 602, 600, 603, 604, 605, 1569, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 1570, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 1571, 636, 637, 0,
	632, 623, 1572, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 1573, 646, 724, 725, 726, 727, 1574, 656,
	1575, 647, 648, 649, 650, 728, 651, 729, 1576, 652,
	653, 654, 655, 0, 657, 658, 1577, 1578, 659, 660,
	662, 664, 665, 661, 663, 666, 1579, 667, 1580, 0,
	668, 669, 670, 730, 731, 732, 1581, 672, 671, 673,
	674, 675, 733, 676, 677, 1582, 1583, 1584, 1585, 678,
	679, 734, 680, 681, 682, 2771, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2768, 304, 305, 0, 0, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 2769, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 2767, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 2770, 0, 0, 0, 0, 0, 0,
	0, 1205, 2766, 0, 1165, 1203, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 251, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 253, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 1746, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 245, 678, 679, 734, 680, 681, 682, 1179,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	2011, 2009, 0, 0, 1203, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 251, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 253, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 1746, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 245, 678,
	679, 734, 680, 681, 682, 1179, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 2011, 3431, 0, 0,
	1203, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 251, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 253, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 1746,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 245, 678, 679, 734, 680, 681,
	682, 1179, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 2011, 2009, 0, 0, 1203, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	2901, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 2906, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 2902, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 2903, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 2816, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 2814, 0,
	2813, 1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 2811, 0, 2810,
	1203, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 2808, 0, 2807, 1203,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 2805, 0, 1847, 1203, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1846, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 1168, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 1183, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 5004, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 1183, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 2648, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 2647, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 4726, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 1183, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 1183, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 4295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 2081,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 1205, 0, 0,
	0, 1203, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 3972, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 2081, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 1205, 0, 0, 0, 1203, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 2906, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	2009, 0, 2911, 1203, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 2909, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	2897, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 2886,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 2884, 0,
	2875, 2882, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 2878, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 2879, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	2880, 467, 2877, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 2881, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 2876, 682, 1179, 0, 0, 0, 2872, 0, 2875,
	2882, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 2878, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 2879, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 2880,
	467, 2877, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 2881, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	2876, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 0, 0, 0, 0, 0, 0,
	2017, 0, 1205, 0, 0, 0, 1203, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2627, 304, 305, 0, 0, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 2589, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 2560, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 1852, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 1781, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	1776, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 657, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 1762,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 657, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 1757, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 1210, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 1666, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1665,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 1660, 0, 1221, 1193,
	1194, 1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1659, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 1653, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 1616, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 1172, 1173, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 1181, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 1178, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 1175, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 1182, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 1179,
	0, 0, 0, 1598, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 1174, 0, 0, 0, 0, 0, 0,
	1172, 1173, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 1176, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 1181, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 1602, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 1178, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 1188,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 1603, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 1189, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 1175, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 1601, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	1182, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1179, 0,
	0, 0, 1430, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 1174, 0, 0, 0, 0, 0, 0, 1172,
	1173, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 1297, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 657, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1179, 0, 0,
	0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 1174, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 1211, 1244, 1176,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	1181, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1187, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 1178, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 1188, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	1175, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 1182, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 1179, 0, 0, 0,
	0, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0,
	1174, 0, 0, 0, 0, 0, 0, 1172, 1173, 296,
	297, 299, 298, 300, 301, 302, 303, 1205, 304, 305,
	0, 1203, 0, 0, 0, 1245, 1209, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 1258, 0, 316, 1265, 317, 1264, 0, 1275,
	318, 319, 320, 321, 322, 323, 1211, 1244, 1176, 324,
	1305, 1306, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 5053, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 1268, 358, 360, 1262, 1261, 1181,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1253, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1187, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 1200, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1260, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 1273, 1274,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 1210, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 1255, 1256, 0, 1216,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 1178, 295, 1297, 503, 504, 505, 506, 1201,
	1249, 507, 1263, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 1188, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 1259, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 1189, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 1257, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 1304, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 1175,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 1269, 1270, 1271, 1272, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 1199, 652,
	653, 654, 655, 0, 5052, 658, 0, 1182, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 1266, 1303, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1179, 0, 0, 0, 0,
	0, 1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174,
	0, 0, 0, 0, 0, 0, 1172, 1173, 296, 297,
	299, 298, 300, 301, 302, 303, 1205, 304, 305, 0,
	1203, 0, 0, 0, 1245, 1209, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	5051, 1258, 0, 316, 1265, 317, 1264, 0, 1275, 318,
	319, 320, 321, 322, 323, 1211, 1244, 1176, 324, 1305,
	1306, 691, 0, 325, 326, 1251, 0, 1232, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	5053, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354,
	355, 356, 357, 1268, 358, 360, 1262, 1261, 1181, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1187, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1276, 1277,
	391, 1200, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1260, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 1273, 1274, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	1283, 0, 1210, 413, 0, 414, 415, 416, 417, 418,
	419, 1246, 1247, 1250, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 1288, 509, 430, 1255, 1256, 0, 1216, 0,
	431, 432, 1290, 1248, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 1284, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 1239, 1238,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 1178, 295, 1297, 503, 504, 505, 506, 1201, 1249,
	507, 1263, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 1278, 521, 522, 1188, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 1279, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 1259, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 1189, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 1242, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 1257, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 1304, 626, 627, 628,
	629, 1280, 633, 634, 635, 0, 636, 637, 1175, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 1269, 1270, 1271, 1272, 0, 656, 0,
	647, 648, 649, 650, 1281, 651, 1282, 1199, 652, 653,
	654, 655, 0, 5052, 658, 0, 1182, 659, 660, 662,
	664, 665, 661, 663, 666, 1243, 667, 0, 0, 668,
	669, 670, 730, 1266, 1303, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1179, 0, 0, 0, 0, 0,
	1221, 1193, 1194, 1195, 1191, 1192, 1204, 0, 1174, 0,
	0, 0, 0, 0, 0, 1172, 1173, 296, 297, 299,
	298, 300, 301, 302, 303, 1205, 304, 305, 0, 1203,
	0, 0, 0, 1245, 1209, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	1258, 0, 316, 1265, 317, 1264, 0, 1275, 318, 319,
	320, 321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 4655, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 1268, 358, 360, 1262, 1261, 1181, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1253, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1187, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	1200, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1260, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 1273, 1274, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 4656, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 1255, 1256, 0, 1216, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	1178, 295, 1297, 503, 504, 505, 506, 1201, 1249, 507,
	1263, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 1188, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 1259, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 4654, 582, 1189, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 1257, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 1304, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 1175, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 1269, 1270, 1271, 1272, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 1199, 652, 653, 654,
	655, 0, 657, 658, 0, 1182, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 1266, 1303, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 1179, 0, 0, 0, 0, 0, 1221,
	1193, 1194, 1195, 3398, 3399, 1204, 0, 1174, 0, 0,
	0, 0, 0, 0, 1172, 1173, 296, 297, 299, 298,
	300, 301, 302, 303, 1205, 304, 305, 0, 1203, 0,
	0, 0, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 1181, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1187, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 1178,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 1188, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 1175, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 1182, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1179, 0, 0, 0, 0, 0, 1221, 1193,
	1194, 1195, 3396, 3397, 1204, 0, 1174, 0, 0, 0,
	0, 0, 0, 1172, 1173, 296, 297, 299, 298, 300,
	301, 302, 303, 1205, 304, 305, 0, 1203, 0, 0,
	0, 1245, 1209, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 1258, 0,
	316, 1265, 317, 1264, 0, 1275, 318, 319, 320, 321,
	322, 323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	1268, 358, 360, 1262, 1261, 1181, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1253, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1187, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 1200, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1260, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 1273, 1274, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 1210,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 1255, 1256, 0, 1216, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 1178, 295,
	1297, 503, 504, 505, 506, 1201, 1249, 507, 1263, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 1188, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	1259, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 1189, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 1257,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 1304, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 1175, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	1269, 1270, 1271, 1272, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 1199, 652, 653, 654, 655, 0,
	657, 658, 0, 1182, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	1266, 1303, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1179, 0, 0, 0, 0, 0, 1221, 1193, 1194,
	1195, 1191, 1192, 1204, 0, 1174, 0, 0, 0, 0,
	0, 0, 1172, 1173, 296, 297, 299, 298, 300, 301,
	302, 303, 1205, 304, 305, 0, 1203, 0, 0, 0,
	1245, 1209, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 1258, 0, 316,
	1265, 317, 1264, 0, 1275, 318, 319, 320, 321, 322,
	323, 1211, 1244, 1176, 324, 1305, 1306, 691, 0, 325,
	326, 1251, 0, 1232, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 1235, 1233, 1234,
	1241, 1237, 1236, 1240, 353, 354, 355, 356, 357, 1268,
	358, 360, 1262, 1261, 1181, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1253,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1187, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1276, 1277, 391, 1200, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1260, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 1273, 1274, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 1283, 0, 1210, 413,
	0, 414, 415, 416, 417, 418, 419, 1246, 1247, 1250,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 1288, 509,
	430, 1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 1284, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 1239, 1238, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 1178, 295, 1297,
	503, 504, 505, 506, 1201, 1249, 507, 1263, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 1278, 521,
	522, 1188, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 1279, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 1259,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	1189, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 1242, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 1257, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 1304, 626, 627, 628, 629, 1280, 633, 634,
	635, 0, 636, 637, 1175, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 1269,
	1270, 1271, 1272, 0, 656, 0, 647, 648, 649, 650,
	1281, 651, 1282, 1199, 652, 653, 654, 655, 0, 657,
	658, 0, 1182, 659, 660, 662, 664, 665, 661, 663,
	666, 1243, 667, 0, 0, 668, 669, 670, 730, 1266,
	1303, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1179, 0, 0, 0, 0, 0, 1221, 1193, 1194, 1195,
	1191, 1192, 1204, 0, 1174, 0, 0, 0, 0, 0,
	0, 2635, 2636, 296, 297, 299, 298, 300, 301, 302,
	303, 1205, 304, 305, 0, 1203, 0, 0, 0, 1245,
	1209, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 1258, 0, 316, 1265,
	317, 1264, 0, 1275, 318, 319, 320, 321, 322, 323,
	1211, 1244, 0, 324, 1305, 1306, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 1268, 358,
	360, 1262, 1261, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1253, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1187, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 1200, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1260, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 1273, 1274, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 1210, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	1255, 1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 295, 1297, 503,
	504, 505, 506, 1201, 1249, 507, 1263, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	1188, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 1259, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 1189,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 1257, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 1304, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 1269, 1270,
	1271, 1272, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 1199, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 1266, 1303,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191,
	1192, 1204, 0, 2894, 0, 0, 0, 0, 0, 0,
	2892, 2893, 296, 297, 299, 298, 300, 301, 302, 303,
	1205, 304, 305, 0, 1203, 0, 0, 0, 1245, 1209,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 1258, 0, 316, 1265, 317,
	1264, 0, 1275, 318, 319, 320, 321, 322, 323, 1211,
	1244, 0, 324, 1305, 1306, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 1268, 358, 360,
	1262, 1261, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1253, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1187, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 1200, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1260, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 1273, 1274, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 1210, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 1255,
	1256, 0, 1216, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 1201, 1249, 507, 1263, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 1259, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 3391, 3392,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 1257, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	1304, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 1269, 1270, 1271,
	1272, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 1199, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 730, 1266, 1303, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 1221, 1193, 1194, 1195, 1191, 1192,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 2263,
	2264, 296, 297, 299, 298, 300, 301, 302, 303, 1205,
	304, 305, 0, 1203, 0, 0, 0, 1245, 1209, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 0, 1258, 0, 316, 1265, 317, 1264,
	0, 1275, 318, 319, 320, 321, 322, 323, 1211, 1244,
	1176, 324, 1305, 1306, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 5053, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 1268, 358, 360, 1262,
	1261, 1181, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1253, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1187,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 1200, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1260, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	1273, 1274, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 1210, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 1255, 1256,
	0, 1216, 0, 431, 432, 0, 1248, 0, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 1178, 295, 0, 503, 504, 505,
	506, 1201, 1249, 507, 1263, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 1188, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 1259, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 1189, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 1257, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 1304,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 1175, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 1269, 1270, 1271, 1272,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	1199, 652, 653, 654, 655, 0, 5052, 658, 0, 1182,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 1266, 1303, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 2913, 0, 1221, 1193, 1194, 1195, 1191, 1192, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 1172, 1173,
	296, 297, 299, 298, 300, 301, 302, 303, 1205, 304,
	305, 0, 1203, 0, 0, 0, 1245, 1209, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 1258, 0, 316, 1265, 317, 1264, 0,
	1275, 318, 319, 320, 321, 322, 323, 0, 1244, 0,
	324, 1305, 1306, 691, 0, 325, 326, 1251, 0, 1232,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240,
	353, 354, 355, 356, 357, 1268, 358, 360, 1262, 1261,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1253, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1276, 1277, 391, 1200, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1260, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 1273,
	1274, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 1283, 0, 1210, 413, 0, 414, 415, 416,
	417, 418, 419, 1246, 1247, 1250, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 1288, 509, 430, 1255, 1256, 0,
	1216, 0, 431, 432, 1290, 1248, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 1284, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	1239, 1238, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 295, 1297, 503, 504, 505, 506,
	1201, 1249, 507, 1263, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 1278, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 1279, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 1259, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 1189, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 1242,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 1257, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 1304, 626,
	627, 628, 629, 1280, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 1269, 1270, 1271, 1272, 0,
	656, 0, 647, 648, 649, 650, 1281, 651, 1282, 1199,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 1243, 667, 0,
	0, 668, 669, 670, 730, 1266, 1303, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 1628, 0, 1221,
	1193, 1194, 1195, 1191, 1192, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 1205, 0, 0,
	0, 1203, 1245, 1209, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 1258,
	0, 316, 1265, 317, 1264, 0, 1275, 318, 319, 320,
	321, 322, 323, 0, 1244, 0, 324, 1305, 1306, 691,
	0, 325, 326, 1251, 0, 1232, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 1235,
	1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356,
	357, 1268, 358, 360, 1262, 1261, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1253, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1276, 1277, 391, 1200,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1260,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 1273, 1274, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 1283, 0,
	1210, 413, 0, 414, 415, 416, 417, 418, 419, 1246,
	1247, 1250, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	1288, 509, 430, 1255, 1256, 0, 1216, 0, 431, 432,
	1290, 1248, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 1284, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 1239, 1238, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	295, 1297, 503, 504, 505, 506, 1201, 1249, 507, 1263,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	1278, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 1279, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 1259, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 1189, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 1242, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	1257, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 1304, 626, 627, 628, 629, 1280,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 1269, 1270, 1271, 1272, 0, 656, 0, 647, 648,
	649, 650, 1281, 651, 1282, 1199, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 1243, 667, 0, 0, 668, 669, 670,
	730, 1266, 1303, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 1165, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 1205, 0, 0, 0, 1203, 1245, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	1244, 0, 324, 689, 690, 691, 0, 325, 326, 1251,
	0, 1232, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237,
	1236, 1240, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1276, 1277, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 1283, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1246, 1247, 1250, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 1248, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 1330, 443, 445, 444, 0, 446, 1284,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 1239, 1238, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 295, 1297, 503, 504,
	505, 506, 0, 1249, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 1336, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 1278, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	1279, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 1338,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 251, 601, 602, 600, 603, 604,
	605, 1242, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 1280, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 253, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 1281, 651,
	1282, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 1243,
	667, 0, 0, 668, 669, 670, 1746, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 245, 678, 679, 734, 680, 681, 682, 1344, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 1334, 0, 2105,
	0, 1245, 0, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 1244, 0, 324, 689, 690, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1330, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 295,
	1297, 503, 504, 505, 506, 0, 1249, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 1336, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 1338, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 251, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 253, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 1746,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 245, 678, 679, 734, 680, 681,
	682, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3555, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 2105, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 1244, 0, 324, 689, 690, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 1330, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 295, 1297, 503,
	504, 505, 506, 0, 1249, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 1336, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	1338, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	1326, 0, 1344, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 1245, 0, 0, 1334, 306,
	1332, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 1244, 0, 324,
	689, 690, 691, 0, 325, 326, 1251, 0, 1232, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 1235, 1233, 1234, 1241, 1237, 1236, 1240, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1276,
	1277, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 1283, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1246, 1247, 1250, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 1248, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	1330, 443, 445, 444, 0, 446, 1284, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 1239,
	1238, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 295, 1297, 503, 504, 505, 506, 0,
	1249, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 1336, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 1278, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 1279, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 1338, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 1242, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 1280, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 1281, 651, 1282, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 1243, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 1344, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 1245, 0, 0, 1334, 306, 1332, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 1244, 0, 324, 689, 690, 691, 0,
	325, 326, 1251, 0, 1232, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 1235, 1233,
	1234, 1241, 1237, 1236, 1240, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1276, 1277, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 1283, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 1246, 1247,
	1250, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	1248, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 1330, 443, 445, 444,
	0, 446, 1284, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 1239, 1238, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 295,
	1297, 503, 504, 505, 506, 0, 1249, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 1336, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 1278,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 1279, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 1338, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 1242, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 1280, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 1281, 651, 1282, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 1243, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 1344, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 1245, 0, 0,
	1334, 306, 1332, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 1244,
	0, 324, 689, 690, 691, 0, 325, 326, 1251, 0,
	1232, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 1235, 1233, 1234, 1241, 1237, 1236,
	1240, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1276, 1277, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 1283, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1246, 1247, 1250, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 1288, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 1290, 1248, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 1284, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 1239, 1238, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 295, 1297, 503, 504, 505,
	506, 0, 1249, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 1278, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 1279,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	1242, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 1280, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 1281, 651, 1282,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 1243, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	1344, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 306, 4468, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 1244, 0, 324, 689, 690,
	691, 0, 325, 326, 1251, 0, 1232, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	1235, 1233, 1234, 1241, 1237, 1236, 1240, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1276, 1277, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 1283,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	1246, 1247, 1250, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 1248, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 1284, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 1239, 1238, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 295, 1297, 503, 504, 505, 506, 0, 1249, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 1278, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 1279, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 1338, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1242, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	1280, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 1281, 651, 1282, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 1243, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 2739, 2740, 2741, 2758, 2759, 2760, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 2761, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 2001, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 1986,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 2751,
	0, 336, 337, 338, 335, 339, 0, 340, 2747, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 2752, 2753, 2754, 2755,
	392, 393, 394, 698, 0, 0, 2746, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 2756, 2757, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 2749, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 2750, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	1985, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 0, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 1623, 2736, 2737, 2738,
	2762, 2748, 2742, 0, 2744, 2745, 2743, 2730, 2731, 2732,
	2733, 2734, 2735, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 251, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 253, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 1746, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	0, 0, 245, 678, 679, 734, 680, 681, 682, 0,
	1743, 246, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	203, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 1587, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 0, 1297, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 251, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 253, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 1746, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 245, 678,
	679, 734, 680, 681, 682, 1623, 1622, 246, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 203, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 1285, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 1587, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1286, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 1287, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 1289,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 1288, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 1290, 709, 1291, 433,
	434, 435, 1292, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	1293, 447, 448, 1294, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 1295, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 1296, 501, 489, 0, 0, 1297, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 1298, 520, 1299, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 1300, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 1301, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 1623, 1622,
	0, 0, 0, 0, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 1770,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 1285,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 1587, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1286, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	1287, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 1289, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 1288,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 1290,
	709, 1291, 433, 434, 435, 1292, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 1293, 447, 448, 1294, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 1295, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 1296, 501, 489, 0, 0,
	1297, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 1298, 520, 1299, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 1300, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 1301, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 1623, 1622, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 3886, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 1290, 709, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 1298,
	520, 1299, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 2500, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 1623, 2409, 0, 0, 0, 0,
	2410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 1770, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 1285, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	1587, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1286, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 1287, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 1289, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 1288, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 1290, 709, 1291, 433, 434,
	435, 1292, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 2408, 445, 444, 0, 446, 710, 1293,
	447, 448, 1294, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 1295, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 1296, 501, 489, 0, 0, 1297, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 1298, 520, 1299, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 1300, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 1301, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 1623, 1622, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 1770, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 1587, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 0, 1297,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 1165, 0, 290, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 1752, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 251, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 253, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 1746, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 245,
	678, 679, 734, 680, 681, 682, 0, 0, 246, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 203, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	3170, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	2119, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 5220, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 290, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 3836, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 0,
	290, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 1740, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 0, 0, 0, 1344, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1245,
	0, 0, 0, 306, 3292, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 1244, 0, 324, 689, 690, 691, 0, 325, 326,
	1251, 0, 1232, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 1235, 1233, 1234, 1241,
	1237, 1236, 1240, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1276, 1277, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 1283, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 1246, 1247, 1250, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 1248, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	1284, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 1239, 1238, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 295, 1297, 503,
	504, 505, 506, 0, 1249, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 1278, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 1279, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 1242, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 1280, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 1281,
	651, 1282, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	1243, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 3997, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 989, 0, 889, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 2487, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 896, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 986,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 988, 0, 632, 623, 894, 638,
	639, 640, 641, 642, 895, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 2164, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 899, 0, 0, 0, 306, 0,
	307, 308, 1285, 309, 310, 311, 312, 313, 314, 315,
	0, 2170, 0, 316, 2160, 317, 2176, 0, 2183, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 2186,
	2187, 0, 0, 325, 326, 0, 0, 1587, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1286, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 1268, 358, 360, 2174, 2173, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1253, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 2172, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 1287, 400, 401, 402, 2181, 2182, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	0, 0, 0, 413, 0, 414, 415, 416, 417, 418,
	419, 0, 0, 0, 508, 1289, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 1288, 509, 430, 2167, 2168, 0, 2163, 0,
	431, 432, 1290, 0, 1291, 433, 434, 435, 1292, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 0, 1293, 447, 448, 1294,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	1295, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 1296, 501,
	489, 0, 0, 1297, 503, 504, 505, 506, 0, 0,
	507, 2175, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 0, 1298,
	520, 1299, 0, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 2157, 534,
	535, 536, 2158, 537, 538, 539, 0, 540, 0, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 2171, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 1300, 578,
	579, 580, 581, 582, 0, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 1301, 610, 611, 612, 613, 614,
	615, 616, 2169, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 2185, 626, 627, 628,
	629, 0, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 2177, 2178, 2179, 2180, 0, 656, 0,
	647, 648, 649, 650, 0, 651, 0, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 0, 2161, 2184, 0, 672, 671, 673, 674,
	675, 0, 676, 677, 0, 0, 0, 0, 678, 679,
	0, 680, 681, 682, 889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 4117,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 2151,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 896, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 4116, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 894, 638, 639, 640, 641, 642,
	895, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 4115, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 0, 889, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 2191, 304, 305, 0, 0, 0, 0,
	899, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 896, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 2190, 596, 597, 598, 599, 0, 2192, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 894, 638,
	639, 640, 641, 642, 895, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 2189, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 0, 889, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 2142, 304, 305,
	0, 0, 0, 0, 899, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 896, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 2141, 596, 597, 598,
	599, 0, 2143, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 894, 638, 639, 640, 641, 642, 895, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 2140, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 887, 0, 889, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 899, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 896, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 894, 638, 639,
	640, 641, 642, 895, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 889, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 899, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 896, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 894, 638, 639, 640, 641, 642, 895, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 0, 889, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 899, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 896, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 2539, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 2540,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 894, 638, 639, 640, 641,
	642, 895, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 2541, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 0, 290,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 899, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 1623,
	1622, 0, 0, 0, 0, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	1285, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 1587, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1286, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 1287, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 1289, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	1288, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	1290, 709, 1291, 433, 434, 435, 1292, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 1293, 447, 448, 1294, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 1295, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 1296, 501, 489, 0,
	0, 1297, 503, 504, 505, 506, 4219, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 1298, 520, 1299,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 1300, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 1301, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 0, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 1623, 1622, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 1587, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 0, 1297, 503, 504, 505, 506, 3786,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1801, 0, 1623, 1622, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 1587, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 1800, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 0, 1297,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 1799, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 1798, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1673, 0, 1623, 1622, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1285, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 1587, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1286, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 1287, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1675, 704, 705, 508, 1289, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 1288, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 1290, 709, 1291, 433, 434, 435, 1292,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 1293, 447, 448,
	1294, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 1295, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 1296,
	501, 489, 0, 0, 1297, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	1298, 520, 1299, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 1300,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 1301, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 0, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 1618, 0, 1623, 1622, 0,
	0, 0, 0, 1620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1285, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 1587, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1286, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 1287,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 1289, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 1288, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 1290, 709,
	1291, 433, 434, 435, 1292, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 1293, 447, 448, 1294, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 1295, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 1296, 501, 489, 0, 0, 1297,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 1298, 520, 1299, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 1300, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	1301, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	0, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	1623, 1622, 0, 0, 0, 0, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 1285, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 1587, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1286, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 1287, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 1289, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 1288, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 1290, 709, 1291, 433, 434, 435, 1292, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 1293, 447, 448, 1294, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 1295,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 1296, 501, 489,
	0, 0, 1297, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 1298, 520,
	1299, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 1300, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 1301, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1623, 1622, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 1285, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 1587,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1286,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 1287, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 1289, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 1288, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 1290, 709, 1291, 433, 434, 435,
	1292, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 1293, 447,
	448, 1294, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 1295, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	1296, 501, 489, 0, 0, 1297, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 1298, 520, 1299, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	1300, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 1301, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 1623, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 1285, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 1587, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1286, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 1287, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	1289, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 1288, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 1290, 709, 1291,
	433, 434, 435, 1292, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 1293, 447, 448, 1294, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 1295, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 1296, 501, 489, 0, 0, 1297, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 1298, 520, 1299, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 1300, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 1301,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	3073, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 3828, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 3077, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	3827, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 3076, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 3824, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 3826,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 3823, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 3075,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 3825, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 3073, 325, 326, 692, 0, 0, 3067,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 3069, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 3077, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 3076, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3066, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 3075, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 3074, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1881, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 1880, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 1879, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 1882, 587,
	588, 595, 596, 597, 598, 599, 0, 1878, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 1876, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 1877, 671, 673, 674, 675, 733, 676, 677,
	1591, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1593, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 1336, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1588, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 1590, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 1336, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1494, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 1496, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 1336, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 767, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 766,
	302, 303, 755, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 758,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 764, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 760, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	754, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 755, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 758, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 759,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 760, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	755, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 758, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 759, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 760, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 755, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	758, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 4229, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 760, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 294, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 295, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 2445, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 1336, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 3723, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	3262, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3261, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 2508, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	2452, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 2451, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 294, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 295, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 2438, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 2440, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	2402, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 1336,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1718, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1717, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1611, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1604, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1606, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1413, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	1412, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1403, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1402, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1400, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	1399, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 1395, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 1394, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 736, 0,
	290, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 281, 0, 290, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 294, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 295, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 294, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 295,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 758, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 759, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	760, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 2548, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	294, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 295, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 2546, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 294, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 295, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	2544, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 294, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 295, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 2458, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 294,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 295, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 2216, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 294, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 295, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 2210,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 294, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	295, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 973, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 972, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 971, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 856, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 845, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 854, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 847, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 853,
	849, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 850, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 848, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 851, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	852, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 846,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 839, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 845, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	854, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 847, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 853, 849, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 850, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 848, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 851, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 852, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 846, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 3827, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 4552, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	1441, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 1444, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 1442, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	827, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	826, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 825, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 1445, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 823, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 1441, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 1444, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 1442, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 827, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 826, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 825, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 1445, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 823,
	725, 726, 727, 0, 656, 0, 647, 1443, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	834, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 832, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 745, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 744, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 743, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 3170, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 4850, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 3664, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 4440,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 4174,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	2948, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 3170,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 703, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	3301, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 703, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 2346, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 826,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 825, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 823, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 2518,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 2506, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1774, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1766, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 817, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 813, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 818,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 827, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 826, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 825, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 1751, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 823, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1724, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1723,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1708, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1706, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1701, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1678, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1676, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1671, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1632, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1596, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 703,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1447, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 703, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 826, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 825, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 823, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 1418, 0, 290,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1417,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 1409, 0, 290, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 1408, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 1361, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	837, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 817, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	813, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 812, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 818, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 827, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 826, 579, 580, 581, 582,
	814, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 825, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 815, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 823,
	725, 726, 727, 0, 656, 0, 647, 819, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	806, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	807, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 769, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	762, 0, 290, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 740, 0, 290, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 703, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	703, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 3859, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 592, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 826, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	825, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 606, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 823, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 3765,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 3740, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 556, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 413, 0, 414,
	415, 416, 417, 418, 419, 3736, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 290, 0,
	0, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 684, 685, 0,
	316, 686, 317, 687, 0, 688, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 689, 690, 691, 0,
	325, 326, 692, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 693, 694, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 695, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 696, 697, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 698, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 0,
	0, 400, 401, 402, 699, 700, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 0, 412, 701, 0, 702,
	413, 0, 414, 415, 416, 417, 418, 419, 3688, 704,
	705, 508, 0, 420, 421, 0, 422, 423, 424, 425,
	426, 0, 0, 0, 0, 427, 428, 429, 0, 0,
	509, 430, 706, 707, 0, 708, 0, 431, 432, 0,
	709, 0, 433, 434, 435, 0, 436, 0, 0, 0,
	437, 438, 439, 440, 441, 442, 0, 443, 445, 444,
	0, 446, 710, 0, 447, 448, 0, 0, 449, 450,
	451, 452, 453, 454, 457, 0, 0, 455, 456, 458,
	459, 0, 460, 461, 463, 466, 462, 464, 465, 467,
	480, 481, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 483, 0, 482, 0, 484, 485,
	486, 487, 488, 495, 497, 498, 493, 494, 496, 499,
	500, 502, 490, 491, 492, 0, 501, 489, 0, 0,
	0, 503, 504, 505, 506, 0, 711, 507, 712, 510,
	511, 0, 0, 512, 0, 513, 0, 0, 515, 516,
	517, 0, 0, 518, 519, 713, 0, 520, 0, 714,
	521, 522, 514, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 0, 532, 533, 715, 534, 535, 536, 716,
	537, 538, 539, 717, 540, 718, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 551, 552,
	719, 553, 554, 556, 555, 557, 0, 558, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 562, 563, 565,
	0, 566, 567, 568, 569, 564, 570, 571, 572, 573,
	574, 0, 575, 576, 577, 0, 578, 579, 580, 581,
	582, 720, 583, 0, 584, 585, 592, 593, 594, 586,
	587, 588, 595, 596, 597, 598, 599, 0, 601, 602,
	600, 603, 604, 605, 0, 606, 607, 589, 590, 608,
	609, 0, 610, 611, 612, 613, 614, 615, 616, 721,
	0, 617, 0, 618, 619, 620, 621, 622, 624, 591,
	625, 630, 631, 722, 626, 627, 628, 629, 723, 633,
	634, 635, 0, 636, 637, 0, 632, 623, 0, 638,
	639, 640, 641, 642, 643, 0, 644, 645, 0, 646,
	724, 725, 726, 727, 0, 656, 0, 647, 648, 649,
	650, 728, 651, 729, 0, 652, 653, 654, 655, 0,
	657, 658, 0, 0, 659, 660, 662, 664, 665, 661,
	663, 666, 0, 667, 0, 0, 668, 669, 670, 730,
	731, 732, 0, 672, 671, 673, 674, 675, 733, 676,
	677, 290, 0, 0, 0, 678, 679, 734, 680, 681,
	682, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 683, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	684, 685, 0, 316, 686, 317, 687, 0, 688, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 689,
	690, 691, 0, 325, 326, 692, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 693, 694, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 695, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 696, 697,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 698, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 0, 0, 400, 401, 402, 699, 700, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 0, 412,
	701, 0, 702, 413, 0, 414, 415, 416, 417, 418,
	419, 3686, 704, 705, 508, 0, 420, 421, 0, 422,
	423, 424, 425, 426, 0, 0, 0, 0, 427, 428,
	429, 0, 0, 509, 430, 706, 707, 0, 708, 0,
	431, 432, 0, 709, 0, 433, 434, 435, 0, 436,
	0, 0, 0, 437, 438, 439, 440, 441, 442, 0,
	443, 445, 444, 0, 446, 710, 0, 447, 448, 0,
	0, 449, 450, 451, 452, 453, 454, 457, 0, 0,
	455, 456, 458, 459, 0, 460, 461, 463, 466, 462,
	464, 465, 467, 480, 481, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 483, 0, 482,
	0, 484, 485, 486, 487, 488, 495, 497, 498, 493,
	494, 496, 499, 500, 502, 490, 491, 492, 0, 501,
	489, 0, 0, 0, 503, 504, 505, 506, 0, 711,
	507, 712, 510, 511, 0, 0, 512, 0, 513, 0,
	0, 515, 516, 517, 0, 0, 518, 519, 713, 0,
	520, 0, 714, 521, 522, 514, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 0, 532, 533, 715, 534,
	535, 536, 716, 537, 538, 539, 717, 540, 718, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 551, 552, 719, 553, 554, 556, 555, 557, 0,
	558, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	562, 563, 565, 0, 566, 567, 568, 569, 564, 570,
	571, 572, 573, 574, 0, 575, 576, 577, 0, 578,
	579, 580, 581, 582, 720, 583, 0, 584, 585, 592,
	593, 594, 586, 587, 588, 595, 596, 597, 598, 599,
	0, 601, 602, 600, 603, 604, 605, 0, 606, 607,
	589, 590, 608, 609, 0, 610, 611, 612, 613, 614,
	615, 616, 721, 0, 617, 0, 618, 619, 620, 621,
	622, 624, 591, 625, 630, 631, 722, 626, 627, 628,
	629, 723, 633, 634, 635, 0, 636, 637, 0, 632,
	623, 0, 638, 639, 640, 641, 642, 643, 0, 644,
	645, 0, 646, 724, 725, 726, 727, 0, 656, 0,
	647, 648, 649, 650, 728, 651, 729, 0, 652, 653,
	654, 655, 0, 657, 658, 0, 0, 659, 660, 662,
	664, 665, 661, 663, 666, 0, 667, 0, 0, 668,
	669, 670, 730, 731, 732, 0, 672, 671, 673, 674,
	675, 733, 676, 677, 290, 0, 0, 0, 678, 679,
	734, 680, 681, 682, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 684, 685, 0, 316, 686, 317, 687,
	0, 688, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 689, 690, 691, 0, 325, 326, 692, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 693,
	694, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 695,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 696, 697, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 698, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 0, 0, 400, 401, 402,
	699, 700, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 0, 412, 701, 0, 702, 413, 0, 414, 415,
	416, 417, 418, 419, 3674, 704, 705, 508, 0, 420,
	421, 0, 422, 423, 424, 425, 426, 0, 0, 0,
	0, 427, 428, 429, 0, 0, 509, 430, 706, 707,
	0, 708, 0, 431, 432, 0, 709, 0, 433, 434,
	435, 0, 436, 0, 0, 0, 437, 438, 439, 440,
	441, 442, 0, 443, 445, 444, 0, 446, 710, 0,
	447, 448, 0, 0, 449, 450, 451, 452, 453, 454,
	457, 0, 0, 455, 456, 458, 459, 0, 460, 461,
	463, 466, 462, 464, 465, 467, 480, 481, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	483, 0, 482, 0, 484, 485, 486, 487, 488, 495,
	497, 498, 493, 494, 496, 499, 500, 502, 490, 491,
	492, 0, 501, 489, 0, 0, 0, 503, 504, 505,
	506, 0, 711, 507, 712, 510, 511, 0, 0, 512,
	0, 513, 0, 0, 515, 516, 517, 0, 0, 518,
	519, 713, 0, 520, 0, 714, 521, 522, 514, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 0, 532,
	533, 715, 534, 535, 536, 716, 537, 538, 539, 717,
	540, 718, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 551, 552, 719, 553, 554, 556,
	555, 557, 0, 558, 0, 559, 560, 561, 0, 0,
	0, 0, 0, 562, 563, 565, 0, 566, 567, 568,
	569, 564, 570, 571, 572, 573, 574, 0, 575, 576,
	577, 0, 578, 579, 580, 581, 582, 720, 583, 0,
	584, 585, 592, 593, 594, 586, 587, 588, 595, 596,
	597, 598, 599, 0, 601, 602, 600, 603, 604, 605,
	0, 606, 607, 589, 590, 608, 609, 0, 610, 611,
	612, 613, 614, 615, 616, 721, 0, 617, 0, 618,
	619, 620, 621, 622, 624, 591, 625, 630, 631, 722,
	626, 627, 628, 629, 723, 633, 634, 635, 0, 636,
	637, 0, 632, 623, 0, 638, 639, 640, 641, 642,
	643, 0, 644, 645, 0, 646, 724, 725, 726, 727,
	0, 656, 0, 647, 648, 649, 650, 728, 651, 729,
	0, 652, 653, 654, 655, 0, 657, 658, 0, 0,
	659, 660, 662, 664, 665, 661, 663, 666, 0, 667,
	0, 0, 668, 669, 670, 730, 731, 732, 0, 672,
	671, 673, 674, 675, 733, 676, 677, 290, 0, 0,
	0, 678, 679, 734, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	683, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 684, 685, 0, 316,
	686, 317, 687, 0, 688, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 689, 690, 691, 0, 325,
	326, 692, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 693, 694, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 695, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 696, 697, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 698, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 0, 0,
	400, 401, 402, 699, 700, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 412, 701, 0, 702, 413,
	0, 414, 415, 416, 417, 418, 419, 3671, 704, 705,
	508, 0, 420, 421, 0, 422, 423, 424, 425, 426,
	0, 0, 0, 0, 427, 428, 429, 0, 0, 509,
	430, 706, 707, 0, 708, 0, 431, 432, 0, 709,
	0, 433, 434, 435, 0, 436, 0, 0, 0, 437,
	438, 439, 440, 441, 442, 0, 443, 445, 444, 0,
	446, 710, 0, 447, 448, 0, 0, 449, 450, 451,
	452, 453, 454, 457, 0, 0, 455, 456, 458, 459,
	0, 460, 461, 463, 466, 462, 464, 465, 467, 480,
	481, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 483, 0, 482, 0, 484, 485, 486,
	487, 488, 495, 497, 498, 493, 494, 496, 499, 500,
	502, 490, 491, 492, 0, 501, 489, 0, 0, 0,
	503, 504, 505, 506, 0, 711, 507, 712, 510, 511,
	0, 0, 512, 0, 513, 0, 0, 515, 516, 517,
	0, 0, 518, 519, 713, 0, 520, 0, 714, 521,
	522, 514, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 0, 532, 533, 715, 534, 535, 536, 716, 537,
	538, 539, 717, 540, 718, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 551, 552, 719,
	553, 554, 556, 555, 557, 0, 558, 0, 559, 560,
	561, 0, 0, 0, 0, 0, 562, 563, 565, 0,
	566, 567, 568, 569, 564, 570, 571, 572, 573, 574,
	0, 575, 576, 577, 0, 578, 579, 580, 581, 582,
	720, 583, 0, 584, 585, 592, 593, 594, 586, 587,
	588, 595, 596, 597, 598, 599, 0, 601, 602, 600,
	603, 604, 605, 0, 606, 607, 589, 590, 608, 609,
	0, 610, 611, 612, 613, 614, 615, 616, 721, 0,
	617, 0, 618, 619, 620, 621, 622, 624, 591, 625,
	630, 631, 722, 626, 627, 628, 629, 723, 633, 634,
	635, 0, 636, 637, 0, 632, 623, 0, 638, 639,
	640, 641, 642, 643, 0, 644, 645, 0, 646, 724,
	725, 726, 727, 0, 656, 0, 647, 648, 649, 650,
	728, 651, 729, 0, 652, 653, 654, 655, 0, 657,
	658, 0, 0, 659, 660, 662, 664, 665, 661, 663,
	666, 0, 667, 0, 0, 668, 669, 670, 730, 731,
	732, 0, 672, 671, 673, 674, 675, 733, 676, 677,
	290, 0, 0, 0, 678, 679, 734, 680, 681, 682,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 683, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 684,
	685, 0, 316, 686, 317, 687, 0, 688, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 689, 690,
	691, 0, 325, 326, 692, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 693, 694, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 695, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 696, 697, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	698, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 699, 700, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 701,
	0, 702, 413, 0, 414, 415, 416, 417, 418, 419,
	3272, 704, 705, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 706, 707, 0, 708, 0, 431,
	432, 0, 709, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 710, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 711, 507,
	712, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 713, 0, 520,
	0, 714, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 715, 534, 535,
	536, 716, 537, 538, 539, 717, 540, 718, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 719, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 720, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 0, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 721, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 722, 626, 627, 628, 629,
	723, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 724, 725, 726, 727, 0, 656, 0, 647,
	648, 649, 650, 728, 651, 729, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 730, 731, 732, 0, 672, 671, 673, 674, 675,
	733, 676, 677, 290, 0, 0, 0, 678, 679, 734,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 684, 685, 0, 316, 686, 317, 687, 0,
	688, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 689, 690, 691, 0, 325, 326, 692, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 693, 694,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 695, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	696, 697, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 698, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 0, 0, 400, 401, 402, 699,
	700, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	0, 412, 701, 0, 702, 413, 0, 414, 415, 416,
	417, 418, 419, 703, 704, 705, 508, 0, 420, 421,
	0, 422, 423, 424, 425, 426, 0, 0, 0, 0,
	427, 428, 429, 0, 0, 509, 430, 706, 707, 0,
	708, 0, 431, 432, 0, 709, 0, 433, 434, 435,
	0, 436, 0, 0, 0, 437, 438, 439, 440, 441,
	442, 0, 443, 445, 444, 0, 446, 710, 0, 447,
	448, 0, 0, 449, 450, 451, 452, 453, 454, 457,
	0, 0, 455, 456, 458, 459, 0, 460, 461, 463,
	466, 462, 464, 465, 467, 480, 481, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 483,
	0, 482, 0, 484, 485, 486, 487, 488, 495, 497,
	498, 493, 494, 496, 499, 500, 502, 490, 491, 492,
	0, 501, 489, 0, 0, 0, 503, 504, 505, 506,
	0, 711, 507, 712, 510, 511, 0, 0, 512, 0,
	513, 0, 0, 515, 516, 517, 0, 0, 518, 519,
	713, 0, 520, 0, 714, 521, 522, 514, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 0, 532, 533,
	715, 534, 535, 536, 716, 537, 538, 539, 717, 540,
	718, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 551, 552, 719, 553, 554, 556, 555,
	557, 0, 558, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 562, 563, 565, 0, 566, 567, 568, 569,
	564, 570, 571, 572, 573, 574, 0, 575, 576, 577,
	0, 578, 579, 580, 581, 582, 720, 583, 0, 584,
	585, 807, 593, 594, 586, 587, 588, 595, 596, 597,
	598, 599, 0, 601, 602, 600, 603, 604, 605, 0,
	606, 607, 589, 590, 608, 609, 0, 610, 611, 612,
	613, 614, 615, 616, 721, 0, 617, 0, 618, 619,
	620, 621, 622, 624, 591, 625, 630, 631, 722, 626,
	627, 628, 629, 723, 633, 634, 635, 0, 636, 637,
	0, 632, 623, 0, 638, 639, 640, 641, 642, 643,
	0, 644, 645, 0, 646, 724, 725, 726, 727, 0,
	656, 0, 647, 648, 649, 650, 728, 651, 729, 0,
	652, 653, 654, 655, 0, 657, 658, 0, 0, 659,
	660, 662, 664, 665, 661, 663, 666, 0, 667, 0,
	0, 668, 669, 670, 730, 731, 732, 0, 672, 671,
	673, 674, 675, 733, 676, 677, 290, 0, 0, 0,
	678, 679, 734, 680, 681, 682, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 683,
	0, 2476, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 684, 685, 0, 316, 686,
	317, 687, 0, 688, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 689, 690, 691, 0, 325, 326,
	692, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 693, 694, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 695, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 696, 697, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 698, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 0, 0, 400,
	401, 402, 699, 700, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 0, 412, 701, 0, 702, 413, 0,
	414, 415, 416, 417, 418, 419, 703, 704, 705, 508,
	0, 420, 421, 0, 422, 423, 424, 425, 426, 0,
	0, 0, 0, 427, 428, 429, 0, 0, 509, 430,
	706, 707, 0, 708, 0, 431, 432, 0, 709, 0,
	433, 434, 435, 0, 436, 0, 0, 0, 437, 438,
	439, 440, 441, 442, 0, 443, 445, 444, 0, 446,
	710, 0, 447, 448, 0, 0, 449, 450, 451, 452,
	453, 454, 457, 0, 0, 455, 456, 458, 459, 0,
	460, 461, 463, 466, 462, 464, 465, 467, 480, 481,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 483, 0, 482, 0, 484, 485, 486, 487,
	488, 495, 497, 498, 493, 494, 496, 499, 500, 502,
	490, 491, 492, 0, 501, 489, 0, 0, 0, 503,
	504, 505, 506, 0, 711, 507, 712, 510, 511, 0,
	0, 512, 0, 513, 0, 0, 515, 516, 517, 0,
	0, 518, 519, 713, 0, 520, 0, 714, 521, 522,
	514, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	0, 532, 533, 715, 534, 535, 536, 716, 537, 538,
	539, 717, 540, 718, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 551, 552, 719, 553,
	554, 556, 555, 557, 0, 558, 0, 559, 560, 561,
	0, 0, 0, 0, 0, 562, 563, 565, 0, 566,
	567, 568, 569, 564, 570, 571, 572, 573, 574, 0,
	575, 576, 577, 0, 578, 579, 580, 581, 582, 720,
	583, 0, 584, 585, 592, 593, 594, 586, 587, 588,
	595, 596, 597, 598, 599, 0, 601, 602, 600, 603,
	604, 605, 0, 0, 607, 589, 590, 608, 609, 0,
	610, 611, 612, 613, 614, 615, 616, 721, 0, 617,
	0, 618, 619, 620, 621, 622, 624, 591, 625, 630,
	631, 722, 626, 627, 628, 629, 723, 633, 634, 635,
	0, 636, 637, 0, 632, 623, 0, 638, 639, 640,
	641, 642, 643, 0, 644, 645, 0, 646, 724, 725,
	726, 727, 0, 656, 0, 647, 648, 649, 650, 728,
	651, 729, 0, 652, 653, 654, 655, 0, 657, 658,
	0, 0, 659, 660, 662, 664, 665, 661, 663, 666,
	0, 667, 0, 0, 668, 669, 670, 730, 731, 732,
	0, 672, 671, 673, 674, 675, 733, 676, 677, 290,
	0, 0, 0, 678, 679, 734, 680, 681, 682, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 684, 685,
	0, 316, 686, 317, 687, 0, 688, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 689, 690, 691,
	0, 325, 326, 692, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 693, 694, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 695, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 696, 697, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 698,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	0, 0, 400, 401, 402, 699, 700, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 0, 412, 701, 0,
	702, 413, 0, 414, 415, 416, 417, 418, 419, 1380,
	704, 705, 508, 0, 420, 421, 0, 422, 423, 424,
	425, 426, 0, 0, 0, 0, 427, 428, 429, 0,
	0, 509, 430, 706, 707, 0, 708, 0, 431, 432,
	0, 709, 0, 433, 434, 435, 0, 436, 0, 0,
	0, 437, 438, 439, 440, 441, 442, 0, 443, 445,
	444, 0, 446, 710, 0, 447, 448, 0, 0, 449,
	450, 451, 452, 453, 454, 457, 0, 0, 455, 456,
	458, 459, 0, 460, 461, 463, 466, 462, 464, 465,
	467, 480, 481, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 483, 0, 482, 0, 484,
	485, 486, 487, 488, 495, 497, 498, 493, 494, 496,
	499, 500, 502, 490, 491, 492, 0, 501, 489, 0,
	0, 0, 503, 504, 505, 506, 0, 711, 507, 712,
	510, 511, 0, 0, 512, 0, 513, 0, 0, 515,
	516, 517, 0, 0, 518, 519, 713, 0, 520, 0,
	714, 521, 522, 514, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 0, 532, 533, 715, 534, 535, 536,
	716, 537, 538, 539, 717, 540, 718, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 551,
	552, 719, 553, 554, 556, 555, 557, 0, 558, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 562, 563,
	565, 0, 566, 567, 568, 569, 564, 570, 571, 572,
	573, 574, 0, 575, 576, 577, 0, 578, 579, 580,
	581, 582, 720, 583, 0, 584, 585, 592, 593, 594,
	586, 587, 588, 595, 596, 597, 598, 599, 0, 601,
	602, 600, 603, 604, 605, 0, 606, 607, 589, 590,
	608, 609, 0, 610, 611, 612, 613, 614, 615, 616,
	721, 0, 617, 0, 618, 619, 620, 621, 622, 624,
	591, 625, 630, 631, 722, 626, 627, 628, 629, 723,
	633, 634, 635, 0, 636, 637, 0, 632, 623, 0,
	638, 639, 640, 641, 642, 643, 0, 644, 645, 0,
	646, 724, 725, 726, 727, 0, 656, 0, 647, 648,
	649, 650, 728, 651, 729, 0, 652, 653, 654, 655,
	0, 657, 658, 0, 0, 659, 660, 662, 664, 665,
	661, 663, 666, 0, 667, 0, 0, 668, 669, 670,
	730, 731, 732, 0, 672, 671, 673, 674, 675, 733,
	676, 677, 290, 0, 0, 0, 678, 679, 734, 680,
	681, 682, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 684, 685, 0, 316, 686, 317, 687, 0, 688,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	689, 690, 691, 0, 325, 326, 692, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 693, 694, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 695, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 696,
	697, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 698, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 0, 0, 400, 401, 402, 699, 700,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 0,
	412, 701, 0, 702, 413, 0, 414, 415, 416, 417,
	418, 419, 703, 704, 705, 508, 0, 420, 421, 0,
	422, 423, 424, 425, 426, 0, 0, 0, 0, 427,
	428, 429, 0, 0, 509, 430, 706, 707, 0, 708,
	0, 431, 432, 0, 709, 0, 433, 434, 435, 0,
	436, 0, 0, 0, 437, 438, 439, 440, 441, 442,
	0, 443, 445, 444, 0, 446, 710, 0, 447, 448,
	0, 0, 449, 450, 451, 452, 453, 454, 457, 0,
	0, 455, 456, 458, 459, 0, 460, 461, 463, 466,
	462, 464, 465, 467, 480, 481, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 483, 0,
	482, 0, 484, 485, 486, 487, 488, 495, 497, 498,
	493, 494, 496, 499, 500, 502, 490, 491, 492, 0,
	501, 489, 0, 0, 0, 503, 504, 505, 506, 0,
	711, 507, 712, 510, 511, 0, 0, 512, 0, 513,
	0, 0, 515, 516, 517, 0, 0, 518, 519, 713,
	0, 520, 0, 714, 521, 522, 514, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 0, 532, 533, 715,
	534, 535, 536, 716, 537, 538, 539, 717, 540, 718,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 551, 552, 719, 553, 554, 1309, 555, 557,
	0, 558, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 562, 563, 565, 0, 566, 567, 568, 569, 564,
	570, 571, 572, 573, 574, 0, 575, 576, 577, 0,
	578, 579, 580, 581, 582, 720, 583, 0, 584, 585,
	592, 593, 594, 586, 587, 588, 595, 596, 597, 598,
	599, 0, 601, 602, 600, 603, 604, 605, 0, 606,
	607, 589, 590, 608, 609, 0, 610, 611, 612, 613,
	614, 615, 616, 721, 0, 617, 0, 618, 619, 620,
	621, 622, 624, 591, 625, 630, 631, 722, 626, 627,
	628, 629, 723, 633, 634, 635, 0, 636, 637, 0,
	632, 623, 0, 638, 639, 640, 641, 642, 643, 0,
	644, 645, 0, 646, 724, 725, 726, 727, 0, 656,
	0, 647, 648, 649, 650, 728, 651, 729, 0, 652,
	653, 654, 655, 0, 657, 658, 0, 0, 659, 660,
	662, 664, 665, 661, 663, 666, 0, 667, 0, 0,
	668, 669, 670, 730, 731, 732, 0, 672, 671, 673,
	674, 675, 733, 676, 677, 290, 0, 0, 0, 678,
	679, 734, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 684, 685, 0, 316, 686, 317,
	687, 0, 688, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 689, 690, 691, 0, 325, 326, 692,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	693, 694, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	695, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 696, 697, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 698, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 699, 700, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 701, 0, 702, 0, 0, 414,
	415, 416, 417, 418, 419, 703, 704, 705, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 706,
	707, 0, 708, 0, 431, 432, 0, 709, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 710,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 711, 507, 712, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 713, 0, 520, 0, 714, 521, 522, 514,
	523, 524, 0, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 715, 534, 535, 536, 716, 537, 538, 539,
	717, 540, 718, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 0, 551, 552, 719, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 720, 0,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 0, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 721, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	722, 626, 627, 628, 629, 723, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 724, 725, 726,
	727, 0, 656, 0, 647, 648, 649, 650, 728, 651,
	729, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 730, 731, 732, 0,
	672, 671, 673, 674, 675, 733, 676, 677, 1714, 0,
	1425, 0, 678, 679, 734, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1427, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	1713, 0, 0, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 0, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 0, 507,
	0, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 0, 0, 520,
	0, 0, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 0, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 0, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1428, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 0, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 0, 626, 627, 628, 629,
	0, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 0, 0, 0, 0, 0, 656, 0, 647,
	648, 649, 650, 0, 651, 0, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 0, 0, 0, 0, 672, 671, 673, 674, 675,
	0, 676, 677, 1635, 0, 1425, 0, 678, 679, 0,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 317,
	0, 0, 0, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 0, 0, 0, 0, 325, 326, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 1427, 353, 354, 355, 356, 357, 0, 358, 360,
	0, 0, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	0, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 0, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 1634, 0, 0, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 0,
	0, 0, 0, 0, 431, 432, 0, 0, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 0,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 0, 507, 0, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 0, 0, 520, 0, 0, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 0, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 0, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1428, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 0, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	0, 626, 627, 628, 629, 0, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 0, 0, 0,
	0, 0, 656, 0, 647, 648, 649, 650, 0, 651,
	0, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 0, 0, 0, 0,
	672, 671, 673, 674, 675, 0, 676, 677, 1423, 0,
	1425, 0, 678, 679, 0, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1427, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	1422, 0, 0, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 0, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 0, 507,
	0, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 0, 0, 520,
	0, 0, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 0, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 0, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1428, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 0, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 0, 626, 627, 628, 629,
	0, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 0, 0, 0, 0, 0, 656, 0, 647,
	648, 649, 650, 0, 651, 0, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 0, 0, 0, 0, 672, 671, 673, 674, 675,
	0, 676, 677, 2230, 0, 1425, 0, 678, 679, 0,
	680, 681, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 0, 0, 0, 316, 0, 317,
	0, 0, 0, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 0, 0, 0, 0, 325, 326, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 1427, 353, 354, 355, 356, 357, 0, 358, 360,
	0, 0, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	0, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 0, 0, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 0, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 0, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 0, 412, 0, 0, 0, 413, 0, 414,
	415, 416, 417, 418, 419, 0, 0, 0, 508, 0,
	420, 421, 0, 422, 423, 424, 425, 426, 0, 0,
	0, 0, 427, 428, 429, 0, 0, 509, 430, 0,
	0, 0, 0, 0, 431, 432, 0, 0, 0, 433,
	434, 435, 0, 436, 0, 0, 0, 437, 438, 439,
	440, 441, 442, 0, 443, 445, 444, 0, 446, 0,
	0, 447, 448, 0, 0, 449, 450, 451, 452, 453,
	454, 457, 0, 0, 455, 456, 458, 459, 0, 460,
	461, 463, 466, 462, 464, 465, 467, 480, 481, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 483, 0, 482, 0, 484, 485, 486, 487, 488,
	495, 497, 498, 493, 494, 496, 499, 500, 502, 490,
	491, 492, 0, 501, 489, 0, 0, 0, 503, 504,
	505, 506, 0, 0, 507, 0, 510, 511, 0, 0,
	512, 0, 513, 0, 0, 515, 516, 517, 0, 0,
	518, 519, 0, 0, 520, 0, 0, 521, 522, 514,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 0,
	532, 533, 0, 534, 535, 536, 0, 537, 538, 539,
	0, 540, 0, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 551, 552, 0, 553, 554,
	556, 555, 557, 0, 558, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 562, 563, 565, 0, 566, 567,
	568, 569, 564, 570, 571, 572, 573, 574, 0, 575,
	576, 577, 0, 578, 579, 580, 581, 582, 0, 583,
	0, 584, 585, 592, 593, 594, 586, 587, 588, 595,
	596, 597, 598, 599, 0, 601, 602, 600, 603, 604,
	605, 1428, 606, 607, 589, 590, 608, 609, 0, 610,
	611, 612, 613, 614, 615, 616, 0, 0, 617, 0,
	618, 619, 620, 621, 622, 624, 591, 625, 630, 631,
	0, 626, 627, 628, 629, 0, 633, 634, 635, 0,
	636, 637, 0, 632, 623, 0, 638, 639, 640, 641,
	642, 643, 0, 644, 645, 0, 646, 0, 0, 0,
	0, 0, 656, 0, 647, 648, 649, 650, 0, 651,
	0, 0, 652, 653, 654, 655, 0, 657, 658, 0,
	0, 659, 660, 662, 664, 665, 661, 663, 666, 0,
	667, 0, 0, 668, 669, 670, 0, 0, 0, 0,
	672, 671, 673, 674, 675, 0, 676, 677, 2197, 0,
	1425, 0, 678, 679, 0, 680, 681, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1427, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	0, 0, 0, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 0, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 0, 507,
	0, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 0, 0, 520,
	0, 0, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 0, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 0, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1428, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 0, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 0, 626, 627, 628, 629,
	0, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 0, 0, 0, 0, 0, 656, 0, 647,
	648, 649, 650, 0, 651, 0, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 0, 0, 0, 0, 672, 671, 673, 674, 675,
	1425, 676, 677, 0, 0, 0, 0, 678, 679, 0,
	680, 681, 682, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1427, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 0, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 0, 412, 0,
	0, 0, 413, 0, 414, 415, 416, 417, 418, 419,
	0, 0, 0, 508, 0, 420, 421, 0, 422, 423,
	424, 425, 426, 0, 0, 0, 0, 427, 428, 429,
	0, 0, 509, 430, 0, 0, 0, 0, 0, 431,
	432, 0, 0, 0, 433, 434, 435, 0, 436, 0,
	0, 0, 437, 438, 439, 440, 441, 442, 0, 443,
	445, 444, 0, 446, 0, 0, 447, 448, 0, 0,
	449, 450, 451, 452, 453, 454, 457, 0, 0, 455,
	456, 458, 459, 0, 460, 461, 463, 466, 462, 464,
	465, 467, 480, 481, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 483, 0, 482, 0,
	484, 485, 486, 487, 488, 495, 497, 498, 493, 494,
	496, 499, 500, 502, 490, 491, 492, 0, 501, 489,
	0, 0, 0, 503, 504, 505, 506, 0, 0, 507,
	0, 510, 511, 0, 0, 512, 0, 513, 0, 0,
	515, 516, 517, 0, 0, 518, 519, 0, 0, 520,
	0, 0, 521, 522, 514, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 0, 532, 533, 0, 534, 535,
	536, 0, 537, 538, 539, 0, 540, 0, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	551, 552, 0, 553, 554, 556, 555, 557, 0, 558,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 562,
	563, 565, 0, 566, 567, 568, 569, 564, 570, 571,
	572, 573, 574, 0, 575, 576, 577, 0, 578, 579,
	580, 581, 582, 0, 583, 0, 584, 585, 592, 593,
	594, 586, 587, 588, 595, 596, 597, 598, 599, 0,
	601, 602, 600, 603, 604, 605, 1428, 606, 607, 589,
	590, 608, 609, 0, 610, 611, 612, 613, 614, 615,
	616, 0, 0, 617, 0, 618, 619, 620, 621, 622,
	624, 591, 625, 630, 631, 0, 626, 627, 628, 629,
	0, 633, 634, 635, 0, 636, 637, 0, 632, 623,
	0, 638, 639, 640, 641, 642, 643, 0, 644, 645,
	0, 646, 0, 0, 0, 0, 0, 656, 0, 647,
	648, 649, 650, 0, 651, 0, 0, 652, 653, 654,
	655, 0, 657, 658, 0, 0, 659, 660, 662, 664,
	665, 661, 663, 666, 0, 667, 0, 0, 668, 669,
	670, 0, 0, 0, 0, 672, 671, 673, 674, 675,
	0, 676, 677, 0, 0, 0, 0, 678, 679, 0,
	680, 681, 682, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 0,
	0, 0, 0, 1930, 1931, 1933, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 0,
	0, 0, 1986, 0, 0, 1933, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 1978,
	1971, 0, 0, 1981, 0, 0, 1947, 1948, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 1953,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 1953,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1968,
	0, 0, 1932, 0, 0, 0, 0, 0, 1979, 0,
	1983, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 1959, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 1972,
	0, 1971, 0, 1985, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 1980, 1985, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 1969, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 1949, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 1970,
	0, 4878, 0, 0, 0, 0, 0, 0, 0, 1979,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	1968, 4830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 1971, 0, 1959,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 1967,
	1961, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 1954, 0, 1977, 0, 1978, 0, 1980, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	1972, 1969, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	1970, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	0, 0, 4829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 1959, 1981, 0, 0, 0,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	1977, 0, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 1972, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 1953, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 4639, 0,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 1959, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 0, 1938, 0, 1967, 1961, 0, 0, 0, 0,
	0, 0, 0, 1933, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1972, 1971, 0, 0, 1981, 0, 0, 1932,
	0, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1977, 0, 1978, 0, 0, 0, 1985, 0, 0, 1947,
	1948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 1970, 0, 0, 0, 0, 1938, 0, 0,
	0, 1979, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 1968, 0, 4464, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 1971, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 1960, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 1978, 0, 0,
	0, 0, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 1959, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 1961, 0, 1953, 0, 0,
	0, 0, 0, 1933, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1972, 0, 0, 0, 0, 0, 0, 1932,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 1985, 1968, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 1955, 1956, 1957,
	1958, 0, 1970, 0, 0, 0, 0, 1938, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1954,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 4378, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 1972, 1971, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 1960, 1962,
	1967, 1961, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 0, 1977, 0, 1978, 0, 1980,
	0, 1985, 0, 0, 1947, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 1969, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 1968, 0, 4377,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 1971, 0, 1959, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 1967, 1961, 0, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 1954,
	0, 1977, 0, 1978, 0, 1980, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 1972, 1969, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 1970, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 4376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 1959, 1981, 0, 0, 0, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 1972, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 1953,
	0, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 0, 0, 0, 4002, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 1959, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 1967, 1961, 0, 0, 0, 0, 0, 0, 0,
	1933, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 1972,
	1971, 0, 0, 1981, 0, 0, 1932, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 1977, 0, 1978,
	0, 0, 0, 1985, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 1970,
	0, 0, 0, 0, 1938, 0, 0, 0, 1979, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 1968,
	0, 3473, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 1959, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 0, 1953, 0, 0, 0, 0, 0,
	1933, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 1972,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 1985, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 1955, 1956, 1957, 1958, 0, 1970,
	0, 0, 0, 0, 1938, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 1954, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0,
	0, 3472, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 1972, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 1980, 0, 1985, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1969,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 1968, 0, 3471, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 1959, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 1977, 0,
	1978, 0, 0, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 1972, 1969, 0, 0, 0, 2376,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	1953, 0, 0, 0, 0, 1930, 1931, 1933, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 1980, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 0, 1986, 0, 0, 1933, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 1980, 0, 1979,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 1986, 0, 0, 0, 0, 0,
	1968, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 1952, 0, 0, 0, 2309, 0,
	0, 0, 0, 1949, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 2377, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 0, 3470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	2307, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 1971, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1978, 1971, 0, 1985, 1981, 0, 0, 1947, 1948,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0, 0,
	3435, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 2308,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2378, 0, 0, 0, 0,
	0, 1972, 0, 1954, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 1972, 0, 0, 0, 1985, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 1985, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 2306, 0, 0, 2379,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	1955, 1956, 1957, 1958, 0, 0, 0, 0, 0, 0,
	1938, 5129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 1971, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 1967, 1961, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 1977, 0,
	1978, 0, 1980, 0, 0, 0, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 1969, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 1967, 1961, 0, 0, 0, 0,
	3406, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	1968, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	1986, 0, 0, 0, 0, 0, 1938, 0, 3535, 1932,
	0, 0, 0, 5128, 3534, 0, 0, 0, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 1959,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3407,
	0, 0, 1954, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1969, 0, 0, 0, 0, 0, 1955, 1956, 1957,
	1958, 0, 0, 0, 0, 0, 1953, 1938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 1981, 0, 0, 0, 1979, 0, 0, 1960, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 1968, 1978, 0, 0,
	0, 0, 0, 0, 1947, 1948, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1953, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 2921, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 0, 2920, 0, 0, 1979, 1933, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 0,
	0, 0, 0, 0, 1986, 0, 1972, 0, 1983, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 1970, 1972, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 1944, 1945,
	1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935,
	1936, 1937, 1939, 1940, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	4734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 1953, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 1930, 1931,
	0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 1968, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 1931, 0, 1963, 1964, 1965,
	1974, 1975, 1976, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1961, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 1986, 1938, 0, 0, 0, 1972, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1956, 1957, 1958, 1953, 0, 0, 0, 1970, 0,
	1938, 0, 0, 0, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 1979, 1981, 0, 0, 0, 0, 0,
	0, 1960, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1162, 0, 0, 1977, 0,
	1978, 0, 0, 0, 0, 1983, 0, 1947, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1930, 1931,
	1953, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 1961, 1959, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 1954, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 1932, 0, 0, 0,
	1968, 0, 0, 0, 1972, 0, 0, 1952, 0, 0,
	0, 1983, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 1955, 1956, 1957, 1958, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 0, 0, 1971, 0, 0, 1981, 0,
	0, 0, 0, 0, 1985, 1960, 1962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 4510, 1978, 0, 0, 0, 0, 0,
	0, 1947, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 1944, 1945, 1951, 1973, 1950, 1946, 1933, 1943, 1941,
	1942, 1934, 1935, 1936, 1937, 1939, 1940, 1980, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 1983, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1930, 1931, 0, 1963,
	1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1961, 0, 0, 1959, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 1986, 0, 0, 0, 0,
	0, 1938, 0, 4197, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 1981, 0, 0, 1985, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4198, 0, 1977,
	0, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 1955, 1956, 1957, 1958, 0, 0, 0, 0,
	0, 1953, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950,
	1946, 0, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939,
	1940, 0, 0, 1971, 0, 0, 1981, 0, 0, 0,
	1979, 0, 0, 1960, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1968, 1978, 0, 0, 0, 0, 0, 0, 1947,
	1948, 0, 1983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1930, 1931, 0, 1963, 1964, 1965, 1974,
	1975, 1976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1961, 0, 0,
	1959, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 1979, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1952, 1983, 0, 0, 0, 0, 0, 0,
	0, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 1955,
	1956, 1957, 1958, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 3541, 0, 0,
	0, 1970, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	1971, 0, 0, 1981, 0, 0, 1985, 0, 0, 0,
	1960, 1962, 0, 0, 0, 0, 0, 0, 0, 3983,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 1978,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0,
	1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1930,
	1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1961, 0, 0, 0, 3536, 1959, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1952, 1972,
	0, 0, 0, 0, 0, 0, 0, 1949, 0, 0,
	0, 0, 1930, 1931, 0, 1963, 1964, 1965, 1974, 1975,
	1976, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 1967, 1961, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	1932, 0, 0, 0, 0, 1955, 1956, 1957, 1958, 0,
	0, 1952, 0, 0, 0, 1938, 0, 0, 0, 0,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1944, 1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942,
	1934, 1935, 1936, 1937, 1939, 1940, 1971, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 1960, 1962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 1978, 0, 0, 0, 0,
	0, 0, 1947, 1948, 0, 0, 0, 0, 1955, 1956,
	1957, 1958, 0, 0, 0, 0, 0, 0, 1938, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1960,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 1977, 0, 1978, 0,
	0, 0, 0, 0, 0, 1947, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 1931, 0,
	1963, 1964, 1965, 1974, 1975, 1976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 1961, 0, 0, 1959, 3474, 0, 1979, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 1954, 1968, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 1983,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 3501,
	0, 0, 0, 0, 0, 1972, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	1930, 1931, 0, 1963, 1964, 1965, 1974, 1975, 1976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 1967, 1961, 0, 0, 1959, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 1932, 0,
	0, 0, 0, 1955, 1956, 1957, 1958, 0, 1972, 1952,
	0, 0, 0, 1938, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 1945, 1951, 1973,
	1950, 1946, 1985, 1943, 1941, 1942, 1934, 1935, 1936, 1937,
	1939, 1940, 0, 0, 1971, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 1960, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 1978, 0, 0, 0, 0, 0, 0,
	1947, 1948, 0, 0, 0, 0, 1955, 1956, 1957, 1958,
	0, 0, 0, 0, 0, 0, 1938, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 1944,
	1945, 1951, 1973, 1950, 1946, 0, 1943, 1941, 1942, 1934,
	1935, 1936, 1937, 1939, 1940, 0, 0, 1971, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 1960, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 1977, 0, 1978, 0, 0, 0,
	0, 0, 0, 1947, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1930, 1931, 0, 1963, 1964,
	1965, 1974, 1975, 1976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1961,
	0, 0, 1959, 0, 0, 1979, 0, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 1954, 1968, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 1983, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1955, 1956, 1957, 1958, 0, 1972, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1944, 1945, 1951, 1973, 1950, 1946,
	1985, 1943, 1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940,
	0, 0, 1971, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 1960, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1040, 1977,
	1091, 1978, 0, 0, 0, 0, 0, 0, 1947, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 1969, 0, 0, 2489,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 1953, 1063, 0, 1046, 1045, 0, 1944, 1945, 1951,
	1973, 1950, 1946, 0, 1943, 1941, 1942, 1934, 1935, 1936,
	1937, 1939, 1940, 0, 0, 0, 0, 1065, 0, 0,
	0, 0, 0, 1047, 0, 0, 0, 0, 1050, 0,
	0, 0, 0, 1102, 0, 1075, 0, 0, 0, 0,
	1979, 0, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 1052, 1983, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 1057, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1066, 1064, 0, 0, 0,
	0, 0, 0, 1059, 0, 1985, 0, 1076, 0, 0,
	1097, 1096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1951, 1973, 1950, 1946, 0, 1943,
	1941, 1942, 1934, 1935, 1936, 1937, 1939, 1940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1049, 0, 0, 0, 1084,
	1085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 1082,
	0, 0, 0, 0, 0, 0, 0, 1100, 1077, 0,
	0, 1069, 1067, 0, 0, 1072, 0, 0, 0, 0,
	0, 1073, 0, 0, 1042, 0, 1095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 1074, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 1079, 0, 0, 0, 0, 0, 0, 0,
	1055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1083,
}

var sqlPact = [...]int{
	6474, -1000, -1000, -1000, -1000, 190, -1000, -1000, 188, 186,
	185, 178, 176, 174, 173, 172, 171, 170, 169, -1000,
	-1000, 166, 165, 164, 157, -1000, -1000, 153, -1000, -1000,
	151, -1000, 150, 148, 144, -1000, -1000, 143, -1000, 142,
	-1000, -1000, -1000, -1000, 141, 140, 138, 99081, 98496, 99664,
	2510, 125953, 108423, 2288, 87978, 125368, 87393, 124783, 2384, 11904,
	124198, 2974, 136, -1000, 123613, 135, 130, 127, -1000, 107838,
	123028, 105500, 104915, 2019, -1000, 124, 123, -1000, 5474, 76813,
	121, 118, 117, 116, 2765, 115, -1000, 112, 110, -1000,
	-1000, 109, -1000, 13490, 1638, -1000, 108, 107, -1000, 712,
	104330, 106, 105, 104, 2814, 101, 100, 73884, 99, 98,
	97, 2445, 3057, -1000, -1000, 2317, -1000, -1000, 92, 91,
	90, 89, 88, 87, 85, 79, 77, 75, 74, 72,
	66, -1000, 62, 61, 60, 59, 55, -1000, 52, 48,
	47, -1000, 46, -1000, 45, 43, 41, 39, 38, 37,
	36, 34, 33, 32, 31, 29, 28, 27, 26, 146546,
	-1000, -1000, 25, -1000, 2164, 1839, 1837, 1829, 1827, 1819,
	1045, 22, 19, 18, 17, 14, 12, 11, 10, 7,
	5, 4, 3, 2, 1, 0, -2, -3, -6, -7,
	-8, 137, -9, -10, -11, -15, -16, -18, -19, 3645,
	3745, -1000, 1652, 1057, 33904, 3193, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 134698, 126536, -20, -78, -22,
	-1000, 3556, 982, 61538, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 457, 2782, 726,
	-1000, -1000, -1000, 122443, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2509, -56, -1000, 2240, -1000, -1000, -1000, -1000,
	-1000, 721, -1000, 2508, 2447, 356, 2443, -1000, -1000, -1000,
	3621, 2662, 4032, 4031, 4030, 4028, 4027, 134115, 2049, 4026,
	2729, 4025, 4024, 4019, 4018, 4017, 4015, 4014, -1000, 97911,
	1145, 97326, 96741, 3628, 121860, 96156, 121275, 137036, 51970, 1040,
	3620, -1000, -1000, -1000, -1000, -1000, -1000, 126536, -1000, 1144,
	-1000, -1000, 4013, 2252, 719, 107253, -1000, -1000, 120690, 1983,
	-1000, -1000, -1000, 965, 1222, 36300, 36300, 36300, 233, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3635, -1000, -1000, -1000,
	-1000, 126536, 2907, 2907, 1442, 1412, 1412, 2907, 2907, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4011, 4007, 4005,
	4004, 4003, -1000, -1000, -1000, 86808, 26525, 86223, 85638, 120105,
	51371, 95571, 94986, 4001, 4000, 3999, 50772, 81543, 59155, 3744,
	119520, 136451, 3743, 3742, 1142, 2238, 1573, -1000, -1000, -1000,
	-1000, -1000, -1000, -47, 78565, 3808, 126536, -1000, 231, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50173, 1008, 49574, 903,
	48975, 762, 118935, -1000, -1000, -1000, -1000, 80948, -1000, 118350,
	2660, 3997, 3995, 1267, 3994, 3501, 2013, 3993, 2081, 1360,
	3992, 3989, 3987, 3985, 3984, 3981, 3979, 1639, 117765, 3192,
	1717, 117180, 1887, 135866, 1141, 94401, 99664, 2821, 116595, 1604,
	1583, -1000, -1000, -1000, -1000, 3356, 3055, 3039, 1363, -1000,
	-1000, -1000, -1000, 65078, 8370, 7521, -1000, -1000, 13254, 116010,
	68043, 99664, 99664, -1000, -1000, -1000, -1000, -1000, -1000, 48376,
	960, 47777, 1038, 115425, -1000, -1000, 65671, 3137, 1186, -1000,
	-1000, -1000, -1000, -1000, 114840, 47178, 832, 46579, 1012, 126536,
	-1000, 3190, 2140, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2920, 1862, 3807, 2938, 80353, 2259, 1491, 3582,
	3355, 3353, 1595, 2227, 3345, 3977, 2808, 3344, 3343, 3338,
	3306, 3300, 1726, 2774, 617, 2780, 33305, 3177, 1964, 45980,
	1899, 1603, 3298, 3296, 3823, 3690, 2210, 2233, 2194, 2228,
	85053, 3976, 3974, 3549, 3292, 3284, 3008, 3255, -1000, 3135,
	1627, 228, -1000, -1000, -1000, -1000, -1000, -1000, 1539, -1000,
	-1000, -1000, -1000, -1000, 90310, -1000, -1000, 1421, -1000, -1000,
	1421, -1000, -1000, -1000, -1000, -1000, 1563, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1652, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2471, -1000, 2272, -1000, -1000, -1000, 2692, 3550,
	3550, 3550, 3618, 432, 417, -1000, 137, -1000, -1000, 146294,
	-1000, -1000, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569,
	2392, -1000, 718, -1000, -1000, 763, -1000, 717, 634, 580,
	-1000, -1000, -1000, -1000, -1000, -1000, 715, -1000, -1000, -1000,
	-1000, -1000, -1000, 3787, -1000, 29574, -1000, -1000, -1000, 451,
	711, 52569, -1000, -1000, 3842, 3840, 935, -1000, 227, 1002,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3189, 708, 706, -1000, 704, 702, 698, 697,
	695, -1000, 694, -1000, 689, 688, 686, 685, 681, 679,
	678, 676, -1000, 2262, -1000, -1000, -1000, -1000, -1000, -1000,
	624, 623, 623, 623, -1000, 1134, -1000, -1000, -1000, 263,
	622, 248, 616, 610, 605, -1000, 675, 657, 649, 648,
	645, 644, 643, 641, 640, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1122, -1000, -1000, -1000, -1000, 1561, -48, 126536,
	-1000, 457, -48, -1000, -1000, 637, -1000, 38115, 38115, 38115,
	-1000, -1000, 2505, 52569, -1000, 2689, -1000, -41, -41, 921,
	63296, -1000, 60344, 921, 619, 783, 69212, -1000, 3132, -1000,
	-1000, 636, 226, -1000, -1000, -1000, -1000, 27118, 3131, 126536,
	126536, 126536, 99664, 99664, 99664, 126536, 3973, 3972, 3313, 52569,
	-1000, -1000, 76228, 138786, 100247, -1000, -1000, 3723, 74467, 75644,
	3188, 138786, 3187, 138206, 3970, -1000, -1000, -1000, -1000, -1000,
	3387, 3969, 3968, 3967, -1000, 126536, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 252, 3386, -1000, -1000, 103745, 252, 3385,
	-1000, 252, 3384, -1000, 103162, -1000, -1000, 2446, 3375, -1000,
	-1000, 256, 3340, -1000, -1000, -1000, 255, 3337, -1000, -1000,
	221, -146, 3333, -1000, -1000, -1000, -1000, -1000, -1000, 146294,
	-1000, -1000, -1000, 137621, -1000, 3531, -1000, 126536, -1000, 52569,
	-1000, -1000, 3722, 1733, 3578, 3672, -1000, -1000, -60, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2711, 2707, 1188, 2543,
	-1000, 3445, 2050, 36300, 3488, -1000, -1000, -1000, -1000, -1000,
	220, 27118, 3031, -1000, -1000, 126536, -1000, 126536, 2907, 2907,
	-1000, -1000, -1000, 3816, 3815, 2907, 2907, 126536, 126536, -1000,
	-1000, -1000, -1000, -1000, -1000, 3003, 3330, 1593, -1000, 2537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2345,
	3329, -1000, 2136, 3327, 2215, -1000, -1000, 2064, -1000, 142334,
	1441, -1000, -1000, -1000, -1000, 2265, 3326, -40, -1000, -1000,
	2432, -1000, -1000, -1000, -1000, 142304, -1000, 3065, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1870, -1000, -1000,
	2297, 2180, -1000, 1418, 3324, -1000, 2924, 2924, 93816, 3367,
	67450, 65671, 78565, -52, -1000, -1000, -1000, -1000, -1000, -151,
	-1000, 25925, 146294, -1000, -1000, -1000, -1000, 2011, 146294, 912,
	-1000, -1000, 3315, -1000, 146294, 891, -1000, -1000, 3312, -1000,
	2772, -1000, 3185, -1000, -1000, 2614, 2613, 1099, -1000, 3957,
	-1000, -1000, 3956, -1000, 3955, 3951, 3950, -1000, 1692, 2221,
	3948, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 93233,
	2503, -1000, -1000, 89727, 3184, -1000, 2611, 3668, -1000, 92648,
	1140, -1000, 1036, 2609, -1000, 102579, 1025, 2604, -1000, 3947,
	3617, 2842, 1036, 2602, -1000, -1000, -1000, -1000, -1000, 1020,
	-1000, 70962, -1000, 70962, -1000, 1804, -1000, 133532, -41, 99664,
	3787, -1000, -83, -1000, -1000, -1000, 982, -1000, 64482, -1000,
	64482, 106668, 82136, 1005, 3128, 73298, 145989, -1000, 1098, -1000,
	-1000, 146294, -1000, -1000, -1000, 2770, -1000, -177, 2918, -1000,
	82136, 66857, 3125, 2761, -1000, 146294, -1000, -1000, -1000, -1000,
	146294, -1000, -1000, -1000, 82136, 89727, -1000, 114255, 92063, -1000,
	-1000, 1616, 2748, -1000, -1000, -1000, 82136, 1439, 82136, 82136,
	82136, -1000, 113670, -1000, -1000, 2264, 1708, 3523, 2260, 99664,
	-1000, 2096, -1000, -1000, -1000, 3563, 3342, 126536, -1000, -1000,
	3181, -1000, 77981, 101996, -1000, 101413, -1000, 100830, -1000, 99664,
	-1000, 99664, -1000, 3945, 3943, 3942, -1000, -1000, 3941, -1000,
	3940, 3546, -1000, 754, 45381, 146294, 3539, -1000, 3939, 2197,
	3177, 146294, -1000, 3341, 1832, 1826, 126536, -1000, -1000, 126536,
	-1000, 126536, -1000, -1000, -1000, 2527, 1732, -1000, -1000, 2709,
	-1000, -1000, -1000, 1096, -1000, -1000, 99664, 99664, 99664, 99664,
	1338, -1000, 44782, -1000, -1000, 3254, 3936, 1904, -1000, 2082,
	-1000, 3124, 3558, -1000, 1614, 1980, 219, 3845, -1000, -1000,
	257, -1000, -1000, -60, -1000, 132949, -1000, 2692, -1000, 126536,
	-1000, 2706, 3159, 3174, 1828, 2521, 2806, -1000, 44183, 2790,
	56163, 2532, 137, -1000, -1000, 137, 137, 35102, -1000, -1000,
	74467, 74467, 27118, 1575, 52569, 52569, 52569, 52569, 52569, 52569,
	52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569,
	52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569,
	52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569, 52569,
	2344, 52569, 1556, 52569, 52569, 52569, 52569, 2129, -1000, -1000,
	2153, 496, 2211, 634, -1000, -1000, -1000, 3788, 3788, 3788,
	1054, 1054, 1054, 8852, 8852, 591, 3935, 763, -1000, 52569,
	-1000, 76, 63879, 52569, 27713, -1000, 417, 10324, 2726, -1000,
	415, 28342, -1000, -1000, -1000, 29574, 580, 43554, 52569, 1107,
	146294, -1000, -1000, 1574, 3803, 25325, 3201, 2996, 632, 846,
	844, 32676, 32047, 31418, 30789, 806, 713, 52569, 52569, 52569,
	52569, 52569, 52569, 52569, 52569, -1000, -1000, 3813, -1000, 3803,
	-1000, -1000, -1000, -1000, 3803, 1572, 1568, 3803, -1000, 3803,
	3803, 7161, 7161, 42955, 42356, 41757, 56762, 41158, 52569, 30190,
	40559, 39960, -1000, 58559, 126536, -48, 3721, 52569, 187, -1000,
	143404, -1000, 187, 187, 630, -86, 146294, 2760, 2760, 62124,
	2587, 2403, 2403, 2403, -1000, 921, 19887, 921, 111921, 2416,
	921, 921, 215, 244, 414, 59751, 2689, 111921, 748, 629,
	-24, -26, -29, -1000, -1000, -30, -34, -1000, -1000, 99664,
	628, 27713, 27118, 211, 2207, -88, 2798, 2797, -1000, 2796,
	2788, -1000, 2787, 2502, -1000, -1000, -1000, 2005, -89, 1555,
	99664, 126536, 1602, 3932, -96, -1000, 7021, -97, -1000, 1364,
	209, 3803, -1000, -1000, -1000, -1000, -1000, 3931, 3930, -1000,
	1119, 627, 625, 487, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 624, 623, 623, 623, -1000, 263, 622, 248,
	616, 610, 605, -1000, -1000, -1000, -1000, -1000, 3123, 99664,
	126536, 1591, 3927, 88561, -146, 100247, -72, -1000, -1000, 126536,
	-1000, -1000, -1000, 3926, -1000, 99664, -1000, -1000, 99664, 252,
	3311, -1000, 99664, -1000, 99664, 251, 3308, -1000, -1000, 126536,
	-1000, 99664, 99664, -1000, 126536, 126536, 126536, 138786, 138786, 250,
	-1000, 99664, 864, -100, 1280, -60, -1000, -1000, -1000, -1000,
	1421, -1000, 1949, -1000, -1000, -1000, -1000, -1000, -1000, 1657,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 935, -1000,
	-1000, -1000, -1000, 3799, 3796, -49, -1000, -1000, 27118, -1000,
	2091, -1000, -1000, -1000, -1000, 126536, 126536, -1000, -1000, 126536,
	126536, -1000, -1000, -63, 1825, 478, 1553, -1000, 84468, 2627,
	3543, 3920, 2828, 3512, 1795, -1000, 1729, 604, -1000, 3642,
	90310, 3689, 3701, 1416, -1000, 3121, -1000, -1000, -1000, 964,
	1894, 1928, 1548, 1544, 90310, 2136, -1000, 74467, -1000, 2872,
	3616, 1412, 1429, 1412, 1412, 1405, -1000, 90310, 1926, 1542,
	1540, 1536, -1000, -1000, 1783, 1769, -1000, -1000, 113087, -1000,
	1389, 1387, 3738, 2471, 2393, 796, 2146, -1000, 1436, 1386,
	3119, -1000, -1000, -65, 3688, 3699, 1416, -1000, 3118, 1380,
	-1000, -1000, -1000, 3614, 99664, 27118, 1699, 1696, 1683, 1925,
	1378, -50, -1000, 3683, 1735, -1000, 89727, 89727, 109006, 126536,
	3751, 82136, -1000, 2633, -1000, -1000, -1000, 3577, 3576, -1000,
	-1000, 1377, 1376, -1000, 1064, 5237, 3465, -1000, 138786, 1064,
	1064, 2113, 3307, 2866, 1787, -1000, 2910, 901, 2900, -1000,
	-1000, -1000, 901, -52, 78565, 126536, 208, -1000, 76, 52569,
	52569, 76, 52569, 76, -1000, 3658, 3305, 3303, 3919, -1000,
	-1000, -1000, -1000, -1000, 3916, 2189, 2727, -1000, -1000, 603,
	2601, 3117, 126536, 203, -1000, 99664, 3212, 77397, 3302, 138786,
	2136, 2600, -1000, -1000, 91478, -1000, 3294, 457, 2597, -1000,
	680, 3914, 3293, -1000, 132366, -1000, 3531, 1581, 3285, 1180,
	722, 3717, -1000, 722, 71546, -1000, 126536, -1000, -41, 6103,
	83302, -103, -105, 401, -1000, 112504, 126536, 126536, 3475, 2201,
	2192, -1000, 1014, 65671, -1000, 65671, -106, -1000, -177, 2895,
	1684, 65671, -1000, 1005, -137, 901, -1000, 901, -1000, 99664,
	3173, -1000, -1000, 82136, 1005, 1005, 1005, -1000, -1000, -1000,
	-1000, 3911, 3910, 3909, 3908, -1000, -1000, 1028, 99664, 126536,
	99664, -1000, -1000, 1710, -1000, 207, -1000, 138786, -1000, 138786,
	126536, 99664, -1000, 1028, 126536, 1028, 126536, 1028, 126536, 1028,
	1028, -1000, -1000, -1000, -1000, -1000, 76, -1000, -1000, 146294,
	-1000, 52569, -1000, -1000, 1722, 3906, 1856, -1000, 3172, -1000,
	3160, -1000, 9, -1000, -1000, 3812, 2063, -1000, 3839, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3905, 146294, -1000,
	2281, -1000, -1000, -1000, -1000, 99664, 99664, 99664, 99664, 126536,
	3464, -1000, 126536, 3459, 99664, -1000, 3844, -1000, -1000, 90310,
	-1000, 2706, 3159, -1000, -1000, -1000, -1000, -1000, -1000, 1551,
	2460, -1000, 2754, -1000, 1752, -1000, -1000, -1000, 146294, 57361,
	-1000, -1000, 146294, 2025, -1000, 55564, 54965, -1000, -1000, 1849,
	99664, 2816, -1000, 2816, -141, -1000, 143100, 2752, 99664, -1000,
	-1000, -1000, -1000, -1000, 962, 1061, 1061, 1527, 1527, 1527,
	1527, 3644, 1170, 1191, 333, 5673, 5673, 9671, 9671, 9671,
	9671, 9671, 5673, 1231, 1054, 1054, 1231, 1231, 1231, 1231,
	1231, 1054, 1054, 1054, 5673, 5673, 5673, 1054, 8852, 7583,
	13126, 52569, 52569, 1374, 2147, 496, 11681, 52569, 9689, 9689,
	9689, 9689, -1000, 2236, -1000, -1000, -1000, -1000, 3115, 601,
	56762, 56762, -1000, -1000, -1000, -1000, 28958, 52569, -1000, -1000,
	-1000, -1000, 39331, -1000, -1000, 142043, -331, 394, -1000, 205,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 393, -122, 84, -1000, 52569, 52569, 52569,
	390, -1000, 201, 52569, 126536, -1000, 18329, 744, -108, -1000,
	-111, 1530, -1000, 52569, -1000, -1000, 1368, -1000, 1357, 1356,
	1355, -1000, 597, 389, -1000, 200, -1000, 2398, 596, 595,
	52569, -1000, -1000, -1000, -1000, -1000, 141837, -1000, -1000, 141577,
	-1000, -1000, 141422, -1000, -1000, 141162, -1000, -1000, -1000, -1000,
	-1000, 145896, 17687, 16336, 15801, 9606, 14253, 12924, -116, 386,
	-119, 383, 959, 953, 382, 380, 379, -121, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-124, 376, -1000, 3110, -122, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 373, -1000, 372, -1000, 145591, -122, 371,
	8053, -1000, 56762, 56762, 56762, 56762, 370, -1000, 142989, -1000,
	145498, 38732, 38732, 38732, 368, 145102, 52569, -122, -126, -1000,
	-129, -1000, -1000, -1000, -1000, 543, -136, 1066, 38115, 60952,
	27118, -1000, 1066, 1066, 52569, -1000, 52569, 2768, -1000, -1000,
	-1000, -1000, 2766, 2018, 2760, 62124, -1000, -1000, -1000, -1000,
	111921, -1000, 3787, 3014, -1000, 111921, -1000, -1000, 126536, 457,
	-1000, 111921, 111921, 27118, 921, -1000, 921, 111921, 699, -1000,
	-1000, -1000, -1000, -1000, 365, 72132, 84, 199, 27118, 1036,
	-1000, -1000, 2911, 2911, 2911, 2911, 2911, 99664, -1000, -1000,
	138786, 1353, -55, -94, 2878, -1000, 3749, -1000, 2287, -1000,
	74467, -1000, 761, 1095, 27118, -1000, -1000, -1000, 594, -1000,
	3803, 3803, -1000, 3803, 138786, 3102, 182, 2875, -1000, 2499,
	-53, 177, 138786, 3904, -1000, -1000, 252, -1000, 99664, 252,
	252, -1000, 99664, 99664, 2446, -1000, 256, -1000, 255, -1000,
	-1000, -146, -1000, 1090, 36300, -1000, 1421, -1000, -1000, 1695,
	-1000, 2199, -1000, 1543, -1000, -1000, 36300, -1000, 3478, -1000,
	1948, -1000, -1000, -1000, -1000, 2519, 126536, 126536, 99664, -1000,
	110172, 126536, -1000, 2372, 138786, -1000, 2596, 131783, 2564, 131200,
	74467, -1000, -1000, 592, 993, 2750, 2749, 1177, 126536, 126536,
	2743, 130617, 130034, -1000, 3902, 126536, 2267, 52569, 110172, 3612,
	2389, 2399, 76, 76, -1000, 76, -1000, -1000, 589, 1300,
	99664, 99664, 126536, 138786, 99664, 2088, -1000, -1000, -1000, -1000,
	-1000, 90893, -1000, -1000, 1412, -1000, -1000, -1000, 1412, 2136,
	1975, 126536, 138786, 99664, 138786, 129451, 2130, 128868, 2111, -1000,
	-1000, 1924, 126536, -1000, -1000, -1000, -1000, 1505, -1000, 796,
	1351, 3089, 52569, 52569, 2320, 76, 76, -1000, 76, 587,
	27118, 2149, -1000, 3186, 126536, 3836, 128285, 3835, 126536, 126536,
	126536, 138786, 3548, 126536, -1000, -137, -54, -227, -1000, 900,
	898, -151, -1000, 3751, -1000, 895, 2252, 126536, 138786, -1000,
	127702, 5237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2307,
	79758, 1195, 126536, 1418, -1000, -1000, 1889, 1348, 1347, 90310,
	2280, 1882, 2040, 138786, 65671, 1022, 65671, 2844, -1000, -1000,
	24725, -1000, 146294, 146294, -1000, 146294, -1000, 77397, 82136, 126536,
	-1000, -1000, 1138, 126536, 83885, 992, 3282, 70378, -151, 1005,
	89727, 82136, 3210, 126536, 2810, 126536, -1000, -1000, 2136, 3280,
	457, 2594, -1000, 138786, 3716, 3279, 586, 3901, 3900, -1000,
	99664, 2498, 2593, -1000, -1000, 127119, 3310, 796, 126536, 1066,
	62124, 2137, -1000, 68629, 1162, 126536, 2051, 147, -1000, -1000,
	-1000, -12, 126536, -1000, 768, -1000, -1000, 6103, 6103, 1005,
	-227, 583, 66264, -148, -1000, 195, 582, 893, 889, -1000,
	5167, -1000, -177, -1000, 82136, 1014, 65671, 3088, -177, 2870,
	3081, -1000, -1000, 1081, -1000, 1608, 1005, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -43, 2032,
	126536, -146, -146, -69, -55, -1000, 1028, -1000, 1028, -1000,
	1028, -1000, -1000, -1000, 146294, -1000, -1000, -1000, 1851, 1815,
	126536, -1000, 3150, -1000, 126536, -1000, -1000, 27118, 126536, 99664,
	27118, 99664, 3147, 3146, -1000, -1000, -1000, 126536, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1214, -1000, 2025, 2458,
	-1000, 580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2691, -1000, -59, 35102, 939, -1000, -1000, 99664, -44,
	52569, 52569, 11275, 11083, 52569, 56762, 56762, -1000, 52569, 6096,
	-1000, -1000, -1000, -1000, -1000, 3075, 573, 52569, 74467, 8025,
	7119, -1000, 364, 12629, 1231, -1000, 52569, -1000, 311, -1000,
	363, 37516, -1000, 144017, -27, -150, -1000, 20501, -122, -153,
	-1000, -1000, 760, -1000, 3299, -1000, 52569, 144815, 2654, 2155,
	2045, 1824, 3803, 3834, 24125, -1000, 72715, 1104, 2422, 140956,
	-1000, -1000, -1000, -1000, 74467, 74467, 52569, 52569, -1000, 52569,
	52569, 52569, -1000, -1000, -1000, 3803, 955, -1000, -1000, -1000,
	955, -1000, -1000, 1412, -1000, 1412, -1000, 52569, -1000, -1000,
	3070, 52569, -1000, 74467, 74467, 56762, 56762, 56762, 56762, 56762,
	56762, 56762, 56762, 56762, 56762, 56762, 56762, 56762, 56762, 56762,
	56762, 56762, 56762, 56762, 56762, 2732, 56762, 3771, 3771, 3771,
	1111, -1000, 3144, 3070, 52569, 52569, 74467, 359, 352, 350,
	-1000, 52569, -122, -1000, -1000, 9191, 572, -1000, 2675, -1000,
	2995, -1000, 52569, -1000, -155, -1000, 2689, -1000, -1000, 2995,
	2995, -156, 146294, 62124, 62124, -1000, 571, 52569, 2762, -1000,
	-1000, 740, -329, -1000, 884, -1000, -1000, -1000, -1000, -1000,
	-1000, 877, -1000, 457, -1000, -1000, -1000, 194, 111921, 111921,
	739, -1000, -158, -1000, -1000, -159, -1000, 3715, 338, 27118,
	-1000, 1066, 2908, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2771, -276, 138786, 138786, 1880, 2442, 3832, -1000, 3811, 759,
	735, 193, 3803, 337, 334, 329, -146, 138786, 138786, 1879,
	75060, 138786, -1000, -1000, -1000, 252, -1000, -1000, -1000, 251,
	-1000, -1000, -1000, -1000, 2854, -1000, -60, -1000, -1000, -1000,
	52569, -1000, 1000, -1000, -1000, 3524, 568, 1346, 1344, -1000,
	-166, -1000, 872, -1000, -1000, -1000, -1000, 3030, -1000, 3275,
	-1000, 2591, -1000, 1166, 2585, 1701, -1000, 52569, 563, 2841,
	561, 560, 3899, 2225, 3896, 1178, 3271, 2446, 3267, 2446,
	-1000, -1000, -1000, 972, -1000, 146294, -167, -1000, 2389, -1000,
	556, 555, -1000, -63, 1818, 467, 1336, 1079, -1000, -1000,
	52569, 52569, 111338, -1000, 475, 3521, -45, -1000, -1000, -1000,
	1878, 1333, 1332, -1000, -1000, -1000, -1000, 2136, 1876, 1329,
	1326, -1000, -1000, -1000, -1000, -1000, 2584, -1000, 126536, -1000,
	3266, 126536, 1075, -1000, 3217, 3216, 947, 126536, 52569, 52569,
	144704, 144417, -1000, 1065, -1000, -1000, 52569, -1000, -65, 1325,
	3673, 2574, 99664, -1000, 2446, 3264, 1322, -1000, 1317, -1000,
	-1000, -1000, 3682, 3654, 1324, -1000, 109006, 82136, 82136, 3751,
	65671, -1000, -1000, -1000, 82136, -1000, -1000, 79165, -1000, -1000,
	1064, 126536, 138786, 99664, 1905, -1000, -1000, 88561, 89144, 126536,
	2866, -146, 901, -1000, 2679, 901, 1022, 3068, -1000, 2785,
	-1000, 1053, 99664, 3895, 328, -168, -66, 74467, -1000, -1000,
	-1000, -1000, 2564, 99664, 126536, 1395, 2838, 126536, 126536, 3714,
	-1000, 2515, 602, 99664, 944, -1000, 3787, -1000, -1000, -1000,
	126536, -1000, -1000, 1044, -1000, 3665, 99664, 3713, 3261, 1036,
	76, 99664, 3821, -1000, -1000, 3709, 99664, 3259, 2497, 2570,
	2718, 796, 82719, 1036, 2421, -76, -1000, 2051, 36899, 3517,
	-169, -1000, -1000, -1000, 1066, 71546, 62124, 52569, 3894, -175,
	-1000, -1000, -1000, -1000, -1000, 109006, 82136, 1005, 126536, 126536,
	3893, 82136, 82136, 82136, -67, 544, -1000, 869, 858, 856,
	-1000, -1000, -1000, -1000, -1000, -1000, 851, 849, 848, 847,
	1014, -1000, -1000, -177, 65671, 1014, 65671, 76, -1000, 2434,
	99664, -1000, 23525, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1028, 3831, -151, -1000, -1000, -1000, 2326, 2531, 2326, 2031,
	2029, -1000, -1000, 2455, -1000, -1000, -1000, -1000, 2815, 3537,
	27118, 3650, 9689, 52569, 52569, 547, 7023, 6169, 9689, 52569,
	52569, 74467, 7843, -185, 52569, 52569, -1000, 52569, 732, 146294,
	-1000, 3830, 52569, 318, 316, -1000, -1000, -1000, 3794, -1000,
	-1000, -1000, 146294, 52569, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 312, -1000, 183, -1000, -1000, -1000, 135281, -1000, 52569,
	310, 3610, -1000, 309, 284, 11379, 416, 140750, 140490, 140335,
	283, -1000, -1000, 281, 277, 146294, 3144, 146294, -1000, -1000,
	1088, 1088, 1414, 1414, 1414, 1414, 3771, 355, 2038, 1041,
	778, 778, 778, 957, 1111, 1111, 778, 778, 778, 1111,
	3058, 2758, 533, 8171, -1000, -1000, 146294, 146294, 275, -1000,
	-1000, -1000, -122, 273, 9191, -1000, 2985, 3609, 146294, -1000,
	62124, 2985, 2985, -1000, -1000, 2018, 126536, 146294, 62124, -1000,
	3014, -1000, 21719, 21113, -1000, 27118, -1000, -1000, -1000, -1000,
	3787, -1000, 72132, -1000, 529, -1000, 146, -1000, 2908, -1000,
	845, -1000, -1000, 82136, 82136, 2911, -1000, 3001, -276, -161,
	126536, -1000, -1000, 731, 3889, 758, 27118, 272, -1000, -1000,
	-1000, -146, -146, 126536, 3054, 99664, 126536, 1590, -146, -1000,
	-1000, -1000, 3472, 146294, 3078, 2977, 2967, 126536, 126536, -1000,
	110172, 36300, 1664, 110755, 126536, 3250, -1000, 3249, -1000, 1177,
	2023, 140075, 62710, -1000, 62710, 126536, -1000, -1000, -1000, -1000,
	2073, 1663, 3886, 1250, -1000, 3568, 126536, -1000, 126536, -1000,
	-1000, -1000, 110172, -1000, 126536, 126536, 99664, 126536, -1000, 138786,
	3225, -186, 146294, -68, -1000, 842, -1000, 1390, -1000, 22925,
	126536, 138786, 99664, 126536, 138786, 99664, 3244, 1161, 126536, -1000,
	2371, -1000, -1000, 3215, -1000, 146294, 144133, 76, 52569, 3224,
	-191, 27118, -1000, 3829, 3827, 3240, 3573, -1000, 126536, 3826,
	126536, 99664, 3470, -1000, -1000, -1000, 1026, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1875, 1316, 1304, 2495, 2487, 2441,
	-69, 2280, 1022, -70, 525, -1000, 841, -1000, -1000, 838,
	836, 1022, -1000, 82136, 65671, 3883, 457, -1000, 2825, -1000,
	106083, 83885, 2473, -1000, -1000, 524, 126536, 126536, 523, -1000,
	76, -1000, 3881, 110172, 522, -1000, 2429, -1000, 728, -1000,
	-1000, 2670, 138786, 2136, 76, 99664, -1000, 1013, 457, 271,
	-71, -1000, 3347, 1175, 27118, 99664, 3237, 2722, 796, 82719,
	-1000, 1581, 2806, -1000, -73, -1000, 460, 76, 2421, -1000,
	-76, 146294, -1000, 834, -192, 268, -1000, 3469, -1000, -1000,
	-193, -1000, -1000, 3574, 3574, 82136, 65671, 82136, 82136, 82136,
	65671, 82136, -1000, 1014, 901, -1000, -177, -1000, 2622, -1000,
	-1000, -1000, -1000, -1000, -1000, 27118, 1890, -1000, 520, 519,
	-1000, -1000, -1000, -1000, 3537, 9689, 9689, 52569, 52569, 52569,
	9689, 7843, -207, -1000, 9689, 9689, -122, -1000, -1000, 144017,
	-1000, -1000, -1000, 146294, -1000, 22325, 2335, -1000, 139869, -1000,
	35102, -1000, -1000, 52569, 52569, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56762, 3052, 518, 74467, -1000, -1000, 267,
	1062, 52569, 54366, 2689, 1062, 1062, -1000, -208, -1000, -1000,
	-1000, 3787, -1000, 3787, 146, -1000, -1000, 3879, 27118, -1000,
	82136, -1000, -1000, -1000, 2438, -1000, -1000, 3213, -176, 755,
	-1000, 3874, -1000, -1000, 145, 138786, 3045, 126, 2865, -1000,
	76, -1000, -1000, -1000, -1000, -1000, -1000, 2860, 3708, -1000,
	2104, -1000, 126536, 126536, -1000, 126536, -1000, 27118, 126536, 3009,
	1403, -1000, 993, 2738, 517, 56762, 1211, 99664, 896, 2964,
	2962, -1000, 3733, 3606, 2942, -213, -1000, 126536, 52569, 126536,
	-214, -215, 2548, -1000, -1000, 1207, 1349, 52569, 1205, -1000,
	-1000, -1000, 74467, 514, 2446, 2446, -1000, -216, -222, -1000,
	-1000, -1000, 52569, 1303, 126536, 35701, -1000, 3873, 3521, -1000,
	-1000, -1000, -1000, -1000, -1000, 126536, 126536, -1000, 126536, -1000,
	52569, -1000, 143721, 52569, 1302, -1000, -1000, -1000, 3825, 2446,
	27118, 2446, -1000, 2446, 3573, 1242, 2474, 126536, 138786, 99664,
	2036, 2036, 3037, -1000, -1000, -1000, 2703, 2703, 82136, 65671,
	65671, -1000, -77, 1022, -1000, 3707, 2334, 3872, -1000, -1000,
	-1000, -1000, 2736, -1000, -1000, -1000, 126536, 2735, 2927, 62710,
	511, 509, 126536, 1009, -1000, -224, 83885, 992, 986, -1000,
	-81, 503, -1000, 826, -1000, -1000, -1000, -1000, 457, -1000,
	2847, 3706, -1000, 3824, 502, 501, 126536, 2475, 500, 27118,
	3514, 796, 82719, -1000, 3310, 2051, -1000, 2560, 126536, 3507,
	-1000, 2806, 496, -1000, 1005, 492, 1005, -1000, -225, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014, -99,
	-1000, 863, 611, -1000, -1000, 99664, 99664, 52569, 52569, -1000,
	9689, 9689, 9689, -1000, 265, -1000, -1000, 2421, 3605, -1000,
	-102, 139663, 139402, 673, 56762, 74467, -231, -1000, -1000, 126536,
	146294, -112, -1000, 146294, 489, 488, 413, -1000, -1000, -1000,
	714, 700, -1000, -1000, -1000, -1000, 138786, 3868, -1000, 138786,
	-146, 138786, 138786, 1869, -1000, 109589, 126536, -1000, -1000, 1701,
	2329, -1000, -1000, 126536, 2568, -1000, -1000, -1000, 1024, 52569,
	8171, 56762, 482, 52569, -1000, 481, 480, 3704, 3455, -1000,
	2820, 3072, 2122, 62710, -1000, 3537, -1000, 139372, -1000, 1174,
	2182, -1000, -1000, -1000, -1000, 146294, 56762, 3573, 62710, -1000,
	-1000, 474, 473, 146294, 470, 818, 3040, -1000, -1000, -1000,
	-1000, -151, -1000, 146294, 76, 146294, 466, 3673, -1000, -1000,
	-1000, -1000, 2446, 99664, 813, -1000, -1000, -1000, 1297, -1000,
	-1000, -1000, -1000, 3866, 3865, 3034, 88561, -1000, -233, -1000,
	-1000, -1000, 2185, 76, 992, -1000, -1000, 2473, 463, -1000,
	1001, 2744, 2744, -234, 62710, 62710, -236, 2462, 2839, -1000,
	264, 3698, 986, -1000, 3778, -1000, 3453, 3453, 52569, 3697,
	3468, -1000, 76, -1000, 3821, 62710, -1000, 99664, 62710, 2467,
	2271, 2704, 82719, -1000, 2718, -1000, -1000, -239, 126536, 2051,
	-1000, -1000, 82136, -1000, -1000, -1000, 2622, -1000, 126536, -1000,
	126536, -1000, -1000, -241, -242, -1000, 2400, 52569, 35102, -1000,
	-1000, 673, -244, -1000, -117, -1000, 3696, 54366, 3864, 3860,
	3859, -1000, -1000, -276, -1000, -146, -146, -146, 126536, -1000,
	2101, -1000, 2564, -1000, -1000, 3235, -1000, 2982, 461, 19082,
	8171, 2682, 126536, 18821, 2136, 2136, -1000, 3695, 3053, -1000,
	-1000, 2320, 459, -1000, -1000, -1000, -1000, 939, 126536, 1001,
	2981, 99664, 8171, 1176, -249, 2326, 2326, 52569, 34503, 2358,
	-1000, 52569, -1000, -1000, 3573, 65671, 138786, -1000, -1000, 138786,
	2463, -1000, 3017, 3779, -1000, 2462, 126536, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174,
	-250, -258, -1000, -1000, 3559, -1000, 3467, 2825, 76, -1000,
	-1000, -1000, -259, 146294, 76, 3858, 1013, 241, -260, 1175,
	-268, 99664, 2174, -1000, 796, -1000, 2722, 1066, 3423, -1000,
	-270, -1000, -271, -273, -1000, -1000, 240, 53767, 53767, 53767,
	-122, -141, -1000, 126536, 458, -1000, -1000, -1000, -1000, -1000,
	120, -1000, -1000, 3200, 916, -1000, 850, 2060, 237, 1185,
	236, 122, -1000, -1000, -1000, 2942, -1000, 126536, -1000, -1000,
	-1000, 916, 457, -1000, 52569, 1174, -279, -1000, 1153, -280,
	-1000, 1150, -281, -1000, 3033, -1000, -282, 2446, -1000, -276,
	250, 2036, 1010, 3653, -1000, -1000, -1000, 2696, -290, -1000,
	-1000, 2122, 1174, 2320, 2506, -1000, 2334, 1009, -1000, -1000,
	-1000, -1000, -1000, 1174, 456, 2122, 452, 1662, 796, -1000,
	-1000, 1412, 3514, 3422, 1493, 1005, -1000, -1000, -1000, 3395,
	-1000, 57960, 2452, 2021, 142783, 3395, 3395, -1000, -1000, 138786,
	126536, 1001, 3622, -1000, 908, 906, 1629, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1066, -295, -1000, 2682, 146294,
	1001, -1000, 2326, 2852, -1000, 2326, 3027, -1000, 2331, -1000,
	-1000, -1000, -1000, 3024, -1000, 1968, 3760, -1000, -1000, 1001,
	126536, 2320, 2122, 1001, 2003, 1997, 3855, 992, 2462, 2122,
	62710, 2320, 62710, 2296, -1000, 126536, -1000, 2271, 1434, -1000,
	1784, -1000, -1000, 2028, 3729, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -146, -1000, -1000, 811, -1000, 3360, -1000, 1204,
	2200, 2200, -1000, -1000, 850, -1000, -1000, 450, -1000, 448,
	-1000, 138786, 2426, -1000, -1000, -1000, -1000, 1001, 2320, 1066,
	-1000, 3850, -1000, 2462, -1000, 2320, -296, 1001, -297, 2380,
	-1000, -1000, -151, 2174, -1000, 1770, 71546, 2015, -1000, -1000,
	2407, 53168, 52569, -1000, 3753, -1000, -1000, 2786, -1000, 2942,
	52569, 52569, 250, 69795, 1066, 1001, -1000, -1000, 2696, 1001,
	1174, 1066, 2122, -1000, 796, 1662, 71546, -278, -1000, -1000,
	-1000, 146294, -1000, -1000, -1000, -1000, -298, -313, -1000, -227,
	109006, -1000, 1066, -1000, 1066, 2122, -1000, 2320, 138786, 2296,
	-278, -1000, 2320, 1290, -320, -1000, -1000, 2320, 1001, -1000,
	-1000, -1000, -1000, -1000, 357, -1000, 1001, 1066, 52569, 1066,
	-1000, -321, -1000, 2320, -1000,
}

var sqlPgo = [...]int{
	0, 4712, 4711, 4708, 4707, 4706, 4705, 4703, 4702, 4701,
	4700, 4699, 4698, 4697, 4693, 165, 4691, 4687, 4685, 4684,
	4683, 4682, 4680, 4678, 4677, 4676, 4675, 4671, 4669, 4668,
	4666, 4665, 4664, 4663, 4662, 4661, 4660, 4656, 4655, 4654,
	4653, 4652, 4651, 4650, 4649, 4647, 4643, 4641, 4638, 4636,
	4635, 4631, 4625, 4624, 4623, 4621, 4619, 4617, 4616, 4615,
	4614, 4613, 4611, 4608, 4607, 4603, 4601, 4596, 4595, 4592,
	4588, 4586, 54, 4584, 4583, 4582, 4580, 4578, 4577, 4576,
	4573, 4572, 4571, 4569, 4567, 4565, 4562, 4561, 4558, 4557,
	4555, 4554, 4553, 69, 4551, 289, 4548, 4547, 4546, 4544,
	4543, 4542, 4538, 4537, 4536, 4535, 4532, 4530, 288, 4524,
	139, 170, 4523, 4520, 4035, 4519, 4518, 287, 4517, 4516,
	4515, 4513, 4512, 303, 4510, 4509, 4508, 4507, 4506, 272,
	4504, 4502, 4500, 4492, 4491, 4490, 65, 137, 4489, 4488,
	1379, 4486, 4485, 4482, 4480, 4476, 4474, 4471, 270, 274,
	4470, 4468, 4467, 265, 184, 4466, 285, 4465, 4464, 4462,
	4461, 4460, 4459, 4458, 4457, 4455, 4454, 4453, 4452, 4450,
	4449, 4447, 4446, 4444, 4442, 4440, 4436, 4435, 4434, 4433,
	4432, 4431, 4430, 4429, 4428, 4427, 4425, 4424, 4423, 4422,
	4421, 4414, 4413, 4410, 4408, 4406, 4403, 4402, 4400, 266,
	224, 158, 4398, 4397, 284, 282, 4396, 4395, 4394, 4388,
	4385, 3667, 4381, 4364, 4362, 4360, 4359, 4358, 4357, 4356,
	4352, 147, 3, 37, 4346, 4345, 93, 95, 92, 77,
	101, 105, 4344, 120, 4342, 134, 118, 4341, 122, 109,
	26, 6, 174, 257, 12982, 247, 4339, 4338, 4334, 253,
	206, 4331, 250, 4330, 4328, 4327, 4312, 4311, 4309, 72,
	47, 218, 4307, 4305, 146, 186, 195, 196, 189, 190,
	78, 57, 107, 84, 58, 43, 16, 106, 228, 21,
	8, 276, 4304, 273, 7, 150, 10, 29, 4303, 4302,
	4301, 4300, 4158, 112, 4299, 280, 251, 185, 4297, 4294,
	4293, 750, 4292, 4291, 49, 227, 125, 178, 110, 114,
	135, 4289, 166, 181, 30, 4288, 255, 59, 4287, 4286,
	102, 97, 9946, 11443, 4284, 4283, 151, 70, 96, 4407,
	163, 159, 211, 94, 176, 175, 55, 217, 216, 192,
	294, 4280, 264, 4276, 3692, 88, 197, 168, 6500, 4274,
	4272, 4270, 91, 4269, 111, 4267, 4265, 67, 20, 1,
	2, 152, 36, 32, 13, 4264, 33, 136, 48, 25,
	4263, 31, 4261, 4260, 4258, 4257, 46, 4256, 61, 179,
	4255, 4250, 296, 4241, 117, 51, 60, 4239, 167, 226,
	4237, 232, 141, 4235, 4233, 268, 198, 4232, 81, 237,
	4227, 4226, 4225, 4224, 4222, 4220, 143, 12, 138, 4217,
	4204, 160, 4198, 56, 252, 210, 4197, 63, 4196, 4188,
	191, 50, 154, 292, 208, 238, 126, 235, 213, 245,
	4187, 4184, 4183, 261, 4179, 4178, 231, 177, 4176, 4175,
	259, 302, 99, 44, 86, 249, 87, 204, 180, 4173,
	212, 4168, 4167, 299, 200, 230, 40, 15, 11, 113,
	116, 4166, 9, 246, 171, 242, 124, 4165, 7562, 2577,
	2889, 240, 4164, 156, 130, 83, 128, 164, 279, 100,
	4163, 4162, 3321, 4161, 4160, 4159, 4157, 201, 4154, 4153,
	4151, 162, 169, 223, 4150, 123, 76, 52, 22, 132,
	262, 290, 129, 234, 194, 269, 4149, 4148, 4146, 199,
	4144, 79, 241, 172, 214, 260, 66, 4142, 121, 4141,
	161, 1504, 71, 173, 4140, 233, 4138, 4137, 4136, 4133,
	4131, 4130, 4128, 914, 244, 4127, 4126, 4124, 53, 203,
	4122, 278, 157, 209, 187, 89, 4121, 104, 2458, 4120,
	535, 222, 64, 4, 4119, 75, 4118, 3563, 85, 4117,
	0, 15090, 10634, 13279, 14302, 4116, 3285, 4115, 4114, 4109,
	229, 82, 4108, 4106, 4105, 127, 4103, 90, 4102, 4101,
	73, 4100, 24, 18, 19, 27, 28, 682, 300, 4099,
	4098, 153, 144, 148, 4096, 291, 236, 4093, 4092, 4091,
	4090, 103, 4089, 39, 4088, 41, 4087, 4086, 42, 14,
	45, 4085, 4084, 155, 4082, 133, 220, 182, 4081, 183,
	4080, 74, 142, 4079, 4078, 4077, 68, 62, 275, 219,
	221, 98, 4071, 295, 4070, 207, 4063, 4060, 23, 4059,
	4058, 256, 119, 115, 35, 258, 145, 38, 193, 225,
	4057, 4056, 188, 4055, 4053, 4052, 293, 4051, 3666, 277,
	4050, 34, 4048, 4046, 4045, 5, 4043, 4042, 215, 3402,
	4041, 4038, 17, 4037, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 56, 56, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	40, 42, 41, 35, 35, 36, 36, 37, 38, 38,
	43, 44, 12, 12, 12, 8, 8, 8, 8, 8,
	8, 8, 8, 21, 21, 45, 45, 22, 22, 47,
	47, 23, 23, 48, 48, 628, 628, 628, 629, 629,
	630, 630, 630, 26, 50, 19, 20, 20, 20, 20,
	631, 631, 631, 631, 39, 27, 51, 32, 32, 32,
	32, 32, 224, 224, 224, 224, 25, 25, 46, 46,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 624, 624, 269, 269, 268, 256, 256, 257,
	257, 258, 258, 632, 632, 270, 270, 270, 271, 271,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	522, 522, 522, 553, 553, 553, 553, 555, 555, 651,
	651, 652, 652, 652, 652, 652, 139, 139, 419, 419,
	419, 60, 60, 60, 60, 60, 619, 619, 226, 226,
	226, 228, 228, 227, 227, 227, 227, 227, 84, 84,
	638, 638, 637, 636, 636, 636, 639, 639, 639, 225,
	225, 225, 135, 135, 135, 135, 135, 135, 135, 135,
	136, 136, 137, 137, 229, 229, 229, 231, 231, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 235, 18, 18, 18, 118, 118, 118, 118,
	118, 118, 118, 113, 113, 557, 557, 558, 558, 220,
	220, 221, 221, 221, 221, 222, 222, 223, 223, 223,
	75, 75, 232, 232, 234, 234, 233, 233, 233, 233,
	233, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	63, 63, 63, 63, 63, 64, 64, 64, 64, 64,
	64, 65, 65, 65, 65, 65, 65, 66, 66, 73,
	73, 73, 73, 73, 73, 73, 73, 201, 201, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 81, 81, 81, 81, 81, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 654, 654, 655, 655,
	656, 656, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 90, 90,
	380, 380, 343, 343, 91, 91, 91, 92, 92, 93,
	93, 77, 77, 616, 616, 617, 617, 617, 617, 513,
	513, 78, 625, 625, 625, 627, 627, 626, 626, 95,
	95, 418, 418, 96, 96, 96, 96, 96, 96, 97,
	97, 97, 97, 97, 97, 97, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	105, 105, 105, 105, 105, 106, 106, 106, 103, 103,
	103, 100, 100, 100, 99, 99, 99, 104, 104, 104,
	615, 332, 332, 102, 102, 102, 101, 101, 101, 396,
	396, 107, 107, 107, 107, 344, 108, 108, 108, 108,
	108, 108, 108, 108, 111, 111, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 515,
	515, 4, 4, 262, 262, 261, 261, 261, 261, 5,
	5, 5, 265, 265, 264, 263, 109, 109, 109, 480,
	480, 114, 114, 114, 434, 434, 115, 115, 115, 115,
	115, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 621, 621, 389, 389, 295, 295, 295, 295,
	127, 127, 127, 127, 128, 128, 128, 128, 129, 129,
	206, 206, 145, 145, 145, 145, 144, 144, 144, 144,
	144, 144, 144, 144, 67, 67, 67, 68, 68, 69,
	69, 70, 70, 71, 71, 72, 72, 72, 72, 72,
	148, 148, 31, 31, 31, 31, 149, 149, 648, 648,
	151, 147, 147, 147, 147, 147, 146, 146, 150, 150,
	150, 150, 152, 154, 154, 154, 154, 154, 153, 153,
	153, 153, 153, 155, 155, 547, 547, 404, 404, 545,
	545, 567, 567, 546, 546, 350, 350, 350, 350, 350,
	351, 351, 351, 556, 556, 556, 556, 556, 556, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 207, 207, 207, 208, 208,
	213, 213, 214, 214, 214, 215, 215, 215, 212, 212,
	212, 209, 209, 210, 210, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 218, 218, 216, 216, 217,
	217, 659, 659, 658, 658, 219, 219, 219, 219, 219,
	182, 182, 182, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 405, 405, 185, 185, 185, 169,
	169, 157, 157, 157, 157, 157, 157, 157, 162, 162,
	162, 162, 162, 162, 162, 162, 163, 163, 163, 158,
	158, 171, 171, 171, 171, 171, 164, 164, 165, 165,
	165, 166, 166, 166, 166, 193, 193, 168, 168, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 159, 159,
	159, 159, 173, 173, 173, 173, 441, 441, 441, 199,
	199, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 196, 196, 196,
	196, 196, 196, 640, 640, 641, 641, 641, 189, 189,
	189, 189, 189, 189, 494, 494, 183, 183, 183, 183,
	188, 188, 188, 188, 191, 191, 191, 191, 424, 424,
	180, 180, 180, 181, 181, 181, 186, 186, 198, 187,
	381, 381, 184, 184, 190, 190, 190, 190, 192, 192,
	192, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	161, 161, 161, 161, 194, 194, 179, 179, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 660,
	660, 175, 175, 175, 174, 174, 174, 174, 177, 177,
	178, 178, 178, 178, 178, 178, 176, 167, 197, 618,
	618, 613, 613, 613, 613, 613, 613, 613, 613, 613,
	614, 614, 614, 614, 620, 620, 119, 119, 119, 119,
	119, 119, 119, 130, 130, 130, 130, 130, 130, 130,
	133, 133, 120, 120, 120, 120, 120, 120, 120, 123,
	123, 121, 121, 121, 121, 122, 122, 85, 85, 85,
	85, 85, 17, 17, 17, 86, 86, 286, 286, 240,
	240, 240, 368, 368, 241, 241, 358, 358, 358, 358,
	236, 236, 237, 237, 238, 239, 239, 87, 87, 661,
	661, 661, 633, 633, 633, 634, 634, 634, 634, 634,
	634, 352, 352, 353, 353, 460, 460, 460, 460, 460,
	356, 356, 356, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 366, 367, 367, 359, 359, 365, 364, 364,
	363, 363, 362, 362, 360, 361, 361, 361, 370, 370,
	369, 372, 372, 371, 459, 576, 576, 578, 578, 578,
	578, 578, 578, 578, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 442, 442, 662, 662, 663, 664, 574, 574, 574,
	575, 570, 570, 571, 571, 571, 571, 571, 354, 354,
	355, 355, 355, 355, 572, 573, 387, 387, 498, 577,
	577, 579, 579, 581, 665, 665, 665, 665, 665, 665,
	666, 666, 666, 458, 458, 457, 457, 456, 456, 378,
	378, 582, 582, 582, 582, 583, 583, 583, 583, 583,
	586, 585, 584, 584, 584, 584, 584, 89, 89, 89,
	421, 421, 420, 420, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 203,
	203, 298, 298, 298, 83, 83, 83, 14, 14, 14,
	14, 14, 14, 14, 313, 313, 15, 15, 15, 635,
	635, 635, 88, 88, 88, 88, 88, 88, 376, 376,
	376, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 623, 623, 622,
	622, 299, 299, 668, 668, 94, 94, 94, 94, 94,
	94, 94, 94, 516, 516, 517, 517, 82, 82, 82,
	82, 82, 443, 443, 440, 440, 439, 439, 386, 386,
	496, 496, 496, 497, 303, 303, 304, 304, 259, 259,
	259, 34, 33, 24, 24, 28, 28, 29, 29, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 30, 30,
	53, 53, 53, 53, 54, 54, 54, 54, 57, 57,
	58, 58, 52, 52, 52, 52, 55, 55, 49, 49,
	59, 59, 59, 59, 59, 642, 644, 644, 643, 643,
	647, 647, 647, 647, 647, 647, 645, 645, 646, 646,
	649, 649, 650, 650, 126, 126, 131, 131, 131, 131,
	131, 132, 132, 132, 132, 134, 134, 134, 134, 143,
	143, 202, 202, 202, 202, 202, 202, 202, 61, 61,
	61, 61, 74, 74, 74, 74, 141, 670, 670, 670,
	142, 142, 142, 669, 669, 296, 296, 453, 453, 454,
	454, 671, 671, 455, 455, 455, 455, 455, 289, 288,
	290, 290, 291, 291, 80, 80, 80, 279, 279, 278,
	280, 280, 281, 281, 276, 276, 559, 559, 283, 283,
	283, 284, 284, 272, 272, 273, 273, 274, 274, 275,
	275, 287, 287, 554, 554, 672, 672, 117, 117, 117,
	205, 205, 342, 342, 342, 450, 450, 450, 379, 379,
	310, 310, 452, 452, 452, 452, 452, 417, 417, 417,
	204, 204, 394, 394, 407, 407, 408, 408, 510, 510,
	409, 124, 124, 125, 125, 140, 140, 244, 244, 242,
	242, 242, 242, 242, 242, 242, 242, 249, 249, 250,
	250, 251, 251, 252, 253, 253, 253, 253, 397, 397,
	254, 254, 254, 243, 243, 243, 245, 245, 245, 245,
	245, 245, 245, 248, 248, 248, 248, 255, 255, 255,
	247, 247, 593, 593, 593, 595, 595, 597, 597, 596,
	596, 592, 592, 594, 594, 667, 667, 423, 423, 423,
	375, 377, 373, 373, 374, 374, 384, 384, 382, 383,
	383, 385, 385, 495, 495, 495, 260, 260, 260, 414,
	414, 414, 414, 415, 415, 446, 446, 444, 444, 444,
	444, 445, 445, 447, 447, 447, 448, 448, 449, 449,
	411, 411, 412, 412, 413, 413, 413, 413, 476, 476,
	246, 246, 246, 391, 391, 391, 392, 392, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 467,
	467, 465, 465, 465, 465, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 500, 501, 501, 393, 393, 502,
	451, 451, 611, 611, 611, 612, 612, 493, 493, 503,
	503, 503, 503, 503, 503, 491, 491, 492, 492, 511,
	512, 512, 427, 427, 427, 427, 425, 425, 428, 428,
	428, 428, 428, 426, 426, 504, 504, 504, 504, 416,
	416, 505, 505, 505, 505, 506, 507, 507, 508, 508,
	461, 462, 462, 518, 518, 518, 518, 520, 390, 390,
	390, 390, 390, 569, 568, 568, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 535, 535, 535,
	535, 535, 535, 535, 521, 521, 521, 521, 521, 525,
	525, 525, 524, 524, 524, 524, 524, 524, 524, 524,
	524, 524, 524, 526, 526, 531, 531, 532, 532, 532,
	527, 528, 533, 533, 533, 533, 673, 673, 537, 537,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 523,
	523, 523, 530, 530, 530, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 435, 435,
	437, 437, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 470, 470, 470, 470, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 587, 587, 587, 587, 587, 587, 587, 587,
	472, 472, 590, 590, 591, 591, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 588,
	588, 588, 588, 588, 588, 588, 588, 588, 588, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 598, 598, 599,
	599, 601, 601, 602, 602, 603, 604, 604, 604, 605,
	606, 606, 600, 600, 607, 607, 607, 607, 608, 608,
	609, 609, 609, 609, 609, 610, 610, 610, 610, 610,
	482, 482, 483, 483, 489, 489, 489, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 349, 349, 348, 300, 300, 300, 300, 300,
	300, 402, 402, 400, 400, 400, 403, 403, 401, 401,
	399, 399, 398, 398, 479, 479, 477, 477, 481, 481,
	429, 429, 536, 536, 536, 536, 536, 536, 536, 536,
	430, 430, 430, 438, 431, 431, 432, 432, 432, 432,
	432, 473, 474, 433, 433, 433, 475, 475, 484, 488,
	488, 487, 486, 486, 485, 485, 463, 463, 464, 464,
	410, 410, 674, 674, 406, 406, 509, 509, 509, 509,
	346, 346, 395, 395, 345, 345, 337, 337, 338, 338,
	338, 338, 388, 388, 490, 490, 538, 538, 539, 539,
	540, 540, 541, 541, 542, 543, 544, 478, 478, 321,
	320, 307, 308, 319, 318, 317, 306, 309, 314, 315,
	316, 311, 312, 328, 327, 326, 277, 282, 333, 334,
	334, 336, 336, 335, 335, 323, 324, 325, 514, 305,
	339, 339, 340, 340, 340, 341, 341, 341, 341, 301,
	301, 302, 302, 329, 329, 330, 331, 331, 322, 322,
	322, 292, 292, 292, 293, 293, 294, 294, 552, 552,
	549, 549, 549, 550, 550, 550, 551, 551, 551, 551,
	548, 548, 548, 548, 548, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 561, 561, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 563, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 566, 566,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	6, 4, 4, 6, 9, 6, 8, 4, 4, 5,
	9, 7, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 6, 6, 9, 6,
	9, 6, 5, 6, 5, 1, 1, 1, 1, 1,
	1, 0, 1, 6, 6, 4, 8, 7, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	4, 4, 2, 1, 1, 3, 1, 3, 2, 4,
	3, 2, 3, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 6, 8, 6, 6, 6, 9, 4, 3,
	2, 2, 0, 1, 1, 1, 1, 1, 3, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 3, 12, 3,
	1, 1, 2, 1, 4, 0, 3, 3, 0, 4,
	6, 0, 5, 7, 6, 8, 7, 9, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 4, 3, 6,
	6, 6, 6, 6, 8, 4, 4, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 6, 3, 8, 5, 3, 4, 3, 3,
	4, 3, 4, 4, 4, 3, 5, 7, 3, 3,
	4, 3, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 4, 3, 3, 3, 3, 3, 6, 4,
	4, 4, 3, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 3, 2, 1, 4, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 4, 3, 1, 2, 3, 2, 2, 2, 4,
	6, 3, 1, 2, 2, 7, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 4, 4, 3, 4, 1, 1, 1, 1,
	5, 3, 3, 2, 2, 6, 3, 3, 3, 3,
	4, 4, 3, 1, 3, 3, 2, 2, 1, 3,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 1, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 3, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 16, 19, 15,
	18, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 14, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 631, -110, -107, -75, -73, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -60, -62, -76,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-67, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 211, 402, 450, 462, 418, 147,
	441, 423, -150, -151, 481, -61, -74, -142, -141, 76,
	134, 176, 307, 433, -6, -14, -31, -18, 30, 48,
	-63, -64, -65, -66, 65, -83, -79, -90, -84, -77,
	-78, -81, -653, 106, -594, -98, -101, -134, -657, 168,
	230, -120, -121, -122, 384, -128, -129, 443, -131, -132,
	-133, 446, 169, -69, -68, 162, -242, -244, -147, -146,
	-148, -206, -157, -158, -159, -160, -161, -163, -164, -166,
	-193, -167, -168, -169, -170, -171, -172, -176, -196, -173,
	-174, -175, -178, -177, -179, -184, -180, -181, -182, -183,
	-185, -186, -188, -189, -190, -191, -192, -194, -195, 486,
	-187, -197, -165, -198, 551, 52, 502, 85, 152, 454,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-59, -4, -5, -80, -82, -85, -86, -87, -94, -88,
	-89, -593, -99, -100, -103, -105, -106, -102, -104, 442,
	603, -245, -243, 628, 567, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -45, -50, -47, -48,
	-46, -49, -51, -52, -53, -54, -55, -56, -57, -58,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -19, -20, -32, 590, 599, -248, -246, -247,
	-255, 473, 575, 524, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	-344, 2, -323, -329, -330, -331, -322, -292, -563, -566,
	4, -560, -564, 175, 240, 345, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	197, 198, 199, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 212, 216, 218, 219, 220, 221, 222, 223,
	229, 230, 232, 233, 234, 235, 236, 241, 242, 243,
	247, 253, 254, 258, 259, 260, 262, 266, 267, 268,
	269, 270, 271, 273, 275, 274, 277, 280, 281, 284,
	285, 286, 287, 288, 289, 293, 294, 290, 295, 296,
	298, 299, 302, 300, 303, 304, 301, 305, 308, 309,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	306, 307, 322, 320, 324, 325, 326, 327, 328, 343,
	338, 339, 340, 332, 333, 329, 334, 330, 331, 335,
	336, 342, 337, 347, 348, 349, 350, 353, 227, 246,
	355, 356, 359, 361, 378, 364, 365, 366, 369, 370,
	373, 376, 377, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 389, 390, 392, 393, 394, 396, 397, 398,
	400, 402, 403, 405, 406, 407, 409, 410, 411, 412,
	413, 414, 415, 417, 418, 420, 419, 421, 423, 425,
	426, 427, 433, 434, 441, 435, 437, 438, 439, 440,
	442, 443, 444, 445, 446, 448, 449, 450, 452, 453,
	454, 455, 456, 458, 460, 461, 465, 466, 467, 483,
	484, 505, 462, 463, 464, 468, 469, 470, 471, 472,
	476, 474, 475, 477, 478, 479, 481, 482, 485, 486,
	488, 489, 490, 491, 492, 493, 494, 497, 499, 500,
	501, 502, 503, 523, 504, 506, 510, 511, 512, 513,
	507, 508, 522, 515, 516, 517, 519, 520, 525, 526,
	527, 528, 529, 530, 532, 533, 535, 543, 544, 545,
	546, 548, 551, 552, 553, 554, 541, 556, 557, 560,
	561, 565, 562, 566, 563, 564, 567, 569, 572, 573,
	574, 580, 579, 581, 582, 583, 585, 586, 591, 592,
	594, 595, 596, 37, 53, 54, 57, 59, 61, 72,
	73, 74, 78, 129, 130, 159, 171, 172, 184, 200,
	201, 213, 215, 224, 225, 226, 248, 249, 251, 256,
	278, 352, 354, 371, 375, 391, 395, 399, 401, 416,
	457, 495, 509, 514, 536, 537, 538, 539, 547, 549,
	575, 576, 577, 584, 593, -344, 2, -323, 362, -316,
	2, -292, -292, 402, 29, 2, 29, 390, 475, 527,
	529, 2, -621, -389, 2, 29, -295, -292, 106, 211,
	473, -316, 2, -621, 211, -389, 26, 2, -292, 2,
	376, 23, 28, 69, 80, 102, 145, 170, 193, 197,
	-656, 378, 410, 460, 477, 522, 533, 548, 2, 579,
	299, 474, 524, 240, 124, 553, 468, -635, 465, 466,
	376, 408, 452, 214, 568, -296, 2, 462, -292, 299,
	2, 631, 98, 77, 457, 478, -153, 2, 289, 544,
	-154, -155, -152, 536, -547, 468, 452, 322, -292, 631,
	631, 631, 29, -305, 2, -292, -305, 2, -211, 2,
	-305, -658, -218, -217, -216, 22, 434, 183, 271, 195,
	231, 327, 405, 194, 50, -211, 2, 524, 240, 468,
	124, 520, 631, 631, 2, 524, 381, 579, 474, 124,
	413, 240, 553, 197, 145, 28, 71, 48, 530, 607,
	468, -635, 604, 605, 299, 131, -619, 2, -613, 4,
	-564, -560, -338, -337, 524, 530, 124, -331, -322, 620,
	-330, 631, 631, 631, 631, 2, 259, 260, 412, 411,
	478, 479, 29, 631, 631, 631, 631, 465, 2, 170,
	23, 28, 69, 97, 102, 131, 193, 197, 367, -654,
	378, 410, 477, 522, 526, 533, 548, -634, 504, 71,
	440, 468, -633, -635, 299, 553, 145, -439, 124, 289,
	209, 561, 529, 527, 559, 137, 247, 564, 563, 631,
	631, -111, 2, 628, 33, 32, -110, -114, 147, 481,
	-235, 524, 252, 2, -292, 631, 631, 631, 2, 259,
	260, 465, 466, 29, 631, 631, 195, -613, 520, 2,
	631, 631, 631, 2, 29, 259, 260, 465, 466, 252,
	2, 71, 470, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	2, -200, 478, 504, 220, 49, 48, 77, 29, 409,
	82, 382, 125, 131, 154, 554, 212, 240, 241, 267,
	97, 98, -441, 46, 260, 71, 259, 466, -640, 465,
	-494, 525, 469, 475, 519, 89, 271, 462, 544, 546,
	106, 569, 453, 596, 413, 414, 517, 427, 290, 163,
	196, 4, 124, 322, 452, 480, 275, 274, 536, 289,
	461, 385, 87, 631, -667, 2, 524, -669, 2, 544,
	544, 2, -669, 2, -669, 2, -669, 2, -670, 544,
	593, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, -243, -245, -244, 631, 631, 631, 631, 631, 631,
	631, -200, 478, 2, 77, 29, 29, -382, -384, 558,
	250, 156, 368, -242, -244, 2, -593, -545, 2, -468,
	-567, -470, 618, 619, 611, 521, 70, -348, 344, 597,
	-482, 131, 559, 362, -566, -471, -484, 159, 378, 457,
	-403, 8, 9, 5, 6, 7, -301, -472, -478, 550,
	174, 351, -341, 632, 10, 628, -590, -244, -483, 38,
	215, 68, -549, -340, -302, -521, 251, -339, -322, -587,
	-588, 4, -560, -561, -550, -524, -532, -528, -529, -535,
	-292, -563, 80, 115, 116, 114, 119, 118, 292, 291,
	120, 117, 480, 568, 69, 37, 224, 225, 256, 352,
	226, 78, -589, 146, -562, 248, 249, 495, 54, 416,
	184, 130, 129, 354, 59, 57, 576, -533, 126, 536,
	537, 538, 539, 200, 201, 61, 171, 172, 375, 399,
	514, 547, 549, 213, 278, 45, 110, 196, 245, 228,
	255, 257, 261, 279, 282, 323, 341, 346, 372, 374,
	451, 487, -673, 577, 509, 72, 73, 189, -595, 419,
	-596, -316, -595, 631, 631, 633, 631, -373, -375, -377,
	2, 29, 143, 628, 2, -499, 2, -500, -504, -244,
	272, -503, 628, -501, 626, -323, 363, -591, 458, -587,
	-588, -301, -322, -340, 4, -560, -562, 630, -378, 628,
	124, 468, 524, 81, 240, 97, 170, 197, -434, 628,
	-292, 29, 362, 540, 633, -374, 407, -480, 628, 362,
	365, 195, 365, 63, 303, 2, 2, 2, 2, 2,
	224, -292, 524, 123, 2, 270, 2, 2, 2, 2,
	2, 2, 2, -396, 224, 2, -323, 579, -396, 224,
	2, -396, 224, 2, -440, 2, 91, -306, 224, 2,
	-292, -332, 224, 2, -327, -329, -336, 224, 2, -334,
	-292, -555, 224, 2, -553, 4, -560, 120, 480, -468,
	2, -140, 2, 63, -292, 579, 2, 483, 2, 628,
	-153, 2, 74, 544, 45, 478, -154, 2, -454, 2,
	-455, -288, -289, -290, -511, -291, 258, 406, 415, 600,
	135, 344, 596, -648, 195, 610, 540, -545, -545, -545,
	-404, 630, -213, 56, -305, -659, -658, -659, -543, 29,
	-538, 8, -539, 618, 619, -543, -543, -659, -659, 2,
	2, 2, 2, 2, 2, -504, 224, -323, 2, -320,
	-548, 4, -560, -564, -561, -565, -563, 29, 32, 33,
	34, 36, 38, 39, 40, 42, 60, 68, 69, 75,
	79, 81, 91, 97, 106, 114, 115, 117, 116, 118,
	119, 120, 131, 135, 139, 143, 144, 148, 152, 156,
	174, 176, 189, 193, 195, 211, 214, 217, 231, 244,
	250, 252, 272, 276, 283, 291, 292, 344, 351, 357,
	362, 363, 367, 368, 388, 404, 422, 447, 473, 480,
	498, 518, 524, 534, 540, 542, 550, 558, 559, 568,
	570, 578, 587, 588, 589, 590, -566, 80, 2, -504,
	224, 2, -326, 224, -504, -329, 2, -306, 2, -468,
	-628, 532, 166, 435, 2, -345, 224, -323, -325, -329,
	-327, 2, 2, 2, 2, -468, 2, -557, 2, -552,
	10, -551, 5, 4, -560, -564, -561, -471, 2, -482,
	29, -334, 2, -553, 224, 2, 29, 29, 579, 407,
	252, 540, 633, -395, -337, -338, -544, 4, 8, -388,
	-292, 630, -468, 2, -140, -123, 2, 189, -468, 224,
	2, -140, 224, 2, -468, 224, 2, -140, 224, 2,
	-292, 2, -636, 2, -557, 224, 224, -292, 2, 303,
	2, 2, 548, 2, 102, 524, 123, 2, 439, -655,
	460, 552, 2, 2, 2, 2, 2, 2, 2, 524,
	-311, 2, -292, 189, 507, -334, 224, -335, 2, 474,
	-668, 419, -553, 224, 2, 579, -327, 224, 2, -327,
	240, 254, -306, 224, 2, 529, 527, 529, 527, 195,
	2, 252, 2, 252, 2, -505, 2, -506, -500, -507,
	626, 363, -515, 2, -514, -551, 575, -111, 628, -111,
	628, 478, 628, -557, -323, -323, -468, 2, -140, -123,
	2, -468, 2, -140, 2, -292, 2, -137, -557, -136,
	628, 195, 569, -292, 2, -468, 2, -140, -123, 2,
	-468, 2, -140, 2, -235, 189, 2, 124, 524, -200,
	2, 189, 570, 2, 8, 2, 231, -557, 469, 414,
	181, 2, 483, 2, 484, 77, -441, 596, 77, 195,
	2, 195, 2, -424, 2, 590, 407, 195, 2, 2,
	-618, 2, 362, 195, 2, 195, 2, 195, 2, 195,
	2, 195, 2, -199, 479, 545, 523, 411, 260, 2,
	-140, 587, -123, 260, 259, -468, 587, 2, -641, 189,
	466, -468, 2, 543, 269, 164, 195, -424, 2, 195,
	2, 195, 2, 5, 2, 43, 412, 505, 2, 258,
	406, 505, 2, 503, 2, -323, 524, 579, 474, 124,
	29, 2, 465, 2, 2, 92, 93, 195, 2, 195,
	2, 210, 195, 2, 195, 524, -405, 630, 596, 2,
	-416, -504, -453, -454, -453, 540, -382, -384, -200, 483,
	2, -249, -414, -251, 189, -444, -445, -252, 283, 176,
	357, -253, -423, 29, 143, -423, -423, 63, 629, 629,
	11, 12, 79, 43, 618, 619, 620, 621, 187, 622,
	623, 616, 617, 615, 608, 609, 613, 264, 265, 99,
	612, 610, 90, 297, 459, 177, 178, 179, 180, 436,
	238, 35, 239, 14, 15, 16, -348, 34, 367, 282,
	597, 228, 487, 611, 17, 18, 19, 255, 257, 346,
	53, 231, -300, 378, -347, 521, 70, -468, -468, -468,
	-468, -468, -468, -468, -468, 374, 628, -410, -463, 626,
	-244, 628, 628, 628, 628, -544, -244, -468, -482, 629,
	-401, 628, -244, -482, -477, 628, 457, 626, 628, -485,
	-468, 5, 5, 5, 628, 630, -598, 591, 189, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 401, -526, 628, -525, 628,
	-525, -525, 580, -523, 628, 599, 592, 628, -523, 628,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 580, 530, 633, -595, -378, 628, -406, -509,
	-468, 620, -406, -406, 362, -398, -468, 110, -427, 261,
	323, 196, 279, 451, 245, -465, 632, -465, -493, 599,
	-244, -501, -322, -244, -503, 628, -499, -493, -112, -544,
	-95, -108, -117, -140, -156, -204, -205, 620, -323, 628,
	195, 628, 630, -548, 195, -388, -306, -333, -292, -323,
	-339, -340, -345, -317, -292, 2, 2, 142, -398, -613,
	553, 468, 29, 474, -555, -295, 39, -479, -518, -519,
	-569, 632, -568, -521, -531, -527, -530, 391, 395, -550,
	57, 576, -533, 251, 4, -560, -562, 248, 249, 495,
	54, 416, 184, 130, 129, 354, 59, 536, 537, 538,
	539, 200, 201, 61, 577, 509, 72, 73, -613, 553,
	468, 29, 474, 189, -555, 189, -555, 2, 2, 159,
	2, 2, 2, -292, -270, 633, 67, 444, 159, -396,
	224, -270, 159, -270, 159, -346, 224, -345, -270, 159,
	-270, 633, 159, -270, 633, 159, 630, 633, 159, -555,
	2, -440, -547, -398, 39, -454, 2, 131, 4, 5,
	-671, 633, 281, -351, 296, 343, 219, 363, 594, 355,
	135, -556, 5, 4, -478, -490, 131, 289, 251, -538,
	-540, 9, -541, 618, 619, -546, -545, 113, 630, -548,
	-214, 246, 41, -305, -305, -659, -659, 8, 8, -659,
	-659, -305, -305, -267, 437, 481, 377, -266, 25, 30,
	147, 242, 328, 573, 165, -363, 243, 442, -360, 381,
	159, 499, 562, -628, -631, 464, 532, 166, 435, 94,
	355, 481, 377, 437, 159, -420, -422, 39, 122, 328,
	376, 64, 234, 301, 302, 502, 584, 159, 481, 377,
	437, 377, -15, -281, 25, 147, -283, -278, 481, -631,
	103, 437, 603, 442, 387, 516, 404, -631, -628, 277,
	-630, 586, 342, -269, 499, 562, -628, -631, 464, 437,
	-268, -365, -360, 381, 159, 632, 25, 147, 437, 481,
	377, -651, -652, 30, -262, -261, 25, 147, 481, 565,
	-265, 231, -264, 25, -149, -129, -148, 442, 481, -149,
	2, 437, 377, -622, -313, -592, 231, 590, 159, -313,
	-313, -504, 224, -645, 189, 2, -638, -136, 273, 5,
	10, -557, -136, -395, 633, 633, -548, 620, 466, 465,
	159, 159, 159, 159, 260, 189, 344, 344, 590, 2,
	2, 2, 2, 2, 197, -633, -656, 2, 2, -323,
	224, -380, 362, -616, -617, 524, -323, 189, 344, 45,
	-326, 224, 2, -329, 579, -622, 344, -328, 224, -323,
	39, 628, 344, 2, -440, 2, 240, -592, 344, -505,
	-342, -323, -500, -342, 481, -316, 39, -465, -323, 629,
	633, -515, -515, -557, -223, 590, 195, 628, -235, 590,
	590, 260, -512, 633, -511, 231, -558, -557, -137, -557,
	440, 195, 260, -557, -616, -306, 2, -323, 2, 524,
	262, -557, -223, 231, -557, -557, -557, -547, 29, 484,
	2, -199, 479, 545, 93, 484, 2, -323, 524, 124,
	240, 83, -645, 189, 2, -292, -620, 189, -614, 452,
	468, 553, -613, -323, 124, -323, 124, -323, 124, -323,
	-323, 2, 2, 2, 2, 2, 88, 2, -140, -468,
	2, 88, 2, 48, 500, -641, 189, 2, 543, 2,
	543, 2, -292, -292, -292, 357, 504, 281, 590, -323,
	-323, -323, -324, -329, 469, 525, 554, 466, -468, 2,
	-660, 2, 195, 189, 2, 524, 240, 524, 240, 124,
	195, 77, 124, 29, 524, 463, 630, 4, -270, 633,
	-296, -249, -414, -547, -415, -414, -250, -249, -252, 189,
	415, 563, 328, 485, 266, -445, -444, 29, -468, -449,
	183, 327, -468, -447, -470, 618, 619, -539, -541, -397,
	355, -243, -243, -243, -385, -495, -468, 404, 240, -520,
	-518, -518, -321, -548, 536, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, -468, -468, -468, -468, -468, -468, -468, -468, -468,
	-468, 282, 228, 487, 53, 231, -468, 540, -468, -468,
	-468, -468, 320, 344, 351, 550, 174, 560, 143, 355,
	-674, 518, 42, -475, -244, -402, 628, -489, 36, 498,
	29, -482, 628, 2, -463, -468, -464, -349, -347, -292,
	618, 619, 620, 621, 622, 623, 608, 609, 610, 14,
	15, 16, 613, 617, 615, 616, 187, 99, 612, 297,
	459, 90, 177, 178, 179, 180, 264, 265, 17, 18,
	19, 35, 611, -399, -398, -398, 629, 578, 29, 143,
	620, 2, 629, 633, 39, 629, -468, -399, -481, -477,
	-398, -488, -487, 587, -435, -436, 595, 306, 127, 222,
	304, -437, 472, -542, 8, -548, 620, -599, 182, 214,
	628, 629, 2, 629, 2, 629, -468, 2, 629, -468,
	2, 629, -468, 2, 629, -468, 2, 629, 2, 629,
	2, -468, -468, -468, -468, -468, -468, -468, -398, 8,
	-542, -542, 536, 536, -542, -542, -542, -534, 391, 392,
	393, 394, 284, 285, 286, 287, 395, 396, 397, 398,
	312, 313, 314, 315, 308, 309, 310, 311, 316, 317,
	318, 319, 205, 206, 207, 208, 201, 202, 203, 204,
	-534, -429, 2, -536, -398, 4, 595, 306, 127, 222,
	304, 472, 5, -429, 2, -430, 2, -468, -398, -431,
	-469, -470, 618, 619, 611, -348, -432, 2, -468, -399,
	-468, 60, 276, 542, -433, -468, 195, -398, -398, 2,
	-398, 2, -471, 2, -596, 39, -398, -391, 633, 195,
	39, 4, -391, -391, 628, 629, 633, -428, 218, 300,
	295, 254, -428, -499, -427, 261, -425, 372, -425, -425,
	-493, -307, 626, 634, -548, -493, -492, -491, 39, -316,
	369, -493, -493, 630, 629, -492, 627, -611, 628, 631,
	631, 631, 631, 631, -323, 628, -398, -548, 630, 506,
	2, 629, 255, 255, 255, 255, 255, 362, 458, 629,
	540, -615, -332, -336, 525, 2, 590, -110, 364, 629,
	633, -390, 38, 626, 630, -542, 2, 2, -537, 580,
	628, 628, -436, 628, 195, -615, -336, 525, 2, -621,
	-389, -389, 540, -292, 2, -323, -396, -270, 159, -396,
	-396, -270, 633, 159, -306, -327, -332, -334, -336, -292,
	-553, -555, -270, -328, -648, 629, 544, -455, -350, 415,
	497, 438, 476, 520, 9, 9, 633, -548, -215, 467,
	328, -305, -305, -305, -305, 633, -649, 97, 540, 81,
	628, 468, -285, 290, 540, -459, 224, 81, -570, 97,
	-309, -571, -292, 75, 559, 404, 193, 157, -649, 97,
	404, -649, 97, 2, 242, 97, 481, 504, 628, 29,
	63, -504, 43, 43, 29, -629, -630, 277, 195, 596,
	524, 240, 468, 540, 540, -504, -422, -518, 122, 301,
	302, 63, -543, -543, 63, -543, -543, -543, 590, -326,
	-504, 468, 540, 540, 540, 425, 515, 425, 515, -278,
	-154, 540, 540, 29, -200, 445, 131, -672, 610, 425,
	277, -630, 540, 195, 633, 43, 43, 29, -629, 195,
	540, -345, -307, 574, 44, 574, 44, 574, 540, 44,
	468, 540, 633, 44, -261, -616, -616, -222, -221, -292,
	5, -388, -264, -557, -263, 326, 77, 540, 540, -15,
	481, -623, -297, 109, 334, 294, 335, 101, 331, 100,
	330, 107, 332, 108, 333, 581, 347, 582, 348, 66,
	329, 305, 336, 501, 337, 583, 349, -298, -299, 150,
	383, 572, 124, -553, -15, -15, 481, 377, 437, 159,
	-646, 231, 29, -635, 231, -512, 231, -512, -337, -292,
	630, -140, -468, -468, -140, -468, -140, 48, 159, 159,
	2, 2, -668, 270, 628, -354, 344, 195, -388, -513,
	633, 252, -323, 175, -613, 159, -553, -421, -420, 344,
	-328, 224, 2, 159, -378, 344, 153, 628, 413, 2,
	159, -308, 224, -293, -292, -440, -272, 528, 159, -418,
	570, -450, -140, 628, 131, 39, -450, -407, -408, -510,
	-409, -309, 628, -316, -465, -111, -514, 629, 629, 629,
	-222, 366, -235, -379, -310, -309, 123, 417, 417, -229,
	590, -136, -137, 629, 633, -512, 231, 507, -137, -557,
	-223, -223, -512, -512, -323, 189, -557, -223, -223, -223,
	2, 2, 2, 2, -424, -323, -306, -345, -323, 29,
	630, -555, -555, -336, -332, -424, -306, -424, -306, -424,
	-306, -424, -424, -140, -468, 504, 2, 478, 189, 189,
	630, -424, 8, -381, 447, 5, 2, 413, 124, 524,
	381, 240, -323, -345, -323, -345, -306, 124, -306, 125,
	-323, 4, -504, -415, -250, 363, 266, 485, -447, -448,
	-470, 457, 458, -448, 457, 458, 8, 9, 8, 9,
	-254, 489, 350, -396, 633, -259, 40, 139, 266, -323,
	596, 155, -468, -468, 540, -674, 518, -475, 155, -468,
	320, 351, 550, 174, 560, 143, 355, 195, 628, -469,
	-469, 629, -400, -468, -468, 627, 636, 629, 630, 629,
	-384, 633, -382, -468, -398, -398, 629, 630, -398, -388,
	627, 627, 633, 629, -486, -487, 148, -468, 540, 540,
	540, 540, 628, 629, 630, -604, 373, 628, 628, -468,
	629, 629, 629, 629, 39, 633, 633, 633, 629, 633,
	633, 633, 629, 629, 629, 633, 629, 596, 596, 629,
	629, 629, 629, 633, 629, 633, 629, 195, 629, 629,
	-438, 388, 629, 11, 12, 618, 619, 620, 621, 187,
	622, 623, 616, 617, 615, 608, 609, 610, 90, 297,
	459, 14, 15, 16, -348, 255, 231, -469, -469, -469,
	-469, 629, -473, -474, 195, 189, 39, -433, -433, -433,
	629, 195, -398, 629, 629, 628, -597, 299, 344, 629,
	-462, -461, 588, -509, -392, 2, -499, -318, -548, -462,
	-462, -398, -468, 261, 261, -426, 570, 362, -428, -499,
	-492, -544, -467, -466, 191, 40, 139, 338, 339, 340,
	227, 192, -492, -316, -378, -492, -492, -548, -493, -493,
	-491, 629, -612, -544, 629, -393, -502, -591, -384, 630,
	-548, -232, -592, -201, 5, 351, -201, -201, -201, -201,
	-323, -555, 540, 540, 231, 26, 389, -518, 626, 627,
	8, -548, 628, -542, -542, -542, -555, 195, 195, 231,
	362, 195, -553, 2, -270, -396, -270, -270, -345, -346,
	-270, -270, -270, -419, 590, -545, -454, 557, 86, 415,
	536, -545, 121, 467, -266, 437, 481, -309, -309, -323,
	-239, -238, -236, -292, 5, -333, 209, 426, -553, 344,
	-459, 224, -271, 344, 224, -317, -518, 628, -442, 592,
	266, 266, 570, -309, -317, 266, 224, -309, 224, -317,
	2, -317, -624, 415, 356, -468, -237, -236, 63, -361,
	288, 413, 345, -267, 437, 481, 377, -140, -140, -140,
	628, -648, 570, 142, -323, -345, -323, -333, -553, -328,
	481, 377, 437, 341, -339, -543, -543, -420, 481, 377,
	437, -333, -553, -326, -553, -277, 224, -292, 425, -277,
	224, 425, 468, -306, 425, 596, 47, -672, 540, 195,
	-468, -468, -268, -140, -140, -140, 628, -307, -269, 437,
	5, 224, -309, 5, -309, 224, 5, -292, -309, -333,
	-553, -652, 25, 147, -309, -223, 633, 610, 610, -265,
	610, -333, -553, -297, 383, -557, 351, 566, -306, -622,
	-313, 468, 540, 540, -504, -642, -643, 211, 450, 468,
	453, -555, -136, -226, 590, -136, -220, 235, 620, -619,
	-557, -292, 579, -292, -352, -355, -353, -309, -460, -459,
	-574, -575, -570, 282, 240, 559, 254, 175, 97, -240,
	-241, 592, 590, 159, -343, -323, 626, -223, -617, -557,
	175, -314, -292, -513, -334, -335, 159, -378, 344, -553,
	39, 159, 628, 2, 2, -327, 362, 344, -308, 224,
	-273, 149, -672, -306, -462, -392, -417, -452, 447, 362,
	-379, 575, -316, -417, -394, 633, 195, 610, 630, -379,
	-508, 620, -111, -111, -223, 628, 628, -557, 629, 633,
	630, 628, 610, 610, -231, 366, -230, 151, 268, 253,
	491, 492, 493, 494, 141, 490, 128, 325, 236, 530,
	-512, -557, -229, -137, 195, -512, 231, 195, -70, 590,
	524, -223, 632, 453, -292, -424, -424, -424, 478, 478,
	-292, 189, -388, -319, -548, -306, -323, -320, -345, 189,
	189, -306, 563, -448, 363, 293, -495, -260, 598, -323,
	632, -468, -468, 155, 155, -468, -469, -469, -468, 155,
	195, 628, -468, -479, 34, 34, 629, 633, -464, -468,
	-347, 629, 578, -384, -384, 629, 620, -548, 632, 629,
	-477, 152, -468, 534, 306, 222, 304, -437, 304, -437,
	-437, -542, 5, -548, 620, -605, -312, 628, -292, 588,
	-383, 368, 629, -520, -518, -468, -468, -468, -468, -468,
	-542, -523, -523, -538, -538, -468, -473, -468, -520, -518,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	143, 344, 355, -469, -474, -473, -468, -468, -518, 629,
	629, 629, -398, -110, 628, 299, -411, 214, -468, -512,
	633, -411, -411, 629, -499, -499, 628, -468, 261, 627,
	633, 635, 610, 610, -378, 630, -491, -492, 627, 629,
	633, 629, 633, -451, 39, 629, -548, -462, -234, -233,
	140, 56, 111, 138, 351, 255, -644, 590, -555, -555,
	468, 365, 5, 8, 626, 627, 630, -542, 629, 629,
	629, -555, -555, 468, -613, 553, 468, 29, -555, -270,
	-270, 123, 328, -468, -212, 590, 592, 540, 540, 629,
	633, 610, 63, 231, 159, 344, 572, 344, -571, 157,
	-576, -468, 628, 240, 628, 628, 2, -256, -257, -258,
	147, 481, 25, -650, 2, 570, 159, -270, 159, -270,
	594, 629, 633, -361, 628, 628, 540, 468, -285, 540,
	590, -398, -468, -224, 131, -547, -631, 632, -631, 632,
	468, 540, 540, 468, 540, 540, 344, -292, 159, -292,
	590, 173, 173, 596, -277, -468, -468, 189, 540, 590,
	-398, 540, -522, 51, 27, 344, -327, -270, 159, 540,
	540, 553, 481, -221, -557, -557, -136, -557, -557, 351,
	-15, -333, -553, -328, 481, 377, 437, -621, -621, 211,
	-336, -646, -512, -228, 366, -227, 151, 449, 141, 268,
	236, -512, -226, 195, 252, 590, -328, 2, 629, 629,
	633, 633, -577, -271, -323, -308, 240, 240, -315, -293,
	39, 359, 359, 628, -323, -91, 590, -511, -544, -314,
	-625, 590, 45, -326, 39, 159, -622, -140, -328, -516,
	-517, 5, 39, -323, 159, 362, 344, -274, 275, -672,
	-552, -592, -384, -417, -406, 345, 95, 629, -462, -408,
	-392, -468, 2, 629, -222, -557, -223, -235, -310, 2,
	-558, -557, -557, 633, 628, 610, 610, 610, 610, 610,
	610, 610, -229, -512, -136, -229, -137, -140, 366, -323,
	620, -424, 5, -367, -366, 381, 355, -367, 457, 457,
	363, 183, 271, -259, -307, -468, -468, 155, 34, 34,
	-468, -468, -479, 629, -468, -468, -398, 627, 5, -468,
	629, 629, 8, -468, 629, 630, -606, -292, -468, 629,
	63, 629, 629, 633, 633, 629, 629, 629, 629, 629,
	629, 629, -474, 195, 143, 355, 628, 629, 629, -110,
	-476, 217, 63, -499, -476, -476, -426, -388, -499, -466,
	-307, 626, -307, 626, -548, -544, -502, 628, 630, -233,
	610, -557, -557, -201, 211, -644, -644, 590, -336, 627,
	2, 626, -548, 629, -336, 195, -615, -336, 525, 123,
	189, 221, 221, -309, -309, -238, -545, 524, 457, -277,
	404, -459, 159, 159, -578, 97, -580, 79, 175, 106,
	344, 351, 559, 404, 75, 131, 362, 422, -662, -663,
	-664, 39, 601, 602, 629, -386, -496, -591, 628, -292,
	-386, -388, 344, 512, 131, 362, 344, 131, 362, 585,
	123, 2, 553, 82, -309, -317, -236, -388, -388, -323,
	-333, -553, 167, 629, 633, 610, 2, 620, 620, -333,
	-553, -328, -333, -553, -326, 159, 575, -277, 379, 173,
	540, -140, -468, 167, 629, -307, 5, 5, 159, -304,
	79, -309, 5, -309, -327, 123, 590, 468, 540, 540,
	362, 362, 365, -642, -643, -226, 633, 628, 610, 610,
	610, -226, -558, -136, 2, -378, -368, 242, -309, -575,
	-572, -573, 404, -460, -579, -581, 175, 404, -356, 628,
	-308, -293, 628, -140, 2, -239, 628, -354, 366, 627,
	-627, 366, -626, 121, 141, -553, -421, -140, -328, -376,
	590, -378, 629, 633, 153, -443, 570, -307, -323, 159,
	-275, 274, -672, -552, -272, -446, -444, 144, 628, 362,
	-140, -384, 610, 629, 629, 123, 629, -230, -231, -557,
	-136, -557, -557, -557, -136, -557, -229, -512, -512, -71,
	-72, 240, 97, 386, -320, 524, 240, 628, 628, -259,
	-468, -468, -468, 629, -384, -548, 620, -600, 381, 629,
	-495, -468, -468, -469, 195, 628, -479, 629, -601, 589,
	-468, -412, -413, -468, 455, 112, 215, -601, -601, 629,
	-544, -544, 2, -557, 365, 2, 540, 626, 2, 195,
	-555, 195, 195, 231, -140, 231, 39, 425, -459, -317,
	-317, -321, -314, 175, 224, 351, 585, -442, 266, 628,
	-469, 563, -323, 628, 2, 223, 223, 31, 63, -665,
	135, 244, 629, 633, -497, -303, -292, -468, -497, 629,
	629, 351, 563, 351, 585, -468, 563, -518, 628, -270,
	-270, 629, 629, -468, 540, -547, 104, -545, 2, -631,
	-277, -388, -306, -468, 189, -468, 540, 5, -270, -321,
	-270, -270, -304, 553, 361, -333, -553, -328, -647, 525,
	475, 554, 469, 198, 456, -647, 189, -227, -228, -557,
	-136, -136, -226, 39, -362, -363, 2, -577, 266, -314,
	266, 233, 158, -386, 628, 628, -388, -661, 590, 629,
	-352, -240, -92, -93, 541, -511, 633, 628, 610, -378,
	328, 123, 39, 5, 628, 628, -292, 362, 628, -307,
	-287, 96, -672, -552, -273, -417, 345, -388, 97, -446,
	-475, -223, 628, -223, 629, -229, 633, 29, 628, 29,
	628, -323, -345, -398, -398, 629, -384, 63, 633, 629,
	629, -469, -479, 629, -602, -603, -312, 633, 628, 628,
	482, 627, 627, -555, 2, -555, -555, -555, 468, -277,
	404, -292, -571, -580, -314, 344, -241, 570, 590, -468,
	-469, -294, 628, -468, 628, 628, 39, 131, 244, 136,
	229, -458, -666, 105, 513, 232, -496, -259, 629, -457,
	570, 422, -469, -304, -386, 628, 628, 628, 610, 195,
	-140, 628, -522, -270, -327, 610, 540, 2, 2, 195,
	-621, 629, -637, 420, -140, -240, 628, -241, -357, 84,
	98, 132, 223, 199, 241, 504, 510, 29, -357, 629,
	-386, -386, 629, -358, 362, 123, 328, 629, 39, -93,
	9, -626, -627, -468, 39, 123, -140, -516, -386, -323,
	-386, 362, -279, -278, 283, -552, -274, 629, -317, -417,
	-558, -72, -388, -388, 629, 629, -607, 413, 458, 216,
	-398, -385, 629, 633, 39, -413, 2, 2, 2, -644,
	-336, 425, -271, 159, 218, 629, -582, 298, -292, 629,
	-421, -421, 39, 136, 229, -364, -360, 628, -260, -497,
	-241, 218, -323, -632, 570, 629, -370, -369, -366, -372,
	-371, -366, -398, -545, 104, 379, -398, -304, -136, -555,
	-555, 362, -639, 196, -638, 5, 10, -358, -387, -498,
	-309, -457, 629, 629, 85, 123, -368, -140, 629, -140,
	2, -376, 629, 629, -443, 629, -323, -276, -559, 425,
	427, -672, -275, -462, 144, 629, 629, 629, 629, -608,
	-609, 53, 556, 113, -468, -608, -608, -603, -605, 195,
	175, -456, 599, -583, -586, -585, 606, 488, 196, 380,
	629, 512, 584, 629, 629, -665, -388, -456, -378, -468,
	-457, 629, 633, 575, 629, 633, 575, 629, 195, 629,
	-270, -644, -270, -647, -225, 590, 48, -286, -285, 629,
	633, -458, -457, -364, 403, 137, 147, -362, -661, -457,
	628, -458, 628, -284, -283, -672, -538, -287, 144, 345,
	563, -223, -610, 157, -609, 400, 188, 457, 400, 188,
	-610, -610, -555, -314, -241, 58, -585, 606, -586, 606,
	563, 137, -462, 629, -582, -241, -369, 231, -371, 195,
	379, 195, 465, -638, 31, -241, -498, -364, -458, -241,
	458, 458, 2, -240, -358, -458, -386, -364, -386, -280,
	-281, -282, -388, -279, 345, 563, 481, 113, 214, 535,
	328, 34, 610, -584, 328, 444, 67, 481, -584, -583,
	628, 628, -555, 366, -241, -364, -462, 2, -358, -364,
	629, -241, 629, -554, 377, -276, 481, -407, 457, 370,
	-609, -468, 24, 351, 131, -665, -398, -398, -270, -222,
	628, -462, -241, -286, -241, -457, -462, -458, -672, -284,
	-407, -462, 629, 629, -222, -462, -462, -458, -364, -553,
	-280, -462, -359, -360, 540, 629, -364, -241, 628, -241,
	-462, -398, -462, 629, -359,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 586, 587, 589, 590,
	591, 593, 594, 596, 598, 600, 601, 602, 604, 605,
	607, 608, 609, 610, 611, 613, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 702, 704, 0, 1541, 1543, 1545, 1547, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	361, 363, 365, 367, 0, 399, 401, 402, 404, 406,
	407, 408, 410, -2, 0, 519, 520, 522, 524, -2,
	0, 1126, 1128, 1130, 0, 690, 692, 0, 1133, 1135,
	1137, 0, 0, 714, 715, 0, 1655, -2, 706, 708,
	710, 712, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 808, 810, 812, 814, 816, 818, 819, 821,
	823, 825, 826, 828, 829, 831, 833, 835, 837, 839,
	841, 843, 845, 847, 849, 851, 853, 855, 857, -2,
	860, 861, 862, 864, -2, -2, 0, -2, -2, -2,
	1559, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 461, 463, 465, 467, 469, 472, 474,
	476, 1713, 526, 528, 530, 532, 534, 536, 538, 0,
	0, -2, 1727, 0, 0, 946, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 125, 126, 127, 128,
	129, 130, 131, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 122, 123, 84, 0, 0, 1686, 1688, 1690,
	1692, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	588, 592, 595, 597, 599, 603, 606, 612, 614, 616,
	571, 572, 575, 2425, 2443, 2444, 2445, 2448, 2449, 2450,
	2451, 2452, 2453, 2934, 3015, 3016, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798,
	2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858,
	2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868,
	2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878,
	2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
	2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 573, 574, 1320, 0, 655,
	653, 2410, 656, 2720, 658, 660, 513, 514, 515, 516,
	517, 518, 0, 683, 669, 1725, 684, 686, 687, 688,
	689, 650, 648, 0, 688, 683, 2480, 681, 1539, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 440, 1379, 1380, 1381, 1524, 1525, 2771, 1566, 0,
	257, 703, -2, -2, 2899, -2, 743, 744, -2, -2,
	758, 762, 753, 2903, 0, 2774, 2757, -2, 765, 1542,
	1544, 1546, 865, 866, 867, 2429, 871, 869, 881, 882,
	885, 0, 902, -2, 0, 2476, 2742, -2, -2, 903,
	904, -2, -2, -2, -2, 883, 884, 0, 0, 0,
	0, 0, 44, 46, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 267, -2,
	-2, -2, -2, 0, 0, 2822, 2535, 2378, 2445, 2381,
	2376, 362, 364, 366, 368, 369, 0, 0, 0, 0,
	0, 0, 0, 400, 403, 405, 409, -2, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1200, 1192, 1193, 1446, 0, 0, 0, -2, 521,
	523, 576, 577, 0, 1714, 1714, 584, 585, -2, 0,
	0, 0, 0, 332, 322, 1127, 1129, 1131, 1132, 0,
	0, 0, 0, 0, 691, 693, 0, 0, 2816, 299,
	1134, 1136, 1138, 1139, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 707, 709, 711, 713, 790, 792, 794,
	796, 798, 800, 802, 804, 806, 809, 811, 813, 815,
	817, 820, 822, 824, 827, 830, 832, 834, 836, 838,
	840, 842, 844, 846, 848, 850, 852, 854, 856, 858,
	859, 910, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 1015, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1106, 0,
	0, 913, 916, 917, 918, 919, 920, 921, 0, 988,
	1013, 1014, 1024, 863, 0, 1360, 1715, 1568, 1549, 1563,
	1568, 1551, 1552, 1553, 1554, 1555, 1560, 1562, 1556, 1557,
	1558, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 72, 462, 464, 466, 468, 470, 473, 475,
	477, -2, 1684, 1685, 527, 529, 531, 533, 535, 537,
	539, 694, 0, 697, 0, 915, 696, -2, 0, 1719,
	1719, 1719, 0, 0, 1685, 1683, 0, 700, 701, 769,
	770, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 2080, 0, 771, -2, 2113, 2115, 2874, 2693, 2899,
	2251, 2117, 2118, 2119, 2120, 2121, 0, 2123, 2124, 2125,
	2126, 2127, 2128, 0, 2130, 0, 2135, 2136, 2137, 0,
	2881, 2355, 2439, -2, 0, 0, 2887, 2435, 0, 2218,
	2153, -2, -2, 2462, 2441, 1924, 1925, 1926, 1927, 1928,
	-2, -2, 2917, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 0, 2862, 2882, 2883, 2888, 2890,
	2884, 2871, 2178, 2549, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1951, 1960, -2,
	-2, -2, -2, -2, -2, -2, 2875, 2876, 2893, 2896,
	2902, 2907, 2908, 2880, 2889, 2916, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931,
	2932, 2933, 1952, -2, -2, -2, -2, 0, 1702, 2735,
	1705, 1320, 1703, 1687, 1689, 0, 1691, 0, 0, 0,
	1696, 1722, 1720, 0, 1771, 1700, 1701, 1794, 1794, 1818,
	0, 1799, 0, 1818, 1714, 1845, 0, 1805, 2762, 2154,
	2155, 0, 2445, 2440, -2, -2, 2914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	657, 659, 0, 0, 0, 682, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 444, 445, 446, 447,
	2882, 0, 0, 0, 452, 0, 454, 455, 456, 457,
	458, 459, 460, 227, 2882, 544, 569, 0, 227, 2882,
	547, 227, 2882, 550, 0, 553, 1444, 227, 2882, 556,
	2406, 227, 2882, 559, 561, 2414, 227, 2882, 565, 2421,
	2419, 566, 0, 568, 247, 243, 244, 245, 246, 1535,
	1536, 1537, 1538, 0, 1565, 1445, 705, 0, 731, 0,
	741, 742, 2870, -2, 0, 2783, 746, 747, -2, 749,
	1569, 1573, 1574, 1575, 1576, 1577, 0, 0, 0, 0,
	1582, 0, 0, 0, 0, 738, 739, 756, 757, 763,
	766, 0, 874, 870, 886, 0, 901, 0, 902, 902,
	2395, 2386, 2387, 0, 0, 902, 902, 0, 0, 905,
	906, 907, 908, 909, 83, 0, 2882, 1845, 85, 0,
	2400, 2470, 2471, 2472, 2473, 2474, 2915, 2935, 2936, 2937,
	2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947,
	2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
	2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977,
	2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987,
	2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997,
	2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
	3008, 3009, 3010, 3011, 3012, 3013, 3014, 2917, 89, 0,
	2882, 94, 0, 2882, 0, -2, 109, 0, 124, 0,
	151, -2, -2, -2, 132, 0, 2882, 0, 2375, -2,
	0, 239, 323, 324, 325, 0, 632, 0, 641, 335,
	336, 2458, 2459, 2466, 2467, 2468, 2469, 0, 734, 2252,
	0, 0, 1164, -2, 0, 1373, 1375, 1375, 0, -2,
	0, 0, 0, 1116, 2372, 2377, 1117, 1118, 2396, 1119,
	2382, 0, 370, 371, 372, 373, 374, 0, 375, 2882,
	377, 378, 0, 380, 381, 2882, 383, 384, 0, 386,
	0, 388, 0, 279, 283, 2882, 2882, 413, 416, 0,
	418, 419, 0, 421, 0, 0, 0, 425, -2, 441,
	0, 438, 428, 429, 431, 432, 433, 434, 435, 0,
	481, 479, 2411, 0, 0, -2, 2882, 0, 1161, 0,
	0, 1424, -2, 0, 1366, 0, 1431, 2882, 1427, 0,
	-2, 0, 1712, 2882, 1586, 1196, 1197, 1198, 1199, 1857,
	510, 0, 1619, 0, 1621, 0, 1641, 1851, 1794, 0,
	0, 1856, 0, -2, 629, 2428, -2, 579, 0, 580,
	0, -2, 0, 349, 0, 0, 1142, 1144, 1145, 1147,
	1148, 1151, 1152, 1153, 1154, 0, 1156, 1831, 300, 302,
	0, 0, 0, 0, 1141, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 0, 0, 716, 0, 0, 911,
	912, 0, 0, 928, 929, 930, 0, 349, 2775, 2730,
	2571, 937, 0, 940, 943, -2, 0, 0, 0, 0,
	950, 0, 955, 956, 957, 0, -2, 0, 964, 966,
	1125, 968, 0, 0, 970, 0, 974, 0, 977, 0,
	979, 0, 981, -2, -2, -2, 989, 990, -2, 995,
	-2, 0, 999, -2, 0, 1002, 0, 1005, -2, 0,
	1015, 1011, 1012, 0, 0, 0, 0, 1032, 1033, 0,
	1042, 0, 1045, 1046, 1047, 0, 0, 1052, 1053, 0,
	1055, 1056, 1057, 1059, 1060, 1061, 0, 2851, 2780, 2535,
	0, 1069, -2, 1075, 1077, 0, -2, 0, 1093, 0,
	1097, 0, 0, 1105, 0, 0, 914, 0, 922, 923,
	227, 1849, 1548, -2, 1550, 0, -2, 0, 695, 0,
	699, 1744, 1670, 1667, 0, 1741, 1742, 1671, 0, 0,
	0, 1678, 0, 1717, 1718, 0, 0, 0, 1657, 1658,
	0, 0, 0, 0, 2257, 2258, 2259, 2260, 2273, 2261,
	2262, 2272, 2270, 2271, 2263, 2264, 2269, 2283, 2284, 2274,
	2275, 2265, 2278, 2276, 2277, 2279, 2280, 2281, 2282, 0,
	0, 2288, 0, 2266, 2267, 2268, 2296, 0, 0, 2297,
	0, 2299, 0, 2289, 2285, 2286, 2287, 0, 2059, 2061,
	2363, 0, 0, 0, 2295, 2290, 2291, 1997, 1998, 1999,
	2000, 2001, 2034, 2038, 2039, 0, 0, 2114, 2360, 2359,
	2116, 0, 0, 2311, 0, 2129, -2, 0, 2252, 2306,
	0, 0, 2138, 2139, 2140, 0, 0, 2311, 0, 0,
	2354, 2150, 2151, 1989, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1938, 1937, 0, 1939, 0,
	1940, 1941, 1948, 1961, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 2335, -2, 0, 0,
	0, 0, 1953, 0, 0, 1704, 0, 0, 1775, 2364,
	2368, 2369, 1775, 1775, 0, 0, 2312, 1842, 1842, 0,
	0, 1837, 1837, 1837, 1835, 1818, 0, 1818, 1828, 0,
	1818, 1818, 0, -2, 1799, 0, 0, 1828, 0, 1812,
	617, 619, 621, 623, 624, 625, 627, 1846, 1847, 0,
	0, 0, 0, 2446, 0, 0, 0, 0, 2418, 0,
	0, 2431, 0, 0, 2405, 395, 396, 0, 0, 0,
	2833, 2774, 0, -2, 662, 685, 1714, 0, 2314, 1872,
	1876, 0, 1878, 1879, 1880, 1881, 1882, 0, 0, 1873,
	-2, 1949, 1951, 1972, 2463, 2464, 2465, 1932, 1933, 1934,
	1935, 1936, 1944, 1931, 1931, 1931, 1942, 1971, 1963, 1971,
	1967, 1917, 1918, 1919, 1954, 1955, 1956, 1957, 0, 2833,
	2774, 0, -2, 0, 672, 0, 0, 1652, 442, 0,
	449, 450, 451, 0, 540, 0, 225, 226, 0, 227,
	2882, 545, 0, 548, 0, 227, 2882, 2370, 554, 0,
	557, 0, 0, 563, 0, 0, 0, 0, 0, 227,
	1654, 0, 0, 0, 0, -2, 751, 759, 760, 761,
	0, 1571, 0, 1578, 780, 781, 782, 1580, 1581, 0,
	1583, 754, 783, 784, 785, 786, 787, 788, 0, 2384,
	2385, 2390, 2391, 0, 0, 752, 773, 755, 0, 767,
	877, 872, 873, 887, 888, 0, 0, 2388, 2389, 0,
	0, 893, 894, 133, 1521, 0, 0, 180, 0, 1521,
	1521, 0, 0, 0, 0, 208, 0, 0, 1230, 0,
	0, 0, 0, 151, 165, 176, 145, 146, 147, 0,
	0, 0, 0, 0, 0, 95, 1342, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 111, 112, 0, 0, 117, 118, 0, 164,
	0, 0, 0, 0, 0, 1616, 0, 155, 151, 0,
	0, 150, 152, 135, 0, 0, 151, 166, 178, 0,
	214, 216, 1227, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 249, 0, 631, 633, 0, 0, 0, 0,
	639, 0, 642, 0, 732, 736, 737, 0, 0, 733,
	735, 0, 0, 1367, 0, 0, 0, 1711, 0, 0,
	0, 0, 2882, 1519, 0, 1504, 0, 1831, 2622, -2,
	-2, 300, 1831, 1115, 0, 0, 2446, 2380, 0, 0,
	0, 0, 0, 0, 387, 0, 0, 0, 0, 417,
	420, 422, 423, 424, 0, 1423, 0, 430, 471, 1289,
	2882, 0, 0, 500, 493, 0, 496, 0, 0, 0,
	1341, 2882, 1339, 2415, 0, 1364, 0, 1320, 2882, 2413,
	0, 0, 0, 1432, 2455, 1441, 1445, 1604, 0, 512,
	0, 1622, 1624, 0, 0, 1852, 0, 1854, 1794, 1714,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 1155, 306, 0, 1830, 0, 0, 337, 1831, 300,
	2748, 0, 1140, 349, 349, 1831, 718, 1831, 720, 0,
	0, 931, 932, 0, 349, 349, 349, 938, 939, 941,
	942, -2, -2, -2, -2, 944, 945, 1039, 0, 0,
	0, 1038, 958, 0, 960, 963, 967, 0, 1109, 2757,
	2774, 2833, 1123, 1039, 2535, 1039, 2535, 1039, 2535, 1039,
	1039, 983, 1027, 1035, 994, 1001, 0, 996, 1000, 1003,
	1006, 0, 1008, 1016, 0, -2, 0, 1019, 0, 1021,
	0, 1023, 1039, 1040, 1043, 0, 1051, 1054, 0, 1062,
	1063, 1064, 1065, 2426, 1066, 1067, 1068, -2, 1072, 1073,
	0, 1084, 1089, 1090, 1086, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 0, 1108, 0, 924, 1359, 0,
	1561, 1744, 1670, 698, 1661, 1743, 1662, 1669, 1672, 0,
	0, 1674, 0, 1676, 0, 1739, 1740, 1747, 1748, 0,
	1758, 1759, 1751, 0, -2, 0, 0, 1754, 1755, 1680,
	0, 1697, 1698, 1699, 1728, 1731, 1460, 0, 3015, 1993,
	1867, 1994, 1995, 2399, 0, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, -2, -2, -2, -2, -2,
	-2, -2, -2, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, -2, -2, -2, 2035, 2036, 2037,
	-2, 2298, 2300, 0, 2363, 0, -2, 0, -2, -2,
	-2, -2, 2056, 0, 2058, 2063, 2065, 2067, 0, 0,
	0, 0, 2362, 2077, 2346, 2347, 0, 0, 2254, 2255,
	2256, 2062, 0, 2081, 2361, 2358, 0, 0, 2292, 0,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 0, 2310, 1727, 2142, 0, 0, 0,
	0, 2149, 2134, 2308, 0, 2307, 0, 0, 0, 2318,
	0, 2353, 2349, 0, 2397, 1988, 1975, 1976, 1977, 1978,
	1979, 1980, 1990, 0, 2394, 2432, 2438, 2228, 0, 0,
	0, 2179, 2180, 2181, 2182, 2183, 0, 2185, 2186, 0,
	2188, 2189, 0, 2191, 2192, 0, 2194, 2195, 2196, 2197,
	2198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	0, 0, 2200, 0, 2321, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2202, 0, 2204, 2312, 2332, 0,
	0, 2082, 0, 0, 0, 0, 0, 2207, 2312, 2340,
	0, 0, 0, 0, 0, 2312, 0, 2345, 0, 2214,
	0, 2216, 947, 948, 1706, 0, 0, 1862, 0, 0,
	0, 2367, 1862, 1862, 0, 1770, 0, 0, 1838, 1839,
	1840, 1841, 0, 0, 1842, 0, 1832, 1836, 1833, 1834,
	1828, 1791, 0, 0, 2401, 1828, 1797, 1827, 0, 1320,
	1817, 1828, 1828, 0, -2, 1801, 1818, 0, 0, 618,
	620, 622, 626, 628, 0, 0, 1727, -2, 0, -2,
	351, 1319, 0, 0, 0, 0, 0, 0, 652, 654,
	0, 0, 560, 0, 0, 668, 0, 646, 0, 649,
	0, 1863, 1866, 0, 0, 1877, 1883, 1884, 0, -2,
	0, 0, 1973, 0, 0, 0, 0, 0, 680, 0,
	683, 0, 0, 0, 453, 570, 227, 542, 0, 227,
	227, 551, 0, 0, 227, 562, 227, 2422, 227, 2420,
	248, 567, 1653, 260, 0, 740, 0, 1570, 1579, 0,
	777, 0, 779, 0, 2392, 2393, 0, 768, 0, 875,
	0, 889, 890, 891, 892, 0, 0, 0, 0, 1520,
	0, 0, 1467, 0, 0, 184, 2882, 0, 229, 0,
	0, 1282, 2407, 0, 1272, 0, 0, 2557, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 148, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 1344, 1346, 1353,
	1355, 0, 1349, 1350, 0, 1352, 1354, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	1376, 0, 0, 1377, 1378, 1592, 1593, 0, 1615, 1616,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 2374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 349, 636, 637, 345, 342,
	344, 638, 643, 0, 644, 0, 0, 0, 0, 1369,
	0, 1419, 1417, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0,
	0, 0, 0, -2, 1371, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 340, 2373, 2383,
	0, 1149, 1150, 376, 379, 382, 385, 266, 0, 0,
	415, 426, 0, 0, 1202, 1174, 0, 0, 480, 349,
	0, 0, 495, 0, 500, 2424, 1159, 1337, 1340, 0,
	1320, 2882, 1387, 0, 0, 0, 0, 0, 0, 1430,
	0, 0, 2882, 2402, 2454, 2455, 1606, 1616, 0, 1862,
	0, 1639, 1625, 0, 0, 0, 1639, 1643, 1644, 1646,
	1647, 0, 0, 1853, 1859, 578, 630, 1714, 1714, 349,
	347, 2696, 0, 0, 1628, 1630, 0, 0, 0, 292,
	0, 303, 1831, 301, 0, 306, 0, 0, 1831, 300,
	0, 492, 717, 722, 926, 0, 349, 934, 935, 936,
	985, 1029, 1037, 1088, 949, 951, 952, 953, 0, 0,
	0, 1124, 1120, 1121, 1122, 969, 1039, 972, 1039, 975,
	1039, 978, 980, 998, 1004, 1017, 1010, 1018, 0, 0,
	0, 1031, 0, 1049, 0, 1058, 1071, 0, 0, 0,
	0, 0, 0, 0, 1094, 1095, 1096, 1098, 1103, 1102,
	1107, 925, 1850, 1665, 1666, 1668, 0, 1677, 0, 0,
	1753, -2, -2, 1752, 1756, 1757, -2, -2, -2, -2,
	1673, 0, 1682, 1679, 0, 1738, 1458, 1459, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 2078, 0, -2,
	2057, 2060, 2064, 2066, 2068, 0, 0, 0, 0, 0,
	0, 2301, 0, 2303, 2079, 2356, 2359, 2294, 0, 2250,
	0, 0, 1726, 1727, 1727, 0, 2148, 0, 2309, 0,
	2316, 2317, 0, 2141, 0, 2350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2152, 0, 0, 0, 0,
	2184, 2187, 2190, 2193, 0, 0, 0, 0, 2173, 0,
	0, 0, 2177, 1943, 1929, 0, 1971, 1969, 1970, 1964,
	1971, 1968, 1921, 0, 1920, 0, 2199, 0, 2201, 2203,
	0, 0, 2205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 2086, 2087,
	2107, 2206, 2338, 2339, 0, 0, 0, 0, 0, 0,
	2212, 0, 2344, 2213, 2215, 1714, 0, 1707, 0, 1772,
	1761, 1861, 0, 2365, 1831, 1774, 1776, 2366, 2404, 1761,
	1761, 0, 2313, 0, 0, 1822, 0, 0, 0, 1824,
	1795, 0, 0, 1789, 0, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1796, 1320, 1826, 1798, 1802, 2432, 0, 1828,
	0, 1813, 0, 1815, 1848, 0, 1807, 1810, 0, 0,
	2447, 1862, 0, 389, 397, 398, 390, 391, 392, 393,
	0, 1507, 0, 0, 0, 0, 0, 2315, 0, 1868,
	0, 1874, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 1651, 448, 541, 227, 546, 549, 2371, 227,
	555, 558, 564, 256, 0, 730, -2, 775, 776, 778,
	0, 774, 880, 876, 181, 1521, 0, 0, 0, 1463,
	0, 1185, 0, 1180, 1181, 1465, 1469, 1475, 1478, 0,
	186, 2882, 198, 0, 2882, 0, 1246, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 2882, 227, 2882, 227,
	202, 204, 207, 0, 213, 209, 0, 1182, 0, 1234,
	0, 0, 1237, 134, 1521, 0, 0, 137, 141, 153,
	0, 0, 0, 163, 0, 0, 0, 1480, 1484, 1492,
	0, 0, 0, 1347, 1348, 1351, 1357, 96, 0, 0,
	0, 1488, 1490, 1496, 110, 113, 2882, 2416, 0, 115,
	2882, 0, 0, 1462, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 139, 143, 154, 0, 1498, 136, 0,
	242, 0, 0, 232, 227, 2882, 0, 234, 0, 235,
	236, 250, 0, 0, 0, 635, 0, 0, 0, 640,
	0, 1162, 1163, 1418, 0, 1362, 1363, 0, 1374, 1368,
	0, 0, 0, 0, 0, 1500, 1501, 0, 0, 0,
	1519, 1516, 1831, 262, 0, 1831, 270, 0, 2379, 0,
	284, 412, 0, 0, 0, 0, 1201, 1300, 1203, 1205,
	1206, 1207, 229, 0, 2455, 1272, 2611, 2455, 0, 0,
	1169, 0, 0, 0, 486, 482, 0, 491, 494, 499,
	0, 498, 2408, 504, -2, 0, 0, 0, 0, -2,
	0, 0, 1434, 1428, 1429, 0, 0, 0, 0, 2882,
	1608, 1616, 0, 1712, 1727, 511, 1617, 1639, 0, 0,
	0, 1627, 1623, 1620, 1862, 0, 0, 0, 0, 0,
	1855, 1858, 581, 582, 326, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 304, 0, 307, 0, 0, 0,
	312, 313, 314, 315, 316, 317, 0, 0, 0, 0,
	306, 338, 294, 1831, 0, 306, 0, 0, 719, 0,
	0, 933, 0, 959, 962, 971, 973, 976, 1020, 1022,
	1039, 0, 1050, 1078, 2403, 1079, 1224, 0, 1224, 0,
	0, 1099, 1675, 0, 1750, 1681, 1732, 1733, 0, 1460,
	0, 1996, 2041, 0, 0, -2, 0, 0, 2045, 0,
	0, 0, -2, 0, 0, 0, 2302, 2304, 0, 2358,
	2293, 2143, 0, 0, 0, 2147, 2131, 2132, 0, 2253,
	2319, 2348, 2352, 0, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 0, 2398, 2433, 2437, 2226, 2227, 2231, 2412, 0,
	0, 0, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1966, 0, 0, 2320, 2331, 2333, 2083, 2084,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	-2, -2, -2, 2101, 2102, 2103, -2, -2, -2, 2108,
	0, 0, 0, 2334, 2336, 2337, 2341, 2342, 0, 2209,
	2210, 2211, 2343, 0, 1714, 1708, 1769, 0, 1860, 1773,
	0, 1769, 1769, 1721, 1820, 0, 0, 1844, 0, 1792,
	0, 1793, 0, 0, 1825, 0, 1800, 1803, 1804, 1814,
	0, 1806, 0, 1809, 0, 2143, -2, 350, 352, 354,
	0, 357, 358, 0, 0, 0, 661, 0, 1507, 1507,
	0, 663, 647, 0, 0, 1870, 0, 0, 1946, 1950,
	1974, 674, 676, 0, 0, 2833, 2774, 0, 673, 543,
	552, 258, 0, 1829, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 228, 0, 1281, 0,
	1244, 0, 0, 1271, 0, 0, 1287, 188, 189, 190,
	0, 0, 0, 0, 200, 0, 0, 196, 0, 206,
	212, 211, 0, 1231, 0, 0, 0, 0, 1468, 0,
	0, 0, 160, 161, 162, 0, 167, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 1598, 1599, 0, 1589, 157, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 1457, 252, 0, 0,
	0, 0, 0, 346, 341, 343, 0, 1361, 1421, 1422,
	1370, 1481, 1485, 1493, 0, 0, 0, 0, 0, 688,
	1518, 0, 270, 268, 0, 271, 0, 274, 275, 0,
	0, 270, 264, 0, 0, 0, 1320, 427, 1172, 1288,
	0, 0, 1290, 1208, 1212, 0, 2455, 2455, 0, 2409,
	0, 1170, 0, 0, 1289, 478, 0, 485, 0, 497,
	501, 0, 0, 1341, 0, 0, 1365, 1390, 1320, 0,
	1433, 1435, 0, 1443, 0, 0, 0, 1610, 1616, 0,
	1603, 1604, 1746, 1618, 1637, -2, 0, 0, 1727, 1645,
	1642, 1648, 1649, 0, 0, 0, 329, 0, 1629, 1631,
	0, 1143, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 306, 1831, 296, 1831, 333, 0, 927,
	954, 1030, 1048, 1080, 1223, 0, 0, 1082, 0, 0,
	1749, 1736, 1737, 1734, 1460, 2043, 2047, 0, 0, 0,
	2049, -2, 0, 2071, -2, -2, 2305, 2357, 2122, 1727,
	2144, 2146, 2133, 2351, 1991, 0, 2233, 2230, 0, 2217,
	0, 2168, 2169, 0, 0, 2172, 2174, 2175, 2176, 1930,
	1923, 1922, 2330, 0, 0, 0, 0, 2208, 1709, 0,
	2222, 0, 0, 1777, 2222, 2222, 1821, 0, 1823, 1790,
	1778, 0, 1787, 0, 2433, 1816, 1808, 0, 0, 355,
	0, 359, 360, 394, 0, 664, 665, 0, 0, 1864,
	1869, 0, 1875, 1945, 0, 0, 0, 0, 0, 259,
	0, 878, 879, 182, 183, 1186, 1184, 1472, 1476, 1473,
	0, 185, 0, 0, 1245, 0, 1248, 0, 0, 0,
	0, 1255, 1272, 0, 0, 0, 0, 0, 0, 1274,
	0, 1273, 0, 0, 1304, 0, 1448, 1455, 0, -2,
	0, 0, 0, 192, 218, 0, 0, 0, 0, 221,
	1522, 194, 0, 0, 227, 227, 1183, 0, 0, 1464,
	1466, 1479, 0, 0, 0, 0, 170, 0, 0, 1482,
	1486, 1494, 1489, 1491, 1497, 0, 0, 116, 0, 1600,
	0, 156, 0, 0, 0, 1499, 240, 241, 0, 227,
	0, 227, 233, 227, 1457, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1503, 261, 0, 0, 0, 0,
	0, 263, 339, 270, 414, 0, 1233, 0, 1300, 1292,
	1293, 1294, 0, 1204, 1299, 1301, 0, 0, 1209, 0,
	0, 0, 0, 1189, 1171, 0, 1202, 1174, 0, 483,
	502, 0, 505, 0, 508, 1160, 1338, 1382, 1320, 1385,
	0, 0, 1425, 0, 0, 0, 0, 0, 0, 0,
	1612, 1616, 0, 1605, 1606, 1639, 1745, 0, 0, 0,
	1626, 1746, 0, 348, 349, 0, 349, 308, 0, 309,
	310, 311, 318, 319, 320, 321, 295, 298, 306, 721,
	723, 0, 0, 729, 1222, 0, 0, 0, 0, 1735,
	2051, -2, -2, 2072, 0, 2434, 2436, 1727, 0, 2219,
	1729, 0, 0, -2, 0, 0, 0, 1710, 1693, 0,
	1768, 1760, 1762, 1764, 2760, 2530, 2881, 1694, 1695, 1843,
	0, 0, 1811, 356, 1506, 666, 0, 0, 1871, 0,
	671, 0, 0, 0, 868, 0, 0, 1474, 187, 0,
	0, 1249, 1250, 1252, 0, 1254, 1256, 1257, 1174, 0,
	1261, 0, 2457, 0, 1266, 1269, 1270, 0, 0, 1283,
	1305, 0, 1314, 0, 1450, 1460, 1454, 0, 1452, 1316,
	0, 191, 220, 193, 222, 217, 0, 1457, 0, 195,
	205, 0, 0, 138, 0, 0, 2524, 173, 171, 169,
	114, 120, 1461, 159, 0, 140, 0, 242, 251, 1456,
	253, 237, 227, 0, 0, 1483, 1487, 1495, 0, 1510,
	1511, 1512, 1513, 0, 0, 0, 0, 272, 0, 273,
	276, 277, 0, 0, 1174, 1232, 1173, 1291, 0, 1302,
	1174, 0, 0, 0, 0, 0, 0, 1176, 0, 1175,
	0, 0, 484, 487, 0, 490, 0, 0, 0, 0,
	0, 1389, 0, 1436, 1434, 0, 1442, 0, 0, 0,
	1588, 0, 0, 1607, 1608, 509, 1632, 0, 0, 1639,
	1650, 328, 0, 331, 305, 297, 0, 725, 0, 727,
	0, 1081, 1083, 0, 0, 2145, 2237, 0, 0, 2170,
	2171, -2, 0, 2111, 2221, 2223, 0, 0, 0, 0,
	0, 1779, 1788, 1507, 1865, 678, 675, 677, 0, 1470,
	0, 1477, 229, 1247, 1251, 0, 1258, 0, 0, 0,
	1262, 1324, 0, 0, 1341, 1341, 1275, 0, 0, 1308,
	1309, 1229, 0, 1310, 1311, 1312, 1449, 1738, 1455, 1174,
	0, 0, 219, 224, 0, 0, 0, 0, 0, 0,
	158, 0, 231, 254, 1457, 0, 0, 1514, 1515, 0,
	0, 269, 288, 0, 1383, 1176, 0, 1303, 1210, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1211, 1316,
	0, 0, 1280, 1187, 0, 1190, 0, 1172, 0, 488,
	489, 506, 0, 507, 0, 0, 1390, 0, 0, 1443,
	0, 0, 1595, 1587, 1616, 1609, 1610, 1862, 0, 1640,
	0, 724, 0, 0, 1091, 1092, 0, 0, 0, 0,
	2232, 1730, 2112, 0, 0, 1763, 1765, 1766, 1767, 667,
	0, 1471, 199, 0, 1318, 1260, 1329, 0, 0, 0,
	0, 0, 1276, 1306, 1307, 1304, 1228, 0, 1453, 1451,
	1285, 1318, 1320, 197, 0, 1316, 0, 1238, 0, 0,
	1241, 0, 0, 174, 2524, 172, 0, 227, 645, 1507,
	227, 0, 291, 0, 282, 280, 281, 1168, 0, 1296,
	1298, 1314, 1316, 1229, 0, 1191, 1233, 1189, 503, 1384,
	1388, 1386, 1426, 1316, 0, 1314, 0, 1602, 1616, 1596,
	1597, 0, 1612, 0, 0, 349, 726, 728, 2229, 2249,
	2238, -2, 2836, 2531, 0, 2249, 2249, 2224, 2225, 0,
	0, 1174, 0, 1263, 1325, 1326, 0, 1321, 1322, 1323,
	2456, 1264, 1265, 1267, 1268, 1862, 0, 1315, 1324, 223,
	1174, 1235, 0, 0, 1236, 0, 0, 177, 0, 179,
	255, 1505, 1508, 0, 278, 0, 0, 1165, 1167, 1174,
	0, 1229, 1314, 1174, 0, 0, 0, 1174, 1176, 1314,
	0, 1229, 0, 1591, 1601, 0, 1611, 1588, 0, 1635,
	0, 330, 2234, 0, 0, 2240, 2241, 2242, 2243, 2244,
	2235, 2236, 679, 1253, 1259, 0, 1327, 0, 1328, 0,
	0, 0, 1284, 1313, 1329, 203, 1239, 0, 1242, 0,
	175, 0, 0, 286, 287, 1295, 1297, 1174, 1229, 1862,
	1177, 0, 1179, 1176, 1188, 1229, 0, 1174, 0, 1614,
	1590, 1594, 2417, 1595, 1633, 0, 0, 0, 2246, 2247,
	0, 0, 0, 1330, 0, 1333, 1334, 0, 1331, 1304,
	0, 0, 227, 0, 1862, 1174, 1279, 1178, 1168, 1174,
	1316, 1862, 1314, 1584, 1616, 1602, 0, 1862, 2245, 2248,
	2239, 1317, 1332, 1335, 1336, 1286, 0, 0, 1509, 289,
	0, 1277, 1862, 1166, 1862, 1314, 1439, 1229, 0, 1591,
	1862, 1636, 1226, 0, 0, 1278, 1437, 1229, 1174, 1613,
	1585, 1634, 1240, 1225, 0, 290, 1174, 1862, 0, 1862,
	1440, 0, 1438, 1226, 1243,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 616, 3, 622, 617, 3,
	628, 629, 620, 618, 633, 619, 630, 621, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 636, 3,
	608, 610, 609, 613, 632, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 626, 3, 627, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 634, 615, 635, 611,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 612, 57951, 614, 57952, 624, 57953, 625, 57954, 631,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1561
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1566
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1568
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1590
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1736
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1778
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1801
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1910
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1942
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1966
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1996
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2040
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2051
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2063
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2084
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2146
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2174
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2195
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2205
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2214
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2225
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2231
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2262
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2277
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2309
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2353
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2397
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2407
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = nil
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = true
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = false
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2663
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2667
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2670
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 261:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2851
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2859
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2871
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3013
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = nil
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3318
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3327
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3333
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3338
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3343
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3347
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3439
		{
			sqlVAL.union.val = nil
		}
	case 350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3451
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3475
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3647
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3669
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3697
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "CREATE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3715
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "create access method")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "create cast")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3724
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3725
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3728
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3730
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "create publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "create rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "create server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3743
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3746
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3747
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3751
		{
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3760
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3763
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "drop server")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3775
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3779
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3954
		{

			sqlVAL.union.val = nil
		}
	case 501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4041
		{
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "DROP")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4272
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4331
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4333
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4357
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4365
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "INSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "DELETE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "INSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4555
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4588
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4679
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4695
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "GRANT")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4791
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "RESET")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "RESET")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			return helpWith(sqllex, "USE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4882
		{
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4889
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "USE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4974
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4978
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5110
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5115
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5119
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5142
		{
			return unimplemented(sqllex, "set from current")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5160
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5181
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = tree.Low
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = tree.Normal
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = tree.High
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5320
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5326
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = false
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = true
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = false
		}
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = false
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "FETCH")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "MOVE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5543
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = int64(1)
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = int64(-1)
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = int64(1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = int64(1)
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = int64(-1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5570
		{
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5571
		{
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5574
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.str = "client_encoding"
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.str = "timezone"
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5661
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5733
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5778
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5853
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5914
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5979
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = true
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = true
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = false
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6015
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6017
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6034
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6077
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6129
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6136
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = true
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = false
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6155
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = true
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = false
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6253
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6263
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6274
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6296
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6310
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6340
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6345
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6350
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6355
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6384
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6400
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6437
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6458
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6463
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6468
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6481
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6504
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6516
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6575
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6585
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6774
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6793
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6843
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6845
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6846
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6943
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7062
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7077
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{

			sqlVAL.union.val = nil
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.str = ""
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = nil
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7148
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7184
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7197
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7211
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7212
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7294
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7311
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7312
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = ""
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7491
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7557
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{

			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = false
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7612
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7616
		{
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7619
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7716
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7744
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7754
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7837
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7838
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8009
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8018
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8026
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8037
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8050
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8060
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8062
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8066
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8069
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8072
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8091
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.str = ""
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = true
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{

			sqlVAL.union.val = true
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = false
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8201
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8215
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8227
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8239
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8249
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8263
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = true
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = true
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = nil
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8406
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8434
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8436
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8438
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8440
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8442
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8477
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8494
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8512
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8528
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8548
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = false
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = true
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = false
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = true
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = false
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8608
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.str = ""
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8681
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8687
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8912
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8918
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8930
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8936
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8950
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8956
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9015
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = true
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = false
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.Types
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9103
		{
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9104
		{
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9119
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9204
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9215
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9219
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9274
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9291
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9294
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9295
		{
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9338
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9342
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.str = ""
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9455
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9460
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{

		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9492
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.str = ""
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.str = ""
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.str = ""
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.str = ""
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9547
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9573
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9727
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9818
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10012
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10013
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10014
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10075
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10112
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10119
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10189
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = nil
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10203
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = true
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = false
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = false
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = true
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10233
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10237
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10290
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10295
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10449
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10482
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10497
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10519
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10597
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10639
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10695
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10725
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10758
		{
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = nil
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = true
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = false
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.str = tree.AstFull
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.str = tree.AstRight
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.str = tree.AstInner
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10877
		{
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10878
		{
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.str = tree.AstHash
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.str = ""
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10970
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10976
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10982
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10992
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = true
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = false
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = true
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = false
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11054
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11062
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11081
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11091
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11111
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11160
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11172
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11184
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = types.Geography
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11222
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11230
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11264
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = nil
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = types.Int2
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = types.Int
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = types.Float4
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = types.Float
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11307
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11323
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = types.Bool
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11337
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = types.Float
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11356
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11362
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11384
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = types.String
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = true
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = false
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = types.Date
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11433
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11441
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11455
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11472
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11489
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = true
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = false
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = false
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = types.Interval
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11513
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11556
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11612
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = nil
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11642
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11702
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11851
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11973
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12068
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12176
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12184
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12285
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12311
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12335
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12369
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12380
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12381
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12396
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12405
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12471
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12570
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12596
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12610
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12619
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12637
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12647
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12662
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12671
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12672
		{
			return unimplemented(sqllex, "treat")
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12698
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12745
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12761
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12788
		{
			sqlVAL.str = ""
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12804
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12812
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12847
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12907
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12915
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12944
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12983
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12987
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12990
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13020
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13036
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13169
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13238
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13242
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13256
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13272
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13301
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13311
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13317
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13360
		{
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13361
		{
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13365
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13388
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13392
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13433
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13441
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13481
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13485
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13491
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13514
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13530
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13559
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13567
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13584
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13733
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13737
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13741
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13785
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13803
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13816
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13823
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13848
		{
			sqlVAL.str = ""
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
