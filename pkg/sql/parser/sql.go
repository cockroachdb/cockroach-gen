// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12866

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1487,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	259, 393,
	-2, 0,
	-1, 74,
	241, 231,
	506, 231,
	-2, 0,
	-1, 87,
	229, 1247,
	243, 1247,
	259, 389,
	386, 389,
	396, 1017,
	432, 389,
	444, 1017,
	490, 1017,
	517, 389,
	543, 1017,
	-2, 0,
	-1, 93,
	132, 1487,
	236, 1487,
	528, 1487,
	529, 1487,
	-2, 0,
	-1, 109,
	150, 1458,
	169, 1458,
	182, 1458,
	239, 1458,
	272, 1458,
	338, 1458,
	348, 1458,
	523, 1458,
	-2, 1429,
	-1, 148,
	158, 875,
	258, 875,
	389, 842,
	449, 842,
	489, 842,
	509, 875,
	511, 842,
	-2, 0,
	-1, 150,
	4, 1489,
	21, 1489,
	22, 1489,
	23, 1489,
	24, 1489,
	25, 1489,
	26, 1489,
	27, 1489,
	29, 1489,
	30, 1489,
	36, 1489,
	41, 1489,
	42, 1489,
	44, 1489,
	45, 1489,
	46, 1489,
	47, 1489,
	48, 1489,
	49, 1489,
	50, 1489,
	51, 1489,
	53, 1489,
	54, 1489,
	55, 1489,
	56, 1489,
	58, 1489,
	59, 1489,
	60, 1489,
	61, 1489,
	62, 1489,
	63, 1489,
	64, 1489,
	68, 1489,
	69, 1489,
	70, 1489,
	71, 1489,
	73, 1489,
	74, 1489,
	75, 1489,
	79, 1489,
	80, 1489,
	81, 1489,
	82, 1489,
	83, 1489,
	84, 1489,
	85, 1489,
	88, 1489,
	89, 1489,
	90, 1489,
	91, 1489,
	92, 1489,
	94, 1489,
	96, 1489,
	97, 1489,
	98, 1489,
	99, 1489,
	100, 1489,
	101, 1489,
	103, 1489,
	104, 1489,
	105, 1489,
	107, 1489,
	108, 1489,
	109, 1489,
	117, 1489,
	118, 1489,
	119, 1489,
	120, 1489,
	121, 1489,
	123, 1489,
	124, 1489,
	125, 1489,
	127, 1489,
	128, 1489,
	129, 1489,
	131, 1489,
	132, 1489,
	133, 1489,
	135, 1489,
	136, 1489,
	137, 1489,
	140, 1489,
	141, 1489,
	142, 1489,
	144, 1489,
	145, 1489,
	147, 1489,
	148, 1489,
	149, 1489,
	151, 1489,
	152, 1489,
	153, 1489,
	154, 1489,
	155, 1489,
	156, 1489,
	157, 1489,
	158, 1489,
	159, 1489,
	160, 1489,
	161, 1489,
	162, 1489,
	163, 1489,
	164, 1489,
	165, 1489,
	166, 1489,
	168, 1489,
	174, 1489,
	175, 1489,
	176, 1489,
	177, 1489,
	181, 1489,
	183, 1489,
	184, 1489,
	188, 1489,
	189, 1489,
	190, 1489,
	191, 1489,
	192, 1489,
	193, 1489,
	194, 1489,
	195, 1489,
	196, 1489,
	197, 1489,
	198, 1489,
	199, 1489,
	200, 1489,
	202, 1489,
	203, 1489,
	205, 1489,
	206, 1489,
	208, 1489,
	209, 1489,
	210, 1489,
	211, 1489,
	212, 1489,
	213, 1489,
	214, 1489,
	215, 1489,
	216, 1489,
	218, 1489,
	219, 1489,
	221, 1489,
	222, 1489,
	223, 1489,
	224, 1489,
	225, 1489,
	229, 1489,
	230, 1489,
	231, 1489,
	232, 1489,
	233, 1489,
	236, 1489,
	237, 1489,
	238, 1489,
	240, 1489,
	242, 1489,
	243, 1489,
	245, 1489,
	247, 1489,
	248, 1489,
	249, 1489,
	251, 1489,
	255, 1489,
	256, 1489,
	257, 1489,
	258, 1489,
	259, 1489,
	260, 1489,
	262, 1489,
	263, 1489,
	264, 1489,
	266, 1489,
	267, 1489,
	269, 1489,
	270, 1489,
	273, 1489,
	277, 1489,
	278, 1489,
	279, 1489,
	282, 1489,
	283, 1489,
	284, 1489,
	285, 1489,
	287, 1489,
	288, 1489,
	289, 1489,
	290, 1489,
	291, 1489,
	292, 1489,
	293, 1489,
	294, 1489,
	295, 1489,
	296, 1489,
	297, 1489,
	298, 1489,
	299, 1489,
	300, 1489,
	301, 1489,
	302, 1489,
	303, 1489,
	304, 1489,
	305, 1489,
	306, 1489,
	307, 1489,
	308, 1489,
	310, 1489,
	312, 1489,
	313, 1489,
	314, 1489,
	315, 1489,
	316, 1489,
	317, 1489,
	318, 1489,
	319, 1489,
	320, 1489,
	321, 1489,
	322, 1489,
	323, 1489,
	325, 1489,
	326, 1489,
	328, 1489,
	330, 1489,
	331, 1489,
	333, 1489,
	334, 1489,
	335, 1489,
	336, 1489,
	337, 1489,
	340, 1489,
	343, 1489,
	344, 1489,
	345, 1489,
	346, 1489,
	349, 1489,
	350, 1489,
	351, 1489,
	353, 1489,
	355, 1489,
	356, 1489,
	357, 1489,
	358, 1489,
	359, 1489,
	360, 1489,
	361, 1489,
	362, 1489,
	363, 1489,
	364, 1489,
	365, 1489,
	366, 1489,
	368, 1489,
	369, 1489,
	370, 1489,
	371, 1489,
	372, 1489,
	373, 1489,
	374, 1489,
	375, 1489,
	376, 1489,
	377, 1489,
	378, 1489,
	379, 1489,
	380, 1489,
	381, 1489,
	382, 1489,
	384, 1489,
	385, 1489,
	387, 1489,
	388, 1489,
	389, 1489,
	390, 1489,
	391, 1489,
	392, 1489,
	393, 1489,
	394, 1489,
	395, 1489,
	396, 1489,
	397, 1489,
	398, 1489,
	400, 1489,
	402, 1489,
	403, 1489,
	404, 1489,
	409, 1489,
	411, 1489,
	412, 1489,
	413, 1489,
	414, 1489,
	415, 1489,
	416, 1489,
	417, 1489,
	418, 1489,
	419, 1489,
	421, 1489,
	422, 1489,
	423, 1489,
	425, 1489,
	426, 1489,
	427, 1489,
	428, 1489,
	429, 1489,
	430, 1489,
	432, 1489,
	433, 1489,
	434, 1489,
	435, 1489,
	436, 1489,
	437, 1489,
	438, 1489,
	439, 1489,
	440, 1489,
	441, 1489,
	442, 1489,
	444, 1489,
	445, 1489,
	446, 1489,
	447, 1489,
	448, 1489,
	449, 1489,
	451, 1489,
	452, 1489,
	453, 1489,
	454, 1489,
	455, 1489,
	456, 1489,
	458, 1489,
	459, 1489,
	460, 1489,
	461, 1489,
	462, 1489,
	463, 1489,
	464, 1489,
	466, 1489,
	468, 1489,
	469, 1489,
	470, 1489,
	471, 1489,
	472, 1489,
	473, 1489,
	474, 1489,
	475, 1489,
	476, 1489,
	477, 1489,
	478, 1489,
	479, 1489,
	480, 1489,
	481, 1489,
	482, 1489,
	483, 1489,
	485, 1489,
	486, 1489,
	488, 1489,
	489, 1489,
	491, 1489,
	492, 1489,
	493, 1489,
	494, 1489,
	495, 1489,
	496, 1489,
	497, 1489,
	498, 1489,
	499, 1489,
	501, 1489,
	502, 1489,
	503, 1489,
	504, 1489,
	505, 1489,
	507, 1489,
	509, 1489,
	510, 1489,
	511, 1489,
	512, 1489,
	513, 1489,
	514, 1489,
	516, 1489,
	517, 1489,
	518, 1489,
	519, 1489,
	521, 1489,
	522, 1489,
	525, 1489,
	526, 1489,
	527, 1489,
	528, 1489,
	529, 1489,
	530, 1489,
	531, 1489,
	533, 1489,
	536, 1489,
	537, 1489,
	538, 1489,
	539, 1489,
	540, 1489,
	541, 1489,
	543, 1489,
	544, 1489,
	545, 1489,
	546, 1489,
	548, 1489,
	553, 1489,
	554, 1489,
	555, 1489,
	556, 1489,
	557, 1489,
	558, 1489,
	-2, 0,
	-1, 151,
	1, 1344,
	130, 1344,
	247, 1344,
	327, 1344,
	384, 1344,
	393, 1344,
	562, 1344,
	586, 1344,
	-2, 0,
	-1, 153,
	1, 1344,
	586, 1344,
	-2, 0,
	-1, 154,
	1, 1344,
	586, 1344,
	-2, 0,
	-1, 155,
	1, 1344,
	506, 1344,
	586, 1344,
	-2, 0,
	-1, 183,
	150, 1457,
	169, 1457,
	182, 1457,
	239, 1457,
	272, 1457,
	338, 1457,
	348, 1457,
	523, 1457,
	-2, 1432,
	-1, 229,
	4, 1496,
	5, 1496,
	6, 1496,
	7, 1496,
	8, 1496,
	9, 1496,
	10, 1496,
	21, 1496,
	22, 1496,
	23, 1496,
	24, 1496,
	25, 1496,
	26, 1496,
	27, 1496,
	29, 1496,
	30, 1496,
	36, 1496,
	37, 1496,
	41, 1496,
	42, 1496,
	43, 1496,
	44, 1496,
	45, 1496,
	46, 1496,
	47, 1496,
	48, 1496,
	49, 1496,
	50, 1496,
	51, 1496,
	53, 1496,
	54, 1496,
	55, 1496,
	56, 1496,
	58, 1496,
	59, 1496,
	60, 1496,
	61, 1496,
	62, 1496,
	63, 1496,
	64, 1496,
	65, 1496,
	66, 1496,
	67, 1496,
	68, 1496,
	69, 1496,
	70, 1496,
	71, 1496,
	73, 1496,
	74, 1496,
	75, 1496,
	77, 1496,
	79, 1496,
	80, 1496,
	81, 1496,
	82, 1496,
	83, 1496,
	84, 1496,
	85, 1496,
	88, 1496,
	89, 1496,
	90, 1496,
	91, 1496,
	92, 1496,
	94, 1496,
	96, 1496,
	97, 1496,
	98, 1496,
	99, 1496,
	100, 1496,
	101, 1496,
	103, 1496,
	104, 1496,
	105, 1496,
	106, 1496,
	107, 1496,
	108, 1496,
	109, 1496,
	110, 1496,
	111, 1496,
	112, 1496,
	113, 1496,
	114, 1496,
	115, 1496,
	116, 1496,
	117, 1496,
	118, 1496,
	119, 1496,
	120, 1496,
	121, 1496,
	122, 1496,
	123, 1496,
	124, 1496,
	125, 1496,
	126, 1496,
	127, 1496,
	128, 1496,
	129, 1496,
	131, 1496,
	132, 1496,
	133, 1496,
	135, 1496,
	136, 1496,
	137, 1496,
	140, 1496,
	141, 1496,
	142, 1496,
	144, 1496,
	145, 1496,
	147, 1496,
	148, 1496,
	149, 1496,
	151, 1496,
	152, 1496,
	153, 1496,
	154, 1496,
	155, 1496,
	156, 1496,
	157, 1496,
	158, 1496,
	159, 1496,
	160, 1496,
	161, 1496,
	162, 1496,
	163, 1496,
	164, 1496,
	165, 1496,
	166, 1496,
	167, 1496,
	168, 1496,
	174, 1496,
	175, 1496,
	176, 1496,
	177, 1496,
	181, 1496,
	183, 1496,
	184, 1496,
	187, 1496,
	188, 1496,
	189, 1496,
	190, 1496,
	191, 1496,
	192, 1496,
	193, 1496,
	194, 1496,
	195, 1496,
	196, 1496,
	197, 1496,
	198, 1496,
	199, 1496,
	200, 1496,
	202, 1496,
	203, 1496,
	205, 1496,
	206, 1496,
	208, 1496,
	209, 1496,
	210, 1496,
	211, 1496,
	212, 1496,
	213, 1496,
	214, 1496,
	215, 1496,
	216, 1496,
	217, 1496,
	218, 1496,
	219, 1496,
	221, 1496,
	222, 1496,
	223, 1496,
	224, 1496,
	225, 1496,
	229, 1496,
	230, 1496,
	231, 1496,
	232, 1496,
	233, 1496,
	235, 1496,
	236, 1496,
	237, 1496,
	238, 1496,
	240, 1496,
	242, 1496,
	243, 1496,
	244, 1496,
	245, 1496,
	246, 1496,
	247, 1496,
	248, 1496,
	249, 1496,
	250, 1496,
	251, 1496,
	255, 1496,
	256, 1496,
	257, 1496,
	258, 1496,
	259, 1496,
	260, 1496,
	262, 1496,
	263, 1496,
	264, 1496,
	266, 1496,
	267, 1496,
	268, 1496,
	269, 1496,
	270, 1496,
	271, 1496,
	273, 1496,
	277, 1496,
	278, 1496,
	279, 1496,
	280, 1496,
	281, 1496,
	282, 1496,
	283, 1496,
	284, 1496,
	285, 1496,
	287, 1496,
	288, 1496,
	289, 1496,
	290, 1496,
	291, 1496,
	292, 1496,
	293, 1496,
	294, 1496,
	295, 1496,
	296, 1496,
	297, 1496,
	298, 1496,
	299, 1496,
	300, 1496,
	301, 1496,
	302, 1496,
	303, 1496,
	304, 1496,
	305, 1496,
	306, 1496,
	307, 1496,
	308, 1496,
	310, 1496,
	311, 1496,
	312, 1496,
	313, 1496,
	314, 1496,
	315, 1496,
	316, 1496,
	317, 1496,
	318, 1496,
	319, 1496,
	320, 1496,
	321, 1496,
	322, 1496,
	323, 1496,
	324, 1496,
	325, 1496,
	326, 1496,
	327, 1496,
	328, 1496,
	329, 1496,
	330, 1496,
	331, 1496,
	332, 1496,
	333, 1496,
	334, 1496,
	335, 1496,
	336, 1496,
	337, 1496,
	340, 1496,
	344, 1496,
	345, 1496,
	346, 1496,
	349, 1496,
	350, 1496,
	351, 1496,
	352, 1496,
	353, 1496,
	354, 1496,
	355, 1496,
	356, 1496,
	357, 1496,
	358, 1496,
	359, 1496,
	360, 1496,
	361, 1496,
	362, 1496,
	363, 1496,
	364, 1496,
	365, 1496,
	366, 1496,
	368, 1496,
	369, 1496,
	370, 1496,
	371, 1496,
	372, 1496,
	373, 1496,
	374, 1496,
	375, 1496,
	376, 1496,
	377, 1496,
	378, 1496,
	379, 1496,
	380, 1496,
	381, 1496,
	382, 1496,
	384, 1496,
	385, 1496,
	387, 1496,
	388, 1496,
	389, 1496,
	390, 1496,
	391, 1496,
	392, 1496,
	393, 1496,
	394, 1496,
	395, 1496,
	396, 1496,
	397, 1496,
	398, 1496,
	400, 1496,
	402, 1496,
	403, 1496,
	404, 1496,
	409, 1496,
	411, 1496,
	412, 1496,
	413, 1496,
	414, 1496,
	415, 1496,
	416, 1496,
	417, 1496,
	418, 1496,
	419, 1496,
	421, 1496,
	422, 1496,
	423, 1496,
	424, 1496,
	425, 1496,
	426, 1496,
	427, 1496,
	428, 1496,
	429, 1496,
	430, 1496,
	432, 1496,
	433, 1496,
	434, 1496,
	435, 1496,
	436, 1496,
	437, 1496,
	438, 1496,
	439, 1496,
	440, 1496,
	441, 1496,
	442, 1496,
	444, 1496,
	445, 1496,
	446, 1496,
	447, 1496,
	448, 1496,
	449, 1496,
	450, 1496,
	451, 1496,
	452, 1496,
	453, 1496,
	454, 1496,
	455, 1496,
	456, 1496,
	457, 1496,
	458, 1496,
	459, 1496,
	460, 1496,
	461, 1496,
	462, 1496,
	463, 1496,
	464, 1496,
	466, 1496,
	468, 1496,
	469, 1496,
	470, 1496,
	471, 1496,
	472, 1496,
	473, 1496,
	474, 1496,
	475, 1496,
	476, 1496,
	477, 1496,
	478, 1496,
	479, 1496,
	480, 1496,
	481, 1496,
	482, 1496,
	483, 1496,
	485, 1496,
	486, 1496,
	487, 1496,
	488, 1496,
	489, 1496,
	491, 1496,
	492, 1496,
	493, 1496,
	494, 1496,
	495, 1496,
	496, 1496,
	497, 1496,
	498, 1496,
	499, 1496,
	501, 1496,
	502, 1496,
	503, 1496,
	504, 1496,
	505, 1496,
	507, 1496,
	509, 1496,
	510, 1496,
	511, 1496,
	512, 1496,
	513, 1496,
	514, 1496,
	515, 1496,
	516, 1496,
	517, 1496,
	518, 1496,
	519, 1496,
	521, 1496,
	522, 1496,
	524, 1496,
	525, 1496,
	526, 1496,
	527, 1496,
	528, 1496,
	529, 1496,
	530, 1496,
	531, 1496,
	532, 1496,
	533, 1496,
	536, 1496,
	537, 1496,
	538, 1496,
	539, 1496,
	540, 1496,
	541, 1496,
	543, 1496,
	544, 1496,
	545, 1496,
	546, 1496,
	548, 1496,
	553, 1496,
	554, 1496,
	555, 1496,
	556, 1496,
	557, 1496,
	558, 1496,
	559, 1496,
	567, 1496,
	574, 1496,
	575, 1496,
	576, 1496,
	583, 1496,
	587, 1496,
	-2, 0,
	-1, 726,
	4, 1245,
	21, 1245,
	22, 1245,
	23, 1245,
	24, 1245,
	25, 1245,
	26, 1245,
	27, 1245,
	29, 1245,
	30, 1245,
	36, 1245,
	41, 1245,
	42, 1245,
	44, 1245,
	45, 1245,
	46, 1245,
	47, 1245,
	48, 1245,
	49, 1245,
	50, 1245,
	51, 1245,
	53, 1245,
	54, 1245,
	55, 1245,
	56, 1245,
	58, 1245,
	59, 1245,
	60, 1245,
	61, 1245,
	62, 1245,
	63, 1245,
	64, 1245,
	68, 1245,
	69, 1245,
	70, 1245,
	71, 1245,
	73, 1245,
	74, 1245,
	75, 1245,
	79, 1245,
	80, 1245,
	81, 1245,
	82, 1245,
	83, 1245,
	84, 1245,
	85, 1245,
	88, 1245,
	89, 1245,
	90, 1245,
	91, 1245,
	92, 1245,
	94, 1245,
	96, 1245,
	97, 1245,
	98, 1245,
	99, 1245,
	100, 1245,
	101, 1245,
	103, 1245,
	104, 1245,
	105, 1245,
	107, 1245,
	108, 1245,
	109, 1245,
	117, 1245,
	118, 1245,
	119, 1245,
	120, 1245,
	121, 1245,
	123, 1245,
	124, 1245,
	125, 1245,
	127, 1245,
	128, 1245,
	129, 1245,
	131, 1245,
	132, 1245,
	133, 1245,
	135, 1245,
	136, 1245,
	137, 1245,
	140, 1245,
	141, 1245,
	142, 1245,
	144, 1245,
	145, 1245,
	147, 1245,
	148, 1245,
	149, 1245,
	151, 1245,
	152, 1245,
	153, 1245,
	154, 1245,
	155, 1245,
	156, 1245,
	157, 1245,
	158, 1245,
	159, 1245,
	160, 1245,
	161, 1245,
	162, 1245,
	163, 1245,
	164, 1245,
	165, 1245,
	166, 1245,
	168, 1245,
	174, 1245,
	175, 1245,
	176, 1245,
	177, 1245,
	181, 1245,
	183, 1245,
	184, 1245,
	188, 1245,
	189, 1245,
	190, 1245,
	191, 1245,
	192, 1245,
	193, 1245,
	194, 1245,
	195, 1245,
	196, 1245,
	197, 1245,
	198, 1245,
	199, 1245,
	200, 1245,
	202, 1245,
	203, 1245,
	205, 1245,
	206, 1245,
	208, 1245,
	209, 1245,
	210, 1245,
	211, 1245,
	212, 1245,
	213, 1245,
	214, 1245,
	215, 1245,
	216, 1245,
	218, 1245,
	219, 1245,
	221, 1245,
	222, 1245,
	223, 1245,
	224, 1245,
	225, 1245,
	229, 1245,
	230, 1245,
	231, 1245,
	232, 1245,
	233, 1245,
	236, 1245,
	237, 1245,
	238, 1245,
	240, 1245,
	242, 1245,
	243, 1245,
	245, 1245,
	247, 1245,
	248, 1245,
	249, 1245,
	251, 1245,
	255, 1245,
	256, 1245,
	257, 1245,
	258, 1245,
	259, 1245,
	260, 1245,
	262, 1245,
	263, 1245,
	264, 1245,
	266, 1245,
	267, 1245,
	269, 1245,
	270, 1245,
	273, 1245,
	277, 1245,
	278, 1245,
	279, 1245,
	282, 1245,
	283, 1245,
	284, 1245,
	285, 1245,
	287, 1245,
	288, 1245,
	289, 1245,
	290, 1245,
	291, 1245,
	292, 1245,
	293, 1245,
	294, 1245,
	295, 1245,
	296, 1245,
	297, 1245,
	298, 1245,
	299, 1245,
	300, 1245,
	301, 1245,
	302, 1245,
	303, 1245,
	304, 1245,
	305, 1245,
	306, 1245,
	307, 1245,
	308, 1245,
	310, 1245,
	312, 1245,
	313, 1245,
	314, 1245,
	315, 1245,
	316, 1245,
	317, 1245,
	318, 1245,
	319, 1245,
	320, 1245,
	321, 1245,
	322, 1245,
	323, 1245,
	325, 1245,
	326, 1245,
	328, 1245,
	330, 1245,
	331, 1245,
	333, 1245,
	334, 1245,
	335, 1245,
	336, 1245,
	337, 1245,
	340, 1245,
	344, 1245,
	345, 1245,
	346, 1245,
	349, 1245,
	350, 1245,
	351, 1245,
	353, 1245,
	355, 1245,
	356, 1245,
	357, 1245,
	358, 1245,
	359, 1245,
	360, 1245,
	361, 1245,
	362, 1245,
	363, 1245,
	364, 1245,
	365, 1245,
	366, 1245,
	368, 1245,
	369, 1245,
	370, 1245,
	371, 1245,
	372, 1245,
	373, 1245,
	374, 1245,
	375, 1245,
	376, 1245,
	377, 1245,
	378, 1245,
	379, 1245,
	380, 1245,
	381, 1245,
	382, 1245,
	384, 1245,
	385, 1245,
	387, 1245,
	388, 1245,
	389, 1245,
	390, 1245,
	391, 1245,
	392, 1245,
	393, 1245,
	394, 1245,
	395, 1245,
	396, 1245,
	397, 1245,
	398, 1245,
	400, 1245,
	402, 1245,
	403, 1245,
	404, 1245,
	409, 1245,
	411, 1245,
	412, 1245,
	413, 1245,
	414, 1245,
	415, 1245,
	416, 1245,
	417, 1245,
	418, 1245,
	419, 1245,
	421, 1245,
	422, 1245,
	423, 1245,
	425, 1245,
	426, 1245,
	427, 1245,
	428, 1245,
	429, 1245,
	430, 1245,
	432, 1245,
	433, 1245,
	434, 1245,
	435, 1245,
	436, 1245,
	437, 1245,
	438, 1245,
	439, 1245,
	440, 1245,
	441, 1245,
	442, 1245,
	444, 1245,
	445, 1245,
	446, 1245,
	447, 1245,
	448, 1245,
	449, 1245,
	451, 1245,
	452, 1245,
	453, 1245,
	454, 1245,
	455, 1245,
	456, 1245,
	458, 1245,
	459, 1245,
	460, 1245,
	461, 1245,
	462, 1245,
	463, 1245,
	464, 1245,
	466, 1245,
	468, 1245,
	469, 1245,
	470, 1245,
	471, 1245,
	472, 1245,
	473, 1245,
	474, 1245,
	475, 1245,
	476, 1245,
	477, 1245,
	478, 1245,
	479, 1245,
	480, 1245,
	481, 1245,
	482, 1245,
	483, 1245,
	485, 1245,
	486, 1245,
	488, 1245,
	489, 1245,
	491, 1245,
	492, 1245,
	493, 1245,
	494, 1245,
	495, 1245,
	496, 1245,
	497, 1245,
	498, 1245,
	499, 1245,
	501, 1245,
	502, 1245,
	503, 1245,
	504, 1245,
	505, 1245,
	507, 1245,
	509, 1245,
	510, 1245,
	511, 1245,
	512, 1245,
	513, 1245,
	514, 1245,
	516, 1245,
	517, 1245,
	518, 1245,
	519, 1245,
	521, 1245,
	522, 1245,
	525, 1245,
	526, 1245,
	527, 1245,
	528, 1245,
	529, 1245,
	530, 1245,
	531, 1245,
	533, 1245,
	536, 1245,
	537, 1245,
	538, 1245,
	539, 1245,
	540, 1245,
	541, 1245,
	543, 1245,
	544, 1245,
	545, 1245,
	546, 1245,
	548, 1245,
	553, 1245,
	554, 1245,
	555, 1245,
	556, 1245,
	557, 1245,
	558, 1245,
	-2, 0,
	-1, 745,
	186, 2253,
	506, 2253,
	566, 2253,
	585, 2253,
	-2, 0,
	-1, 746,
	186, 2359,
	506, 2359,
	566, 2359,
	585, 2359,
	-2, 0,
	-1, 747,
	186, 2240,
	506, 2240,
	566, 2240,
	585, 2240,
	-2, 0,
	-1, 749,
	186, 2490,
	506, 2490,
	566, 2490,
	585, 2490,
	-2, 0,
	-1, 751,
	186, 2530,
	506, 2530,
	566, 2530,
	585, 2530,
	-2, 0,
	-1, 758,
	186, 2386,
	506, 2386,
	566, 2386,
	585, 2386,
	-2, 677,
	-1, 791,
	585, 2189,
	588, 2189,
	-2, 948,
	-1, 792,
	585, 2191,
	588, 2191,
	-2, 949,
	-1, 793,
	585, 2190,
	588, 2190,
	-2, 950,
	-1, 794,
	588, 2116,
	-2, 951,
	-1, 817,
	182, 246,
	-2, 0,
	-1, 841,
	43, 2163,
	-2, 0,
	-1, 842,
	543, 1223,
	-2, 1018,
	-1, 858,
	4, 1625,
	21, 1625,
	22, 1625,
	23, 1625,
	24, 1625,
	25, 1625,
	26, 1625,
	27, 1625,
	29, 1625,
	30, 1625,
	36, 1625,
	41, 1625,
	42, 1625,
	44, 1625,
	45, 1625,
	46, 1625,
	47, 1625,
	48, 1625,
	49, 1625,
	50, 1625,
	51, 1625,
	53, 1625,
	54, 1625,
	55, 1625,
	56, 1625,
	58, 1625,
	59, 1625,
	60, 1625,
	61, 1625,
	62, 1625,
	63, 1625,
	64, 1625,
	68, 1625,
	69, 1625,
	70, 1625,
	71, 1625,
	73, 1625,
	74, 1625,
	75, 1625,
	79, 1625,
	80, 1625,
	81, 1625,
	82, 1625,
	83, 1625,
	84, 1625,
	85, 1625,
	88, 1625,
	89, 1625,
	90, 1625,
	91, 1625,
	92, 1625,
	94, 1625,
	96, 1625,
	97, 1625,
	98, 1625,
	99, 1625,
	100, 1625,
	101, 1625,
	103, 1625,
	104, 1625,
	105, 1625,
	107, 1625,
	108, 1625,
	109, 1625,
	117, 1625,
	118, 1625,
	119, 1625,
	120, 1625,
	121, 1625,
	123, 1625,
	124, 1625,
	125, 1625,
	127, 1625,
	128, 1625,
	129, 1625,
	131, 1625,
	132, 1625,
	133, 1625,
	135, 1625,
	136, 1625,
	137, 1625,
	140, 1625,
	141, 1625,
	142, 1625,
	144, 1625,
	145, 1625,
	147, 1625,
	148, 1625,
	149, 1625,
	151, 1625,
	152, 1625,
	153, 1625,
	154, 1625,
	155, 1625,
	156, 1625,
	157, 1625,
	158, 1625,
	159, 1625,
	160, 1625,
	161, 1625,
	162, 1625,
	163, 1625,
	164, 1625,
	165, 1625,
	166, 1625,
	168, 1625,
	174, 1625,
	175, 1625,
	176, 1625,
	177, 1625,
	181, 1625,
	183, 1625,
	184, 1625,
	188, 1625,
	189, 1625,
	190, 1625,
	191, 1625,
	192, 1625,
	193, 1625,
	194, 1625,
	195, 1625,
	196, 1625,
	197, 1625,
	198, 1625,
	199, 1625,
	200, 1625,
	202, 1625,
	203, 1625,
	205, 1625,
	206, 1625,
	208, 1625,
	209, 1625,
	210, 1625,
	211, 1625,
	212, 1625,
	213, 1625,
	214, 1625,
	215, 1625,
	216, 1625,
	218, 1625,
	219, 1625,
	221, 1625,
	222, 1625,
	223, 1625,
	224, 1625,
	225, 1625,
	229, 1625,
	230, 1625,
	231, 1625,
	232, 1625,
	233, 1625,
	236, 1625,
	237, 1625,
	238, 1625,
	240, 1625,
	242, 1625,
	243, 1625,
	245, 1625,
	247, 1625,
	248, 1625,
	249, 1625,
	251, 1625,
	255, 1625,
	256, 1625,
	257, 1625,
	258, 1625,
	259, 1625,
	260, 1625,
	262, 1625,
	263, 1625,
	264, 1625,
	266, 1625,
	267, 1625,
	269, 1625,
	270, 1625,
	273, 1625,
	277, 1625,
	278, 1625,
	279, 1625,
	282, 1625,
	283, 1625,
	284, 1625,
	285, 1625,
	287, 1625,
	288, 1625,
	289, 1625,
	290, 1625,
	291, 1625,
	292, 1625,
	293, 1625,
	294, 1625,
	295, 1625,
	296, 1625,
	297, 1625,
	298, 1625,
	299, 1625,
	300, 1625,
	301, 1625,
	302, 1625,
	303, 1625,
	304, 1625,
	305, 1625,
	306, 1625,
	307, 1625,
	308, 1625,
	310, 1625,
	312, 1625,
	313, 1625,
	314, 1625,
	315, 1625,
	316, 1625,
	317, 1625,
	318, 1625,
	319, 1625,
	320, 1625,
	321, 1625,
	322, 1625,
	323, 1625,
	325, 1625,
	326, 1625,
	328, 1625,
	330, 1625,
	331, 1625,
	333, 1625,
	334, 1625,
	335, 1625,
	336, 1625,
	337, 1625,
	340, 1625,
	344, 1625,
	345, 1625,
	346, 1625,
	349, 1625,
	350, 1625,
	351, 1625,
	353, 1625,
	355, 1625,
	356, 1625,
	357, 1625,
	358, 1625,
	359, 1625,
	360, 1625,
	361, 1625,
	362, 1625,
	363, 1625,
	364, 1625,
	365, 1625,
	366, 1625,
	368, 1625,
	369, 1625,
	370, 1625,
	371, 1625,
	372, 1625,
	373, 1625,
	374, 1625,
	375, 1625,
	376, 1625,
	377, 1625,
	378, 1625,
	379, 1625,
	380, 1625,
	381, 1625,
	382, 1625,
	384, 1625,
	385, 1625,
	387, 1625,
	388, 1625,
	389, 1625,
	390, 1625,
	391, 1625,
	392, 1625,
	393, 1625,
	394, 1625,
	395, 1625,
	396, 1625,
	397, 1625,
	398, 1625,
	400, 1625,
	402, 1625,
	403, 1625,
	404, 1625,
	409, 1625,
	411, 1625,
	412, 1625,
	413, 1625,
	414, 1625,
	415, 1625,
	416, 1625,
	417, 1625,
	418, 1625,
	419, 1625,
	421, 1625,
	422, 1625,
	423, 1625,
	425, 1625,
	426, 1625,
	427, 1625,
	428, 1625,
	429, 1625,
	430, 1625,
	432, 1625,
	433, 1625,
	434, 1625,
	435, 1625,
	436, 1625,
	437, 1625,
	438, 1625,
	439, 1625,
	440, 1625,
	441, 1625,
	442, 1625,
	444, 1625,
	445, 1625,
	446, 1625,
	447, 1625,
	448, 1625,
	449, 1625,
	451, 1625,
	452, 1625,
	453, 1625,
	454, 1625,
	455, 1625,
	456, 1625,
	458, 1625,
	459, 1625,
	460, 1625,
	461, 1625,
	462, 1625,
	463, 1625,
	464, 1625,
	466, 1625,
	468, 1625,
	469, 1625,
	470, 1625,
	471, 1625,
	472, 1625,
	473, 1625,
	474, 1625,
	475, 1625,
	476, 1625,
	477, 1625,
	478, 1625,
	479, 1625,
	480, 1625,
	481, 1625,
	482, 1625,
	483, 1625,
	485, 1625,
	486, 1625,
	488, 1625,
	489, 1625,
	491, 1625,
	492, 1625,
	493, 1625,
	494, 1625,
	495, 1625,
	496, 1625,
	497, 1625,
	498, 1625,
	499, 1625,
	501, 1625,
	502, 1625,
	503, 1625,
	504, 1625,
	505, 1625,
	507, 1625,
	509, 1625,
	510, 1625,
	511, 1625,
	512, 1625,
	513, 1625,
	514, 1625,
	516, 1625,
	517, 1625,
	518, 1625,
	519, 1625,
	521, 1625,
	522, 1625,
	525, 1625,
	526, 1625,
	527, 1625,
	528, 1625,
	529, 1625,
	530, 1625,
	531, 1625,
	533, 1625,
	536, 1625,
	537, 1625,
	538, 1625,
	539, 1625,
	540, 1625,
	541, 1625,
	543, 1625,
	544, 1625,
	545, 1625,
	546, 1625,
	548, 1625,
	553, 1625,
	554, 1625,
	555, 1625,
	556, 1625,
	557, 1625,
	558, 1625,
	-2, 0,
	-1, 866,
	259, 393,
	-2, 0,
	-1, 937,
	389, 843,
	449, 843,
	489, 843,
	511, 843,
	-2, 0,
	-1, 938,
	389, 842,
	449, 842,
	489, 842,
	511, 842,
	-2, 782,
	-1, 942,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 943,
	1, 817,
	582, 817,
	584, 817,
	586, 817,
	-2, 0,
	-1, 944,
	1, 821,
	582, 821,
	584, 821,
	586, 821,
	-2, 0,
	-1, 945,
	1, 947,
	182, 947,
	582, 947,
	584, 947,
	586, 947,
	-2, 0,
	-1, 953,
	1, 848,
	582, 848,
	584, 848,
	586, 848,
	-2, 0,
	-1, 959,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 960,
	1, 891,
	582, 891,
	584, 891,
	586, 891,
	-2, 0,
	-1, 961,
	1, 894,
	582, 894,
	584, 894,
	586, 894,
	-2, 0,
	-1, 967,
	1, 912,
	582, 912,
	584, 912,
	586, 912,
	-2, 0,
	-1, 968,
	1, 914,
	582, 914,
	584, 914,
	586, 914,
	-2, 0,
	-1, 973,
	1, 942,
	582, 942,
	584, 942,
	586, 942,
	-2, 0,
	-1, 1019,
	169, 1500,
	182, 1500,
	272, 1500,
	338, 1500,
	-2, 1436,
	-1, 1034,
	169, 1499,
	182, 1499,
	272, 1499,
	338, 1499,
	-2, 1433,
	-1, 1060,
	585, 2188,
	-2, 685,
	-1, 1088,
	5, 2180,
	583, 2178,
	-2, 2169,
	-1, 1096,
	5, 2201,
	583, 2198,
	-2, 2189,
	-1, 1097,
	5, 2202,
	583, 2199,
	-2, 2190,
	-1, 1105,
	585, 2186,
	-2, 2168,
	-1, 1106,
	583, 2613,
	-2, 2187,
	-1, 1129,
	583, 2612,
	-2, 2203,
	-1, 1130,
	5, 1700,
	-2, 2583,
	-1, 1131,
	5, 1701,
	-2, 2584,
	-1, 1132,
	5, 1702,
	-2, 2598,
	-1, 1133,
	5, 1703,
	-2, 2562,
	-1, 1134,
	5, 1704,
	-2, 2596,
	-1, 1135,
	5, 1712,
	-2, 2575,
	-1, 1136,
	5, 1699,
	-2, 2571,
	-1, 1137,
	5, 1699,
	-2, 2570,
	-1, 1138,
	5, 1699,
	-2, 2589,
	-1, 1139,
	5, 1710,
	-2, 2564,
	-1, 1140,
	5, 1715,
	-2, 2563,
	-1, 1141,
	5, 1717,
	-2, 2608,
	-1, 1144,
	5, 1739,
	-2, 2601,
	-1, 1145,
	5, 1731,
	-2, 2602,
	-1, 1146,
	5, 1739,
	-2, 2603,
	-1, 1147,
	5, 1735,
	-2, 2604,
	-1, 1148,
	5, 1685,
	-2, 2576,
	-1, 1149,
	5, 1686,
	-2, 2577,
	-1, 1150,
	5, 1687,
	-2, 2565,
	-1, 1178,
	5, 1722,
	-2, 2609,
	-1, 1179,
	5, 1723,
	-2, 2599,
	-1, 1180,
	5, 1724,
	544, 1724,
	-2, 2566,
	-1, 1181,
	5, 1725,
	544, 1725,
	-2, 2567,
	-1, 1218,
	583, 2198,
	-2, 2189,
	-1, 1219,
	583, 2199,
	-2, 2190,
	-1, 1319,
	186, 2530,
	506, 2530,
	566, 2530,
	585, 2530,
	-2, 0,
	-1, 1322,
	1, 663,
	586, 663,
	-2, 1352,
	-1, 1450,
	357, 2164,
	411, 2164,
	451, 2164,
	576, 2164,
	-2, 2154,
	-1, 1461,
	587, 2164,
	-2, 2165,
	-1, 1470,
	1, 1220,
	582, 1220,
	584, 1220,
	586, 1220,
	-2, 1485,
	-1, 1518,
	396, 1017,
	543, 1017,
	-2, 388,
	-1, 1535,
	43, 2162,
	-2, 983,
	-1, 1542,
	1, 1220,
	582, 1220,
	584, 1220,
	586, 1220,
	-2, 1485,
	-1, 1550,
	4, 1245,
	21, 1245,
	22, 1245,
	23, 1245,
	24, 1245,
	25, 1245,
	26, 1245,
	27, 1245,
	29, 1245,
	30, 1245,
	36, 1245,
	41, 1245,
	42, 1245,
	44, 1245,
	45, 1245,
	46, 1245,
	47, 1245,
	48, 1245,
	49, 1245,
	50, 1245,
	51, 1245,
	53, 1245,
	54, 1245,
	55, 1245,
	56, 1245,
	58, 1245,
	59, 1245,
	60, 1245,
	61, 1245,
	62, 1245,
	63, 1245,
	64, 1245,
	68, 1245,
	69, 1245,
	70, 1245,
	71, 1245,
	73, 1245,
	74, 1245,
	75, 1245,
	79, 1245,
	80, 1245,
	81, 1245,
	82, 1245,
	83, 1245,
	84, 1245,
	85, 1245,
	88, 1245,
	89, 1245,
	90, 1245,
	91, 1245,
	92, 1245,
	94, 1245,
	96, 1245,
	97, 1245,
	98, 1245,
	99, 1245,
	100, 1245,
	101, 1245,
	103, 1245,
	104, 1245,
	105, 1245,
	107, 1245,
	108, 1245,
	109, 1245,
	117, 1245,
	118, 1245,
	119, 1245,
	120, 1245,
	121, 1245,
	123, 1245,
	124, 1245,
	125, 1245,
	127, 1245,
	128, 1245,
	129, 1245,
	131, 1245,
	132, 1245,
	133, 1245,
	135, 1245,
	136, 1245,
	137, 1245,
	140, 1245,
	141, 1245,
	142, 1245,
	144, 1245,
	145, 1245,
	147, 1245,
	148, 1245,
	149, 1245,
	151, 1245,
	152, 1245,
	153, 1245,
	154, 1245,
	155, 1245,
	156, 1245,
	157, 1245,
	158, 1245,
	159, 1245,
	160, 1245,
	161, 1245,
	162, 1245,
	163, 1245,
	164, 1245,
	165, 1245,
	166, 1245,
	174, 1245,
	175, 1245,
	176, 1245,
	177, 1245,
	181, 1245,
	183, 1245,
	184, 1245,
	188, 1245,
	189, 1245,
	190, 1245,
	191, 1245,
	192, 1245,
	193, 1245,
	194, 1245,
	195, 1245,
	196, 1245,
	197, 1245,
	198, 1245,
	199, 1245,
	200, 1245,
	202, 1245,
	203, 1245,
	205, 1245,
	206, 1245,
	208, 1245,
	209, 1245,
	210, 1245,
	211, 1245,
	212, 1245,
	213, 1245,
	214, 1245,
	215, 1245,
	216, 1245,
	218, 1245,
	219, 1245,
	221, 1245,
	222, 1245,
	223, 1245,
	224, 1245,
	225, 1245,
	230, 1245,
	231, 1245,
	232, 1245,
	233, 1245,
	236, 1245,
	237, 1245,
	238, 1245,
	240, 1245,
	242, 1245,
	243, 1245,
	245, 1245,
	247, 1245,
	248, 1245,
	249, 1245,
	251, 1245,
	255, 1245,
	256, 1245,
	257, 1245,
	258, 1245,
	259, 1245,
	260, 1245,
	262, 1245,
	263, 1245,
	264, 1245,
	266, 1245,
	267, 1245,
	269, 1245,
	270, 1245,
	273, 1245,
	277, 1245,
	278, 1245,
	279, 1245,
	282, 1245,
	283, 1245,
	284, 1245,
	285, 1245,
	287, 1245,
	288, 1245,
	289, 1245,
	290, 1245,
	291, 1245,
	292, 1245,
	293, 1245,
	294, 1245,
	295, 1245,
	296, 1245,
	297, 1245,
	298, 1245,
	299, 1245,
	300, 1245,
	301, 1245,
	302, 1245,
	303, 1245,
	304, 1245,
	305, 1245,
	306, 1245,
	307, 1245,
	308, 1245,
	310, 1245,
	312, 1245,
	313, 1245,
	314, 1245,
	315, 1245,
	316, 1245,
	317, 1245,
	318, 1245,
	319, 1245,
	320, 1245,
	321, 1245,
	322, 1245,
	323, 1245,
	325, 1245,
	326, 1245,
	330, 1245,
	331, 1245,
	333, 1245,
	334, 1245,
	335, 1245,
	336, 1245,
	337, 1245,
	340, 1245,
	342, 1245,
	344, 1245,
	345, 1245,
	346, 1245,
	349, 1245,
	350, 1245,
	351, 1245,
	353, 1245,
	355, 1245,
	356, 1245,
	357, 1245,
	358, 1245,
	359, 1245,
	360, 1245,
	361, 1245,
	362, 1245,
	363, 1245,
	364, 1245,
	365, 1245,
	366, 1245,
	368, 1245,
	369, 1245,
	370, 1245,
	371, 1245,
	372, 1245,
	373, 1245,
	374, 1245,
	375, 1245,
	376, 1245,
	377, 1245,
	378, 1245,
	379, 1245,
	380, 1245,
	381, 1245,
	382, 1245,
	384, 1245,
	385, 1245,
	387, 1245,
	388, 1245,
	389, 1245,
	390, 1245,
	391, 1245,
	392, 1245,
	393, 1245,
	394, 1245,
	395, 1245,
	396, 1245,
	397, 1245,
	398, 1245,
	400, 1245,
	402, 1245,
	403, 1245,
	404, 1245,
	409, 1245,
	411, 1245,
	412, 1245,
	413, 1245,
	414, 1245,
	415, 1245,
	416, 1245,
	417, 1245,
	418, 1245,
	419, 1245,
	421, 1245,
	422, 1245,
	423, 1245,
	425, 1245,
	426, 1245,
	427, 1245,
	428, 1245,
	429, 1245,
	430, 1245,
	432, 1245,
	433, 1245,
	434, 1245,
	435, 1245,
	436, 1245,
	437, 1245,
	438, 1245,
	439, 1245,
	440, 1245,
	441, 1245,
	442, 1245,
	444, 1245,
	445, 1245,
	446, 1245,
	447, 1245,
	448, 1245,
	449, 1245,
	451, 1245,
	452, 1245,
	453, 1245,
	454, 1245,
	455, 1245,
	456, 1245,
	458, 1245,
	459, 1245,
	460, 1245,
	461, 1245,
	462, 1245,
	463, 1245,
	464, 1245,
	466, 1245,
	468, 1245,
	469, 1245,
	470, 1245,
	471, 1245,
	472, 1245,
	473, 1245,
	474, 1245,
	475, 1245,
	476, 1245,
	477, 1245,
	478, 1245,
	479, 1245,
	480, 1245,
	481, 1245,
	482, 1245,
	483, 1245,
	485, 1245,
	486, 1245,
	488, 1245,
	489, 1245,
	491, 1245,
	492, 1245,
	493, 1245,
	494, 1245,
	495, 1245,
	496, 1245,
	497, 1245,
	498, 1245,
	499, 1245,
	501, 1245,
	502, 1245,
	503, 1245,
	504, 1245,
	505, 1245,
	507, 1245,
	509, 1245,
	510, 1245,
	511, 1245,
	512, 1245,
	513, 1245,
	514, 1245,
	516, 1245,
	517, 1245,
	518, 1245,
	519, 1245,
	521, 1245,
	522, 1245,
	525, 1245,
	526, 1245,
	527, 1245,
	528, 1245,
	529, 1245,
	530, 1245,
	531, 1245,
	533, 1245,
	536, 1245,
	537, 1245,
	538, 1245,
	539, 1245,
	540, 1245,
	541, 1245,
	543, 1245,
	544, 1245,
	545, 1245,
	546, 1245,
	548, 1245,
	553, 1245,
	554, 1245,
	555, 1245,
	556, 1245,
	557, 1245,
	558, 1245,
	-2, 0,
	-1, 1573,
	1, 533,
	582, 533,
	584, 533,
	586, 533,
	-2, 1456,
	-1, 1576,
	4, 2607,
	11, 2607,
	12, 2607,
	14, 2607,
	15, 2607,
	16, 2607,
	17, 2607,
	18, 2607,
	19, 2607,
	21, 2607,
	22, 2607,
	23, 2607,
	24, 2607,
	25, 2607,
	26, 2607,
	27, 2607,
	29, 2607,
	30, 2607,
	33, 2607,
	34, 2607,
	36, 2607,
	38, 2607,
	41, 2607,
	42, 2607,
	44, 2607,
	45, 2607,
	46, 2607,
	47, 2607,
	48, 2607,
	49, 2607,
	50, 2607,
	51, 2607,
	53, 2607,
	54, 2607,
	55, 2607,
	56, 2607,
	58, 2607,
	59, 2607,
	60, 2607,
	61, 2607,
	62, 2607,
	63, 2607,
	64, 2607,
	68, 2607,
	69, 2607,
	70, 2607,
	71, 2607,
	73, 2607,
	74, 2607,
	75, 2607,
	76, 2607,
	79, 2607,
	80, 2607,
	81, 2607,
	82, 2607,
	83, 2607,
	84, 2607,
	85, 2607,
	86, 2607,
	88, 2607,
	89, 2607,
	90, 2607,
	91, 2607,
	92, 2607,
	94, 2607,
	95, 2607,
	96, 2607,
	97, 2607,
	98, 2607,
	99, 2607,
	100, 2607,
	101, 2607,
	103, 2607,
	104, 2607,
	105, 2607,
	106, 2607,
	107, 2607,
	108, 2607,
	109, 2607,
	117, 2607,
	118, 2607,
	119, 2607,
	120, 2607,
	121, 2607,
	123, 2607,
	124, 2607,
	125, 2607,
	127, 2607,
	128, 2607,
	129, 2607,
	131, 2607,
	132, 2607,
	133, 2607,
	135, 2607,
	136, 2607,
	137, 2607,
	140, 2607,
	141, 2607,
	142, 2607,
	144, 2607,
	145, 2607,
	147, 2607,
	148, 2607,
	149, 2607,
	151, 2607,
	152, 2607,
	153, 2607,
	154, 2607,
	155, 2607,
	156, 2607,
	157, 2607,
	158, 2607,
	159, 2607,
	160, 2607,
	161, 2607,
	162, 2607,
	163, 2607,
	164, 2607,
	165, 2607,
	166, 2607,
	170, 2607,
	171, 2607,
	172, 2607,
	173, 2607,
	174, 2607,
	175, 2607,
	176, 2607,
	177, 2607,
	180, 2607,
	181, 2607,
	183, 2607,
	184, 2607,
	187, 2607,
	188, 2607,
	189, 2607,
	190, 2607,
	191, 2607,
	192, 2607,
	193, 2607,
	194, 2607,
	195, 2607,
	196, 2607,
	197, 2607,
	198, 2607,
	199, 2607,
	200, 2607,
	202, 2607,
	203, 2607,
	205, 2607,
	206, 2607,
	208, 2607,
	209, 2607,
	210, 2607,
	211, 2607,
	212, 2607,
	213, 2607,
	214, 2607,
	215, 2607,
	216, 2607,
	217, 2607,
	218, 2607,
	219, 2607,
	220, 2607,
	221, 2607,
	222, 2607,
	223, 2607,
	224, 2607,
	225, 2607,
	227, 2607,
	228, 2607,
	230, 2607,
	231, 2607,
	232, 2607,
	233, 2607,
	235, 2607,
	236, 2607,
	237, 2607,
	238, 2607,
	240, 2607,
	242, 2607,
	243, 2607,
	244, 2607,
	245, 2607,
	246, 2607,
	247, 2607,
	248, 2607,
	249, 2607,
	250, 2607,
	251, 2607,
	253, 2607,
	254, 2607,
	255, 2607,
	256, 2607,
	257, 2607,
	258, 2607,
	259, 2607,
	260, 2607,
	262, 2607,
	263, 2607,
	264, 2607,
	266, 2607,
	267, 2607,
	268, 2607,
	269, 2607,
	270, 2607,
	271, 2607,
	273, 2607,
	277, 2607,
	278, 2607,
	279, 2607,
	282, 2607,
	283, 2607,
	284, 2607,
	285, 2607,
	286, 2607,
	287, 2607,
	288, 2607,
	289, 2607,
	290, 2607,
	291, 2607,
	292, 2607,
	293, 2607,
	294, 2607,
	295, 2607,
	296, 2607,
	297, 2607,
	298, 2607,
	299, 2607,
	300, 2607,
	301, 2607,
	302, 2607,
	303, 2607,
	304, 2607,
	305, 2607,
	306, 2607,
	307, 2607,
	308, 2607,
	310, 2607,
	311, 2607,
	312, 2607,
	313, 2607,
	314, 2607,
	315, 2607,
	316, 2607,
	317, 2607,
	318, 2607,
	319, 2607,
	320, 2607,
	321, 2607,
	322, 2607,
	323, 2607,
	325, 2607,
	326, 2607,
	329, 2607,
	330, 2607,
	331, 2607,
	333, 2607,
	334, 2607,
	335, 2607,
	336, 2607,
	337, 2607,
	340, 2607,
	344, 2607,
	345, 2607,
	346, 2607,
	347, 2607,
	349, 2607,
	350, 2607,
	351, 2607,
	353, 2607,
	355, 2607,
	356, 2607,
	357, 2607,
	358, 2607,
	359, 2607,
	360, 2607,
	361, 2607,
	362, 2607,
	363, 2607,
	364, 2607,
	365, 2607,
	366, 2607,
	368, 2607,
	369, 2607,
	370, 2607,
	371, 2607,
	372, 2607,
	373, 2607,
	374, 2607,
	375, 2607,
	376, 2607,
	377, 2607,
	378, 2607,
	379, 2607,
	380, 2607,
	381, 2607,
	382, 2607,
	384, 2607,
	385, 2607,
	387, 2607,
	388, 2607,
	389, 2607,
	390, 2607,
	391, 2607,
	392, 2607,
	393, 2607,
	394, 2607,
	395, 2607,
	396, 2607,
	397, 2607,
	398, 2607,
	400, 2607,
	402, 2607,
	403, 2607,
	404, 2607,
	409, 2607,
	410, 2607,
	411, 2607,
	412, 2607,
	413, 2607,
	414, 2607,
	415, 2607,
	416, 2607,
	417, 2607,
	418, 2607,
	419, 2607,
	421, 2607,
	422, 2607,
	423, 2607,
	424, 2607,
	425, 2607,
	426, 2607,
	427, 2607,
	428, 2607,
	429, 2607,
	430, 2607,
	431, 2607,
	432, 2607,
	433, 2607,
	434, 2607,
	435, 2607,
	436, 2607,
	437, 2607,
	438, 2607,
	439, 2607,
	440, 2607,
	441, 2607,
	442, 2607,
	444, 2607,
	445, 2607,
	446, 2607,
	447, 2607,
	448, 2607,
	449, 2607,
	451, 2607,
	452, 2607,
	453, 2607,
	454, 2607,
	455, 2607,
	456, 2607,
	457, 2607,
	458, 2607,
	459, 2607,
	460, 2607,
	461, 2607,
	462, 2607,
	463, 2607,
	464, 2607,
	466, 2607,
	468, 2607,
	469, 2607,
	470, 2607,
	471, 2607,
	472, 2607,
	473, 2607,
	474, 2607,
	475, 2607,
	476, 2607,
	477, 2607,
	478, 2607,
	479, 2607,
	480, 2607,
	481, 2607,
	482, 2607,
	483, 2607,
	485, 2607,
	486, 2607,
	488, 2607,
	489, 2607,
	491, 2607,
	492, 2607,
	493, 2607,
	494, 2607,
	495, 2607,
	496, 2607,
	497, 2607,
	498, 2607,
	499, 2607,
	501, 2607,
	502, 2607,
	503, 2607,
	504, 2607,
	505, 2607,
	507, 2607,
	509, 2607,
	510, 2607,
	511, 2607,
	512, 2607,
	513, 2607,
	514, 2607,
	516, 2607,
	517, 2607,
	518, 2607,
	519, 2607,
	521, 2607,
	522, 2607,
	525, 2607,
	526, 2607,
	527, 2607,
	528, 2607,
	529, 2607,
	530, 2607,
	531, 2607,
	533, 2607,
	536, 2607,
	537, 2607,
	538, 2607,
	539, 2607,
	540, 2607,
	541, 2607,
	543, 2607,
	544, 2607,
	545, 2607,
	546, 2607,
	548, 2607,
	553, 2607,
	554, 2607,
	555, 2607,
	556, 2607,
	557, 2607,
	558, 2607,
	559, 2607,
	561, 2607,
	564, 2607,
	565, 2607,
	566, 2607,
	567, 2607,
	568, 2607,
	569, 2607,
	571, 2607,
	572, 2607,
	573, 2607,
	574, 2607,
	575, 2607,
	576, 2607,
	577, 2607,
	578, 2607,
	579, 2607,
	581, 2607,
	584, 2607,
	585, 2607,
	587, 2607,
	588, 2607,
	-2, 0,
	-1, 1581,
	186, 2490,
	506, 2490,
	566, 2490,
	585, 2490,
	-2, 0,
	-1, 1630,
	389, 843,
	449, 843,
	489, 843,
	511, 843,
	-2, 0,
	-1, 1657,
	1, 838,
	582, 838,
	584, 838,
	586, 838,
	-2, 0,
	-1, 1658,
	1, 876,
	582, 876,
	584, 876,
	586, 876,
	-2, 0,
	-1, 1659,
	1, 884,
	582, 884,
	584, 884,
	586, 884,
	-2, 0,
	-1, 1662,
	1, 847,
	582, 847,
	584, 847,
	586, 847,
	-2, 0,
	-1, 1664,
	1, 851,
	582, 851,
	584, 851,
	586, 851,
	-2, 0,
	-1, 1670,
	1, 858,
	582, 858,
	584, 858,
	586, 858,
	-2, 0,
	-1, 1699,
	1, 2552,
	582, 2552,
	584, 2552,
	585, 2552,
	586, 2552,
	-2, 910,
	-1, 1700,
	1, 2487,
	582, 2487,
	584, 2487,
	585, 2487,
	586, 2487,
	-2, 911,
	-1, 1704,
	1, 923,
	582, 923,
	584, 923,
	586, 923,
	-2, 0,
	-1, 1718,
	1, 1347,
	586, 1347,
	-2, 1352,
	-1, 1721,
	169, 1499,
	182, 1499,
	272, 1499,
	338, 1499,
	-2, 1437,
	-1, 1815,
	150, 1458,
	169, 1458,
	182, 1458,
	239, 1458,
	272, 1458,
	338, 1458,
	348, 1458,
	523, 1458,
	-2, 1900,
	-1, 1875,
	584, 2050,
	-2, 0,
	-1, 1910,
	150, 1458,
	169, 1458,
	182, 1458,
	239, 1458,
	272, 1458,
	338, 1458,
	348, 1458,
	523, 1458,
	-2, 1586,
	-1, 1944,
	506, 2487,
	585, 2487,
	588, 2487,
	-2, 0,
	-1, 1961,
	583, 1727,
	-2, 1715,
	-1, 1992,
	186, 2487,
	585, 2487,
	588, 2487,
	-2, 0,
	-1, 2040,
	1, 665,
	586, 665,
	-2, 1352,
	-1, 2166,
	220, 247,
	-2, 2197,
	-1, 2167,
	220, 248,
	-2, 296,
	-1, 2271,
	1, 840,
	582, 840,
	584, 840,
	586, 840,
	-2, 0,
	-1, 2272,
	1, 878,
	582, 878,
	584, 878,
	586, 878,
	-2, 0,
	-1, 2273,
	1, 886,
	582, 886,
	584, 886,
	586, 886,
	-2, 0,
	-1, 2274,
	1, 925,
	582, 925,
	584, 925,
	586, 925,
	-2, 0,
	-1, 2307,
	1, 860,
	582, 860,
	584, 860,
	586, 860,
	-2, 0,
	-1, 2362,
	429, 1526,
	430, 1526,
	-2, 1760,
	-1, 2393,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1780,
	-1, 2394,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1781,
	-1, 2395,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1782,
	-1, 2396,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1783,
	-1, 2397,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1784,
	-1, 2398,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1785,
	-1, 2399,
	95, 0,
	253, 0,
	254, 0,
	568, 0,
	569, 0,
	-2, 1786,
	-1, 2400,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1787,
	-1, 2412,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1799,
	-1, 2413,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1800,
	-1, 2414,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1801,
	-1, 2417,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1806,
	-1, 2423,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1810,
	-1, 2425,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1818,
	-1, 2426,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1819,
	-1, 2427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1820,
	-1, 2428,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1821,
	-1, 2564,
	5, 2201,
	186, 2061,
	583, 2198,
	-2, 2189,
	-1, 2565,
	186, 2062,
	-2, 2558,
	-1, 2566,
	186, 2063,
	-2, 2385,
	-1, 2567,
	186, 2064,
	-2, 2271,
	-1, 2568,
	186, 2065,
	-2, 2325,
	-1, 2569,
	186, 2066,
	-2, 2370,
	-1, 2570,
	186, 2067,
	-2, 2485,
	-1, 2571,
	186, 2068,
	-2, 1883,
	-1, 2641,
	1, 1587,
	2, 1587,
	106, 1587,
	150, 1587,
	169, 1587,
	182, 1587,
	187, 1587,
	204, 1587,
	207, 1587,
	235, 1587,
	239, 1587,
	250, 1587,
	268, 1587,
	272, 1587,
	311, 1587,
	338, 1587,
	342, 1587,
	348, 1587,
	420, 1587,
	424, 1587,
	523, 1587,
	534, 1587,
	550, 1587,
	551, 1587,
	552, 1587,
	562, 1587,
	582, 1587,
	584, 1587,
	586, 1587,
	588, 1587,
	-2, 1586,
	-1, 2654,
	583, 2170,
	-2, 2184,
	-1, 2656,
	1, 313,
	550, 313,
	-2, 1485,
	-1, 2683,
	583, 1726,
	-2, 1716,
	-1, 2860,
	1, 1220,
	582, 1220,
	584, 1220,
	586, 1220,
	-2, 1485,
	-1, 3029,
	343, 1529,
	-2, 2597,
	-1, 3030,
	343, 1530,
	-2, 2471,
	-1, 3034,
	429, 2127,
	430, 2127,
	-2, 1881,
	-1, 3035,
	429, 2131,
	430, 2131,
	-2, 1882,
	-1, 3036,
	429, 2128,
	430, 2128,
	-2, 1881,
	-1, 3037,
	429, 2132,
	430, 2132,
	-2, 1882,
	-1, 3050,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1808,
	-1, 3051,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1812,
	-1, 3057,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1814,
	-1, 3273,
	1, 662,
	582, 662,
	584, 662,
	586, 662,
	-2, 1352,
	-1, 3427,
	43, 2162,
	-2, 984,
	-1, 3432,
	1, 1220,
	582, 1220,
	584, 1220,
	586, 1220,
	-2, 1485,
	-1, 3537,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1816,
	-1, 3544,
	244, 0,
	246, 0,
	329, 0,
	-2, 1835,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1864,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1865,
	-1, 3613,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1866,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1870,
	-1, 3618,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1871,
	-1, 3619,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1872,
	-1, 3665,
	583, 2171,
	-2, 2185,
	-1, 3826,
	585, 2715,
	-2, 1411,
	-1, 3884,
	244, 0,
	246, 0,
	329, 0,
	-2, 1836,
	-1, 3887,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1839,
	-1, 3888,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1841,
	-1, 3980,
	585, 2186,
	-2, 1255,
	-1, 4123,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1840,
	-1, 4124,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1842,
	-1, 4135,
	244, 0,
	-2, 1873,
	-1, 4303,
	244, 0,
	-2, 1874,
	-1, 4485,
	50, 0,
	217, 0,
	271, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 2561,
}

const sqlPrivate = 57344

const sqlLast = 122642

var sqlAct = [...]int{
	265, 4581, 3416, 4537, 4667, 3184, 2938, 4338, 2925, 4478,
	4178, 4360, 3415, 4330, 4484, 2745, 4466, 4608, 2088, 4381,
	4495, 4453, 3976, 4356, 4477, 1482, 4496, 2163, 4497, 4417,
	4437, 4225, 3867, 4256, 2809, 2789, 4164, 3576, 4550, 4434,
	4483, 1222, 4232, 4307, 4079, 4074, 4020, 4040, 4144, 4183,
	2372, 3529, 2238, 4112, 3449, 3810, 3818, 1291, 4061, 4054,
	1044, 4241, 4063, 3753, 3961, 1295, 3043, 1284, 2596, 4270,
	3977, 3295, 1948, 2440, 2247, 793, 3443, 1730, 4084, 3298,
	2022, 3791, 3411, 3773, 2822, 3775, 2096, 2380, 3401, 1355,
	3355, 4140, 756, 2373, 2960, 2245, 3488, 2895, 2914, 3490,
	2947, 793, 3227, 1035, 2949, 3668, 2884, 3190, 3207, 3199,
	1447, 1043, 174, 3866, 868, 1277, 2957, 2940, 3923, 3167,
	1597, 2107, 1885, 1099, 2909, 3188, 2911, 2946, 1211, 2211,
	2747, 2158, 2926, 3284, 2157, 4582, 3317, 2634, 4308, 2377,
	3166, 1823, 2453, 1861, 4, 3636, 3027, 3292, 2956, 2482,
	2636, 1537, 788, 1916, 1454, 259, 2633, 1289, 2153, 2888,
	2837, 108, 1949, 2134, 2141, 1092, 2076, 2788, 1202, 1718,
	2080, 1088, 1263, 2896, 2020, 1338, 2593, 2484, 2473, 2437,
	2066, 2614, 2361, 2342, 2009, 2344, 1886, 1097, 2667, 3413,
	1095, 3234, 1286, 1574, 2919, 1540, 2198, 794, 790, 1595,
	673, 795, 2770, 2950, 695, 174, 2733, 4382, 687, 1638,
	1324, 2476, 1856, 1905, 2623, 2666, 258, 2604, 1205, 1895,
	2454, 1808, 1184, 1142, 1902, 1090, 2560, 1731, 1732, 2343,
	799, 2224, 1219, 2345, 1274, 2526, 183, 1297, 861, 738,
	750, 1670, 184, 2197, 1094, 1572, 1565, 1477, 2095, 4538,
	2366, 1657, 1073, 1998, 1995, 690, 799, 1182, 1737, 44,
	43, 41, 931, 698, 32, 30, 1717, 713, 28, 1201,
	1488, 3078, 951, 842, 1207, 3650, 3074, 3651, 4680, 4670,
	2011, 3186, 2613, 3468, 4655, 2011, 1481, 2011, 2613, 2011,
	4654, 802, 2011, 4644, 2613, 1039, 2011, 2172, 4626, 883,
	4624, 4569, 4182, 4526, 4182, 2172, 4519, 4527, 4517, 4514,
	2613, 4511, 2613, 4515, 4481, 4512, 3459, 802, 2172, 3458,
	1071, 4480, 4479, 4474, 4473, 2172, 2032, 2032, 2032, 4464,
	4462, 4459, 4432, 4182, 4182, 4244, 4182, 3257, 3256, 1199,
	1039, 3139, 3140, 2606, 3157, 3158, 3159, 1040, 4406, 4399,
	4398, 4393, 2674, 2613, 2613, 4182, 4392, 4386, 4352, 3468,
	4182, 2172, 4031, 3882, 4305, 1745, 1746, 4287, 2674, 4284,
	3242, 3853, 4281, 2172, 1185, 1185, 4182, 4234, 4198, 4197,
	4189, 4235, 2172, 2172, 2172, 4188, 4181, 4151, 1776, 4182,
	4182, 2172, 4125, 4103, 4092, 1748, 2674, 2032, 3468, 3944,
	1333, 2172, 4015, 1217, 3139, 3140, 2613, 1333, 4000, 3886,
	3834, 1020, 2613, 2674, 3485, 3828, 3154, 1019, 2694, 3485,
	1745, 1746, 1214, 3789, 3660, 3658, 2246, 3790, 3661, 3659,
	1747, 1241, 3643, 3640, 3560, 2172, 2613, 3556, 2172, 93,
	1767, 2613, 3484, 1776, 3475, 1029, 3485, 3183, 3476, 1764,
	1748, 2613, 2029, 3178, 3177, 3130, 1034, 2613, 2613, 3131,
	3128, 3120, 3087, 2670, 3129, 3121, 1745, 1746, 3088, 1778,
	1779, 1780, 1788, 1789, 1790, 3118, 1213, 3089, 3042, 2613,
	2964, 2613, 1186, 2936, 2032, 1747, 2935, 2234, 1781, 1776,
	2234, 2717, 2613, 2673, 2664, 2613, 1748, 2674, 2613, 2172,
	2693, 1234, 2658, 3880, 229, 1794, 2172, 1745, 1746, 2612,
	3145, 2233, 1188, 2613, 1189, 2234, 4407, 4309, 4300, 4288,
	4244, 2032, 3640, 2605, 1770, 1771, 1772, 1773, 3139, 3140,
	4072, 1747, 4031, 4001, 1753, 2613, 3853, 1748, 3476, 2812,
	2732, 1767, 2045, 2100, 2010, 2026, 2029, 2890, 2171, 2832,
	1764, 231, 1215, 2730, 1745, 1746, 1881, 1778, 1779, 1780,
	1788, 1789, 1790, 1476, 3738, 3532, 3508, 1903, 2146, 3460,
	2650, 1640, 1747, 3145, 3160, 2649, 1604, 1776, 4502, 2648,
	3077, 1775, 1777, 1235, 1748, 2647, 2646, 1190, 3461, 1753,
	1187, 1028, 1027, 1794, 1663, 1026, 1025, 1590, 229, 1024,
	230, 1023, 1022, 3154, 3004, 2904, 1018, 1762, 1763, 1017,
	1016, 1015, 1014, 223, 1013, 1012, 3155, 3139, 3140, 1747,
	1011, 1010, 224, 1009, 1008, 1770, 1771, 1772, 1773, 1767,
	1007, 1006, 1005, 1004, 2012, 1753, 1775, 1777, 1764, 2012,
	1768, 2012, 1003, 2012, 185, 231, 2012, 1481, 1002, 929,
	2012, 928, 3139, 3140, 927, 926, 925, 924, 923, 922,
	921, 920, 919, 918, 917, 916, 915, 914, 913, 912,
	911, 910, 1785, 909, 908, 1795, 1753, 907, 906, 3155,
	905, 904, 1775, 1777, 903, 902, 901, 900, 899, 1502,
	898, 897, 896, 886, 230, 1768, 885, 3145, 881, 1791,
	880, 1792, 874, 873, 860, 859, 816, 815, 1762, 1763,
	814, 813, 805, 1770, 1771, 1772, 1773, 804, 3458, 803,
	771, 229, 862, 1753, 762, 1496, 1783, 761, 760, 744,
	253, 1300, 1097, 252, 148, 251, 250, 2509, 185, 1235,
	2029, 1768, 249, 4086, 248, 2605, 247, 246, 245, 73,
	244, 865, 864, 243, 242, 1097, 1490, 241, 240, 1097,
	1785, 3156, 239, 1795, 1774, 238, 74, 237, 231, 236,
	1775, 1777, 235, 234, 1490, 1358, 233, 1490, 232, 1358,
	3939, 3898, 78, 3681, 1793, 1769, 3145, 1300, 1608, 3654,
	3486, 3230, 3139, 3140, 3100, 3083, 1762, 1763, 2987, 2871,
	2678, 2495, 1782, 3155, 2704, 2655, 4176, 2640, 1097, 2010,
	1097, 2029, 1097, 2026, 1783, 1337, 2693, 230, 1300, 1342,
	2337, 3145, 87, 2479, 3156, 1864, 1328, 1906, 1864, 1768,
	223, 2493, 1863, 1235, 3181, 1863, 2074, 2031, 1929, 224,
	1769, 1834, 1484, 1344, 1300, 1221, 4482, 4461, 1462, 2906,
	1744, 2241, 4367, 1594, 1867, 4291, 4297, 1862, 4312, 4139,
	1457, 185, 866, 4289, 1300, 1774, 4093, 4071, 3949, 1300,
	3921, 3920, 3914, 3182, 2922, 3913, 107, 1097, 3912, 1097,
	3905, 93, 104, 1300, 3904, 3902, 1769, 3897, 3894, 1097,
	1825, 1097, 3155, 1452, 3151, 3152, 3153, 1268, 1271, 3893,
	1501, 3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146, 3147,
	3788, 2480, 1786, 1546, 1549, 3794, 3685, 1281, 3684, 3683,
	3664, 1322, 1765, 1761, 3631, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 3630, 2240, 1495, 1300, 1832, 94,
	3629, 3552, 1351, 1468, 1444, 1449, 4088, 1489, 3156, 3548,
	1308, 1480, 799, 1774, 3225, 1097, 3174, 3165, 1097, 3138,
	3135, 3145, 3134, 3132, 1552, 3148, 3149, 3141, 3142, 3143,
	3144, 3146, 3147, 1042, 1769, 3127, 174, 174, 3126, 3125,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 1827,
	1317, 1997, 3122, 2481, 1479, 2478, 3119, 3099, 1478, 1535,
	1786, 3082, 3075, 2937, 2641, 3139, 3140, 1609, 2466, 1577,
	1579, 1744, 1198, 802, 1784, 2214, 1825, 229, 2179, 1759,
	1760, 1766, 1787, 1765, 1761, 1040, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 229, 1743, 3156, 229, 3908,
	3736, 2905, 1826, 3907, 1824, 4674, 4618, 4617, 2177, 3795,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 4583, 4536, 4534,
	1223, 3578, 4424, 1328, 231, 4359, 1328, 3155, 4348, 4345,
	1749, 1750, 1751, 1752, 1754, 1755, 4344, 4343, 4324, 3248,
	4311, 1097, 231, 4310, 97, 231, 4285, 1097, 3150, 3148,
	3149, 3141, 3142, 3143, 3144, 3146, 3147, 4269, 4268, 3139,
	3140, 1575, 1784, 2443, 4254, 4251, 4250, 1759, 1760, 1766,
	1787, 1765, 1761, 230, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 1722, 4245, 4194, 223, 1490, 1568, 3179,
	229, 230, 4172, 4137, 230, 224, 182, 100, 4120, 103,
	4119, 1665, 2483, 4100, 223, 4099, 4057, 223, 1589, 1745,
	1746, 4032, 3938, 224, 1716, 3919, 224, 185, 3795, 3854,
	1603, 3848, 3845, 229, 3724, 3723, 229, 3708, 3707, 1679,
	2449, 867, 1776, 3705, 3145, 185, 148, 231, 185, 1748,
	3141, 3142, 3143, 3144, 3146, 3147, 3646, 4087, 3634, 2676,
	3543, 229, 1097, 1097, 1097, 1614, 1812, 3487, 1097, 3469,
	3435, 3370, 3330, 3297, 3250, 1219, 3104, 1219, 3103, 3098,
	231, 1631, 3156, 231, 1747, 3141, 3142, 3143, 3144, 3146,
	3147, 3066, 1358, 3222, 1666, 2883, 230, 1883, 1870, 229,
	1869, 1097, 1814, 1868, 793, 1865, 150, 1857, 231, 223,
	1966, 793, 1040, 1855, 1300, 2685, 2684, 2652, 224, 1932,
	2645, 186, 2611, 2491, 1928, 1884, 1879, 2477, 1719, 230,
	1945, 1878, 230, 1877, 1876, 1727, 1892, 1993, 3145, 1726,
	185, 1875, 223, 1874, 1873, 223, 231, 1872, 1871, 1852,
	1020, 224, 1851, 2687, 224, 1850, 1019, 230, 1849, 39,
	1866, 1721, 1848, 1723, 229, 1847, 1740, 1741, 1846, 1940,
	223, 1845, 1844, 863, 1843, 1842, 185, 1841, 1937, 224,
	1300, 1840, 1839, 1838, 1913, 1889, 1890, 1097, 1753, 2508,
	174, 1300, 1827, 1813, 1811, 230, 1806, 1566, 1316, 1239,
	1230, 2921, 2242, 4313, 1185, 4060, 3945, 3890, 223, 1097,
	1933, 231, 3680, 1745, 1746, 1358, 3657, 224, 3649, 3086,
	1858, 1859, 3150, 3148, 3149, 3141, 3142, 3143, 3144, 3146,
	3147, 2090, 2643, 1960, 1571, 1775, 1777, 2065, 1040, 185,
	4156, 3947, 2063, 1748, 3155, 3679, 1217, 1826, 1217, 3246,
	4003, 3139, 3140, 2494, 1809, 2038, 3464, 4175, 229, 799,
	230, 229, 1935, 1924, 1328, 1214, 799, 1214, 1936, 2072,
	1341, 3530, 4615, 223, 4607, 2810, 4346, 2037, 1747, 2065,
	4292, 4246, 224, 2492, 229, 4237, 4236, 4242, 4290, 2793,
	4091, 1914, 4034, 2065, 1768, 1911, 1334, 1904, 1745, 1746,
	4033, 1333, 1941, 4002, 185, 231, 3941, 3857, 231, 1989,
	2014, 1882, 3856, 3855, 3652, 3471, 3470, 1906, 1847, 1213,
	802, 1213, 2100, 2016, 3798, 3748, 2018, 802, 1748, 1714,
	1340, 231, 2023, 1963, 1333, 1954, 2025, 2143, 1923, 1922,
	1921, 2028, 1333, 1919, 1918, 1300, 1300, 1917, 1847, 1908,
	3124, 2001, 3123, 1864, 230, 1358, 3048, 230, 1339, 2040,
	1863, 1946, 2775, 1747, 1336, 1630, 2051, 223, 3721, 3362,
	223, 3299, 1836, 1000, 73, 3418, 224, 3417, 2263, 224,
	230, 3480, 1680, 1639, 4548, 2239, 1833, 4233, 4522, 3156,
	4507, 74, 4494, 223, 3402, 1215, 2961, 1215, 185, 4141,
	3333, 185, 224, 1640, 2159, 3802, 3785, 78, 3750, 2128,
	3745, 2133, 3729, 1330, 2138, 3186, 2036, 2001, 1001, 3505,
	3271, 3580, 2818, 2474, 185, 3092, 2772, 2683, 2001, 1880,
	2215, 4503, 1860, 3409, 2034, 2208, 1545, 2479, 1473, 1769,
	3143, 3144, 3146, 3147, 2043, 1311, 1267, 87, 4516, 1300,
	2829, 1300, 4513, 1300, 3454, 4168, 2826, 2068, 3700, 2058,
	4339, 4075, 2824, 1197, 4431, 2164, 2169, 1753, 4321, 1300,
	1300, 3302, 1570, 3716, 2944, 3394, 2918, 4566, 2749, 4567,
	1300, 2817, 4597, 3524, 3275, 2771, 1618, 866, 4215, 3990,
	2352, 2106, 1300, 1335, 1300, 1300, 1300, 855, 4504, 1512,
	3763, 107, 799, 2718, 1520, 2313, 93, 104, 2311, 2736,
	1474, 1677, 2161, 4669, 998, 996, 994, 793, 992, 4208,
	2204, 4200, 989, 3247, 2734, 2480, 2249, 2736, 3277, 2579,
	2126, 3149, 3141, 3142, 3143, 3144, 3146, 3147, 1571, 4029,
	4028, 3761, 2734, 3760, 1479, 2262, 3752, 2209, 1478, 2350,
	1331, 2057, 2056, 3744, 2221, 2065, 2067, 3703, 3743, 1332,
	3741, 3740, 3728, 802, 94, 3695, 1678, 3762, 3694, 981,
	2244, 3398, 2125, 3397, 3241, 1038, 2137, 3097, 2522, 2052,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 2229, 1521,
	2267, 2752, 3096, 3095, 2170, 3094, 3052, 2100, 2255, 2835,
	2834, 856, 2831, 2677, 1097, 2820, 1097, 2481, 2808, 2478,
	1040, 1676, 1040, 1097, 2807, 2803, 1966, 1966, 1358, 2802,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 2218, 1097, 2190, 1097, 1097,
	1097, 1097, 2189, 2231, 1037, 2227, 1616, 2097, 2801, 2250,
	4169, 2780, 799, 2060, 2779, 2740, 2223, 2352, 1341, 2354,
	1097, 2665, 4598, 1097, 1097, 2424, 1575, 2341, 1575, 2672,
	2351, 1097, 1317, 1720, 2235, 1097, 2236, 1097, 1097, 1568,
	2093, 2226, 2521, 2226, 2773, 1358, 3299, 2382, 2773, 97,
	2239, 1097, 1097, 1097, 1097, 2289, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 2254, 2915, 3360, 2320, 1333, 2098,
	2099, 986, 1558, 802, 1557, 1556, 2350, 1555, 1340, 1960,
	1960, 1516, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 2455, 2456, 2271, 3506, 1097, 2483, 1253, 2335, 2094,
	2259, 182, 100, 2349, 103, 2455, 2471, 1219, 1529, 1341,
	2336, 976, 3954, 1039, 1358, 1475, 1570, 4602, 2378, 2379,
	2330, 1755, 2725, 1219, 2307, 2439, 2365, 2062, 229, 2751,
	2131, 2517, 3007, 2967, 1611, 1033, 867, 3332, 2439, 1097,
	1358, 148, 2188, 2790, 2791, 2657, 4118, 2777, 1924, 1534,
	2563, 2563, 2577, 1689, 2455, 2348, 2279, 2597, 2599, 3147,
	2327, 2041, 2340, 2603, 4004, 2061, 2339, 2346, 2353, 1340,
	2338, 2474, 2763, 3953, 2317, 231, 4628, 2797, 2470, 1963,
	1963, 1954, 1954, 1040, 1020, 2790, 2791, 1020, 1020, 1632,
	2369, 4332, 1040, 2370, 2371, 3040, 1040, 3025, 2628, 2790,
	2791, 150, 1675, 1751, 1752, 1754, 1755, 2653, 2144, 2762,
	2276, 2477, 4603, 1725, 2620, 4566, 186, 2351, 2228, 3985,
	1661, 1323, 3361, 1315, 230, 1713, 1048, 977, 3514, 2329,
	1913, 2270, 1307, 858, 857, 3513, 3001, 223, 4611, 2451,
	2447, 3010, 1185, 1300, 1300, 2519, 224, 2445, 2483, 4027,
	2520, 1541, 1612, 2523, 2828, 2524, 2525, 2468, 2140, 894,
	3742, 1661, 3713, 3274, 3739, 2280, 3396, 4500, 185, 174,
	2750, 2739, 1640, 1640, 1628, 1894, 3569, 3725, 1217, 1693,
	2272, 2642, 2139, 3358, 1040, 1358, 2827, 2619, 1036, 1334,
	2349, 4586, 2825, 4578, 1217, 2735, 3973, 1214, 2823, 1539,
	2830, 2713, 2671, 2800, 2707, 3973, 2588, 2778, 1487, 2572,
	1494, 4334, 1500, 1214, 2601, 2135, 2559, 2609, 2610, 1966,
	1660, 1658, 4605, 3039, 2625, 2626, 2627, 2621, 2632, 1328,
	3969, 2638, 2639, 1672, 1866, 4585, 2435, 2739, 2663, 3969,
	2679, 1911, 2273, 3962, 2098, 2099, 2668, 2176, 2175, 1334,
	2706, 1213, 2312, 3063, 887, 2310, 1898, 1358, 1617, 1226,
	3960, 1660, 990, 990, 990, 2433, 991, 1213, 4631, 3964,
	990, 1300, 4555, 3009, 2136, 3872, 2715, 1588, 3871, 1593,
	3711, 3451, 3061, 1659, 3970, 1518, 2686, 1097, 1097, 1602,
	1097, 1607, 2741, 3970, 2690, 3452, 2698, 2709, 1858, 1859,
	2701, 1224, 2702, 3006, 1901, 685, 1330, 4117, 2776, 2699,
	769, 4658, 793, 2692, 1300, 2703, 2689, 978, 4413, 1896,
	3983, 2326, 2156, 2716, 2738, 2483, 2708, 1215, 2108, 2714,
	3726, 680, 2887, 2710, 4160, 3963, 2821, 1899, 2782, 2798,
	4501, 3286, 1960, 1215, 1228, 1300, 1031, 853, 976, 852,
	2811, 2112, 1515, 1664, 2929, 3032, 3033, 1300, 2805, 1300,
	2721, 2069, 2070, 2902, 2144, 2719, 1330, 3566, 1252, 2958,
	2866, 2766, 1033, 3451, 1300, 2868, 2155, 2011, 2804, 2723,
	1897, 2783, 3770, 4468, 2781, 4469, 1335, 3349, 4609, 4354,
	2328, 2792, 2794, 2795, 2796, 2744, 2737, 2799, 4340, 2754,
	2757, 1541, 3008, 3276, 1687, 734, 2429, 1237, 2109, 4604,
	1227, 3201, 2132, 2724, 3373, 1097, 2968, 2969, 1032, 767,
	2988, 4554, 2989, 3058, 1690, 2430, 2278, 2975, 2976, 2977,
	2431, 3244, 3341, 2722, 2436, 1853, 3771, 799, 4499, 2144,
	3314, 3350, 1963, 1331, 1954, 2806, 1335, 3059, 2898, 3567,
	2816, 3064, 1332, 2862, 4049, 174, 2965, 979, 2091, 987,
	4403, 2970, 2421, 2971, 977, 2943, 3868, 799, 1097, 3054,
	4333, 2985, 3984, 4577, 1097, 1097, 3769, 2962, 4130, 1479,
	703, 3348, 2438, 2869, 4451, 3965, 3342, 1615, 2933, 976,
	3966, 2931, 4610, 1900, 3965, 2881, 3313, 2465, 802, 3966,
	888, 889, 2123, 1331, 4442, 2984, 2891, 2863, 4012, 980,
	2892, 1805, 1332, 1033, 2113, 3102, 2656, 2993, 3012, 2995,
	3014, 2997, 1613, 1688, 4632, 4612, 3340, 2624, 802, 1097,
	1097, 895, 2924, 4529, 2637, 1097, 1898, 4114, 2934, 2081,
	1039, 3968, 2945, 4530, 2082, 3287, 3582, 2861, 1097, 1097,
	3968, 2001, 4619, 2120, 1097, 1097, 3015, 3971, 2963, 3017,
	1097, 1691, 2275, 4059, 1724, 2913, 3971, 2932, 2100, 1097,
	1097, 1097, 3862, 2103, 1314, 1097, 3676, 2129, 4279, 2446,
	2114, 2115, 1575, 2269, 1901, 1097, 1242, 2991, 3873, 3712,
	2990, 3498, 3526, 3023, 1735, 4361, 875, 2982, 2483, 2622,
	3491, 3085, 1097, 3200, 2110, 977, 3055, 2121, 1920, 3318,
	2992, 4498, 2994, 2432, 2996, 1894, 3020, 1899, 3031, 4553,
	2124, 1333, 4565, 2434, 4563, 1627, 1629, 2104, 768, 2419,
	3060, 4271, 2422, 3021, 3005, 4380, 3022, 2081, 3080, 3081,
	3062, 4253, 2082, 3084, 4272, 4401, 2111, 2119, 2365, 1692,
	3026, 3041, 1645, 2736, 978, 3793, 4064, 2083, 2081, 3816,
	3320, 3439, 2196, 2082, 1891, 4659, 1240, 2102, 2755, 4050,
	3076, 1225, 681, 4113, 2087, 4065, 770, 4273, 1233, 672,
	766, 1333, 3967, 2418, 4402, 4191, 3620, 3869, 890, 891,
	2368, 3967, 1097, 1097, 1097, 3778, 1898, 3493, 2101, 1734,
	3778, 1097, 1097, 1097, 3776, 2147, 1097, 2053, 3235, 3776,
	2154, 3053, 3492, 4637, 4190, 1040, 1097, 1219, 1358, 4262,
	4320, 3974, 1097, 3319, 1097, 3193, 3194, 3917, 3988, 3817,
	3974, 2012, 2050, 1219, 3756, 3987, 3699, 3670, 3293, 4275,
	3440, 3498, 3431, 3289, 1901, 2903, 2084, 2089, 682, 2897,
	3491, 1358, 1734, 2885, 2222, 2083, 2216, 2210, 2202, 1896,
	2116, 3091, 4274, 1219, 2182, 1729, 1358, 3565, 1509, 1244,
	3635, 743, 2087, 1900, 3176, 4418, 2083, 1899, 3527, 2739,
	4276, 3780, 4383, 4528, 2318, 1966, 3780, 2358, 3215, 1358,
	3195, 3671, 1030, 2087, 979, 978, 683, 2046, 684, 1056,
	3819, 3240, 1733, 4080, 1300, 1300, 2882, 4362, 2048, 3691,
	4115, 1255, 2784, 1805, 1662, 4231, 3779, 3672, 4229, 3669,
	1897, 3779, 4171, 2148, 3254, 1734, 3305, 1097, 3301, 2085,
	2260, 3300, 3046, 3024, 3648, 2122, 2117, 2662, 3874, 2661,
	3203, 1097, 876, 877, 2084, 2089, 980, 3493, 3198, 2049,
	3197, 1300, 2090, 3784, 2660, 1733, 1966, 1550, 2659, 3281,
	3282, 2132, 3492, 1564, 1562, 2084, 2089, 3229, 1735, 2420,
	893, 1551, 3324, 2889, 1097, 3621, 2091, 3171, 3172, 3173,
	3303, 1037, 4327, 3307, 3622, 4062, 2090, 3272, 1217, 2130,
	1300, 3228, 3221, 3205, 3204, 3265, 3214, 4226, 3233, 3213,
	806, 3278, 3187, 1328, 1217, 3216, 3217, 1214, 1960, 3224,
	3774, 4041, 1300, 3202, 1300, 3494, 3495, 3496, 3497, 4636,
	2760, 1735, 3875, 1214, 2359, 3918, 3322, 2085, 1733, 2127,
	3706, 1358, 2143, 1900, 1217, 979, 3986, 3304, 3481, 2220,
	3309, 2143, 1300, 3311, 4179, 3209, 1300, 3245, 2085, 3405,
	3376, 3489, 3378, 1214, 3290, 3382, 3363, 4097, 2756, 3388,
	2131, 1213, 3237, 3238, 3239, 3219, 3323, 3220, 3335, 1300,
	2079, 3696, 3251, 3252, 2091, 3253, 1300, 1213, 1300, 1960,
	4574, 3777, 1358, 3262, 2785, 2786, 3777, 980, 4358, 793,
	3266, 4158, 1646, 3261, 2966, 2091, 3263, 3264, 3273, 2867,
	1300, 3267, 4363, 3268, 3692, 3269, 3357, 1213, 1963, 3414,
	1954, 2865, 1300, 3279, 2248, 3371, 3673, 1621, 3294, 4421,
	3339, 4277, 3337, 3353, 2077, 4328, 257, 4278, 4096, 1219,
	878, 879, 3374, 3447, 3359, 3236, 4428, 1215, 2151, 4415,
	3210, 2001, 2001, 3321, 3351, 3280, 4166, 2958, 4180, 2615,
	3430, 3423, 2086, 1215, 1300, 1300, 2958, 742, 2631, 3924,
	3445, 3331, 3637, 3344, 2078, 3494, 3495, 3496, 3497, 1936,
	2490, 3345, 1709, 4446, 3383, 3346, 4576, 1300, 3389, 1963,
	2489, 1954, 3347, 1215, 2618, 4518, 3438, 3364, 2001, 3456,
	3208, 4167, 2149, 4347, 2322, 3372, 3400, 3169, 3403, 4136,
	3467, 3385, 1563, 1561, 3916, 3395, 4422, 3391, 1711, 892,
	3783, 1708, 4329, 3168, 1706, 1684, 3542, 1358, 1682, 1656,
	1358, 3503, 3212, 1654, 3502, 2617, 1652, 2001, 2782, 3255,
	2616, 3697, 2150, 3133, 1650, 1648, 1642, 3507, 1637, 1635,
	1560, 3407, 3446, 3399, 799, 3065, 807, 808, 3441, 2001,
	2086, 2001, 2886, 1097, 3448, 3428, 2819, 174, 174, 1097,
	1097, 3427, 3426, 1097, 1097, 1097, 2774, 1097, 2688, 3499,
	3500, 2086, 2331, 1931, 1927, 1712, 1097, 1966, 1599, 2001,
	3453, 2309, 3522, 2001, 3455, 1097, 3521, 3479, 1097, 3462,
	3465, 3466, 3483, 1040, 1358, 1729, 3003, 3002, 2973, 2347,
	1217, 3520, 1671, 1097, 2284, 802, 2201, 2181, 3477, 3519,
	1994, 1358, 1837, 1610, 1533, 4493, 4013, 3747, 3746, 1214,
	4014, 1966, 1966, 1097, 1097, 3999, 1097, 1097, 1097, 3211,
	4414, 4078, 4019, 3517, 3958, 3815, 3806, 3759, 3719, 3717,
	3375, 3698, 3523, 988, 1097, 4073, 3528, 3434, 1097, 3545,
	1966, 1966, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 3516, 1097, 1213, 2324, 3594, 3501, 3595, 2323, 1097,
	1097, 1966, 3429, 3525, 3419, 3444, 1097, 810, 809, 4542,
	4551, 3562, 1710, 3554, 3555, 1707, 2916, 1097, 1705, 1683,
	1960, 2908, 1681, 1655, 2901, 2894, 2893, 1653, 1219, 1219,
	1651, 2879, 1097, 3510, 2864, 3511, 2705, 3512, 1649, 1647,
	1641, 2700, 1636, 1634, 1559, 2180, 2178, 3550, 2160, 2145,
	2118, 2105, 1939, 2092, 2033, 2030, 2027, 2024, 2019, 2017,
	3561, 1358, 2013, 2004, 1960, 1960, 811, 812, 3666, 1215,
	1738, 3577, 4064, 3386, 3632, 3568, 3570, 3571, 2154, 1194,
	3584, 2308, 3044, 4567, 2054, 3018, 3653, 3016, 4456, 4102,
	4095, 4065, 4094, 1960, 1960, 4026, 3592, 3674, 3675, 3950,
	3593, 2959, 2073, 2378, 3585, 1195, 3572, 3597, 1097, 3599,
	2334, 3686, 3687, 3688, 3639, 1514, 3624, 993, 995, 997,
	1963, 174, 1954, 4264, 1960, 2736, 2736, 2761, 1097, 3591,
	4257, 3827, 2378, 3600, 2100, 3644, 3645, 2219, 3625, 2274,
	2734, 2758, 1703, 1704, 1276, 1275, 730, 2304, 2303, 4455,
	2281, 3991, 1745, 1746, 3633, 4021, 2332, 1633, 1745, 1746,
	2764, 1097, 1097, 3628, 1963, 1963, 1954, 1954, 4299, 3641,
	3642, 3925, 3903, 3316, 2765, 2787, 1742, 3045, 1309, 1243,
	1739, 4570, 1748, 4561, 3755, 1105, 4523, 3655, 686, 3803,
	254, 3387, 2765, 1963, 1963, 1954, 1954, 2878, 2306, 1217,
	1217, 1097, 2333, 2203, 1320, 2826, 3754, 3656, 2824, 2833,
	2813, 2767, 4408, 4374, 2815, 1196, 4368, 1747, 1214, 1214,
	786, 4326, 1276, 1747, 1963, 1300, 1954, 2814, 1300, 3730,
	1276, 261, 261, 261, 843, 675, 676, 669, 691, 675,
	691, 701, 4248, 697, 741, 1966, 2769, 4224, 759, 4159,
	3813, 3735, 3737, 765, 3805, 3734, 3702, 3792, 3682, 2768,
	261, 3663, 3433, 2923, 2602, 2039, 1947, 4606, 4177, 3751,
	3243, 4635, 1213, 1213, 3757, 4370, 1300, 3689, 3139, 3140,
	872, 3690, 1097, 3722, 3749, 1481, 261, 4448, 1620, 3727,
	1219, 1097, 4449, 3829, 1619, 2872, 1745, 1746, 2875, 2782,
	2877, 1300, 1300, 1300, 2929, 4448, 3836, 2728, 2729, 3820,
	4449, 3895, 4580, 2726, 2727, 2485, 3678, 2728, 1300, 2726,
	2518, 3812, 3718, 3782, 3720, 3799, 3772, 1686, 4249, 3781,
	1685, 2958, 4209, 1300, 4023, 3824, 4018, 4017, 3891, 1358,
	3677, 3821, 3573, 3380, 2920, 3377, 1831, 2920, 1215, 1215,
	1830, 4621, 4587, 4412, 4411, 4410, 3840, 4314, 3768, 4227,
	3766, 4204, 4157, 1358, 4155, 4153, 1097, 1097, 1960, 3786,
	3804, 4052, 1097, 1097, 1966, 3852, 4038, 1097, 1097, 3989,
	1097, 3823, 3946, 3851, 1097, 3833, 3787, 3715, 3709, 3437,
	3436, 3310, 3260, 3758, 3809, 1097, 3000, 3807, 2981, 2980,
	2979, 2978, 2907, 2880, 3825, 2759, 3800, 3294, 3822, 675,
	675, 1097, 2696, 2691, 2681, 3831, 3835, 261, 2680, 3841,
	3842, 3830, 2669, 2998, 3858, 2450, 2325, 3859, 3876, 3849,
	2305, 2302, 3850, 2301, 3843, 3846, 2300, 2299, 3847, 2298,
	2217, 2191, 2187, 2186, 2185, 2184, 3885, 3877, 3889, 2183,
	2007, 2006, 2005, 3860, 2003, 1938, 1702, 1701, 1643, 1528,
	1527, 1217, 1526, 1525, 3870, 2001, 1524, 1523, 1963, 1522,
	1954, 1219, 1517, 1513, 1511, 1285, 1510, 1467, 1466, 1219,
	1214, 1465, 1464, 1358, 1349, 1358, 1348, 1347, 1346, 1345,
	1313, 1312, 1219, 1262, 1261, 1260, 1259, 1960, 1258, 1257,
	1256, 1254, 3930, 1300, 1300, 1249, 1248, 1247, 1246, 1245,
	1177, 2044, 1358, 999, 985, 3258, 3259, 4331, 3972, 2321,
	1695, 92, 1519, 1450, 829, 86, 1461, 1285, 2152, 3714,
	956, 4445, 1503, 4353, 1213, 837, 1219, 4430, 1219, 3801,
	3951, 3952, 3312, 2836, 2283, 1644, 2285, 3915, 3223, 2644,
	4400, 3899, 3101, 1356, 4306, 3865, 4129, 1455, 2488, 1300,
	3981, 1835, 3288, 3992, 3982, 3180, 88, 3933, 1081, 1358,
	1127, 1300, 4048, 4047, 1300, 3959, 174, 3701, 3926, 3994,
	3995, 2948, 2362, 1358, 4045, 3929, 3931, 4044, 1951, 3932,
	3927, 3928, 1285, 1285, 3937, 1953, 1047, 1963, 1361, 1954,
	1817, 3338, 4467, 3940, 1822, 4022, 2055, 4024, 1087, 3922,
	1215, 2071, 2064, 2682, 1300, 1300, 2562, 1104, 3955, 1101,
	3228, 3993, 1955, 3352, 1957, 3354, 1103, 1102, 1956, 3957,
	1854, 1100, 1950, 3811, 1300, 2927, 4042, 3463, 1569, 1567,
	958, 2059, 1217, 3936, 2444, 2472, 1358, 3090, 1828, 1062,
	1217, 1300, 1083, 3384, 2469, 1238, 1072, 3390, 4039, 1061,
	4025, 1214, 3206, 1217, 3978, 3185, 3978, 4016, 3450, 1214,
	3662, 4036, 2357, 847, 3136, 2475, 1219, 1229, 2585, 2578,
	2574, 4070, 1214, 3270, 4081, 4011, 1300, 1300, 1300, 2917,
	3997, 4030, 1715, 4143, 1807, 2928, 1343, 1065, 4098, 1358,
	4035, 4008, 2442, 4006, 4101, 1819, 4009, 1217, 3070, 1217,
	2367, 1097, 1097, 1097, 3457, 1213, 4082, 3226, 2675, 4452,
	3581, 2580, 2195, 1213, 1193, 4043, 1214, 1192, 1214, 1358,
	4076, 4085, 4067, 4058, 1097, 4037, 1213, 1097, 1097, 1236,
	1191, 4436, 4433, 2142, 3844, 3412, 2047, 1097, 2720, 1797,
	1966, 4083, 3420, 1077, 1460, 1097, 1097, 3191, 3482, 1530,
	764, 4184, 1089, 4090, 1796, 2857, 4069, 2856, 4323, 1329,
	1358, 1327, 1300, 1326, 4121, 1325, 4594, 4657, 3710, 228,
	1213, 4105, 1213, 4104, 4109, 3038, 4110, 1736, 4116, 1728,
	225, 1215, 227, 1358, 226, 4053, 2001, 3667, 3232, 1215,
	4521, 1097, 3732, 3404, 3978, 23, 22, 4107, 2001, 21,
	1097, 2001, 1215, 112, 42, 20, 128, 147, 1097, 146,
	120, 1966, 4138, 145, 144, 143, 4126, 4132, 142, 149,
	1097, 141, 140, 1097, 135, 139, 138, 137, 136, 134,
	132, 133, 127, 131, 130, 1097, 129, 1217, 126, 4149,
	4150, 125, 1358, 124, 123, 122, 1215, 121, 1215, 1300,
	4187, 119, 4162, 1231, 1300, 1300, 1214, 118, 117, 116,
	115, 2001, 114, 1960, 113, 755, 752, 4170, 61, 60,
	4163, 111, 110, 19, 40, 14, 65, 3325, 3326, 4161,
	3327, 3328, 3329, 4203, 66, 18, 1251, 13, 35, 91,
	102, 4239, 4214, 3414, 101, 36, 99, 98, 261, 1358,
	261, 261, 1300, 1280, 261, 1290, 4230, 34, 4152, 17,
	1213, 16, 4205, 15, 4201, 96, 1310, 3067, 3068, 95,
	1219, 1219, 33, 3365, 3366, 759, 3367, 3368, 3369, 4211,
	31, 4247, 263, 4263, 1960, 4258, 4220, 4219, 11, 9,
	1097, 1097, 4282, 4283, 4228, 8, 4223, 37, 4206, 261,
	1915, 261, 261, 1280, 4243, 261, 261, 1097, 1966, 4261,
	4238, 1290, 12, 1963, 1461, 1954, 4267, 4259, 5, 179,
	178, 181, 261, 4193, 1483, 4222, 4286, 177, 180, 4218,
	4260, 4216, 90, 4255, 176, 4266, 1215, 4280, 4085, 4265,
	1930, 175, 89, 1097, 29, 1507, 1097, 4195, 4196, 10,
	171, 4240, 3797, 1219, 81, 173, 172, 170, 4295, 4296,
	169, 1461, 168, 82, 1532, 1219, 79, 1290, 167, 4294,
	85, 261, 261, 4319, 1280, 4210, 166, 4212, 80, 4213,
	4304, 84, 83, 27, 1963, 6, 1954, 4342, 64, 7,
	4111, 3504, 105, 759, 106, 261, 261, 4318, 3978, 3978,
	38, 77, 76, 4298, 75, 2090, 26, 1097, 1097, 63,
	4341, 3162, 3163, 3164, 4357, 25, 212, 1097, 872, 4315,
	211, 4336, 1219, 4335, 210, 1219, 209, 208, 207, 1300,
	206, 1960, 205, 200, 199, 204, 2001, 2168, 202, 1300,
	1300, 1217, 1217, 4349, 4377, 201, 203, 4379, 198, 215,
	214, 220, 219, 4351, 218, 217, 1300, 216, 213, 4391,
	1214, 1214, 222, 2075, 197, 4364, 196, 4365, 4366, 1060,
	1097, 1097, 4369, 195, 4372, 193, 4376, 4371, 189, 188,
	1097, 3978, 192, 194, 191, 4243, 4396, 4385, 4397, 190,
	4388, 187, 261, 3978, 4384, 221, 4389, 4390, 72, 164,
	165, 71, 163, 162, 161, 160, 4387, 159, 158, 157,
	70, 261, 4395, 4394, 1213, 1213, 1097, 1097, 24, 1097,
	2, 4405, 1, 0, 1217, 0, 0, 0, 4409, 0,
	0, 1963, 4423, 1954, 0, 0, 1217, 0, 4404, 4450,
	4427, 0, 0, 1214, 3028, 4454, 4435, 4438, 0, 0,
	3978, 0, 4447, 3978, 0, 1214, 0, 4426, 4425, 3767,
	0, 0, 4472, 0, 0, 0, 0, 0, 4444, 4350,
	4476, 0, 1097, 1097, 1097, 4475, 0, 4440, 0, 0,
	0, 0, 0, 0, 4439, 4457, 0, 4443, 4470, 0,
	1215, 1215, 0, 1217, 4463, 0, 1217, 1213, 0, 0,
	4471, 0, 1097, 2173, 0, 0, 0, 0, 0, 1213,
	4510, 0, 1214, 4489, 4490, 1214, 4492, 0, 4505, 0,
	4506, 4491, 0, 0, 2580, 2580, 2207, 0, 0, 0,
	0, 0, 4524, 0, 0, 0, 0, 0, 0, 0,
	4533, 4508, 0, 0, 0, 0, 0, 0, 4535, 0,
	4547, 0, 0, 0, 0, 0, 1097, 0, 0, 4531,
	4546, 0, 0, 0, 0, 2448, 1213, 0, 0, 1213,
	4552, 4532, 4539, 1215, 0, 4541, 4540, 4545, 0, 0,
	1817, 0, 0, 0, 0, 1215, 4568, 0, 0, 0,
	0, 0, 0, 0, 4564, 4562, 4543, 4544, 4558, 4559,
	4560, 0, 4549, 0, 0, 1219, 0, 1219, 4571, 675,
	0, 2090, 4572, 4454, 4589, 4435, 4575, 4590, 4438, 4584,
	4357, 4579, 4573, 4601, 0, 4588, 0, 4591, 0, 4593,
	261, 4596, 261, 0, 2584, 4595, 261, 4592, 0, 0,
	4599, 0, 1215, 0, 4614, 1215, 0, 0, 4600, 1483,
	1280, 261, 0, 261, 0, 4613, 0, 0, 0, 261,
	1483, 691, 4616, 0, 0, 0, 261, 1483, 2580, 2580,
	2580, 4622, 4629, 0, 0, 0, 0, 1097, 1097, 4620,
	0, 2008, 0, 4627, 0, 0, 1097, 4625, 1097, 1097,
	0, 4633, 4623, 261, 0, 4630, 4642, 4639, 4648, 4520,
	261, 4650, 4647, 4653, 4645, 4652, 0, 4651, 0, 0,
	4649, 0, 0, 0, 2929, 0, 0, 4660, 4646, 4661,
	4656, 0, 0, 0, 4663, 0, 0, 4665, 0, 4666,
	0, 4662, 0, 3978, 4668, 3978, 0, 4671, 0, 0,
	759, 0, 0, 0, 0, 1097, 4676, 0, 4678, 0,
	0, 4664, 4679, 0, 4681, 4682, 4640, 4641, 0, 4673,
	4668, 0, 0, 0, 4672, 0, 2381, 4675, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 1217, 0,
	0, 0, 0, 3538, 3539, 0, 0, 0, 0, 0,
	3998, 0, 0, 3808, 0, 1214, 0, 1214, 0, 0,
	0, 0, 4007, 0, 0, 4010, 0, 0, 0, 0,
	0, 0, 0, 4677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3139, 3140, 0, 3157, 3158, 3159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1213,
	0, 1213, 0, 2486, 0, 3881, 0, 0, 0, 0,
	0, 0, 0, 3861, 0, 4066, 0, 0, 0, 0,
	0, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619,
	0, 3623, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 261, 0, 0, 0, 0, 0, 3154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 1215, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 1060, 0, 0, 0, 0, 0, 0, 2654, 0,
	0, 0, 0, 0, 0, 261, 0, 1442, 0, 261,
	0, 1442, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 261,
	0, 0, 0, 675, 0, 261, 0, 0, 0, 0,
	0, 0, 3145, 0, 0, 0, 0, 759, 0, 0,
	0, 872, 0, 1285, 1285, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 261, 0, 1280, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	783, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 3160, 2282, 1294, 0,
	0, 0, 261, 261, 0, 261, 0, 261, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 87, 0,
	4217, 0, 0, 2731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2314, 1450, 0, 2315, 3155, 2316,
	0, 0, 0, 0, 0, 0, 0, 2584, 0, 0,
	0, 261, 0, 0, 1470, 0, 0, 0, 866, 0,
	0, 0, 1461, 0, 0, 0, 0, 0, 0, 0,
	2580, 2580, 107, 777, 0, 0, 741, 93, 104, 784,
	759, 0, 4051, 0, 0, 1505, 0, 0, 0, 1745,
	1746, 0, 0, 782, 0, 4068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 1776, 0, 0, 0, 0, 0, 4089, 1748,
	0, 0, 0, 0, 0, 0, 0, 2584, 2584, 0,
	0, 0, 0, 0, 0, 94, 1583, 0, 0, 0,
	0, 781, 0, 3139, 3140, 0, 3157, 3158, 3159, 0,
	1596, 0, 0, 0, 1747, 0, 0, 736, 2580, 2580,
	2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
	2580, 2580, 2580, 2580, 2580, 2580, 2580, 0, 2580, 0,
	0, 0, 779, 3156, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 1746, 0, 0, 0, 1461, 1788, 1789,
	1790, 0, 0, 0, 1622, 1285, 0, 0, 3139, 3140,
	0, 3157, 3158, 3159, 0, 1776, 0, 0, 3154, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	3547, 1794, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 787, 0, 0, 1461, 0, 1461, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 1747, 1753, 0,
	0, 675, 0, 0, 0, 0, 0, 1767, 261, 0,
	675, 2584, 2584, 2584, 0, 0, 1764, 0, 0, 0,
	97, 0, 261, 3154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 1290,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 3145, 0, 774, 0, 3151, 3152, 3153, 0,
	0, 0, 0, 3150, 3148, 3149, 3141, 3142, 3143, 3144,
	3146, 3147, 182, 100, 1442, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 778, 0, 261, 1290, 0, 0,
	691, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 229,
	2695, 1753, 0, 0, 1768, 0, 261, 867, 0, 261,
	0, 0, 148, 261, 0, 261, 3160, 3145, 735, 0,
	1280, 0, 261, 261, 0, 1290, 1290, 2711, 0, 0,
	0, 785, 261, 0, 0, 0, 0, 776, 1785, 0,
	0, 1795, 0, 0, 0, 0, 231, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 3155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 1762, 1763, 0, 2748, 0, 0,
	0, 3160, 0, 773, 0, 0, 0, 186, 261, 0,
	0, 1060, 1783, 0, 0, 230, 0, 1442, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 1768, 223, 0,
	0, 780, 0, 0, 261, 0, 0, 224, 0, 0,
	0, 0, 0, 3155, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 185,
	0, 261, 0, 0, 0, 0, 1745, 1746, 0, 1769,
	0, 0, 1893, 0, 4355, 0, 0, 0, 1745, 1746,
	0, 0, 0, 0, 0, 0, 0, 261, 2870, 1776,
	0, 0, 0, 0, 0, 0, 1748, 0, 4375, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 1483, 0, 0, 261, 3192, 261, 0, 0,
	0, 0, 0, 3156, 261, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 2912, 0, 4135, 0, 0, 0,
	0, 1767, 0, 1747, 2748, 0, 675, 0, 0, 3218,
	0, 1774, 0, 0, 0, 2941, 872, 1442, 2748, 2748,
	0, 0, 0, 0, 3231, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 261, 0, 0, 0, 0,
	0, 1461, 1461, 0, 0, 0, 0, 3249, 3156, 0,
	4173, 0, 0, 0, 261, 1280, 261, 0, 1786, 0,
	1483, 0, 1483, 1290, 261, 0, 0, 1280, 0, 1280,
	0, 1280, 1749, 1750, 1751, 1752, 1754, 1755, 4458, 0,
	0, 0, 0, 0, 4460, 1770, 1771, 1772, 1773, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 261, 261, 261, 261, 1280, 1753, 0, 1280,
	0, 261, 0, 261, 1461, 0, 3151, 3152, 3153, 1046,
	0, 0, 0, 3150, 3148, 3149, 3141, 3142, 3143, 3144,
	3146, 3147, 0, 0, 0, 0, 0, 0, 0, 2207,
	0, 0, 1775, 1777, 261, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 1775, 1777, 0, 0, 0, 0,
	1784, 0, 0, 2584, 2584, 0, 0, 0, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 3151, 3152, 3153, 0, 0, 0, 0, 3150, 3148,
	3149, 3141, 3142, 3143, 3144, 3146, 3147, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 4303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3231, 1483, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	2237, 2584, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 1294, 2251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2253, 0, 1745,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 2261,
	0, 2264, 2265, 2266, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 1774, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 3139, 3140,
	0, 3157, 3158, 3159, 0, 0, 1769, 1461, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 1769, 0,
	3546, 0, 0, 0, 1747, 0, 0, 1442, 0, 0,
	0, 0, 0, 0, 1767, 1455, 3139, 3140, 1356, 3157,
	3158, 3159, 261, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	1745, 1746, 0, 675, 0, 0, 0, 2580, 675, 0,
	0, 675, 0, 3154, 675, 675, 0, 0, 0, 0,
	675, 0, 0, 1776, 0, 0, 0, 0, 261, 0,
	1748, 0, 0, 0, 0, 0, 1442, 3541, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3154, 3558, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 1442, 0, 1483, 1747, 0, 0, 1753, 3574,
	0, 0, 0, 0, 0, 1767, 261, 0, 0, 0,
	261, 261, 0, 0, 1764, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 3145, 0, 2748,
	2748, 261, 0, 3285, 0, 1775, 1777, 0, 0, 2748,
	0, 0, 3296, 0, 0, 0, 0, 0, 0, 0,
	2748, 3296, 0, 2748, 3296, 0, 0, 3296, 3536, 0,
	0, 1762, 1763, 0, 0, 3145, 0, 0, 0, 0,
	0, 0, 261, 261, 3285, 0, 261, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 0, 1753,
	0, 3160, 0, 2580, 1768, 0, 3285, 0, 261, 0,
	3356, 3356, 0, 0, 1280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3665,
	2748, 0, 2748, 0, 3381, 2748, 3285, 1442, 0, 2748,
	3285, 0, 0, 3155, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 1762, 1763, 0, 0, 0, 0, 0, 0,
	0, 3155, 0, 0, 261, 3408, 0, 0, 3410, 2748,
	0, 0, 261, 0, 1305, 0, 261, 0, 73, 1290,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 1442,
	0, 0, 0, 0, 261, 74, 0, 1046, 0, 2912,
	0, 1046, 1280, 0, 261, 0, 0, 2748, 1774, 675,
	0, 78, 0, 0, 0, 0, 2748, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 1769,
	2712, 1294, 0, 0, 0, 0, 0, 261, 2912, 0,
	0, 2912, 0, 0, 0, 0, 0, 0, 0, 0,
	1485, 87, 1491, 0, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3156, 1745,
	1746, 0, 0, 3509, 0, 0, 2207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3515, 866, 1776, 1280, 261, 0, 261, 0, 0, 1748,
	0, 0, 1280, 0, 0, 107, 3156, 0, 0, 1774,
	93, 104, 0, 0, 0, 0, 0, 0, 0, 1586,
	0, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 1600, 261, 1605, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 2860, 0,
	0, 0, 0, 0, 0, 0, 1765, 1761, 94, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3579, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 0,
	1673, 3151, 3152, 3153, 0, 0, 0, 3535, 3150, 3148,
	3149, 3141, 3142, 3143, 3144, 3146, 3147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 3151,
	3152, 3153, 0, 0, 0, 0, 3150, 3148, 3149, 3141,
	3142, 3143, 3144, 3146, 3147, 0, 0, 0, 0, 0,
	0, 2974, 0, 0, 0, 0, 0, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 261, 261, 1775, 1777, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 0,
	0, 0, 0, 0, 0, 675, 675, 0, 0, 0,
	0, 1762, 1763, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 0, 0, 1483, 1483, 1829,
	0, 0, 0, 3935, 73, 0, 2584, 0, 0, 0,
	0, 1483, 1483, 1483, 1768, 0, 0, 1745, 1746, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	3948, 0, 0, 0, 0, 182, 100, 78, 103, 0,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 3139, 3140, 0, 3157, 3158, 3159,
	2584, 2207, 229, 0, 0, 0, 0, 0, 0, 0,
	867, 0, 0, 0, 0, 148, 0, 87, 0, 1285,
	0, 0, 1747, 0, 0, 0, 0, 0, 759, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 1129, 1887, 1887, 1887, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 3356,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 3154,
	0, 107, 261, 0, 0, 150, 93, 104, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 3285, 1442, 261, 3056, 0, 0, 230, 1769,
	0, 0, 0, 0, 0, 261, 0, 0, 1442, 0,
	0, 223, 0, 0, 0, 261, 1770, 1771, 1772, 1773,
	224, 0, 0, 0, 0, 261, 1753, 0, 0, 0,
	261, 1442, 0, 0, 94, 261, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2748, 261, 0, 1356, 0, 0,
	0, 0, 0, 3145, 2941, 2941, 2584, 0, 0, 1060,
	872, 872, 2748, 1775, 1777, 0, 2912, 2912, 0, 0,
	872, 2748, 0, 1060, 0, 0, 0, 4127, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 0, 1762,
	1763, 0, 261, 3161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3160, 4127, 0,
	0, 0, 1768, 0, 0, 0, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 2381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3155,
	0, 0, 0, 1442, 3900, 1220, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 0,
	0, 182, 100, 0, 103, 0, 261, 0, 0, 0,
	0, 0, 1483, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 261, 229, 0,
	0, 0, 0, 0, 0, 0, 867, 0, 0, 0,
	0, 148, 0, 0, 0, 1461, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2748, 2748, 0, 3356, 2748, 0, 0, 0, 0, 0,
	0, 3980, 0, 3980, 1483, 231, 0, 0, 0, 0,
	0, 0, 0, 2748, 3156, 3296, 0, 0, 0, 1483,
	1483, 261, 3285, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 3285, 0, 261, 3285, 0,
	261, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 230, 2748, 0, 2748, 261, 1442,
	0, 0, 1442, 0, 0, 0, 3392, 223, 0, 0,
	0, 0, 1285, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2748, 0, 0, 0,
	0, 4055, 0, 0, 0, 0, 0, 3424, 1578, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 3432,
	0, 0, 261, 0, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0,
	0, 0, 2852, 0, 0, 0, 1442, 0, 0, 0,
	0, 3980, 0, 0, 1483, 0, 0, 3151, 3152, 3153,
	0, 3473, 3474, 1442, 3150, 3148, 3149, 3141, 3142, 3143,
	3144, 3146, 3147, 0, 0, 2844, 2842, 0, 0, 0,
	0, 0, 2846, 2848, 2838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2356, 0, 2360, 0,
	0, 0, 0, 0, 0, 2374, 0, 0, 0, 0,
	0, 0, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 0, 2423, 0,
	2425, 2426, 2427, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2748, 0, 3296, 0, 0, 4165,
	0, 0, 2452, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 1816, 4185, 0, 4185, 2467, 0, 0,
	0, 0, 0, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2497, 2500, 2503, 2506, 759, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 0, 0, 0, 1280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3285, 0, 261, 2576, 0, 2587, 2589,
	2594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4165, 0, 0, 0, 0,
	0, 0, 2840, 2748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2854, 0, 0, 0, 0, 0, 0,
	0, 4252, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 2853, 2845, 2843, 2847, 2849, 2839,
	2841, 2855, 0, 0, 0, 3980, 3980, 0, 0, 2851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 261, 0, 0, 0, 1220, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 2858, 0, 0, 0, 0, 3579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3356, 4317, 0, 0, 0, 0,
	0, 1220, 4165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3980, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	3980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	156, 261, 1220, 0, 0, 0, 0, 0, 73, 0,
	46, 45, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 4055, 0, 0, 0, 74, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 3980, 0, 261,
	3980, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	3296, 1442, 67, 0, 0, 0, 0, 0, 0, 48,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 1442, 1483, 0, 1483, 47,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3764, 0, 0, 2859, 0, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 0, 50, 68, 0,
	4419, 0, 0, 0, 0, 0, 51, 0, 0, 2873,
	2874, 57, 2876, 4185, 0, 154, 261, 0, 0, 0,
	0, 0, 0, 49, 0, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 2748, 0, 2555, 2556, 2557,
	2558, 2551, 2552, 2553, 2554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 3837, 3838,
	3839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 3579, 0, 1442, 0, 1442, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1442, 0, 0, 0, 0, 2531,
	2532, 2533, 2534, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2999, 0, 0,
	0, 0, 2543, 2544, 2545, 2546, 2539, 2540, 2541, 2542,
	2547, 2548, 2549, 2550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4165,
	0, 1442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 2748, 0, 0, 0, 0, 0, 0,
	3980, 0, 3980, 0, 0, 1483, 2527, 2528, 2529, 2530,
	2535, 2536, 2537, 2538, 0, 0, 0, 0, 1220, 0,
	1220, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 1442, 0,
	53, 3050, 3051, 0, 0, 0, 0, 3057, 0, 1483,
	3942, 3943, 0, 1967, 56, 0, 0, 1220, 0, 59,
	0, 0, 0, 0, 0, 0, 3071, 3072, 69, 0,
	0, 0, 2467, 0, 58, 182, 100, 0, 103, 0,
	0, 3079, 54, 0, 0, 2941, 155, 0, 0, 0,
	0, 1442, 0, 55, 2748, 0, 0, 3093, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 2941,
	62, 0, 0, 0, 3105, 148, 0, 0, 0, 0,
	0, 1442, 0, 1220, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 1294, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 223, 0, 2594, 2594, 2594, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 1060, 0, 0, 1887, 0,
	0, 0, 1776, 4106, 0, 4108, 3196, 0, 0, 1748,
	0, 0, 185, 0, 1442, 3, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 1220, 1220,
	0, 0, 0, 1764, 0, 0, 0, 0, 1220, 0,
	0, 1442, 0, 0, 0, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 4154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 1046,
	0, 0, 0, 0, 0, 0, 1794, 3049, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 1747, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 1767, 0, 0, 0, 3315, 0, 0, 0,
	0, 1764, 1220, 0, 1220, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4221, 1220, 1220, 0, 0, 0, 0, 1745, 1746,
	0, 0, 0, 1220, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 1220, 1220, 1220,
	0, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 1762, 1763, 0, 0, 0, 0, 0, 0, 1060,
	1060, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 1747, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	1106, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 0, 0, 262, 262, 262, 1762,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	1967, 1220, 0, 0, 0, 0, 0, 1783, 0, 1060,
	0, 0, 0, 0, 0, 262, 0, 1770, 1771, 1772,
	1773, 0, 1768, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 1769,
	0, 0, 0, 0, 1775, 1777, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 1294, 1294, 1220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 1763, 0, 1294, 0, 2374, 0, 0, 0, 0,
	0, 3533, 3534, 0, 0, 3537, 0, 0, 0, 3540,
	0, 0, 0, 0, 0, 0, 0, 0, 3544, 0,
	0, 0, 0, 1768, 0, 0, 0, 3551, 0, 0,
	3196, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	1220, 0, 0, 0, 0, 3563, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 1769, 0, 0,
	0, 0, 0, 0, 0, 3586, 3587, 0, 3588, 3589,
	3590, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 3596, 0, 0, 0,
	3598, 0, 0, 0, 0, 0, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3626, 3627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3638,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 3647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 1220, 1220, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0,
	3114, 0, 0, 0, 3115, 0, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3704, 0, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3731, 0, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 1220, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	1220, 0, 1220, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1887, 0, 0, 1220, 0, 0,
	0, 0, 0, 3832, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3878, 3879,
	0, 0, 0, 0, 3883, 3884, 0, 0, 0, 3887,
	3888, 0, 0, 0, 0, 0, 3892, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 3896, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 262, 262, 0, 0, 262,
	1785, 1303, 0, 1795, 0, 0, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 0, 0, 0, 262, 1303, 262, 262, 0, 1303,
	262, 262, 0, 0, 1783, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 1303, 0, 262, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 1303, 0, 0, 0, 0, 1303,
	262, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 1220, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 1303, 0, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 262, 0, 1220,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 1967, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4122, 4123, 4124, 0, 1220, 1220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2374, 0, 0, 4133,
	4134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4142, 4145, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 1220, 0, 0, 0, 2463, 0, 0,
	0, 2464, 4186, 0, 0, 0, 0, 0, 0, 0,
	4192, 0, 0, 0, 0, 1220, 0, 1220, 0, 0,
	0, 0, 4199, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 4207, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 1220,
	0, 1220, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 262, 262, 262, 0,
	0, 0, 1220, 0, 262, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 1220, 0,
	0, 0, 0, 0, 0, 721, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 4322, 0, 0, 4325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 1303, 0, 1220, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1046,
	1046, 708, 0, 0, 0, 0, 0, 0, 0, 4373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1967, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 2374, 1967, 1967, 710, 0, 0, 0,
	0, 0, 4145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	0, 712, 0, 1967, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 1046,
	0, 0, 0, 0, 262, 1303, 1303, 262, 0, 0,
	0, 0, 0, 0, 1967, 1303, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4488, 4488, 4488, 0, 0, 0,
	262, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 1220, 0, 262, 0, 0, 0,
	0, 723, 0, 0, 4509, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 262, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 1303, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1303, 0, 0, 0, 0, 0, 0, 0, 4488, 0,
	1303, 262, 0, 0, 262, 0, 0, 0, 0, 733,
	0, 714, 1303, 0, 1303, 1303, 1303, 0, 0, 0,
	1093, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 262, 734,
	262, 715, 262, 0, 262, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 260, 260, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 704,
	0, 0, 0, 0, 705, 716, 262, 0, 0, 731,
	732, 729, 0, 0, 0, 800, 0, 724, 1220, 0,
	717, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 4488,
	4634, 800, 0, 706, 0, 0, 0, 0, 4638, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 1303, 0,
	0, 718, 0, 725, 0, 0, 0, 0, 0, 1220,
	0, 0, 719, 0, 0, 708, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 720, 0, 0, 0,
	0, 728, 0, 0, 1220, 1220, 1220, 727, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 1220, 0, 0, 0, 0, 722, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 1209, 0, 0,
	710, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 711, 0, 0, 712, 0, 1967, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 256, 256, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1220, 723, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 1220, 0, 1220, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 1220, 0, 0,
	0, 262, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 262, 0, 0, 0, 262, 1220,
	262, 1220, 0, 0, 0, 714, 0, 262, 262, 0,
	0, 0, 0, 1303, 1303, 0, 0, 262, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 734, 1220, 715, 0, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 262, 0, 0, 0, 1220, 1220, 716,
	0, 0, 0, 731, 732, 729, 262, 0, 0, 0,
	0, 724, 0, 0, 717, 0, 0, 1220, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	0, 0, 0, 0, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 1303, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 725, 0, 1220,
	0, 1303, 0, 0, 0, 0, 719, 0, 0, 1220,
	1220, 1220, 262, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 1220, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	262, 0, 262, 0, 1303, 0, 0, 0, 0, 262,
	722, 0, 1220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 1303,
	0, 0, 0, 1220, 0, 1220, 0, 0, 0, 0,
	262, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 262,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 262, 262,
	262, 0, 0, 0, 0, 1220, 262, 0, 262, 0,
	0, 0, 1220, 0, 0, 0, 0, 1220, 1220, 0,
	0, 0, 0, 260, 0, 260, 260, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 260, 260, 0, 0,
	260, 260, 0, 1220, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 260, 0, 0,
	0, 0, 1082, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	260, 260, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	1266, 1794, 1266, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1220, 0, 0, 1220, 0,
	0, 0, 1220, 0, 0, 0, 109, 1747, 0, 0,
	0, 0, 1220, 1220, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 260, 0, 1220,
	0, 1353, 0, 0, 0, 0, 0, 1459, 1303, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 1303,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1303, 0, 1584, 1585, 0,
	0, 262, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 1203, 0, 0, 0, 1785, 0,
	0, 1795, 0, 0, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 1303, 0, 0, 0, 1791, 0, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 262, 262, 0,
	1303, 262, 0, 0, 0, 0, 0, 1768, 262, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 1303, 262, 1303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 1303, 0, 0, 1909, 1303, 1216, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1220, 0,
	1220, 0, 0, 0, 0, 0, 260, 1909, 260, 1303,
	0, 0, 0, 0, 800, 262, 1303, 0, 1303, 0,
	0, 800, 1303, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	1303, 262, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 1303, 0, 0, 260, 0, 0, 0, 262,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 1303, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 262,
	1303, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1925, 0,
	0, 0, 0, 0, 0, 820, 0, 262, 0, 0,
	821, 0, 0, 1934, 0, 1459, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 0, 1303, 0, 0, 0, 0, 822,
	0, 839, 0, 0, 0, 1266, 0, 0, 0, 0,
	0, 1303, 1459, 0, 260, 0, 0, 800, 0, 0,
	0, 0, 0, 0, 0, 0, 823, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 848, 0, 0, 0, 0, 0, 825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 846, 260, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	0, 0, 260, 0, 260, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 826, 0,
	0, 827, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 850, 0, 0, 0, 0, 736, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 800, 260, 0,
	260, 0, 260, 0, 260, 0, 260, 0, 0, 0,
	0, 109, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1041, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 2193, 0, 0,
	109, 2200, 109, 0, 0, 0, 0, 0, 0, 0,
	828, 0, 109, 2213, 109, 0, 0, 262, 0, 0,
	0, 830, 0, 0, 0, 0, 0, 0, 0, 2225,
	0, 2225, 0, 0, 0, 1303, 0, 2232, 1303, 262,
	0, 0, 0, 792, 0, 0, 0, 0, 0, 0,
	262, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	262, 0, 0, 0, 0, 262, 109, 840, 2200, 0,
	262, 2257, 0, 0, 0, 0, 1303, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 817,
	0, 841, 2277, 0, 0, 0, 0, 0, 0, 0,
	832, 1303, 1303, 1303, 0, 2290, 0, 2292, 0, 2294,
	0, 2296, 0, 2297, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 262, 0, 1303,
	0, 833, 0, 0, 0, 834, 853, 0, 852, 0,
	0, 0, 835, 2319, 0, 0, 1021, 1216, 0, 0,
	0, 0, 0, 1303, 0, 0, 836, 0, 0, 0,
	0, 845, 0, 1216, 0, 0, 1810, 854, 0, 851,
	0, 0, 0, 0, 0, 737, 0, 260, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 260, 0, 0, 0, 260, 0,
	260, 0, 0, 1303, 0, 1303, 0, 260, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 1303, 1303, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 1907, 0, 1910,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 262, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 1303,
	0, 1303, 262, 0, 1303, 262, 0, 0, 0, 260,
	0, 0, 0, 1303, 2651, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 1303, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 800, 0, 1303, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 262, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 800, 0, 0, 0, 0, 0, 2697, 260,
	0, 1266, 0, 0, 0, 1266, 0, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 1303, 0,
	0, 0, 0, 0, 2213, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 260,
	260, 0, 0, 1303, 0, 0, 260, 0, 260, 0,
	0, 0, 262, 1459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 2200, 0, 1303,
	262, 0, 0, 0, 1303, 1303, 2213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	0, 1041, 0, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	0, 0, 1303, 0, 0, 0, 0, 2972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 2983, 1359, 2986, 0,
	0, 0, 0, 0, 0, 1301, 0, 0, 262, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	1781, 1776, 0, 0, 3011, 1459, 3013, 1459, 1748, 0,
	0, 0, 0, 3019, 0, 0, 0, 1794, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 1747, 0, 0, 1266, 1301, 0, 0,
	0, 0, 0, 1767, 3047, 0, 0, 0, 0, 0,
	0, 1301, 1764, 0, 0, 0, 262, 0, 0, 0,
	1021, 0, 0, 1021, 1021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 262, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 0, 1301, 0, 0, 0, 1303,
	1303, 0, 0, 0, 0, 0, 0, 0, 2441, 0,
	0, 0, 0, 1909, 0, 0, 1303, 1770, 1771, 1772,
	1773, 0, 0, 0, 1041, 0, 0, 1753, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 1785, 260, 260, 1795, 0, 0,
	0, 262, 0, 0, 1775, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 1792, 0, 0, 260, 0, 0, 0,
	1762, 1763, 0, 0, 0, 0, 0, 0, 0, 1203,
	0, 262, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 1910, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 260, 260, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 800,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 1774, 1266, 0,
	0, 0, 1459, 1459, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 1216,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 3283, 0, 0, 0, 0, 0, 792,
	0, 0, 1301, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3334, 3336, 0, 0, 2213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 260,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 109, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 1784, 260, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 3906, 0, 109, 0, 0,
	109, 0, 0, 0, 3421, 0, 109, 0, 3425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3478,
	0, 0, 1781, 1776, 0, 0, 109, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 1301, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 1216, 1216,
	0, 0, 0, 0, 0, 1767, 3518, 0, 1459, 0,
	0, 0, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2441, 0, 1301, 0, 1301,
	0, 1301, 0, 0, 1302, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 0, 1815, 1301, 1301, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 1301, 1301, 1301, 0, 0, 0, 1360, 0,
	0, 0, 1360, 0, 0, 0, 1785, 0, 0, 1795,
	1302, 0, 0, 0, 0, 792, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 1792, 0, 0, 0, 0,
	0, 1302, 1762, 1763, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 1302, 0, 260,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	260, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 260, 1302, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 1359, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	1216, 0, 0, 0, 0, 0, 1782, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2213, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3796, 0, 0,
	109, 109, 0, 109, 109, 109, 0, 0, 1359, 0,
	0, 0, 2213, 0, 0, 0, 0, 3814, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1909, 0, 0, 0, 109, 109, 0, 109,
	109, 109, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 0, 3863, 0, 1909, 3549, 1909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 1301, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1203, 0, 1359, 1041, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 1909, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 1301,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1776, 1302, 0, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	792, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 3996, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1301, 1764, 0, 0, 0, 0, 2213,
	0, 0, 0, 0, 0, 1301, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2213, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 0, 4077, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 1302,
	260, 0, 109, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 1203, 0, 0, 0, 0, 1785, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1909, 1909, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	0, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 1302, 0, 1302, 0, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 1793, 4174,
	0, 0, 0, 0, 0, 1302, 0, 1302, 1302, 1302,
	0, 0, 0, 1909, 0, 0, 1782, 0, 0, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 1909, 0, 260, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 1203, 0, 0, 4293, 1459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 1301, 1301, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4378, 260, 0, 0, 0, 0, 1360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 1360, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	1301, 1203, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 1301, 1909, 0, 1909, 4429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1301, 0, 0,
	0, 0, 0, 0, 1301, 0, 1301, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 792, 4465, 0,
	0, 0, 0, 0, 0, 0, 1302, 1302, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 1301, 0, 109, 0, 0, 0, 4525,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 1359, 0, 0, 1359, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 1745, 1746, 1748,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 1302, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 1359, 0, 1747, 0, 1794, 0, 1302, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 1359,
	1302, 0, 1302, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 1359,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 2441, 0, 0, 0, 0, 0,
	0, 0, 1791, 1785, 1792, 0, 1795, 0, 0, 0,
	0, 1762, 1763, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	1791, 0, 1792, 0, 0, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1301, 0, 0, 1301, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 1301, 0, 1774, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 1786, 0, 1769, 0, 1301,
	1301, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 1786, 1360, 0, 0, 0, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 1359, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 1359, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 0, 0, 1302, 1784, 3116, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 3113, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 1359, 0, 1302, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1301, 1301, 0, 1360, 0, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 1302, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 1302,
	0, 1302, 0, 0, 0, 1360, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 1301,
	0, 0, 1301, 1302, 0, 0, 0, 0, 0, 0,
	0, 1359, 0, 0, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 1301,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1301, 1301, 0, 1781, 1776,
	1360, 0, 0, 1360, 0, 0, 1748, 1359, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 1745, 1746,
	0, 1778, 1779, 1780, 1788, 1789, 1790, 1360, 1359, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1776, 0, 0, 1360, 0, 0, 0, 1748, 0,
	0, 1359, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 1770, 1771, 1772, 1773, 0,
	0, 0, 0, 1767, 0, 1753, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 1301, 0, 0,
	0, 0, 1301, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1791,
	0, 1792, 0, 0, 0, 0, 0, 1359, 1762, 1763,
	1301, 0, 0, 0, 1360, 0, 0, 1770, 1771, 1772,
	1773, 0, 0, 0, 0, 0, 1783, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 1775, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 1791, 0, 1792, 0, 0, 0, 0, 0, 0,
	1762, 1763, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 1302, 0,
	0, 1302, 0, 0, 0, 0, 1769, 1301, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 1301, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 1302, 1302, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1302, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 1302, 0, 0, 0,
	0, 0, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 1360, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 3112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 3111, 1360, 0, 1360, 0,
	0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790,
	0, 0, 0, 0, 0, 0, 1302, 1302, 0, 0,
	0, 0, 0, 1781, 1776, 1360, 0, 0, 0, 1745,
	1746, 1748, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 1747, 0, 1794, 0,
	0, 0, 1302, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 1360, 0, 1302, 1764, 0, 1302, 0, 0,
	0, 0, 0, 0, 1747, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1360,
	1770, 1771, 1772, 1773, 1302, 0, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 1302,
	1302, 1302, 0, 0, 0, 0, 0, 1785, 0, 0,
	1795, 0, 1360, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 1785, 1792, 0, 1795, 0,
	0, 0, 1360, 1762, 1763, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 1360, 0, 1302, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 1360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 1302, 0, 0, 0, 0, 1302, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1360, 0, 0, 1302, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 1784, 2464, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 1357,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1302, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 1362, 277, 278, 1363, 1364, 1365, 1302,
	1366, 617, 1367, 1368, 1369, 1370, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 1371, 622, 289, 290, 291, 292, 293, 294,
	1372, 1373, 0, 295, 623, 624, 625, 1374, 296, 297,
	626, 1375, 1304, 1376, 298, 299, 300, 301, 302, 303,
	304, 0, 1377, 306, 307, 308, 305, 309, 1378, 310,
	0, 311, 312, 313, 314, 315, 316, 1379, 317, 318,
	319, 1161, 320, 321, 322, 1380, 1381, 1383, 1382, 1384,
	1385, 1386, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 1387, 332, 329, 330, 1388, 333, 331, 334, 1389,
	335, 336, 337, 1390, 1391, 338, 339, 340, 1392, 341,
	342, 1393, 343, 344, 345, 1394, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 1395, 267, 1396, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 1397, 364, 365,
	1398, 1399, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1400, 377, 635, 1401,
	636, 378, 1402, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 1403, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1404,
	1163, 394, 640, 641, 1405, 642, 1406, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1407, 408, 410, 409,
	1408, 411, 644, 1168, 412, 413, 1169, 1409, 414, 0,
	0, 0, 415, 416, 419, 1410, 1411, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1412, 269, 1172, 459, 460, 1413, 645, 461,
	646, 463, 464, 1414, 0, 465, 0, 1415, 1416, 467,
	468, 469, 1417, 1418, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1419, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 1420, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 1421, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1422, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1423, 544,
	545, 543, 546, 547, 548, 1424, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 1425, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 1426,
	575, 576, 0, 572, 563, 1427, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 1428, 585, 658, 659, 660,
	661, 1429, 594, 1430, 586, 587, 588, 662, 589, 663,
	1431, 590, 591, 592, 593, 0, 595, 596, 1432, 1433,
	597, 598, 599, 601, 602, 600, 603, 1434, 604, 1435,
	0, 605, 606, 607, 664, 665, 666, 1436, 609, 608,
	610, 667, 1437, 611, 1438, 1439, 1440, 1441, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 0, 0, 0, 0, 2629, 0, 0, 0,
	0, 0, 0, 0, 2630, 270, 272, 271, 273, 274,
	275, 276, 1362, 277, 278, 1363, 1364, 1365, 0, 1366,
	617, 1367, 1368, 1369, 1370, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 1371, 622, 289, 290, 291, 292, 293, 294, 1372,
	1373, 0, 295, 623, 624, 625, 1374, 296, 297, 626,
	1375, 1304, 1376, 298, 299, 300, 301, 302, 303, 304,
	0, 1377, 306, 307, 308, 305, 309, 1378, 310, 0,
	311, 312, 313, 314, 315, 316, 1379, 317, 318, 319,
	1161, 320, 321, 322, 1380, 1381, 1383, 1382, 1384, 1385,
	1386, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	1387, 332, 329, 330, 1388, 333, 331, 334, 1389, 335,
	336, 337, 1390, 1391, 338, 339, 340, 1392, 341, 342,
	1393, 343, 344, 345, 1394, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 1395, 267, 1396, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 1397, 364, 365, 1398,
	1399, 1162, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1400, 377, 635, 1401, 636,
	378, 1402, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 1164, 384, 385, 1403, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1404, 1163,
	394, 640, 641, 1405, 642, 1406, 396, 397, 1165, 643,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1407, 408, 410, 409, 1408,
	411, 644, 1168, 412, 413, 1169, 1409, 414, 0, 0,
	0, 415, 416, 419, 1410, 1411, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1412, 269, 1172, 459, 460, 1413, 645, 461, 646,
	463, 464, 1414, 0, 465, 0, 1415, 1416, 467, 468,
	469, 1417, 1418, 470, 471, 647, 1173, 472, 1174, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 1419, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 1420, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 1421, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1422, 521, 522, 523, 1175, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1423, 544, 545,
	543, 546, 547, 548, 1424, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 1425, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 1426, 575,
	576, 0, 572, 563, 1427, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 1428, 585, 658, 659, 660, 661,
	1429, 594, 1430, 586, 587, 588, 662, 589, 663, 1431,
	590, 591, 592, 593, 0, 595, 596, 1432, 1433, 597,
	598, 599, 601, 602, 600, 603, 1434, 604, 1435, 0,
	605, 606, 607, 664, 665, 666, 1436, 609, 608, 610,
	667, 1437, 611, 1438, 1439, 1440, 1441, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1357, 0, 0, 0, 0,
	3557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3559, 270, 272, 271, 273, 274, 275, 276, 1362,
	277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367, 1368,
	1369, 1370, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 1371, 622,
	289, 290, 291, 292, 293, 294, 1372, 1373, 0, 295,
	623, 624, 625, 1374, 296, 297, 626, 1375, 1304, 1376,
	298, 299, 300, 301, 302, 303, 304, 0, 1377, 306,
	307, 308, 305, 309, 1378, 310, 0, 311, 312, 313,
	314, 315, 316, 1379, 317, 318, 319, 1161, 320, 321,
	322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 1387, 332, 329,
	330, 1388, 333, 331, 334, 1389, 335, 336, 337, 1390,
	1391, 338, 339, 340, 1392, 341, 342, 1393, 343, 344,
	345, 1394, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 1395, 267,
	1396, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 1397, 364, 365, 1398, 1399, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1400, 377, 635, 1401, 636, 378, 1402, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 1164, 384,
	385, 1403, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 1404, 1163, 394, 640, 641,
	1405, 642, 1406, 396, 397, 1165, 643, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1407, 408, 410, 409, 1408, 411, 644, 1168,
	412, 413, 1169, 1409, 414, 0, 0, 0, 415, 416,
	419, 1410, 1411, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 1412, 269,
	1172, 459, 460, 1413, 645, 461, 646, 463, 464, 1414,
	0, 465, 0, 1415, 1416, 467, 468, 469, 1417, 1418,
	470, 471, 647, 1173, 472, 1174, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 1419, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 1420, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	1421, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1422, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 1423, 544, 545, 543, 546, 547,
	548, 1424, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 1425, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 1426, 575, 576, 0, 572,
	563, 1427, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 1428, 585, 658, 659, 660, 661, 1429, 594, 1430,
	586, 587, 588, 662, 589, 663, 1431, 590, 591, 592,
	593, 0, 595, 596, 1432, 1433, 597, 598, 599, 601,
	602, 600, 603, 1434, 604, 1435, 0, 605, 606, 607,
	664, 665, 666, 1436, 609, 608, 610, 667, 1437, 611,
	1438, 1439, 1440, 1441, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3934, 270, 272, 271, 273, 274, 275, 276,
	1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367,
	1368, 1369, 1370, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 1371,
	622, 289, 290, 291, 292, 293, 294, 1372, 1373, 0,
	295, 623, 624, 625, 1374, 296, 297, 626, 1375, 1304,
	1376, 298, 299, 300, 301, 302, 303, 304, 0, 1377,
	306, 307, 308, 305, 309, 1378, 310, 0, 311, 312,
	313, 314, 315, 316, 1379, 317, 318, 319, 1161, 320,
	321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 1387, 332,
	329, 330, 1388, 333, 331, 334, 1389, 335, 336, 337,
	1390, 1391, 338, 339, 340, 1392, 341, 342, 1393, 343,
	344, 345, 1394, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 1395,
	267, 1396, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 1397, 364, 365, 1398, 1399, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1400, 377, 635, 1401, 636, 378, 1402,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 1403, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 1404, 1163, 394, 640,
	641, 1405, 642, 1406, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1407, 408, 410, 409, 1408, 411, 644,
	1168, 412, 413, 1169, 1409, 414, 0, 0, 0, 415,
	416, 419, 1410, 1411, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1412,
	269, 1172, 459, 460, 1413, 645, 461, 646, 463, 464,
	1414, 0, 465, 0, 1415, 1416, 467, 468, 469, 1417,
	1418, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1419,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 1420, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 1421, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1422, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 1423, 544, 545, 543, 546,
	547, 548, 1424, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 1425,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 1426, 575, 576, 0,
	572, 563, 1427, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 1428, 585, 658, 659, 660, 661, 1429, 594,
	1430, 586, 587, 588, 662, 589, 663, 1431, 590, 591,
	592, 593, 0, 595, 596, 1432, 1433, 597, 598, 599,
	601, 602, 600, 603, 1434, 604, 1435, 0, 605, 606,
	607, 664, 665, 666, 1436, 609, 608, 610, 667, 1437,
	611, 1438, 1439, 1440, 1441, 612, 613, 668, 614, 615,
	616, 0, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4128, 270,
	272, 271, 273, 274, 275, 276, 1362, 277, 278, 1363,
	1364, 1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 1371, 622, 289, 290, 291,
	292, 293, 294, 1372, 1373, 0, 295, 623, 624, 625,
	1374, 296, 297, 626, 1375, 1304, 1376, 298, 299, 300,
	301, 302, 303, 304, 0, 1377, 306, 307, 308, 305,
	309, 1378, 310, 0, 311, 312, 313, 314, 315, 316,
	1379, 317, 318, 319, 1161, 320, 321, 322, 1380, 1381,
	1383, 1382, 1384, 1385, 1386, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 1387, 332, 329, 330, 1388, 333,
	331, 334, 1389, 335, 336, 337, 1390, 1391, 338, 339,
	340, 1392, 341, 342, 1393, 343, 344, 345, 1394, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 1395, 267, 1396, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	1397, 364, 365, 1398, 1399, 1162, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1400,
	377, 635, 1401, 636, 378, 1402, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 1164, 384, 385, 1403, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 1404, 1163, 394, 640, 641, 1405, 642, 1406,
	396, 397, 1165, 643, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1407,
	408, 410, 409, 1408, 411, 644, 1168, 412, 413, 1169,
	1409, 414, 0, 0, 0, 415, 416, 419, 1410, 1411,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1412, 269, 1172, 459, 460,
	1413, 645, 461, 646, 463, 464, 1414, 0, 465, 0,
	1415, 1416, 467, 468, 469, 1417, 1418, 470, 471, 647,
	1173, 472, 1174, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 1419, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 1420, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 1421, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1422, 521,
	522, 523, 1175, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 1423, 544, 545, 543, 546, 547, 548, 1424, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 1425, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 1426, 575, 576, 0, 572, 563, 1427, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 1428, 585,
	658, 659, 660, 661, 1429, 594, 1430, 586, 587, 588,
	662, 589, 663, 1431, 590, 591, 592, 593, 0, 595,
	596, 1432, 1433, 597, 598, 599, 601, 602, 600, 603,
	1434, 604, 1435, 0, 605, 606, 607, 664, 665, 666,
	1436, 609, 608, 610, 667, 1437, 611, 1438, 1439, 1440,
	1441, 612, 613, 668, 614, 615, 616, 0, 1357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4005, 270, 272, 271, 273, 274,
	275, 276, 1362, 277, 278, 1363, 1364, 1365, 0, 1366,
	617, 1367, 1368, 1369, 1370, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 1371, 622, 289, 290, 291, 292, 293, 294, 1372,
	1373, 0, 295, 623, 624, 625, 1374, 296, 297, 626,
	1375, 1304, 1376, 298, 299, 300, 301, 302, 303, 304,
	0, 1377, 306, 307, 308, 305, 309, 1378, 310, 0,
	311, 312, 313, 314, 315, 316, 1379, 317, 318, 319,
	1161, 320, 321, 322, 1380, 1381, 1383, 1382, 1384, 1385,
	1386, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	1387, 332, 329, 330, 1388, 333, 331, 334, 1389, 335,
	336, 337, 1390, 1391, 338, 339, 340, 1392, 341, 342,
	1393, 343, 344, 345, 1394, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 1395, 267, 1396, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 1397, 364, 365, 1398,
	1399, 1162, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1400, 377, 635, 1401, 636,
	378, 1402, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 1164, 384, 385, 1403, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 1404, 1163,
	394, 640, 641, 1405, 642, 1406, 396, 397, 1165, 643,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1407, 408, 410, 409, 1408,
	411, 644, 1168, 412, 413, 1169, 1409, 414, 0, 0,
	0, 415, 416, 419, 1410, 1411, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1412, 269, 1172, 459, 460, 1413, 645, 461, 646,
	463, 464, 1414, 0, 465, 0, 1415, 1416, 467, 468,
	469, 1417, 1418, 470, 471, 647, 1173, 472, 1174, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 1419, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 1420, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 1421, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1422, 521, 522, 523, 1175, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 1423, 544, 545,
	543, 546, 547, 548, 1424, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 1425, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 1426, 575,
	576, 0, 572, 563, 1427, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 1428, 585, 658, 659, 660, 661,
	1429, 594, 1430, 586, 587, 588, 662, 589, 663, 1431,
	590, 591, 592, 593, 0, 595, 596, 1432, 1433, 597,
	598, 599, 601, 602, 600, 603, 1434, 604, 1435, 0,
	605, 606, 607, 664, 665, 666, 1436, 609, 608, 610,
	667, 1437, 611, 1438, 1439, 1440, 1441, 612, 613, 668,
	614, 615, 616, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3864, 270, 272, 271, 273, 274, 275, 276, 1362, 277,
	278, 1363, 1364, 1365, 0, 1366, 617, 1367, 1368, 1369,
	1370, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 1371, 622, 289,
	290, 291, 292, 293, 294, 1372, 1373, 0, 295, 623,
	624, 625, 1374, 296, 297, 626, 1375, 1304, 1376, 298,
	299, 300, 301, 302, 303, 304, 0, 1377, 306, 307,
	308, 305, 309, 1378, 310, 0, 311, 312, 313, 314,
	315, 316, 1379, 317, 318, 319, 1161, 320, 321, 322,
	1380, 1381, 1383, 1382, 1384, 1385, 1386, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 1387, 332, 329, 330,
	1388, 333, 331, 334, 1389, 335, 336, 337, 1390, 1391,
	338, 339, 340, 1392, 341, 342, 1393, 343, 344, 345,
	1394, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 1395, 267, 1396,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 1397, 364, 365, 1398, 1399, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1400, 377, 635, 1401, 636, 378, 1402, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	1403, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 1404, 1163, 394, 640, 641, 1405,
	642, 1406, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1407, 408, 410, 409, 1408, 411, 644, 1168, 412,
	413, 1169, 1409, 414, 0, 0, 0, 415, 416, 419,
	1410, 1411, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1412, 269, 1172,
	459, 460, 1413, 645, 461, 646, 463, 464, 1414, 0,
	465, 0, 1415, 1416, 467, 468, 469, 1417, 1418, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 1419, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 1420, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 1421,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1422, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 1423, 544, 545, 543, 546, 547, 548,
	1424, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 1425, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 1426, 575, 576, 0, 572, 563,
	1427, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	1428, 585, 658, 659, 660, 661, 1429, 594, 1430, 586,
	587, 588, 662, 589, 663, 1431, 590, 591, 592, 593,
	0, 595, 596, 1432, 1433, 597, 598, 599, 601, 602,
	600, 603, 1434, 604, 1435, 0, 605, 606, 607, 664,
	665, 666, 1436, 609, 608, 610, 667, 1437, 611, 1438,
	1439, 1440, 1441, 612, 613, 668, 614, 615, 616, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3575, 270, 272, 271,
	273, 274, 275, 276, 1362, 277, 278, 1363, 1364, 1365,
	0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 1371, 622, 289, 290, 291, 292, 293,
	294, 1372, 1373, 0, 295, 623, 624, 625, 1374, 296,
	297, 626, 1375, 1304, 1376, 298, 299, 300, 301, 302,
	303, 304, 0, 1377, 306, 307, 308, 305, 309, 1378,
	310, 0, 311, 312, 313, 314, 315, 316, 1379, 317,
	318, 319, 1161, 320, 321, 322, 1380, 1381, 1383, 1382,
	1384, 1385, 1386, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 1387, 332, 329, 330, 1388, 333, 331, 334,
	1389, 335, 336, 337, 1390, 1391, 338, 339, 340, 1392,
	341, 342, 1393, 343, 344, 345, 1394, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 1395, 267, 1396, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 1397, 364,
	365, 1398, 1399, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1400, 377, 635,
	1401, 636, 378, 1402, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 1164, 384, 385, 1403, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	1404, 1163, 394, 640, 641, 1405, 642, 1406, 396, 397,
	1165, 643, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1407, 408, 410,
	409, 1408, 411, 644, 1168, 412, 413, 1169, 1409, 414,
	0, 0, 0, 415, 416, 419, 1410, 1411, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1412, 269, 1172, 459, 460, 1413, 645,
	461, 646, 463, 464, 1414, 0, 465, 0, 1415, 1416,
	467, 468, 469, 1417, 1418, 470, 471, 647, 1173, 472,
	1174, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 1419, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 1420,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 1421, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 1422, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 1423,
	544, 545, 543, 546, 547, 548, 1424, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 1425, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	1426, 575, 576, 0, 572, 563, 1427, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 1428, 585, 658, 659,
	660, 661, 1429, 594, 1430, 586, 587, 588, 662, 589,
	663, 1431, 590, 591, 592, 593, 0, 595, 596, 1432,
	1433, 597, 598, 599, 601, 602, 600, 603, 1434, 604,
	1435, 0, 605, 606, 607, 664, 665, 666, 1436, 609,
	608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441, 612,
	613, 668, 614, 615, 616, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3406, 270, 272, 271, 273, 274, 275, 276,
	1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367,
	1368, 1369, 1370, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 1371,
	622, 289, 290, 291, 292, 293, 294, 1372, 1373, 0,
	295, 623, 624, 625, 1374, 296, 297, 626, 1375, 1304,
	1376, 298, 299, 300, 301, 302, 303, 304, 0, 1377,
	306, 307, 308, 305, 309, 1378, 310, 0, 311, 312,
	313, 314, 315, 316, 1379, 317, 318, 319, 1161, 320,
	321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 1387, 332,
	329, 330, 1388, 333, 331, 334, 1389, 335, 336, 337,
	1390, 1391, 338, 339, 340, 1392, 341, 342, 1393, 343,
	344, 345, 1394, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 1395,
	267, 1396, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 1397, 364, 365, 1398, 1399, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1400, 377, 635, 1401, 636, 378, 1402,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 1403, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 1404, 1163, 394, 640,
	641, 1405, 642, 1406, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1407, 408, 410, 409, 1408, 411, 644,
	1168, 412, 413, 1169, 1409, 414, 0, 0, 0, 415,
	416, 419, 1410, 1411, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1412,
	269, 1172, 459, 460, 1413, 645, 461, 646, 463, 464,
	1414, 0, 465, 0, 1415, 1416, 467, 468, 469, 1417,
	1418, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1419,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 1420, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 1421, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1422, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 1423, 544, 545, 543, 546,
	547, 548, 1424, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 1425,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 1426, 575, 576, 0,
	572, 563, 1427, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 1428, 585, 658, 659, 660, 661, 1429, 594,
	1430, 586, 587, 588, 662, 589, 663, 1431, 590, 591,
	592, 593, 0, 595, 596, 1432, 1433, 597, 598, 599,
	601, 602, 600, 603, 1434, 604, 1435, 0, 605, 606,
	607, 664, 665, 666, 1436, 609, 608, 610, 667, 1437,
	611, 1438, 1439, 1440, 1441, 612, 613, 668, 614, 615,
	616, 0, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2487, 270,
	272, 271, 273, 274, 275, 276, 1362, 277, 278, 1363,
	1364, 1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 1371, 622, 289, 290, 291,
	292, 293, 294, 1372, 1373, 0, 295, 623, 624, 625,
	1374, 296, 297, 626, 1375, 1304, 1376, 298, 299, 300,
	301, 302, 303, 304, 0, 1377, 306, 307, 308, 305,
	309, 1378, 310, 0, 311, 312, 313, 314, 315, 316,
	1379, 317, 318, 319, 1161, 320, 321, 322, 1380, 1381,
	1383, 1382, 1384, 1385, 1386, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 1387, 332, 329, 330, 1388, 333,
	331, 334, 1389, 335, 336, 337, 1390, 1391, 338, 339,
	340, 1392, 341, 342, 1393, 343, 344, 345, 1394, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 1395, 267, 1396, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	1397, 364, 365, 1398, 1399, 1162, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1400,
	377, 635, 1401, 636, 378, 1402, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 1164, 384, 385, 1403, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 1404, 1163, 394, 640, 641, 1405, 642, 1406,
	396, 397, 1165, 643, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1407,
	408, 410, 409, 1408, 411, 644, 1168, 412, 413, 1169,
	1409, 414, 0, 0, 0, 415, 416, 419, 1410, 1411,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1412, 269, 1172, 459, 460,
	1413, 645, 461, 646, 463, 464, 1414, 0, 465, 0,
	1415, 1416, 467, 468, 469, 1417, 1418, 470, 471, 647,
	1173, 472, 1174, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 1419, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 1420, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 1421, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1422, 521,
	522, 523, 1175, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 1423, 544, 545, 543, 546, 547, 548, 1424, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 1425, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 1426, 575, 576, 0, 572, 563, 1427, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 1428, 585,
	658, 659, 660, 661, 1429, 594, 1430, 586, 587, 588,
	662, 589, 663, 1431, 590, 591, 592, 593, 0, 595,
	596, 1432, 1433, 597, 598, 599, 601, 602, 600, 603,
	1434, 604, 1435, 0, 605, 606, 607, 664, 665, 666,
	1436, 609, 608, 610, 667, 1437, 611, 1438, 1439, 1440,
	1441, 612, 613, 668, 614, 615, 616, 1453, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2174, 0, 270, 272, 271, 273,
	274, 275, 276, 1362, 277, 278, 1363, 1364, 1365, 0,
	1366, 617, 1367, 1368, 1369, 1370, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 1371, 622, 289, 290, 291, 292, 293, 294,
	1372, 1373, 0, 295, 623, 624, 625, 1374, 296, 297,
	626, 1375, 1304, 1376, 298, 299, 300, 301, 302, 303,
	304, 0, 1377, 306, 307, 308, 305, 309, 1378, 310,
	0, 311, 312, 313, 314, 315, 316, 1379, 317, 318,
	319, 1161, 320, 321, 322, 1380, 1381, 1383, 1382, 1384,
	1385, 1386, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 1387, 332, 329, 330, 1388, 333, 331, 334, 1389,
	335, 336, 337, 1390, 1391, 338, 339, 340, 1392, 341,
	342, 1393, 343, 344, 345, 1394, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 1395, 267, 1396, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 1397, 364, 365,
	1398, 1399, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1400, 377, 635, 1401,
	636, 378, 1402, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 1403, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 1404,
	1163, 394, 640, 641, 1405, 642, 1406, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1407, 408, 410, 409,
	1408, 411, 644, 1168, 412, 413, 1169, 1409, 414, 0,
	0, 0, 415, 416, 419, 1410, 1411, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 1412, 269, 1172, 459, 460, 1413, 645, 461,
	646, 463, 464, 1414, 0, 465, 0, 1415, 1416, 467,
	468, 469, 1417, 1418, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1419, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 1420, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 1421, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1422, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 1423, 544,
	545, 543, 546, 547, 548, 1424, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 1425, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 1426,
	575, 576, 0, 572, 563, 1427, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 1428, 585, 658, 659, 660,
	661, 1429, 594, 1430, 586, 587, 588, 662, 589, 663,
	1431, 590, 591, 592, 593, 0, 595, 596, 1432, 1433,
	597, 598, 599, 601, 602, 600, 603, 1434, 604, 1435,
	0, 605, 606, 607, 664, 665, 666, 1436, 609, 608,
	610, 667, 1437, 611, 1438, 1439, 1440, 1441, 612, 613,
	668, 614, 615, 616, 1354, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1362, 277, 278, 1363, 1364, 1365, 0, 1366, 617, 1367,
	1368, 1369, 1370, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 1371,
	622, 289, 290, 291, 292, 293, 294, 1372, 1373, 0,
	295, 623, 624, 625, 1374, 296, 297, 626, 1375, 1304,
	1376, 298, 299, 300, 301, 302, 303, 304, 0, 1377,
	306, 307, 308, 305, 309, 1378, 310, 0, 311, 312,
	313, 314, 315, 316, 1379, 317, 318, 319, 1161, 320,
	321, 322, 1380, 1381, 1383, 1382, 1384, 1385, 1386, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 1387, 332,
	329, 330, 1388, 333, 331, 334, 1389, 335, 336, 337,
	1390, 1391, 338, 339, 340, 1392, 341, 342, 1393, 343,
	344, 345, 1394, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 1395,
	267, 1396, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 1397, 364, 365, 1398, 1399, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1400, 377, 635, 1401, 636, 378, 1402,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 1403, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 1404, 1163, 394, 640,
	641, 1405, 642, 1406, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1407, 408, 410, 409, 1408, 411, 644,
	1168, 412, 413, 1169, 1409, 414, 0, 0, 0, 415,
	416, 419, 1410, 1411, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1412,
	269, 1172, 459, 460, 1413, 645, 461, 646, 463, 464,
	1414, 0, 465, 0, 1415, 1416, 467, 468, 469, 1417,
	1418, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1419,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 1420, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 1421, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1422, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 1423, 544, 545, 543, 546,
	547, 548, 1424, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 1425,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 1426, 575, 576, 0,
	572, 563, 1427, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 1428, 585, 658, 659, 660, 661, 1429, 594,
	1430, 586, 587, 588, 662, 589, 663, 1431, 590, 591,
	592, 593, 0, 595, 596, 1432, 1433, 597, 598, 599,
	601, 602, 600, 603, 1434, 604, 1435, 0, 605, 606,
	607, 664, 665, 666, 1436, 609, 608, 610, 667, 1437,
	611, 1438, 1439, 1440, 1441, 612, 613, 668, 614, 615,
	616, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1362, 277, 278, 1363, 1364,
	1365, 0, 1366, 617, 1367, 1368, 1369, 1370, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 1371, 622, 289, 290, 291, 292,
	293, 294, 1372, 1373, 0, 295, 623, 624, 625, 1374,
	296, 297, 626, 1375, 1304, 1376, 298, 299, 300, 301,
	302, 303, 304, 0, 1377, 306, 307, 308, 305, 309,
	1378, 310, 0, 311, 312, 313, 314, 315, 316, 1379,
	317, 318, 319, 1161, 320, 321, 322, 1380, 1381, 1383,
	1382, 1384, 1385, 1386, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 1387, 332, 329, 330, 1388, 333, 331,
	334, 1389, 335, 336, 337, 1390, 1391, 338, 339, 340,
	1392, 341, 342, 1393, 343, 344, 345, 1394, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 1395, 267, 1396, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 1397,
	364, 365, 1398, 1399, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1400, 377,
	635, 1401, 636, 378, 1402, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 1403, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 1404, 1163, 394, 640, 641, 1405, 642, 1406, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1407, 408,
	410, 409, 1408, 411, 644, 1168, 412, 413, 1169, 1409,
	414, 0, 0, 0, 415, 416, 419, 1410, 1411, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 1412, 269, 1172, 459, 460, 1413,
	645, 461, 646, 463, 464, 1414, 0, 465, 0, 1415,
	1416, 467, 468, 469, 1417, 1418, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1419, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	1420, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 1421, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1422, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	1423, 544, 545, 543, 546, 547, 548, 1424, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 1425, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 1426, 575, 576, 0, 572, 563, 1427, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 1428, 585, 658,
	659, 660, 661, 1429, 594, 1430, 586, 587, 588, 662,
	589, 663, 1431, 590, 591, 592, 593, 0, 595, 596,
	1432, 1433, 597, 598, 599, 601, 602, 600, 603, 1434,
	604, 1435, 0, 605, 606, 607, 664, 665, 666, 1436,
	609, 608, 610, 667, 1437, 611, 1438, 1439, 1440, 1441,
	612, 613, 668, 614, 615, 616, 2462, 0, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 2459, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 2460, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 2458, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	2461, 0, 0, 0, 0, 0, 0, 1080, 2457, 0,
	1042, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 229, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 231, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 1576, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	223, 612, 613, 668, 614, 615, 616, 1055, 0, 224,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 1820, 1818, 0, 0, 1078, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 229, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	231, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 1576,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 223, 612, 613, 668, 614, 615, 616, 1055,
	0, 224, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 1820, 3069, 0, 0, 1078, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 1576, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 223, 612, 613, 668, 614, 615,
	616, 1055, 0, 224, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 1820, 1818, 0, 0, 1078,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 2590, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	2595, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 2591,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 2592, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	2507, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 0, 0, 0, 0, 0, 0,
	0, 1080, 2505, 0, 2504, 1078, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1080, 2502, 0, 2501, 1078,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 0, 0, 0, 0, 0, 0, 0, 1080,
	2499, 0, 2498, 1078, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 1080, 2496, 0, 1669, 1078, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 1668, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	1045, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	1059, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 1080, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	4441, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 1059, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 1080, 0, 0, 0, 1078, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 2376, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 2375, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 1059, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 4202, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 1059, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 3826, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1888, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 0, 1078, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 3553, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	1888, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 2595, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 1080, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 1080, 1818, 0, 2600, 1078, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	2598, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 2586, 1078, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 2575, 1078,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 2573, 1078, 2564, 2571, 1069, 1070, 1066, 1067,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 2567, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 2568, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 2569, 429, 2566, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 2570, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 2565, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 2561, 1078, 2564, 2571,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 2567, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 2568, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 2569, 429, 2566,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 2570, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 2565, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 0, 0, 0, 0, 0, 1826, 0, 1080,
	0, 0, 0, 1078, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 2355, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 1674, 1078, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	1606, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 1601, 1078, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 1592, 1078,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 1587, 1078, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 0, 0, 0, 0,
	0, 0, 0, 1080, 0, 0, 1499, 1078, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 1085,
	378, 0, 379, 380, 381, 382, 383, 1498, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	1493, 1078, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1492, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 0, 0, 0, 0, 0, 0,
	0, 1080, 0, 0, 1486, 1078, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 1306, 1078,
	1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 1080,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 1080, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 4487,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 4486, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 1049, 1050, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 1080, 0, 0, 0, 1078, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 4485, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 4487, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 4486, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1055, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 1049, 1050, 1096, 1068,
	1069, 1070, 1066, 1067, 1079, 1080, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	1120, 1084, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 1133, 0, 287, 1140, 288,
	1139, 0, 1150, 289, 290, 291, 292, 293, 294, 1086,
	1119, 1053, 295, 1180, 1181, 625, 0, 296, 297, 1126,
	0, 1107, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 4147, 322, 1110, 1108, 1109, 1116, 1112, 1111,
	1115, 323, 324, 325, 326, 327, 1143, 328, 1137, 1136,
	1057, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 1128, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 1063, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 1151, 1152,
	359, 1075, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 1135, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 1148, 1149, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1158, 0, 4148,
	378, 0, 379, 380, 381, 382, 383, 1121, 1122, 1125,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 1163,
	394, 1130, 1131, 0, 1091, 0, 396, 397, 1165, 1123,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1159, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 1114, 1113, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 1054, 269, 1172, 459, 460, 1076, 1124, 461, 1138,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 1153,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 1154, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1134, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 4146, 1064, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 1117, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 1132, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	1179, 566, 567, 568, 569, 1155, 573, 574, 0, 575,
	576, 1052, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 1144, 1145, 1146, 1147,
	0, 594, 0, 586, 587, 588, 1156, 589, 1157, 1074,
	590, 591, 592, 593, 0, 595, 596, 0, 1058, 597,
	598, 599, 601, 602, 600, 603, 1118, 604, 0, 0,
	605, 606, 607, 664, 1141, 1178, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1055, 0, 0, 0, 0, 0, 0,
	0, 1051, 0, 0, 0, 0, 0, 0, 1049, 1050,
	1096, 1068, 1069, 1070, 3036, 3037, 1079, 1080, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 1084, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 1133, 0, 287,
	1140, 288, 1139, 0, 1150, 289, 290, 291, 292, 293,
	294, 1086, 1119, 1053, 295, 1180, 1181, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 1143, 328,
	1137, 1136, 1057, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 1063,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 1075, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 1135, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1148, 1149, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 1085, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 1130, 1131, 0, 1091, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 1054, 269, 1172, 459, 460, 1076, 1124,
	461, 1138, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1134, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 1064, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1132, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1179, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 1052, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1144, 1145,
	1146, 1147, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 1074, 590, 591, 592, 593, 0, 595, 596, 0,
	1058, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 1141, 1178, 0, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 1055, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1049, 1050, 1096, 1068, 1069, 1070, 3034, 3035, 1079, 1080,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 1120, 1084, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 1133,
	0, 287, 1140, 288, 1139, 0, 1150, 289, 290, 291,
	292, 293, 294, 1086, 1119, 1053, 295, 1180, 1181, 625,
	0, 296, 297, 1126, 0, 1107, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 1110, 1108,
	1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326, 327,
	1143, 328, 1137, 1136, 1057, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 1128,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 1063, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 1151, 1152, 359, 1075, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 1135, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 1148, 1149,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1158, 0, 1085, 378, 0, 379, 380, 381, 382,
	383, 1121, 1122, 1125, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 1163, 394, 1130, 1131, 0, 1091, 0,
	396, 397, 1165, 1123, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1159, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 1114, 1113,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 1054, 269, 1172, 459, 460,
	1076, 1124, 461, 1138, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 1153, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 1154, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1134, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 1064, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 1117, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 1132, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 1179, 566, 567, 568, 569, 1155,
	573, 574, 0, 575, 576, 1052, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	1144, 1145, 1146, 1147, 0, 594, 0, 586, 587, 588,
	1156, 589, 1157, 1074, 590, 591, 592, 593, 0, 595,
	596, 0, 1058, 597, 598, 599, 601, 602, 600, 603,
	1118, 604, 0, 0, 605, 606, 607, 664, 1141, 1178,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1055, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 1049, 1050, 1096, 1068, 1069, 1070, 1066, 1067,
	1079, 1080, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 1084, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 1133, 0, 287, 1140, 288, 1139, 0, 1150, 289,
	290, 291, 292, 293, 294, 1086, 1119, 1053, 295, 1180,
	1181, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 1143, 328, 1137, 1136, 1057, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 1128, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 1063, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 1075, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 1135, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	1148, 1149, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 1085, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 1130, 1131, 0,
	1091, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 1054, 269, 1172,
	459, 460, 1076, 1124, 461, 1138, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1134, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 1064,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 1132, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 1179, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 1052, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 1144, 1145, 1146, 1147, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 1074, 590, 591, 592, 593,
	0, 595, 596, 0, 1058, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	1141, 1178, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1055,
	0, 0, 0, 0, 0, 0, 0, 1051, 0, 0,
	0, 0, 0, 0, 2363, 2364, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 1080, 0, 0, 0, 1078, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 0,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	269, 1172, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1096, 1068, 1069, 1070, 1066, 1067, 1079, 0, 2583,
	0, 0, 0, 0, 0, 0, 2581, 2582, 270, 272,
	271, 273, 274, 275, 276, 1080, 277, 278, 0, 1078,
	0, 0, 0, 1120, 1084, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 1133, 0,
	287, 1140, 288, 1139, 0, 1150, 289, 290, 291, 292,
	293, 294, 1086, 1119, 0, 295, 1180, 1181, 625, 0,
	296, 297, 1126, 0, 1107, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 1110, 1108, 1109,
	1116, 1112, 1111, 1115, 323, 324, 325, 326, 327, 1143,
	328, 1137, 1136, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 1128, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	1063, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 1151, 1152, 359, 1075, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 1135, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 1148, 1149, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1158, 0, 1085, 378, 0, 379, 380, 381, 382, 383,
	1121, 1122, 1125, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 1163, 394, 1130, 1131, 0, 1091, 0, 396,
	397, 1165, 1123, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1159, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 1114, 1113, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 269, 1172, 459, 460, 1076,
	1124, 461, 1138, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 1153, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 1154, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1134, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 3029, 3030, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 1117, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 1132, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 1179, 566, 567, 568, 569, 1155, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 1144,
	1145, 1146, 1147, 0, 594, 0, 586, 587, 588, 1156,
	589, 1157, 1074, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 1118,
	604, 0, 0, 605, 606, 607, 664, 1141, 1178, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1096, 1068, 1069, 1070,
	1066, 1067, 1079, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 2070, 270, 272, 271, 273, 274, 275, 276,
	1080, 277, 278, 0, 1078, 0, 0, 0, 1120, 1084,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 0, 1133, 0, 287, 1140, 288, 1139, 0,
	1150, 289, 290, 291, 292, 293, 294, 1086, 1119, 1053,
	295, 1180, 1181, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 4487, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 1143, 328, 1137, 1136, 1057, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 1128, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 1063, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 1075,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 1135,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 1148, 1149, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 1085, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 1130,
	1131, 0, 1091, 0, 396, 397, 0, 1123, 0, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 1054,
	269, 0, 459, 460, 1076, 1124, 461, 1138, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1134, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 1064, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 1132, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 1179, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 1052,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 1144, 1145, 1146, 1147, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 1074, 590, 591,
	592, 593, 0, 4486, 596, 0, 1058, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 1141, 1178, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 1218, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 0, 0, 1080, 0, 0, 0, 1078,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 0, 0, 0, 0,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 1119, 0, 295, 623, 624,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 640, 641, 0, 642,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1204, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 0, 269, 1172, 459,
	460, 0, 1124, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 1210, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 654, 1212,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 229, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 0, 572, 563, 231,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 1576, 665,
	666, 0, 609, 608, 610, 667, 1218, 611, 0, 0,
	0, 223, 612, 613, 668, 614, 615, 616, 0, 0,
	224, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 0,
	1208, 0, 1912, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 1119, 0,
	295, 623, 624, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1204, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	269, 1172, 459, 460, 0, 1124, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 1210, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 1212, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 0,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 1576, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 223, 612, 613, 668, 614, 615,
	616, 0, 0, 224, 0, 0, 0, 3189, 0, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 1912, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 1120, 0, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 1119, 0, 295, 623, 624, 625, 0, 296, 297,
	1126, 0, 1107, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116, 1112,
	1111, 1115, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 1151,
	1152, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1158, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 1121, 1122,
	1125, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	1123, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1204, 408, 410, 409,
	0, 411, 1159, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 1114, 1113, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 269, 1172, 459, 460, 0, 1124, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 1210, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	1153, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 1154, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 1212, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 1117, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 1155, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 1156, 589, 1157,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 1118, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 0, 1200, 0, 1218, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 1208, 0, 1206, 1120,
	0, 0, 0, 0, 279, 280, 1160, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 1119,
	0, 295, 623, 624, 625, 0, 296, 297, 1126, 0,
	1107, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 1161,
	320, 321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 1151, 1152, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	1162, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1158, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1121, 1122, 1125, 462,
	1164, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 1163, 394,
	640, 641, 0, 642, 0, 396, 397, 1165, 1123, 1166,
	398, 399, 400, 1167, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1204, 408, 410, 409, 0, 411,
	1159, 1168, 412, 413, 1169, 0, 414, 0, 0, 0,
	415, 416, 419, 1114, 1113, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1170, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1171, 458, 448,
	0, 269, 1172, 459, 460, 0, 1124, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 1210, 467, 468, 469,
	0, 0, 470, 471, 647, 1173, 472, 1174, 1153, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 1154, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1175, 524, 525,
	526, 527, 654, 1212, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 1117, 549, 550, 533, 534, 551, 552,
	1176, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 1155, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 1156, 589, 1157, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 1118, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1218, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 1120, 0, 1208, 0, 1206, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 1119, 0, 295, 623, 624, 625, 0, 296,
	297, 1126, 0, 1107, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 1110, 1108, 1109, 1116,
	1112, 1111, 1115, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	1151, 1152, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1158,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1121,
	1122, 1125, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 1163, 394, 640, 641, 0, 642, 0, 396, 397,
	1165, 1123, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1204, 408, 410,
	409, 0, 411, 1159, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 1114, 1113, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 0, 269, 1172, 459, 460, 0, 1124,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 1210,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 1153, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 1154, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 1212, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 1117, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 1155, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 1156, 589,
	1157, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 1118, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1218, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 1120, 0, 1208, 0, 1206,
	279, 280, 1160, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 1119, 0, 295, 623, 624,
	625, 0, 296, 297, 1126, 0, 1107, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 1161, 320, 321, 322, 1110,
	1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 1151, 1152, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 1162, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1158, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1121, 1122, 1125, 462, 1164, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 1163, 394, 640, 641, 0, 642,
	0, 396, 397, 1165, 1123, 1166, 398, 399, 400, 1167,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1159, 1168, 412, 413,
	1169, 0, 414, 0, 0, 0, 415, 416, 419, 1114,
	1113, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1170, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1171, 458, 448, 0, 269, 1172, 459,
	460, 0, 1124, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 1173, 472, 1174, 1153, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 1154, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1175, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 1117,
	549, 550, 533, 534, 551, 552, 1176, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	1155, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 1156, 589, 1157, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 1118, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 1218, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 3979, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 1119, 0,
	295, 623, 624, 625, 0, 296, 297, 1126, 0, 1107,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 1110, 1108, 1109, 1116, 1112, 1111, 1115, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 1151, 1152, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1158, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 1121, 1122, 1125, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 1123, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1159,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 1114, 1113, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	269, 1172, 459, 460, 0, 1124, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 1153, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	1154, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 1212, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 1117, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 1155, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 1156, 589, 1157, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 1118, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 1042,
	611, 1299, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 1811, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	229, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 231, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 1576, 665, 666, 0,
	609, 608, 610, 667, 1573, 611, 1299, 0, 0, 223,
	612, 613, 668, 614, 615, 616, 0, 0, 224, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	185, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 229, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 231, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 1576, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 223, 612, 613, 668, 614, 615,
	616, 1299, 1298, 224, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 185, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1598, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 3472, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 2252, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 2166, 0, 0,
	0, 0, 2167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	1598, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 2165, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 1598, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 1218, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	1582, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 1119, 0, 295, 623,
	624, 625, 0, 296, 297, 1126, 0, 1107, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	1110, 1108, 1109, 1116, 1112, 1111, 1115, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 1151, 1152, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1158, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 1121, 1122, 1125, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 1123, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1159, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	1114, 1113, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 269, 1172,
	459, 460, 0, 1124, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 1153, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 1154, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	1117, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 1155, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 1156, 589, 1157, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 1118, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 1042, 611, 264,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 229, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 231, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 1576, 665, 666, 0, 609, 608,
	610, 667, 264, 611, 0, 0, 0, 223, 612, 613,
	668, 614, 615, 616, 0, 0, 224, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 185, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 0, 611, 264, 2942, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 1926, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	264, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 4643, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 3422, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1570, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	0, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 264,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 2930, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 264, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 3578, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 884, 611, 791, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 2243, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 798, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 882,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 796, 577, 578, 579, 580, 581, 797,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	789, 611, 791, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 801,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 798, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 796, 577,
	578, 579, 580, 581, 797, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	1965, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 0, 0, 801, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 0, 1971, 0, 287,
	1961, 288, 1977, 0, 1984, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 1987, 1988, 0, 0, 296,
	297, 0, 0, 1304, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 1143, 328,
	1975, 1974, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 1128, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	0, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 1973, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 1982, 1983, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 0, 379, 380, 381, 382, 383, 0,
	0, 0, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1163, 394, 1968, 1969, 0, 1964, 0, 396, 397,
	1165, 0, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 0, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 0, 0, 1172, 459, 460, 0, 0,
	461, 1976, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 0, 1173, 472,
	1174, 0, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 1958, 485, 486, 487,
	1959, 488, 489, 490, 0, 491, 0, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1972, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 0, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	1970, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 1986, 566, 567, 568, 569, 0, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 1978, 1979,
	1980, 1981, 0, 594, 0, 586, 587, 588, 0, 589,
	0, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 0, 1962, 1985, 0, 609,
	608, 610, 0, 0, 611, 0, 0, 791, 0, 612,
	613, 0, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 1952, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 798, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 796, 577, 578, 579, 580, 581, 797,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 791, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 801,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 798, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 2286, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 2287,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 796, 577, 578, 579, 580, 581, 797, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 2288,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 2035, 611,
	1299, 2002, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 801, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 1160,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 1304, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 1161, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 1999, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 1162, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 1164, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1163, 394, 640, 641, 0, 642, 0, 396, 397,
	1165, 643, 1166, 398, 399, 400, 1167, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 1168, 412, 413, 1169, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1170, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1171, 458, 448, 0, 0, 1172, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 1173, 472,
	1174, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1175, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 2000, 549, 550, 533,
	534, 551, 552, 1176, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1996, 611, 1299, 2002, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 1304, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 1999, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1163, 394, 640, 641,
	0, 642, 0, 396, 397, 1165, 643, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 0, 0,
	1172, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 2000, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 791, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 798,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 1991, 539, 540,
	541, 542, 0, 1992, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 796,
	577, 578, 579, 580, 581, 797, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 1990, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 791, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 801, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 798, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 269, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 1943, 539, 540, 541, 542,
	0, 1944, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 796, 577, 578,
	579, 580, 581, 797, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 1942, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 1299, 2002, 0, 0,
	612, 613, 668, 614, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 801, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 1999, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 2000, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 0, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 3765,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1299, 1298, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 1160, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 1304,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 1161, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 1162,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 1164,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1163, 394, 640,
	641, 0, 642, 0, 396, 397, 1165, 643, 1166, 398,
	399, 400, 1167, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	1168, 412, 413, 1169, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1170, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1171, 458, 448, 0,
	0, 1172, 459, 460, 3393, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 647, 1173, 472, 1174, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1175, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 1176,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 1626,
	0, 1299, 1298, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	1160, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 1304, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 1161, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 1625, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 1162, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 1164, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1163, 394, 640, 641, 0, 642, 0, 396,
	397, 1165, 643, 1166, 398, 399, 400, 1167, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 1168, 412, 413, 1169, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1170, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1171, 458, 448, 0, 0, 1172, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 1173,
	472, 1174, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 1624,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1175, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 1623, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 1176, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 0,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 1544, 0, 1299, 1298,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 1160, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 1304, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	1161, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 1162, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1543, 638, 639,
	462, 1164, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1163,
	394, 640, 641, 0, 642, 0, 396, 397, 1165, 643,
	1166, 398, 399, 400, 1167, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 1168, 412, 413, 1169, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1170, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1171, 458,
	448, 0, 0, 1172, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 1173, 472, 1174, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1175, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 1176, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 1504, 0, 1299, 1298, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 1160, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 1304, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 1161, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 1162, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 1164, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1163, 394, 640, 641,
	0, 642, 0, 396, 397, 1165, 643, 1166, 398, 399,
	400, 1167, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 1168,
	412, 413, 1169, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1170, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1171, 458, 448, 0, 0,
	1172, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 1173, 472, 1174, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1175, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 1176, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	1472, 0, 1299, 1298, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 1304, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1471, 638, 639, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1163, 394, 640, 641, 0, 642, 0,
	396, 397, 1165, 643, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 0, 0, 1172, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 1293, 0, 1299,
	1298, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 1304, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 1292, 638,
	639, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 0, 1172, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1299, 1298, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 1304, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 0, 1172,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 0, 611, 1299,
	2002, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 1160, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 1304, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 1161, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 2042, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 1162, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 1164, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1163, 394, 640, 641, 0, 642, 0, 396, 397, 1165,
	643, 1166, 398, 399, 400, 1167, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 1168, 412, 413, 1169, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1170, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1171,
	458, 448, 0, 0, 1172, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 1173, 472, 1174,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1175,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 1176, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 1299, 1298, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 1160, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 1304, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 1161, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 1162, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 1164, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1163, 394, 640, 641, 0,
	642, 0, 396, 397, 1165, 643, 1166, 398, 399, 400,
	1167, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 1168, 412,
	413, 1169, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1170, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1171, 458, 448, 0, 0, 1172,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 1173, 472, 1174, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1175, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 1176, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 1299, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 1160, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 1304, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 1161, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 1162, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 1164, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1163, 394, 640, 641, 0, 642, 0,
	396, 397, 1165, 643, 1166, 398, 399, 400, 1167, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 1168, 412, 413, 1169,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1170,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1171, 458, 448, 0, 0, 1172, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	1173, 472, 1174, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1175, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 1176, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 2749, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 2746,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 2753, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 2955, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 2752, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 2952, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 2954,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 2951, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 2751,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	2953, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 2749, 296, 297, 626,
	0, 0, 2743, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 2746, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 2753, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 2752,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 2742, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 2751, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 2750, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 1697, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 1696, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 1700, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 1698,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 1699, 608, 610, 667, 1446, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1448, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 1210, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 1443, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1445, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 1210, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 1350, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 267, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 1352, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 268, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 269, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 1210, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 700, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 699, 275, 276, 689, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 692, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	693, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 694, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 688, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 689, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 692, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 693, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 694, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 264, 609, 608, 610,
	667, 0, 611, 0, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 270, 272, 271, 273, 274, 275, 276,
	0, 277, 278, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 279, 280, 0, 281, 282, 283, 284,
	285, 286, 618, 619, 0, 287, 620, 288, 621, 0,
	622, 289, 290, 291, 292, 293, 294, 0, 0, 0,
	295, 623, 624, 625, 0, 296, 297, 626, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 304, 0, 0,
	306, 307, 308, 305, 309, 0, 310, 0, 311, 312,
	313, 314, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 0, 0, 0, 0, 0, 0, 0, 323,
	324, 325, 326, 327, 0, 328, 627, 628, 0, 332,
	329, 330, 0, 333, 331, 334, 0, 335, 336, 337,
	0, 0, 338, 339, 340, 0, 341, 342, 0, 343,
	344, 345, 0, 346, 347, 629, 348, 349, 350, 352,
	354, 351, 355, 356, 357, 358, 630, 631, 359, 0,
	267, 0, 0, 0, 0, 0, 360, 361, 362, 632,
	0, 0, 0, 363, 0, 364, 365, 0, 0, 0,
	366, 367, 633, 634, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 635, 0, 636, 378, 0,
	379, 380, 381, 382, 383, 637, 638, 639, 462, 0,
	384, 385, 0, 386, 387, 388, 389, 390, 0, 0,
	0, 268, 391, 392, 393, 395, 0, 0, 394, 640,
	641, 0, 642, 0, 396, 397, 0, 643, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 644,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	269, 0, 459, 460, 0, 645, 461, 646, 463, 464,
	0, 0, 465, 0, 0, 1210, 467, 468, 469, 0,
	0, 470, 471, 647, 0, 472, 0, 648, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 649, 485, 486, 487, 650, 488, 489, 490,
	651, 491, 652, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 653, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 654, 528, 0, 529, 530, 536, 537, 531, 532,
	538, 539, 540, 541, 542, 0, 544, 545, 543, 546,
	547, 548, 0, 549, 550, 533, 534, 551, 552, 0,
	553, 554, 555, 556, 557, 558, 655, 0, 559, 0,
	560, 561, 562, 564, 535, 565, 570, 571, 656, 566,
	567, 568, 569, 657, 573, 574, 0, 575, 576, 0,
	572, 563, 0, 577, 578, 579, 580, 581, 582, 583,
	353, 584, 0, 585, 658, 659, 660, 661, 0, 594,
	0, 586, 587, 588, 662, 589, 663, 0, 590, 591,
	592, 593, 0, 595, 596, 0, 0, 597, 598, 599,
	601, 602, 600, 603, 0, 604, 0, 0, 605, 606,
	607, 664, 665, 666, 264, 609, 608, 610, 667, 0,
	611, 0, 0, 0, 0, 612, 613, 668, 614, 615,
	616, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 3343, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 0, 609, 608, 610, 667, 2900, 611, 264,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 2899, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 2258, 611, 264, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 267, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 268,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 269, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 2199, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 2206, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 2205, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	2192, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 267, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 2194, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 268, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 269, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 2162,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 1210,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1548, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1547, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1463, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1456, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1458, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1283, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1282,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1273, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1272, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 1270, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 1269,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 1265, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 1264, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 0, 609, 608, 610, 667, 670, 611,
	264, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 0, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 267, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 268, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 269, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 0, 609,
	608, 610, 667, 255, 611, 264, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 692,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 693, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	694, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 2295, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 2293, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 267, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 268, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 269, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 2291, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 267,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	268, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 269,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 267, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 2212, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 268, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 269, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 267, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	2021, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 268, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 269, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 267, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 2015, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 268, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 269, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 871, 611, 264, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 870, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	869, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 2955, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 4046, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 757, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 1320, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 1318, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 758, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 754, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 1321, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 753, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	757, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 1320, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 1318,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 758, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 754, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 1321, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	753, 659, 660, 661, 0, 594, 0, 586, 1319, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 679, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 678, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 677, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	0, 611, 264, 2942, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 0, 611, 264, 4056, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 4316, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 3956, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 3733, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 2635, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 264, 2942, 0, 0, 612, 613,
	668, 614, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 0, 277,
	278, 0, 0, 0, 0, 0, 617, 0, 0, 0,
	0, 279, 280, 0, 281, 282, 283, 284, 285, 286,
	618, 619, 0, 287, 620, 288, 621, 0, 622, 289,
	290, 291, 292, 293, 294, 0, 0, 0, 295, 623,
	624, 625, 0, 296, 297, 626, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 304, 0, 0, 306, 307,
	308, 305, 309, 0, 310, 0, 311, 312, 313, 314,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	0, 0, 0, 0, 0, 0, 0, 323, 324, 325,
	326, 327, 0, 328, 627, 628, 0, 332, 329, 330,
	0, 333, 331, 334, 0, 335, 336, 337, 0, 0,
	338, 339, 340, 0, 341, 342, 0, 343, 344, 345,
	0, 346, 347, 629, 348, 349, 350, 352, 354, 351,
	355, 356, 357, 358, 630, 631, 359, 0, 0, 0,
	0, 0, 0, 0, 360, 361, 362, 632, 0, 0,
	0, 363, 0, 364, 365, 0, 0, 0, 366, 367,
	633, 634, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 635, 0, 636, 378, 0, 379, 380,
	381, 382, 383, 637, 638, 639, 462, 0, 384, 385,
	0, 386, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 640, 641, 0,
	642, 0, 396, 397, 0, 643, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 644, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 645, 461, 646, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 2939, 0, 0, 470,
	471, 647, 0, 472, 0, 648, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	649, 485, 486, 487, 650, 488, 489, 490, 651, 491,
	652, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 653, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 654,
	528, 0, 529, 530, 536, 537, 531, 532, 538, 539,
	540, 541, 542, 0, 544, 545, 543, 546, 547, 548,
	0, 549, 550, 533, 534, 551, 552, 0, 553, 554,
	555, 556, 557, 558, 655, 0, 559, 0, 560, 561,
	562, 564, 535, 565, 570, 571, 656, 566, 567, 568,
	569, 657, 573, 574, 0, 575, 576, 0, 572, 563,
	0, 577, 578, 579, 580, 581, 582, 583, 353, 584,
	0, 585, 658, 659, 660, 661, 0, 594, 0, 586,
	587, 588, 662, 589, 663, 0, 590, 591, 592, 593,
	0, 595, 596, 0, 0, 597, 598, 599, 601, 602,
	600, 603, 0, 604, 0, 0, 605, 606, 607, 664,
	665, 666, 264, 609, 608, 610, 667, 0, 611, 0,
	0, 0, 0, 612, 613, 668, 614, 615, 616, 270,
	272, 271, 273, 274, 275, 276, 2268, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 2256, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	757, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 747, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 758, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 754, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 1581, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	753, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1554, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1553, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1538, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1536, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1531, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1508, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1506, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1469, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1451, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 637, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	0, 609, 608, 610, 667, 1288, 611, 264, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 1287, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 0, 609, 608, 610, 667,
	1279, 611, 264, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 0, 277, 278, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 0, 279,
	280, 0, 281, 282, 283, 284, 285, 286, 618, 619,
	0, 287, 620, 288, 621, 0, 622, 289, 290, 291,
	292, 293, 294, 0, 0, 0, 295, 623, 624, 625,
	0, 296, 297, 626, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 304, 0, 0, 306, 307, 308, 305,
	309, 0, 310, 0, 311, 312, 313, 314, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 326, 327,
	0, 328, 627, 628, 0, 332, 329, 330, 0, 333,
	331, 334, 0, 335, 336, 337, 0, 0, 338, 339,
	340, 0, 341, 342, 0, 343, 344, 345, 0, 346,
	347, 629, 348, 349, 350, 352, 354, 351, 355, 356,
	357, 358, 630, 631, 359, 0, 0, 0, 0, 0,
	0, 0, 360, 361, 362, 632, 0, 0, 0, 363,
	0, 364, 365, 0, 0, 0, 366, 367, 633, 634,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 635, 0, 636, 378, 0, 379, 380, 381, 382,
	383, 1278, 638, 639, 462, 0, 384, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 640, 641, 0, 642, 0,
	396, 397, 0, 643, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 644, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 645, 461, 646, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 647,
	0, 472, 0, 648, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 649, 485,
	486, 487, 650, 488, 489, 490, 651, 491, 652, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 653, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 654, 528, 0,
	529, 530, 536, 537, 531, 532, 538, 539, 540, 541,
	542, 0, 544, 545, 543, 546, 547, 548, 0, 549,
	550, 533, 534, 551, 552, 0, 553, 554, 555, 556,
	557, 558, 655, 0, 559, 0, 560, 561, 562, 564,
	535, 565, 570, 571, 656, 566, 567, 568, 569, 657,
	573, 574, 0, 575, 576, 0, 572, 563, 0, 577,
	578, 579, 580, 581, 582, 583, 353, 584, 0, 585,
	658, 659, 660, 661, 0, 594, 0, 586, 587, 588,
	662, 589, 663, 0, 590, 591, 592, 593, 0, 595,
	596, 0, 0, 597, 598, 599, 601, 602, 600, 603,
	0, 604, 0, 0, 605, 606, 607, 664, 665, 666,
	264, 609, 608, 610, 667, 0, 611, 0, 0, 0,
	0, 612, 613, 668, 614, 615, 616, 270, 272, 271,
	273, 274, 275, 276, 1232, 277, 278, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 279, 280, 0,
	281, 282, 283, 284, 285, 286, 618, 619, 0, 287,
	620, 288, 621, 0, 622, 289, 290, 291, 292, 293,
	294, 0, 0, 0, 295, 623, 624, 625, 0, 296,
	297, 626, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 304, 0, 0, 306, 307, 308, 305, 309, 0,
	310, 0, 311, 312, 313, 314, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 0, 0, 0, 0,
	0, 0, 0, 323, 324, 325, 326, 327, 0, 328,
	627, 628, 0, 332, 329, 330, 0, 333, 331, 334,
	0, 335, 336, 337, 0, 0, 338, 339, 340, 0,
	341, 342, 0, 343, 344, 345, 0, 346, 347, 629,
	348, 349, 350, 352, 354, 351, 355, 356, 357, 358,
	630, 631, 359, 0, 0, 0, 0, 0, 0, 0,
	360, 361, 362, 632, 0, 0, 0, 363, 0, 364,
	365, 0, 0, 0, 366, 367, 633, 634, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 635,
	0, 636, 378, 0, 379, 380, 381, 382, 383, 637,
	638, 639, 462, 0, 384, 385, 0, 386, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 640, 641, 0, 642, 0, 396, 397,
	0, 643, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 644, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 645,
	461, 646, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 647, 0, 472,
	0, 648, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 649, 485, 486, 487,
	650, 488, 489, 490, 651, 491, 652, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	653, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 654, 528, 0, 529, 530,
	536, 537, 531, 532, 538, 539, 540, 541, 542, 0,
	544, 545, 543, 546, 547, 548, 0, 549, 550, 533,
	534, 551, 552, 0, 553, 554, 555, 556, 557, 558,
	655, 0, 559, 0, 560, 561, 562, 564, 535, 565,
	570, 571, 656, 566, 567, 568, 569, 657, 573, 574,
	0, 575, 576, 0, 572, 563, 0, 577, 578, 579,
	580, 581, 582, 583, 353, 584, 0, 585, 658, 659,
	660, 661, 0, 594, 0, 586, 587, 588, 662, 589,
	663, 0, 590, 591, 592, 593, 0, 595, 596, 0,
	0, 597, 598, 599, 601, 602, 600, 603, 0, 604,
	0, 0, 605, 606, 607, 664, 665, 666, 264, 609,
	608, 610, 667, 0, 611, 0, 0, 0, 0, 612,
	613, 668, 614, 615, 616, 270, 272, 271, 273, 274,
	275, 276, 763, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 757, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 747, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 745, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 746, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 758,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 748, 528,
	0, 529, 530, 536, 537, 531, 532, 754, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 749, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 753, 659, 660, 661, 0, 594, 0, 586, 751,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 739, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 740, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 702, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 0, 609, 608, 610, 667, 696, 611, 264, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 0, 277, 278, 0, 0, 0, 0, 0,
	617, 0, 0, 0, 0, 279, 280, 0, 281, 282,
	283, 284, 285, 286, 618, 619, 0, 287, 620, 288,
	621, 0, 622, 289, 290, 291, 292, 293, 294, 0,
	0, 0, 295, 623, 624, 625, 0, 296, 297, 626,
	0, 0, 0, 298, 299, 300, 301, 302, 303, 304,
	0, 0, 306, 307, 308, 305, 309, 0, 310, 0,
	311, 312, 313, 314, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 0, 0, 0, 0, 0, 0,
	0, 323, 324, 325, 326, 327, 0, 328, 627, 628,
	0, 332, 329, 330, 0, 333, 331, 334, 0, 335,
	336, 337, 0, 0, 338, 339, 340, 0, 341, 342,
	0, 343, 344, 345, 0, 346, 347, 629, 348, 349,
	350, 352, 354, 351, 355, 356, 357, 358, 630, 631,
	359, 0, 0, 0, 0, 0, 0, 0, 360, 361,
	362, 632, 0, 0, 0, 363, 0, 364, 365, 0,
	0, 0, 366, 367, 633, 634, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 635, 0, 636,
	378, 0, 379, 380, 381, 382, 383, 637, 638, 639,
	462, 0, 384, 385, 0, 386, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 640, 641, 0, 642, 0, 396, 397, 0, 643,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 644, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 645, 461, 646,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 647, 0, 472, 0, 648,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 649, 485, 486, 487, 650, 488,
	489, 490, 651, 491, 652, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 653, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 654, 528, 0, 529, 530, 536, 537,
	531, 532, 538, 539, 540, 541, 542, 0, 544, 545,
	543, 546, 547, 548, 0, 549, 550, 533, 534, 551,
	552, 0, 553, 554, 555, 556, 557, 558, 655, 0,
	559, 0, 560, 561, 562, 564, 535, 565, 570, 571,
	656, 566, 567, 568, 569, 657, 573, 574, 0, 575,
	576, 0, 572, 563, 0, 577, 578, 579, 580, 581,
	582, 583, 353, 584, 0, 585, 658, 659, 660, 661,
	0, 594, 0, 586, 587, 588, 662, 589, 663, 0,
	590, 591, 592, 593, 0, 595, 596, 0, 0, 597,
	598, 599, 601, 602, 600, 603, 0, 604, 0, 0,
	605, 606, 607, 664, 665, 666, 0, 609, 608, 610,
	667, 674, 611, 264, 0, 0, 0, 612, 613, 668,
	614, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 637, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 3442, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 3379, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 536, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 3308, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 549, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 3306, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	3291, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 378, 0, 379, 380, 381, 382, 383, 2910, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 528, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 264, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 270, 272, 271, 273, 274, 275,
	276, 0, 277, 278, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 279, 280, 0, 281, 282, 283,
	284, 285, 286, 618, 619, 0, 287, 620, 288, 621,
	0, 622, 289, 290, 291, 292, 293, 294, 0, 0,
	0, 295, 623, 624, 625, 0, 296, 297, 626, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 304, 0,
	0, 306, 307, 308, 305, 309, 0, 310, 0, 311,
	312, 313, 314, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 322, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 326, 327, 0, 328, 627, 628, 0,
	332, 329, 330, 0, 333, 331, 334, 0, 335, 336,
	337, 0, 0, 338, 339, 340, 0, 341, 342, 0,
	343, 344, 345, 0, 346, 347, 629, 348, 349, 350,
	352, 354, 351, 355, 356, 357, 358, 630, 631, 359,
	0, 0, 0, 0, 0, 0, 0, 360, 361, 362,
	632, 0, 0, 0, 363, 0, 364, 365, 0, 0,
	0, 366, 367, 633, 634, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 635, 0, 636, 378,
	0, 379, 380, 381, 382, 383, 637, 638, 639, 462,
	0, 384, 385, 0, 386, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	640, 641, 0, 642, 0, 396, 397, 0, 643, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	644, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 645, 461, 646, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 647, 0, 472, 0, 648, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 649, 485, 486, 487, 650, 488, 489,
	490, 651, 491, 652, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 653, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 654, 528, 0, 529, 530, 740, 537, 531,
	532, 538, 539, 540, 541, 542, 0, 544, 545, 543,
	546, 547, 548, 0, 549, 550, 533, 534, 551, 552,
	0, 553, 554, 555, 556, 557, 558, 655, 0, 559,
	0, 560, 561, 562, 564, 535, 565, 570, 571, 656,
	566, 567, 568, 569, 657, 573, 574, 0, 575, 576,
	0, 572, 563, 0, 577, 578, 579, 580, 581, 582,
	583, 353, 584, 0, 585, 658, 659, 660, 661, 0,
	594, 0, 586, 587, 588, 662, 589, 663, 0, 590,
	591, 592, 593, 0, 595, 596, 0, 0, 597, 598,
	599, 601, 602, 600, 603, 0, 604, 0, 0, 605,
	606, 607, 664, 665, 666, 264, 609, 608, 610, 667,
	0, 611, 0, 0, 0, 0, 612, 613, 668, 614,
	615, 616, 270, 272, 271, 273, 274, 275, 276, 0,
	277, 278, 0, 0, 0, 0, 0, 617, 0, 2230,
	0, 0, 279, 280, 0, 281, 282, 283, 284, 285,
	286, 618, 619, 0, 287, 620, 288, 621, 0, 622,
	289, 290, 291, 292, 293, 294, 0, 0, 0, 295,
	623, 624, 625, 0, 296, 297, 626, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 304, 0, 0, 306,
	307, 308, 305, 309, 0, 310, 0, 311, 312, 313,
	314, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	322, 0, 0, 0, 0, 0, 0, 0, 323, 324,
	325, 326, 327, 0, 328, 627, 628, 0, 332, 329,
	330, 0, 333, 331, 334, 0, 335, 336, 337, 0,
	0, 338, 339, 340, 0, 341, 342, 0, 343, 344,
	345, 0, 346, 347, 629, 348, 349, 350, 352, 354,
	351, 355, 356, 357, 358, 630, 631, 359, 0, 0,
	0, 0, 0, 0, 0, 360, 361, 362, 632, 0,
	0, 0, 363, 0, 364, 365, 0, 0, 0, 366,
	367, 633, 634, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 635, 0, 636, 378, 0, 379,
	380, 381, 382, 383, 637, 638, 639, 462, 0, 384,
	385, 0, 386, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 640, 641,
	0, 642, 0, 396, 397, 0, 643, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 644, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 645, 461, 646, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 647, 0, 472, 0, 648, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 649, 485, 486, 487, 650, 488, 489, 490, 651,
	491, 652, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 653, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	654, 528, 0, 529, 530, 536, 537, 531, 532, 538,
	539, 540, 541, 542, 0, 544, 545, 543, 546, 547,
	548, 0, 0, 550, 533, 534, 551, 552, 0, 553,
	554, 555, 556, 557, 558, 655, 0, 559, 0, 560,
	561, 562, 564, 535, 565, 570, 571, 656, 566, 567,
	568, 569, 657, 573, 574, 0, 575, 576, 0, 572,
	563, 0, 577, 578, 579, 580, 581, 582, 583, 353,
	584, 0, 585, 658, 659, 660, 661, 0, 594, 0,
	586, 587, 588, 662, 589, 663, 0, 590, 591, 592,
	593, 0, 595, 596, 0, 0, 597, 598, 599, 601,
	602, 600, 603, 0, 604, 0, 0, 605, 606, 607,
	664, 665, 666, 264, 609, 608, 610, 667, 0, 611,
	0, 0, 0, 0, 612, 613, 668, 614, 615, 616,
	270, 272, 271, 273, 274, 275, 276, 0, 277, 278,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	279, 280, 0, 281, 282, 283, 284, 285, 286, 618,
	619, 0, 287, 620, 288, 621, 0, 622, 289, 290,
	291, 292, 293, 294, 0, 0, 0, 295, 623, 624,
	625, 0, 296, 297, 626, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 304, 0, 0, 306, 307, 308,
	305, 309, 0, 310, 0, 311, 312, 313, 314, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 322, 0,
	0, 0, 0, 0, 0, 0, 323, 324, 325, 326,
	327, 0, 328, 627, 628, 0, 332, 329, 330, 0,
	333, 331, 334, 0, 335, 336, 337, 0, 0, 338,
	339, 340, 0, 341, 342, 0, 343, 344, 345, 0,
	346, 347, 629, 348, 349, 350, 352, 354, 351, 355,
	356, 357, 358, 630, 631, 359, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 362, 632, 0, 0, 0,
	363, 0, 364, 365, 0, 0, 0, 366, 367, 633,
	634, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 635, 0, 636, 378, 0, 379, 380, 381,
	382, 383, 1250, 638, 639, 462, 0, 384, 385, 0,
	386, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 640, 641, 0, 642,
	0, 396, 397, 0, 643, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 644, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 645, 461, 646, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	647, 0, 472, 0, 648, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 649,
	485, 486, 487, 650, 488, 489, 490, 651, 491, 652,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 653, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 654, 528,
	0, 529, 530, 536, 537, 531, 532, 538, 539, 540,
	541, 542, 0, 544, 545, 543, 546, 547, 548, 0,
	549, 550, 533, 534, 551, 552, 0, 553, 554, 555,
	556, 557, 558, 655, 0, 559, 0, 560, 561, 562,
	564, 535, 565, 570, 571, 656, 566, 567, 568, 569,
	657, 573, 574, 0, 575, 576, 0, 572, 563, 0,
	577, 578, 579, 580, 581, 582, 583, 353, 584, 0,
	585, 658, 659, 660, 661, 0, 594, 0, 586, 587,
	588, 662, 589, 663, 0, 590, 591, 592, 593, 0,
	595, 596, 0, 0, 597, 598, 599, 601, 602, 600,
	603, 0, 604, 0, 0, 605, 606, 607, 664, 665,
	666, 264, 609, 608, 610, 667, 0, 611, 0, 0,
	0, 0, 612, 613, 668, 614, 615, 616, 270, 272,
	271, 273, 274, 275, 276, 0, 277, 278, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 279, 280,
	0, 281, 282, 283, 284, 285, 286, 618, 619, 0,
	287, 620, 288, 621, 0, 622, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 295, 623, 624, 625, 0,
	296, 297, 626, 0, 0, 0, 298, 299, 300, 301,
	302, 303, 304, 0, 0, 306, 307, 308, 305, 309,
	0, 310, 0, 311, 312, 313, 314, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 322, 0, 0, 0,
	0, 0, 0, 0, 323, 324, 325, 326, 327, 0,
	328, 627, 628, 0, 332, 329, 330, 0, 333, 331,
	334, 0, 335, 336, 337, 0, 0, 338, 339, 340,
	0, 341, 342, 0, 343, 344, 345, 0, 346, 347,
	629, 348, 349, 350, 352, 354, 351, 355, 356, 357,
	358, 630, 631, 359, 0, 0, 0, 0, 0, 0,
	0, 360, 361, 362, 632, 0, 0, 0, 363, 0,
	364, 365, 0, 0, 0, 366, 367, 633, 634, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	635, 0, 636, 378, 0, 379, 380, 381, 382, 383,
	637, 638, 639, 462, 0, 384, 385, 0, 386, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 640, 641, 0, 642, 0, 396,
	397, 0, 643, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 644, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	645, 461, 646, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 647, 0,
	472, 0, 648, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 649, 485, 486,
	487, 650, 488, 489, 490, 651, 491, 652, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 653, 503, 1183, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 654, 528, 0, 529,
	530, 536, 537, 531, 532, 538, 539, 540, 541, 542,
	0, 544, 545, 543, 546, 547, 548, 0, 549, 550,
	533, 534, 551, 552, 0, 553, 554, 555, 556, 557,
	558, 655, 0, 559, 0, 560, 561, 562, 564, 535,
	565, 570, 571, 656, 566, 567, 568, 569, 657, 573,
	574, 0, 575, 576, 0, 572, 563, 0, 577, 578,
	579, 580, 581, 582, 583, 353, 584, 0, 585, 658,
	659, 660, 661, 0, 594, 0, 586, 587, 588, 662,
	589, 663, 0, 590, 591, 592, 593, 0, 595, 596,
	0, 0, 597, 598, 599, 601, 602, 600, 603, 0,
	604, 0, 0, 605, 606, 607, 664, 665, 666, 264,
	609, 608, 610, 667, 0, 611, 0, 0, 0, 0,
	612, 613, 668, 614, 615, 616, 270, 272, 271, 273,
	274, 275, 276, 0, 277, 278, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 279, 280, 0, 281,
	282, 283, 284, 285, 286, 618, 619, 0, 287, 620,
	288, 621, 0, 622, 289, 290, 291, 292, 293, 294,
	0, 0, 0, 295, 623, 624, 625, 0, 296, 297,
	626, 0, 0, 0, 298, 299, 300, 301, 302, 303,
	304, 0, 0, 306, 307, 308, 305, 309, 0, 310,
	0, 311, 312, 313, 314, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 322, 0, 0, 0, 0, 0,
	0, 0, 323, 324, 325, 326, 327, 0, 328, 627,
	628, 0, 332, 329, 330, 0, 333, 331, 334, 0,
	335, 336, 337, 0, 0, 338, 339, 340, 0, 341,
	342, 0, 343, 344, 345, 0, 346, 347, 629, 348,
	349, 350, 352, 354, 351, 355, 356, 357, 358, 630,
	631, 359, 0, 0, 0, 0, 0, 0, 0, 360,
	361, 362, 632, 0, 0, 0, 363, 0, 364, 365,
	0, 0, 0, 366, 367, 633, 634, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 635, 0,
	636, 0, 0, 379, 380, 381, 382, 383, 637, 638,
	639, 462, 0, 384, 385, 0, 386, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 640, 641, 0, 642, 0, 396, 397, 0,
	643, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 644, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 645, 461,
	646, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 647, 0, 472, 0,
	648, 473, 474, 466, 475, 476, 0, 478, 479, 480,
	481, 482, 0, 483, 484, 649, 485, 486, 487, 650,
	488, 489, 490, 651, 491, 652, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 0, 501, 502, 653,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 654, 0, 0, 529, 530, 536,
	537, 531, 532, 538, 539, 540, 541, 542, 0, 544,
	545, 543, 546, 547, 548, 0, 549, 550, 533, 534,
	551, 552, 0, 553, 554, 555, 556, 557, 558, 655,
	0, 559, 0, 560, 561, 562, 564, 535, 565, 570,
	571, 656, 566, 567, 568, 569, 657, 573, 574, 0,
	575, 576, 0, 572, 563, 0, 577, 578, 579, 580,
	581, 582, 583, 353, 584, 0, 585, 658, 659, 660,
	661, 0, 594, 0, 586, 587, 588, 662, 589, 663,
	0, 590, 591, 592, 593, 0, 595, 596, 0, 0,
	597, 598, 599, 601, 602, 600, 603, 0, 604, 0,
	0, 605, 606, 607, 664, 665, 666, 0, 609, 608,
	610, 667, 0, 611, 0, 0, 0, 0, 612, 613,
	668, 614, 615, 616, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 1745, 1746, 1748, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 1747,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 1785, 1792,
	0, 1795, 0, 0, 0, 0, 1762, 1763, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 1791, 0, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 1769, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	1786, 0, 1769, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 1770, 1771, 1772, 1773, 4420, 0, 0,
	1784, 0, 0, 1753, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 0, 1745, 1746, 4416, 1778, 1779, 1780, 1788,
	1789, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1795, 0, 1781, 1776, 0, 0, 0,
	1775, 1777, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 1771, 1772, 1773, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 1785,
	0, 0, 1795, 1774, 1748, 0, 0, 0, 0, 1775,
	1777, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 1791, 0, 1792, 0,
	0, 0, 0, 0, 0, 1762, 1763, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	1786, 0, 0, 1783, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 4337, 0, 0,
	1785, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	1775, 1777, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1791, 0, 1792,
	0, 0, 0, 1769, 0, 0, 1762, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 1745, 1746, 1786,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 0, 0, 0, 4302, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 1785, 0, 0, 1795, 0, 1794, 0,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 1747, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 4301, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 1771,
	1772, 1773, 0, 1782, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 1791, 0, 1792, 0, 0, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790,
	0, 0, 0, 1786, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1776, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 1774, 0,
	4131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1769,
	1770, 1771, 1772, 1773, 0, 0, 0, 0, 0, 0,
	1753, 0, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788,
	1789, 1790, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1776, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 1785, 0, 0,
	1795, 0, 1794, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 1792, 0, 1747, 0,
	0, 0, 0, 1762, 1763, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	0, 0, 3975, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 1771, 1772, 1773, 0, 1782, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 1775,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 1791, 0, 1792, 0,
	0, 0, 0, 0, 0, 1762, 1763, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 1745, 1746, 0, 1778, 1779,
	1780, 1788, 1789, 1790, 0, 0, 0, 1786, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1776, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 1774, 0, 3911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 1771, 1772, 1773, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 1785, 0, 0, 1795, 0, 1794, 0, 0, 0,
	0, 1775, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1791, 0,
	1792, 0, 1747, 0, 0, 0, 0, 1762, 1763, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 0, 0, 0, 3910, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1770, 1771, 1772, 1773,
	0, 1782, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 0, 0, 0, 0, 0, 1762,
	1763, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 1745,
	1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0,
	0, 1786, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 1776, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 1759, 1760,
	1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 0, 0, 1774, 0, 3909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1770, 1771,
	1772, 1773, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1776, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 1785, 0, 0, 1795, 0,
	1794, 0, 0, 0, 0, 1775, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 1792, 0, 1747, 0, 0, 0,
	0, 1762, 1763, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0,
	3583, 0, 0, 0, 0, 0, 0, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1770, 1771, 1772, 1773, 0, 1782, 0, 0, 0, 0,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 1775, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 1791, 0, 1792, 0, 0, 0,
	0, 0, 0, 1762, 1763, 0, 0, 0, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788,
	1789, 1790, 0, 0, 0, 1786, 1768, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 1776, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758,
	1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0,
	1774, 0, 3109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 1770, 1771, 1772, 1773, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 1745, 1746, 0, 1778, 1779,
	1780, 1788, 1789, 1790, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1776, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 1785,
	0, 0, 1795, 0, 1794, 0, 0, 0, 0, 1775,
	1777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 1792, 0,
	1747, 0, 0, 0, 0, 1762, 1763, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761,
	0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755,
	0, 0, 0, 0, 3108, 0, 0, 0, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 1771, 1772, 1773, 0, 1782,
	0, 0, 0, 0, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 1775, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 1791, 0,
	1792, 0, 0, 0, 0, 0, 0, 1762, 1763, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 1745, 1746, 0,
	1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0, 1786,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	1776, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787,
	1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752,
	1754, 1755, 0, 0, 1774, 0, 3107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 1770, 1771, 1772, 1773,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1776, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 1785, 0, 0, 1795, 0, 0, 1794,
	0, 0, 0, 1775, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 1792, 0, 0, 1747, 0, 0, 0, 1762,
	1763, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 0, 0, 0, 0, 1759, 1760,
	1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750,
	1751, 1752, 1754, 1755, 0, 0, 0, 0, 3106, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 1782, 0, 0, 0, 0, 0, 1753,
	4557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 0, 0, 1791, 0, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 1786, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4556, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757,
	1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 3073, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 0,
	0, 1753, 0, 3169, 0, 0, 0, 3168, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 0, 0, 1785, 0,
	0, 1795, 0, 0, 0, 0, 1781, 1776, 1775, 1777,
	0, 0, 3044, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 1791, 0, 1792, 0, 0,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 1768, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 3045, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 0, 2608,
	0, 0, 0, 1753, 0, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1776,
	0, 0, 0, 2607, 0, 0, 1748, 0, 0, 0,
	1785, 1774, 0, 1795, 0, 1794, 0, 0, 0, 0,
	1775, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 1791, 0, 1792,
	0, 1747, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 1786, 0,
	1764, 0, 0, 0, 1783, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 1776,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 1770, 1771, 1772, 1773, 0,
	1782, 1767, 0, 0, 0, 1753, 0, 0, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 1785, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 1791,
	0, 1792, 0, 0, 0, 0, 0, 0, 1762, 1763,
	0, 0, 0, 0, 1769, 1770, 1771, 1772, 1773, 0,
	0, 0, 0, 0, 0, 1753, 1783, 0, 1745, 1746,
	0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0,
	1786, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 1785, 0, 0, 1795, 0, 1794, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 1791,
	0, 1792, 0, 1747, 0, 0, 0, 0, 1762, 1763,
	0, 0, 1782, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	1773, 0, 1782, 1039, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 1778, 1779, 1780, 1788, 1789, 1790, 0,
	0, 0, 0, 0, 1785, 0, 0, 1795, 0, 0,
	0, 0, 1781, 1776, 1775, 1777, 0, 0, 0, 0,
	1748, 0, 0, 0, 0, 1774, 0, 0, 0, 1794,
	0, 1791, 0, 1792, 0, 0, 0, 0, 0, 0,
	1762, 1763, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 1783, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 1786, 1768, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	1771, 1772, 1773, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 3175, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 1785, 1774, 0, 1795,
	0, 0, 0, 0, 0, 0, 1775, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 1791, 0, 1792, 0, 0, 0, 0,
	0, 0, 1762, 1763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	1783, 0, 1745, 1746, 0, 1778, 1779, 1780, 1788, 1789,
	1790, 0, 0, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1776, 0, 0, 0, 3170,
	0, 0, 1748, 0, 0, 0, 0, 3564, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 1770, 1771, 1772, 1773, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 1745, 1746, 0, 1778, 1779, 1780,
	1788, 1789, 1790, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 1776, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 1785, 0,
	0, 1795, 0, 1794, 0, 0, 0, 0, 1775, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 1792, 0, 1747,
	0, 0, 0, 0, 1762, 1763, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 1759, 1760, 1766, 1787, 1765, 1761, 0,
	1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 1771, 1772, 1773, 0, 1782, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 1746, 0, 1778,
	1779, 1780, 1788, 1789, 1790, 0, 0, 0, 0, 0,
	1785, 0, 0, 1795, 0, 0, 0, 0, 1781, 1776,
	1775, 1777, 0, 3110, 0, 0, 1748, 0, 0, 0,
	0, 1774, 0, 0, 0, 1794, 0, 1791, 0, 1792,
	0, 0, 0, 0, 0, 0, 1762, 1763, 0, 0,
	0, 0, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 1786, 1768,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 1771, 1772, 1773, 0,
	3137, 0, 0, 0, 0, 1753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 1759, 1760, 1766, 1787, 1765,
	1761, 0, 1758, 1756, 1757, 1749, 1750, 1751, 1752, 1754,
	1755, 0, 1785, 1774, 0, 1795, 0, 0, 0, 0,
	0, 0, 1775, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 1791,
	0, 1792, 0, 0, 0, 0, 0, 0, 1762, 1763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 1783, 0, 1745, 1746,
	0, 1778, 1779, 1780, 1788, 1789, 1790, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 1776, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 1759, 1760, 1766,
	1787, 1765, 1761, 0, 1758, 1756, 1757, 1749, 1750, 1751,
	1752, 1754, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	1773, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 1775, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1791, 0, 1792, 0, 930, 0, 976, 0, 0,
	1762, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	0, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 952, 0, 936,
	935, 0, 0, 0, 1784, 0, 0, 0, 0, 1759,
	1760, 1766, 1787, 1765, 1761, 0, 1758, 1756, 1757, 1749,
	1750, 1751, 1752, 1754, 1755, 0, 0, 937, 0, 0,
	0, 0, 940, 0, 0, 0, 1793, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 950, 0, 0,
	0, 0, 0, 0, 1782, 966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 945, 0, 0, 0, 0,
	0, 0, 0, 934, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 946, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 953, 0, 0, 0, 0, 0, 0, 948,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 0, 0, 1784, 0, 0, 0,
	0, 1759, 1760, 1766, 1787, 1765, 1761, 0, 1758, 1756,
	1757, 1749, 1750, 1751, 1752, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 941, 0, 0, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 970, 971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	0, 0, 0, 0, 0, 0, 982, 964, 0, 957,
	955, 0, 960, 0, 0, 0, 0, 0, 961, 0,
	0, 932, 0, 979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 972, 0, 962, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 969,
}

var sqlPact = [...]int{
	7549, -1000, -1000, -1000, -1000, 192, -1000, -1000, 190, 187,
	186, 183, 181, 179, 176, 172, 171, 168, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, 164, -1000, -1000, 162, -1000,
	161, 160, 158, -1000, -1000, 156, -1000, 150, -1000, -1000,
	-1000, -1000, 149, 147, 144, 88881, 88336, 89419, 2227, 109479,
	95903, 2193, 79644, 108934, 79099, 108389, 2014, 9653, 107844, 2659,
	143, -1000, 107299, 142, 141, 138, -1000, 106754, -1000, 2080,
	-1000, 134, -1000, 4953, 64348, 133, 131, 126, 2788, 125,
	-1000, 124, 121, -1000, -1000, 120, -1000, 11413, 1495, -1000,
	119, 118, -1000, 720, 93730, 117, 116, 2484, 114, 112,
	63803, 110, 107, 2142, 2758, -1000, -1000, 1981, -1000, -1000,
	106, 105, 104, 102, 101, 100, 99, 98, 95, 94,
	92, -1000, 91, 88, 87, 85, 84, -1000, 83, 82,
	81, -1000, 80, -1000, 79, 78, 77, 76, 75, 74,
	73, 72, 71, 70, 69, 68, 65, 63, 122083, -1000,
	1859, 1650, 1646, 1644, 1643, 1642, 993, 62, 56, 47,
	46, 45, 44, 38, 37, 35, 34, 29, 28, 26,
	25, 24, 23, 20, 155, 16, 15, 13, 10, 9,
	6, 5, 2234, -1000, 1555, 971, 29888, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115397, 110017, 4, -74, 1, -1000, 3247,
	1010, 52883, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 477, 2071, 747, -1000, -1000, -1000, 106216, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2226, -5, -1000, 1912,
	-1000, -1000, -1000, -1000, -1000, 746, -1000, 2214, 245, 2131,
	-1000, -1000, -1000, 3289, 2367, 3677, 3676, 3675, 3674, 3673,
	114859, 1768, 3669, 2442, 3668, 3667, 3666, 3664, 3663, 3662,
	3661, -1000, 87791, 1033, 87246, 86701, 3313, 105678, 86156, 105133,
	73115, 44976, 948, 3288, -1000, -1000, -1000, -1000, -1000, -1000,
	110017, -1000, 1032, -1000, -1000, 3659, 3658, 2011, 745, 95358,
	-1000, 2009, -1000, 936, 31604, -1000, 1302, -1000, 31604, 258,
	-1000, -1000, -1000, -1000, -1000, -1000, 3657, 3656, 3655, 3654,
	3652, -1000, -1000, 78554, 22972, 78009, 77464, 104588, 22415, 85611,
	85066, 3650, 3649, 3646, 3645, 104043, 72558, 1025, 1399, -1000,
	-1000, -1000, -1000, -1000, -1000, -25, 70330, 3447, 110017, -1000,
	257, -1000, -1000, -1000, -1000, -1000, -1000, 44392, 945, 43808,
	723, 43224, 687, -1000, -1000, -1000, -1000, 72001, -1000, 103498,
	2366, 3644, 3642, 1116, 3641, 3187, 1752, 3640, 1762, 1202,
	3637, 3635, 3634, 3631, 3630, 3628, 3627, 1408, 102953, 2922,
	1465, 102408, 1645, 71444, 1023, 84521, 89419, 2518, 101863, 1372,
	1369, -1000, -1000, -1000, -1000, 3028, 2752, 2751, 1325, -1000,
	-1000, -1000, -1000, 55602, 6575, 6219, 10057, 101318, 58377, 89419,
	89419, -1000, -1000, -1000, -1000, -1000, 42640, 595, 42056, 851,
	-1000, -1000, 56157, 2882, -1000, -1000, -1000, -1000, 41472, 574,
	40888, 786, 110017, -1000, 2921, 1922, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2375, 1614, 3456, 2687, 70887, 2062, 1421, 3253,
	3027, 3026, 1511, 3024, 3626, 2540, 3023, 3022, 3014, 3011,
	3007, 1662, 2455, 592, 29304, 2910, 1686, 40304, 1483, 1510,
	3006, 3003, 3495, 1904, 1941, 2067, 76919, 3625, 3624, 3224,
	3002, 2999, 2762, 2996, -1000, 2879, -1000, -1000, -1000, -1000,
	1457, -1000, -1000, -1000, -1000, 80182, -1000, -1000, 1296, -1000,
	-1000, 1296, -1000, -1000, -1000, -1000, -1000, 1317, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1555,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1897, -1000, 2001, -1000, -1000, 2473, 3212, 3212, 3212, 3286,
	452, 427, -1000, 155, -1000, -1000, 121837, -1000, -1000, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 2047, -1000, 743, -1000,
	-1000, 803, -1000, 741, 613, -1000, -1000, -1000, -1000, -1000,
	-1000, 740, -1000, -1000, -1000, -1000, -1000, -1000, 3447, -1000,
	25812, -1000, -1000, -1000, 461, 739, 45548, -1000, -1000, 3515,
	3511, 933, -1000, 256, 949, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2920, 730, 729,
	-1000, 728, 724, 722, 721, 719, -1000, -1000, -1000, 718,
	715, 712, 709, 705, 702, 699, 696, -1000, 1945, -1000,
	-1000, -1000, -1000, -1000, -1000, 660, 654, 654, 654, -1000,
	1018, -1000, -1000, -1000, 274, 652, 271, 650, 647, 645,
	-1000, 695, 694, 691, 690, 688, 681, 680, 678, 673,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1015, -1000, -1000,
	-1000, -1000, -32, 110017, -1000, 477, -32, -1000, -1000, 672,
	-1000, 33904, 33904, 33904, -1000, -1000, 2212, 45548, -1000, 2399,
	-1000, -20, -20, 886, 54512, -1000, 51772, 886, 278, 817,
	60008, -1000, 2878, -1000, -1000, 671, 253, -1000, -1000, -1000,
	-1000, 23527, 2877, 110017, 110017, 89419, 89419, 89419, 3623, 3085,
	45548, -1000, -1000, 68137, 110017, 89957, -1000, -1000, 3398, 64886,
	67599, 110017, 2918, 67061, 3622, -1000, -1000, -1000, -1000, -1000,
	3080, 3620, 3619, 3618, -1000, 110017, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 221, 3079, -1000, -1000, 93185, 221, 3076,
	-1000, 221, 3075, -1000, 92647, -1000, -1000, 2203, 3074, -1000,
	-1000, 225, 3073, -1000, -1000, -1000, 223, 3072, -1000, -1000,
	252, -67, 3071, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 121837, -1000, -1000, -1000, 66516,
	-1000, 3227, -1000, -1000, 110017, -1000, 45548, -1000, 3397, 1949,
	74215, 3331, -46, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2417, 2413, 1153, 2261, -1000, 3124, 1677, -1000, 31604, 3163,
	-1000, -1000, -1000, 251, 23527, -1000, -1000, -1000, -1000, -1000,
	-1000, 2503, 3070, 1362, -1000, 2252, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2106, 3068, -1000, 2180, 3067, 2086,
	-1000, -1000, 2368, -1000, 3214, -1000, -1000, 1637, 3066, -19,
	-1000, -1000, 2571, -1000, -1000, -1000, -1000, -1000, 1855, -1000,
	982, 3065, -1000, 83976, 57822, 56157, 70330, -40, -1000, -1000,
	-1000, -1000, -187, -1000, 21858, 121837, -1000, -1000, -1000, -1000,
	1701, 121837, 895, -1000, -1000, 3063, -1000, 121837, 865, -1000,
	-1000, 3062, -1000, 2915, -1000, -1000, 2327, -1000, -1000, 3617,
	-1000, -1000, 3613, -1000, 3612, 3611, 3610, -1000, 1744, 1909,
	3609, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 83438,
	2210, -1000, -1000, 82348, 2914, -1000, 2321, 3330, -1000, 82893,
	1022, -1000, 982, 2320, -1000, 92109, 977, 2319, -1000, 3608,
	3305, 2600, 982, 2317, -1000, -1000, -1000, -1000, -1000, 1021,
	-1000, 61634, -1000, 61634, -1000, 1557, -1000, 114321, -20, 89419,
	3447, -1000, -73, -1000, -1000, -1000, 1010, -1000, 55057, -1000,
	55057, 94813, 73670, 963, 749, 63258, 121837, -1000, -1000, -1000,
	-1000, 121837, -1000, -1000, -1000, -162, 2684, -1000, 73670, 57267,
	121837, -1000, -1000, -1000, -1000, 121837, -1000, -1000, -1000, 73670,
	82348, -1000, 100773, 81810, -1000, -1000, 1400, 2469, -1000, -1000,
	-1000, 73670, 1288, 73670, 73670, 73670, -1000, 100228, -1000, -1000,
	2019, 1621, 3220, 1998, 89419, -1000, 1826, -1000, -1000, -1000,
	3240, 110017, -1000, -1000, 2912, -1000, 65971, 91571, -1000, 91033,
	-1000, 90495, -1000, 89419, -1000, 89419, -1000, 3607, 3605, 3604,
	-1000, -1000, 3601, -1000, 3599, 3233, -1000, 121837, 3232, -1000,
	3598, 3322, 2910, 121837, -1000, 3069, 1636, 1633, 110017, -1000,
	-1000, 110017, -1000, 110017, -1000, -1000, -1000, 1493, -1000, -1000,
	2404, -1000, -1000, -1000, -1000, 89419, 1366, -1000, -1000, -1000,
	-1000, -1000, -1000, 2982, 3594, 1721, -1000, 1790, -1000, 2876,
	3252, -1000, 1398, -1000, -1000, 232, -1000, -1000, -46, -1000,
	113783, -1000, 2473, -1000, 110017, -1000, 2420, 2903, 2907, 1552,
	2146, 2546, -1000, 39720, 2501, 48980, 2244, 155, -1000, -1000,
	155, 155, 31032, -1000, -1000, 64886, 64886, 23527, 1335, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, 45548, 2302, 45548, 1309, 45548, 45548, 45548,
	45548, 1988, -1000, -1000, 1888, 520, 2002, -1000, 3455, 3455,
	3455, 496, 496, 16248, 16248, 587, 3593, 803, -1000, 45548,
	-1000, 61, 45548, 24084, -1000, 427, 8903, 2349, -1000, 424,
	24668, -1000, -1000, -1000, 25812, 613, 39136, 45548, 1004, 121837,
	-1000, -1000, 1444, 3477, 21302, 2795, 2756, 670, 829, 799,
	28720, 28136, 27552, 26968, 735, 45548, 45548, 45548, 45548, 45548,
	45548, 45548, 45548, -1000, -1000, 3482, -1000, 3477, -1000, -1000,
	-1000, -1000, 3477, 1330, 1206, 3477, -1000, 3477, 3477, 7526,
	7526, 38564, 37980, 37396, 49552, 36812, 45548, 26384, 36228, 35644,
	-1000, 110017, -32, 3396, 45548, 157, -1000, 120495, -1000, 157,
	157, 669, -75, 121837, 2731, 2731, 53426, 2239, 2065, 2065,
	2065, -1000, 886, 16825, 886, 99145, 2075, 886, 886, 222,
	266, 420, 51229, 2399, 99145, 780, 667, 0, -1, -7,
	-1000, -1000, -11, -16, -1000, -1000, 89419, 664, 24084, 23527,
	220, 1933, -82, 2504, 2500, 2485, -1000, 2483, -1000, 1698,
	-90, 1305, 89419, 110017, 3590, -89, -1000, 1475, -91, -1000,
	1152, 215, 3477, -1000, -1000, -1000, -1000, -1000, 3586, 3582,
	-1000, 1013, 663, 662, 700, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 660, 654, 654, 654, -1000, 274, 652,
	271, 650, 647, 645, -1000, -1000, -1000, -1000, -1000, 2872,
	89419, 110017, 3581, -187, 89957, -88, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 110017, -1000, -1000, -1000, 3580, -1000,
	89419, -1000, -1000, 89419, 221, 3058, -1000, 89419, -1000, 89419,
	216, 3053, -1000, -1000, 110017, -1000, 89419, 89419, -1000, 110017,
	110017, 110017, 73670, 73670, 228, -1000, 89419, 894, -93, 1123,
	-46, -1000, -1000, -1000, 1296, -1000, 1857, -1000, -1000, -1000,
	-1000, -1000, -1000, 1426, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000, 3475,
	3469, -35, -1000, -1000, 23527, -1000, -48, 1579, 1848, 1299,
	-1000, 76374, 2465, 3218, 3573, 2579, 3204, 1548, -1000, 1491,
	-1000, 3302, 80182, 3340, 3388, 1290, -1000, 2870, -1000, -1000,
	934, 1708, 1659, 1298, 1295, 80182, 2180, -1000, 64886, -1000,
	2584, 3285, 1401, 1359, 1401, 1401, 1415, -1000, 80182, 1655,
	1292, 1243, 1239, 1866, 1846, -1000, -1000, 1919, -1000, 1238,
	1232, 839, 1838, -1000, -49, 3339, 3356, 1286, -1000, 2860,
	1229, -1000, -1000, -1000, 3284, 89419, 23527, 1550, 1544, 1538,
	1652, 1226, -39, -1000, 3337, 1224, 1223, -1000, 7129, -1000,
	73670, 1986, 3051, 2681, 869, 2669, -1000, -1000, -1000, 869,
	-40, 70330, 110017, 214, -1000, 61, 45548, 45548, 61, 45548,
	61, 3321, 3048, -1000, -1000, -1000, -1000, -1000, 3571, 1895,
	2437, -1000, -1000, 642, 2316, 2856, 110017, 2522, -41, 89419,
	-1000, 65433, 3043, 68682, 2180, 2312, -1000, -1000, 81265, -1000,
	3041, 477, 2308, -1000, 458, 3570, 3038, -1000, 113245, -1000,
	3227, 1361, 3033, 1072, 748, 3395, -1000, 748, 62172, -1000,
	110017, -1000, -20, 4916, 75298, -98, -101, 419, -1000, 99690,
	110017, 1070, 75836, 110017, 3152, 974, 56157, -1000, 56157, -104,
	-162, 2664, 1449, 963, 963, 869, -1000, 869, -1000, 89419,
	2906, -1000, -1000, 73670, 963, 963, 963, -1000, -1000, -1000,
	-1000, 3569, 3568, 3567, 3566, -1000, -1000, 981, 89419, 110017,
	89419, -1000, 213, -1000, 110017, -1000, 110017, 110017, 89419, -1000,
	981, 110017, 981, 110017, 981, 110017, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 61, 45548, -1000, -1000, 3564, 1578, -1000,
	2905, -1000, 2904, -1000, 19, -1000, -1000, -1000, -1000, -1000,
	-1000, 1802, -1000, -1000, -1000, -1000, 89419, 89419, 89419, 89419,
	110017, 3137, -1000, 110017, 3134, 89419, -1000, 80182, -1000, 2420,
	2903, -1000, -1000, -1000, -1000, -1000, -1000, 1365, 2140, -1000,
	2468, -1000, 1532, -1000, -1000, -1000, 121837, 50107, -1000, -1000,
	121837, 1816, -1000, 48408, 47836, -1000, -1000, 1654, 89419, 2532,
	-1000, 2532, -110, -1000, 120323, 2467, 89419, -1000, -1000, -1000,
	-1000, -1000, 928, 1417, 1417, 1332, 1332, 1332, 1332, 3311,
	5507, 5078, 1138, 5181, 5181, 5495, 5495, 5495, 5495, 5495,
	5181, 409, 496, 496, 409, 409, 409, 409, 409, 496,
	496, 496, 5181, 5181, 5181, 16248, 10891, 8088, 45548, 45548,
	1220, 1875, 520, 6606, 45548, 8297, 8297, 8297, 8297, -1000,
	2005, -1000, -1000, -1000, -1000, 2849, 638, 49552, 49552, -1000,
	-1000, -1000, -1000, 25240, 45548, -1000, -1000, -1000, -1000, 35060,
	-1000, -1000, 119696, -315, 418, -96, -8, -1000, 45548, 45548,
	45548, 417, -1000, 210, 45548, 110017, -1000, 16220, 767, -120,
	-1000, -107, 1412, -1000, 45548, -1000, -1000, 1219, -1000, 1217,
	1216, 1201, -1000, 626, 413, -1000, 209, -1000, 2052, 625,
	623, 45548, -1000, -1000, -1000, -1000, -1000, 119434, -1000, -1000,
	119262, -1000, -1000, 119000, -1000, -1000, 118828, -1000, -1000, -1000,
	121575, 15637, 15545, 14756, 8186, 14728, 13859, -109, 412, -123,
	408, 924, 922, 395, 394, 391, -124, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -129,
	379, -1000, 2837, -96, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 378, -1000, 376, -1000, 121383, -96, 375, 6643,
	-1000, 49552, 49552, 49552, -1000, 373, -1000, 120131, -1000, 121211,
	34488, 34488, 34488, 372, 120949, 45548, -96, -130, -1000, -131,
	-1000, -1000, 546, -137, 995, 33904, 52335, 23527, -1000, 995,
	995, 45548, -1000, 45548, 2490, -1000, -1000, -1000, -1000, 2488,
	1959, 2731, 53426, -1000, -1000, -1000, -1000, 99145, -1000, 3447,
	2796, -1000, 99145, -1000, -1000, 110017, 477, -1000, 99145, 99145,
	23527, 886, -1000, 886, 99145, 639, -1000, -1000, -1000, -1000,
	-1000, 370, 58920, -8, 206, 23527, 982, -1000, -1000, 2593,
	2593, 2593, 2593, -1000, -1000, 110017, 1198, -43, -136, -1000,
	3415, -1000, 1953, -1000, 64886, -1000, 798, 1071, 23527, -1000,
	-1000, -1000, 621, -1000, 3477, 3477, -1000, 3477, 110017, 2833,
	152, -1000, 151, 68682, 68682, 3560, -1000, -1000, 221, -1000,
	89419, 221, 221, -1000, 89419, 89419, 2203, -1000, 225, -1000,
	223, -1000, -1000, -67, -1000, 998, 31604, -1000, 1296, -1000,
	-1000, 1531, -1000, 1900, -1000, 1156, -1000, -1000, -1000, -1000,
	31604, -1000, 2524, 110017, 110017, 89419, -1000, 110017, -1000, 2032,
	68682, -1000, 2306, 112707, 2301, 64886, 110017, -1000, -1000, 620,
	947, 2466, 2463, 1067, 110017, 110017, 2461, 112169, 111631, -1000,
	3559, 110017, 1993, 45548, 3283, 2222, 2405, 61, 61, -1000,
	61, 61, 61, -1000, 619, 1393, 89419, 89419, 110017, 68682,
	89419, 1965, -1000, -1000, -1000, -1000, -1000, 80720, -1000, -1000,
	3481, 3479, -1000, 1401, -1000, -1000, -1000, 1401, 2180, 1920,
	110017, 68682, 89419, 68682, 110017, 110017, -1000, 1635, 110017, 1454,
	-1000, 839, 1968, 61, 61, -1000, 61, 61, 61, 618,
	23527, 1893, -1000, 2917, 110017, 3510, 111093, 3508, 110017, 110017,
	110017, 68682, 3219, 110017, 110017, 68682, 7129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 69792, 1075,
	982, 1618, 1197, 1195, 80182, 56157, 972, 56157, 2614, -1000,
	-1000, 20746, -1000, 121837, 121837, -1000, 121837, -1000, 65433, 110017,
	-1000, 1020, 110017, 75836, 953, 3021, 61096, -187, 963, 73670,
	89419, -41, 2522, 110017, -1000, -1000, 2180, 3019, 477, 2305,
	-1000, 73670, 3394, 2984, 617, 3558, 3557, -1000, 89419, 2209,
	2303, -1000, -1000, 110555, 3031, 839, 110017, 995, 53426, 1843,
	-1000, 59465, 1045, 110017, 1751, 130, -1000, -1000, -1000, 3,
	110017, -1000, 810, -1000, -1000, 4916, 4916, 963, -229, 616,
	-1000, 880, 879, 56712, 73670, -140, -1000, -1000, -1000, -1000,
	2301, 89419, 110017, 1282, 2599, 110017, -142, -1000, 205, 614,
	-1000, 2495, -1000, -162, -1000, 974, 56157, 2828, 2825, -1000,
	-1000, 997, -1000, 1394, 963, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -21, 110017, -187, -187,
	-42, -43, -1000, 981, -1000, 981, -1000, 981, -1000, 121837,
	-1000, -1000, 1577, 1570, 110017, -1000, 23527, 110017, 89419, 23527,
	89419, 2894, 2890, -1000, -1000, -1000, 110017, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1085, -1000, 1816, 2139, -1000, 613,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2386,
	-1000, -44, 31032, 841, -1000, -1000, 89419, -22, 45548, 45548,
	6328, 5969, 45548, 49552, 49552, -1000, 45548, 5868, -1000, -1000,
	-1000, -1000, -1000, 2820, 607, 45548, 64886, 5907, 5197, -1000,
	365, 13139, 409, -1000, 45548, -1000, 357, 33332, -1000, 120585,
	-53, -147, -1000, 17394, -96, -150, -1000, -1000, 796, -1000,
	3035, -1000, 45548, 120757, 2362, 2046, 1773, 1596, 3477, 3507,
	20190, -1000, 62715, 1001, 2088, 118566, -1000, -1000, -1000, -1000,
	64886, 64886, 45548, 45548, -1000, 45548, 45548, 45548, -1000, -1000,
	-1000, 3477, 929, -1000, -1000, -1000, 929, -1000, -1000, 1401,
	-1000, 1401, -1000, 45548, -1000, -1000, 2817, 45548, -1000, 64886,
	64886, 49552, 49552, 49552, 49552, 49552, 49552, 49552, 49552, 49552,
	49552, 49552, 49552, 49552, 49552, 49552, 49552, 49552, 49552, 49552,
	2438, 49552, 3437, 3437, 3437, -1000, 2805, 2817, 45548, 45548,
	64886, 356, 350, 340, -1000, 45548, -96, -1000, -1000, 4916,
	605, -1000, 2372, -1000, 2748, -1000, 45548, -1000, -155, -1000,
	2399, -1000, -1000, 2748, 2748, -152, 121837, 53426, 53426, -1000,
	603, 45548, 2474, -1000, -1000, 766, -313, -1000, 878, -1000,
	-1000, -1000, -1000, -1000, 477, -1000, -1000, -1000, 204, 99145,
	99145, 764, -1000, -159, -1000, -1000, -160, -1000, 3393, 336,
	23527, -1000, 995, 2574, -1000, -1000, -1000, -1000, -1000, -1000,
	-187, 110017, 110017, 2121, 3505, -1000, 3478, 794, 760, 198,
	3477, 335, 334, 332, -187, 110017, 110017, 110017, -1000, -1000,
	-1000, -1000, 221, -1000, -1000, -1000, 216, -1000, -1000, -1000,
	-1000, 2580, -1000, -46, -1000, -1000, -1000, 45548, -1000, -1000,
	3217, 1192, 1189, -1000, -1000, -1000, -1000, 2801, -1000, 2978,
	-1000, 2299, -1000, 1052, -1000, 1536, -1000, 45548, 590, 2591,
	585, 584, 3556, 2028, 3555, 1069, 2976, 2203, 2975, 2203,
	-1000, -1000, -1000, 942, -1000, 121837, 2222, -1000, 582, 581,
	-1000, -48, 1561, 1782, 1186, 990, -1000, -1000, -1000, -1000,
	45548, 45548, 98607, -1000, 453, 3214, -23, -1000, -1000, -1000,
	1616, 1185, 1184, -1000, -1000, -1000, -1000, 2180, 1612, 1182,
	1177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 988, -1000,
	2942, 2941, 897, 110017, -1000, 986, -1000, -1000, -1000, -1000,
	45548, -1000, -49, 1170, 3328, 2297, 89419, -1000, 2203, 2974,
	1167, -1000, 1165, -1000, -1000, -1000, 3336, 3333, 1179, -1000,
	-1000, -1000, -1000, -1000, 69237, -1000, 110017, 68682, 89419, 1915,
	869, -1000, 2454, 869, 972, 2814, -1000, 2502, 984, 89419,
	3554, 326, -161, -50, 64886, 3389, -1000, 2205, 575, 89419,
	902, -1000, 3447, -1000, -1000, -1000, 983, -1000, 3316, 89419,
	3386, 2973, 982, 61, 89419, 3486, -1000, -1000, 3382, 89419,
	2972, 2207, 2292, 2426, 839, 74760, 982, 2082, -66, -1000,
	1751, 32748, 3210, -169, -1000, -1000, -1000, 995, 62172, 53426,
	45548, 3553, -174, -1000, -1000, -1000, -1000, -1000, 96448, 96448,
	73670, 73670, 73670, 963, 110017, 110017, 75836, -1000, -1000, 579,
	110017, 110017, 578, -1000, 110017, 110017, 3551, 73670, -52, 576,
	-1000, 877, 876, 871, -1000, -1000, -1000, -1000, -1000, 974,
	-1000, -162, 56157, 61, -1000, 2116, 89419, -1000, 19634, -1000,
	-1000, -1000, -1000, -1000, -1000, 981, -1000, -1000, 1995, 2241,
	1995, 1739, 1736, -1000, -1000, 2135, -1000, -1000, -1000, -1000,
	2552, 3213, 23527, 3317, 8297, 45548, 45548, 354, 4752, 330,
	8297, 45548, 45548, 64886, 543, -175, 45548, 45548, -1000, 45548,
	755, 121837, 3503, 45548, 315, 304, -1000, -1000, -1000, 3473,
	-1000, -1000, -1000, 121837, 45548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 303, -1000, 196, -1000, -1000, -1000, 115935, -1000,
	45548, 301, 3282, -1000, 300, 296, 12507, 455, 118394, 118132,
	117960, 294, -1000, -1000, 291, 288, 121837, 2805, 121837, -1000,
	-1000, 994, 994, 1370, 1370, 1370, 1370, 3437, 1088, 606,
	393, 517, 517, 517, 781, 641, 641, 517, 517, 517,
	2808, 2479, 572, 5132, -1000, -1000, 121837, 121837, 287, -1000,
	-1000, -1000, -96, 286, 4916, -1000, 2742, 3281, 121837, -1000,
	53426, 2742, 2742, -1000, -1000, 1959, 110017, 121837, 53426, -1000,
	2796, -1000, 17961, -1000, 23527, -1000, -1000, -1000, -1000, 3447,
	-1000, 58920, -1000, 569, -1000, 195, -1000, 2574, -1000, 870,
	-1000, -1000, 73670, 73670, -187, -153, -1000, -1000, 754, 3550,
	790, 23527, 284, -1000, -1000, -1000, -187, -187, -187, -1000,
	-1000, -1000, 3150, 121837, 110017, 110017, 1473, 98069, 110017, 2971,
	-1000, 2057, -1000, 1067, 117698, 53969, -1000, 53969, 110017, -1000,
	-1000, 1883, 2499, 3547, 1101, -1000, 3242, 110017, -1000, 110017,
	-1000, -1000, -1000, 110017, 110017, 89419, 110017, -1000, 68682, 2955,
	-176, 121837, -55, -1000, 867, -1000, 1378, -1000, 19078, 110017,
	68682, 89419, 110017, 68682, 89419, 2039, -1000, -1000, 2940, -1000,
	2950, -182, 23527, -1000, 3502, 3501, 2969, 3249, -1000, 110017,
	3499, 110017, 89419, 3146, -1000, -1000, -1000, -1000, -1000, 1601,
	1164, 1163, 972, -56, 568, -1000, 864, -1000, -1000, 856,
	-1000, 972, -1000, 73670, 56157, 3544, 477, -1000, 2570, -1000,
	94268, 2176, 61, -1000, 3539, 96993, 563, -1000, 2107, -1000,
	753, -1000, 2429, 68682, 2180, 61, 89419, -1000, -1000, 477,
	283, -58, -1000, 2988, 1057, 23527, 89419, 2968, 2430, 839,
	74760, -1000, 1361, 2546, -1000, -65, -1000, 604, 61, 2082,
	-1000, -66, 121837, -1000, 854, -1000, -190, -1000, -1000, 282,
	-1000, 3143, 3141, -1000, 2695, 53969, 562, 560, 110017, 3140,
	-1000, -1000, -191, 2345, 2345, 73670, 56157, 73670, -1000, 974,
	869, -1000, 2334, -1000, -1000, -1000, -1000, -1000, 23527, 1707,
	-1000, 557, 555, -1000, -1000, -1000, -1000, 3213, 8297, 8297,
	45548, 45548, 45548, 8297, 543, -192, -1000, 8297, 8297, -96,
	-1000, -1000, 120585, -1000, -1000, -1000, 121837, -1000, 18522, 2007,
	-1000, 117526, -1000, 31032, -1000, -1000, 45548, 45548, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 49552, 2803, 550, 64886,
	-1000, -1000, 275, 978, 45548, 47264, 2399, 978, 978, -1000,
	-197, -1000, -1000, -1000, 3447, 195, -1000, -1000, 3533, 23527,
	-1000, 73670, -1000, -1000, 3532, 789, -1000, 3530, -1000, -1000,
	-1000, -1000, -1000, 2661, 3381, -1000, 1822, -1000, 110017, -1000,
	110017, -1000, 23527, 110017, 2768, 1253, -1000, 947, 2457, 549,
	49552, 89419, 804, -1000, 3408, 2704, -198, -1000, 110017, 45548,
	110017, -199, -204, 2272, -1000, -1000, 2243, 45548, -1000, -1000,
	64886, 542, 2203, 2203, -205, -206, -1000, -1000, -1000, 45548,
	1145, 110017, 32176, -1000, 3529, 3214, -1000, -1000, -1000, -1000,
	-1000, -1000, 110017, -1000, 45548, 1143, -1000, -1000, -1000, 3497,
	2203, 23527, 2203, -1000, 2203, 3249, 1100, 110017, 68682, 89419,
	-1000, 2449, 2449, 73670, 56157, -1000, -67, 972, -1000, 3379,
	2554, 3527, -1000, -1000, -1000, -1000, 2453, -1000, -1000, 110017,
	2450, 965, -1000, -207, -1000, 850, 849, 75836, 953, 910,
	-1000, -68, 541, -1000, 845, -1000, -1000, -1000, -1000, 477,
	3374, -1000, 3493, 523, 522, 110017, 2189, 521, 23527, 3208,
	839, 74760, -1000, 3031, 1751, -1000, 2281, 110017, 3200, -1000,
	2546, 520, -1000, 963, 515, 514, 2440, 2440, -212, 53969,
	53969, -215, 503, 963, -1000, -217, -1000, -1000, -1000, -1000,
	-1000, -69, -1000, 835, 827, -1000, -1000, 89419, 89419, 45548,
	45548, -1000, 8297, 8297, 8297, -1000, 272, -1000, -1000, 2082,
	3278, -1000, -70, 117263, 117082, 5945, 49552, 64886, -220, -1000,
	-1000, 110017, 121837, -71, -1000, 121837, 500, 497, 406, -1000,
	-1000, -1000, 751, -1000, -1000, -1000, 3525, -1000, 97531, 110017,
	-1000, -1000, 2048, -1000, -1000, -1000, 110017, 2283, -1000, -1000,
	-1000, 1064, 45548, 5132, 495, 45548, -1000, 3353, -1000, 2538,
	2784, 1880, 53969, -1000, 3213, -1000, 116893, -1000, 1056, 1889,
	-1000, -1000, 121837, 3249, 53969, -1000, -1000, 494, 493, 121837,
	486, 840, 2797, -1000, -1000, -1000, -1000, 121837, 485, 3328,
	-1000, -1000, -1000, -1000, 2203, 89419, -1000, -1000, -1000, -1000,
	-226, -1000, -1000, 1882, 61, 1987, 2658, -1000, 2176, 482,
	-1000, -1000, 2143, 2578, -1000, 96993, 31604, 31604, 268, 3348,
	910, -1000, 3436, -1000, 3125, 3125, 45548, 3345, 61, -1000,
	3486, 53969, -1000, 89419, 53969, 2183, 1919, 2400, 74760, -1000,
	2426, -1000, -1000, -227, 110017, 1751, -1000, -1000, 73670, 73670,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1056, -228, -233, -1000, 73670, -1000, -1000, 2334, -1000,
	110017, -1000, 110017, -1000, -1000, -234, -235, -1000, 2144, 45548,
	31032, -1000, -1000, 5945, -236, -1000, -72, -1000, 3344, 47264,
	3523, 3522, 3521, -1000, -1000, -1000, 1806, -1000, -1000, -1000,
	2967, 2721, 116511, 2378, 110017, 116483, -1000, 2778, -1000, -1000,
	2554, 479, -1000, -1000, -1000, -1000, 841, 110017, 2554, 2718,
	89419, 1060, -252, 1995, 1995, 45548, 30460, 2035, 45548, -1000,
	-1000, 3249, -1000, 2776, 3470, -1000, 953, -1000, 2015, 110017,
	-1000, 3237, -1000, 3139, -1000, -1000, -1000, 2570, 61, -1000,
	-1000, -1000, -253, 121837, 61, -1000, 263, -254, 1057, -255,
	89419, 1871, -1000, 839, -1000, 2430, 995, -1000, -1000, -260,
	-261, 1880, 1056, 1968, -262, -1000, -263, -270, -1000, -1000,
	262, 46692, 46692, 46692, -96, -110, -1000, 110017, 478, -1000,
	-1000, -1000, -1000, -1000, 2937, 970, -1000, 2159, 1870, -6,
	1082, -1000, -1000, 1968, 110017, -1000, -1000, -1000, 968, 477,
	-1000, 45548, 1056, -273, -1000, 1043, -275, -1000, 1039, -276,
	-1000, 2789, -1000, -278, 2203, 966, 3310, -1000, -1000, -1000,
	2143, 89419, -281, -1000, -1000, 2291, -1000, 2554, 965, -1000,
	-1000, -1000, 1056, 476, 1880, 475, 1438, 839, -1000, -1000,
	1401, 3208, 3040, 963, 963, 2554, 1880, 962, -1000, 963,
	-1000, -1000, -1000, 3029, -1000, 50662, 2130, 1733, 119869, 3029,
	3029, -1000, -1000, 110017, 3298, -1000, 2172, 2170, 1477, -1000,
	-1000, -1000, -1000, -1000, -1000, 2704, -283, 3296, 2378, 121837,
	2554, -1000, 1995, 2650, -1000, 1995, 2780, -1000, 2004, -1000,
	-1000, -1000, 1647, 3452, 2390, 474, -1000, 110017, 1695, 1651,
	3520, 1987, 2143, 1880, 53969, 2554, 53969, -1000, -1000, 110017,
	-1000, 1919, 1284, -1000, -1000, 1968, 2554, 995, 466, -1000,
	-1000, 1798, 3404, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 838, -1000, 3121, -1000, 1079, 1964, 1964, 995, -1000,
	836, 2159, -1000, -1000, 464, -1000, 463, -1000, 2096, -1000,
	-1000, -1000, -1000, 110017, -1000, -1000, 3519, -1000, 953, -1000,
	2554, -284, 1968, -286, -1000, -187, 1871, -1000, 1515, 962,
	1968, -1000, 1729, -1000, -1000, 2064, 46120, 45548, -1000, 3418,
	-1000, -1000, 2477, -1000, -1000, 45548, 2704, 45548, 45548, 60553,
	-291, -1000, 2143, 1968, 1056, 962, 1880, 1438, 62172, 995,
	962, -1000, -1000, -1000, 121837, -1000, -1000, -1000, 121837, -1000,
	-294, -300, -229, 96448, 2137, 2390, 962, 1880, 995, 2554,
	-1000, -269, -1000, 995, 1968, 1137, -305, -1000, -1000, -1000,
	-1000, 995, 2554, -1000, 1968, -1000, -1000, -1000, -1000, 462,
	-1000, -1000, 1968, 962, 45548, 962, 995, -306, 995, -1000,
	1968, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4352, 4350, 4348, 4340, 4339, 4338, 4337, 4335, 4334,
	4333, 4332, 4331, 4330, 4329, 4328, 4325, 4321, 4319, 4314,
	4313, 4312, 4309, 4308, 4305, 4303, 4296, 4294, 4292, 4288,
	4287, 4285, 4284, 4282, 4281, 4280, 4279, 4278, 4276, 4275,
	4268, 4265, 4264, 4263, 4262, 4260, 4258, 4257, 4256, 4254,
	4250, 4246, 4245, 4239, 4236, 4234, 4232, 4231, 4230, 4224,
	4222, 4221, 4220, 53, 4219, 4218, 4215, 4213, 4212, 4211,
	4208, 4206, 4200, 4198, 4196, 4193, 4192, 4190, 4187, 4186,
	4185, 4184, 4182, 4181, 61, 4180, 268, 4179, 4174, 4172,
	4171, 4164, 4162, 4158, 4157, 4151, 4150, 4149, 4148, 265,
	4142, 144, 4130, 4127, 4125, 4119, 4118, 264, 4110, 4102,
	4099, 4095, 270, 4093, 4091, 4089, 4087, 4077, 4076, 4075,
	4074, 4070, 4069, 4068, 120, 199, 4067, 4065, 1289, 4064,
	4056, 4055, 4054, 4053, 4052, 4051, 4049, 4048, 4046, 240,
	4045, 261, 4044, 4042, 4040, 4039, 4038, 4037, 4031, 4027,
	4025, 4024, 4023, 4021, 4018, 4016, 4014, 4013, 4012, 4011,
	4010, 4009, 4008, 4007, 4006, 4005, 4004, 4002, 4001, 3999,
	3998, 3995, 3994, 3993, 3990, 3989, 3987, 3986, 251, 262,
	191, 3985, 3984, 260, 259, 3983, 3979, 3976, 3975, 3973,
	117, 6, 52, 3972, 3970, 88, 85, 83, 94, 99,
	96, 3968, 105, 3967, 114, 59, 3965, 12, 2, 161,
	242, 10872, 236, 3964, 3962, 3960, 233, 185, 3959, 228,
	3957, 3955, 3949, 3948, 66, 51, 170, 166, 164, 163,
	184, 3947, 147, 98, 76, 56, 44, 16, 90, 207,
	19, 3946, 249, 3, 135, 1, 33, 3945, 3943, 3941,
	3939, 3355, 126, 3938, 255, 239, 160, 3937, 3935, 3934,
	320, 3932, 3931, 46, 3930, 115, 84, 124, 15, 116,
	3929, 138, 36, 3928, 150, 71, 3927, 154, 89, 87,
	10020, 10217, 3924, 110, 67, 129, 2916, 216, 155, 188,
	133, 157, 151, 192, 201, 197, 165, 171, 3923, 231,
	3922, 3360, 80, 174, 3919, 3918, 3916, 82, 189, 106,
	3915, 3914, 69, 11, 31, 4, 9, 136, 23, 18,
	24, 3913, 32, 113, 47, 39, 3912, 30, 3911, 3910,
	3909, 3897, 3894, 41, 148, 3892, 271, 3890, 103, 50,
	22, 3889, 25, 208, 3888, 217, 125, 3887, 3884, 247,
	196, 172, 3880, 68, 220, 3878, 3875, 3872, 3867, 3866,
	122, 8, 132, 3865, 3864, 145, 3863, 48, 229, 183,
	3862, 54, 3859, 3853, 173, 97, 121, 258, 209, 214,
	109, 219, 181, 226, 3850, 3849, 3848, 176, 3847, 3845,
	211, 149, 3844, 3843, 234, 272, 79, 45, 77, 227,
	78, 182, 146, 3842, 194, 3840, 3838, 266, 169, 210,
	7, 13, 100, 127, 3835, 5, 221, 142, 224, 108,
	3832, 5512, 1659, 2016, 3829, 3826, 140, 119, 73, 118,
	141, 252, 72, 3825, 3824, 2689, 3822, 3819, 3818, 3817,
	178, 3815, 3814, 3811, 137, 156, 213, 3810, 93, 70,
	49, 21, 107, 269, 274, 102, 218, 168, 246, 3809,
	3808, 3807, 186, 3805, 74, 95, 159, 193, 245, 55,
	3803, 162, 3802, 139, 225, 63, 143, 3801, 212, 3800,
	3798, 3797, 3796, 3794, 3792, 3789, 223, 235, 3787, 3786,
	3783, 35, 180, 3782, 250, 177, 167, 153, 60, 3781,
	92, 2948, 3778, 123, 237, 65, 253, 991, 254, 3776,
	4267, 57, 3772, 0, 12573, 6703, 8390, 11718, 3768, 4112,
	3766, 3765, 3758, 203, 130, 3757, 3754, 3751, 104, 3747,
	81, 3745, 3743, 64, 3742, 29, 20, 17, 28, 26,
	244, 190, 3740, 3738, 128, 131, 111, 3736, 257, 222,
	3735, 3731, 3728, 3726, 91, 3724, 43, 3722, 37, 3721,
	3720, 40, 14, 38, 3719, 3718, 198, 3716, 215, 243,
	3715, 152, 3714, 3358, 134, 3713, 3712, 3709, 62, 58,
	248, 86, 3707, 273, 3705, 3316, 3703, 3702, 27, 3701,
	3700, 241, 202, 175, 206, 3699, 3698, 158, 3695, 3694,
	3692, 267, 3691, 3690, 3689, 42, 3688, 10, 3687, 3684,
	195, 3133, 3683, 3681, 34, 3680, 179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 592, 592, 22, 22, 42, 42,
	23, 43, 16, 581, 581, 581, 581, 35, 24, 44,
	28, 28, 28, 28, 28, 193, 193, 193, 193, 21,
	21, 38, 38, 227, 227, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	576, 576, 229, 229, 228, 223, 223, 582, 582, 230,
	230, 230, 232, 232, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 475, 475, 475, 508, 508, 507,
	507, 507, 506, 506, 596, 596, 597, 597, 597, 597,
	597, 127, 127, 373, 373, 373, 52, 52, 52, 52,
	52, 571, 571, 195, 195, 195, 197, 197, 196, 196,
	196, 196, 196, 75, 75, 587, 587, 588, 588, 586,
	589, 589, 589, 194, 194, 194, 123, 123, 123, 123,
	123, 123, 124, 124, 125, 125, 198, 198, 198, 200,
	200, 199, 199, 199, 199, 199, 199, 199, 199, 204,
	15, 15, 15, 15, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 103, 103, 510, 510, 511, 511, 189,
	189, 190, 190, 190, 190, 191, 191, 192, 192, 192,
	66, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 599, 599,
	600, 600, 601, 601, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 106, 126, 126, 126, 126, 126, 126, 126, 573,
	573, 343, 343, 254, 254, 254, 254, 116, 116, 116,
	116, 117, 117, 117, 118, 118, 185, 185, 133, 133,
	133, 133, 133, 132, 132, 132, 132, 132, 132, 58,
	58, 58, 59, 59, 60, 60, 61, 61, 62, 62,
	63, 63, 63, 63, 63, 135, 135, 593, 593, 137,
	134, 134, 134, 136, 136, 136, 136, 138, 139, 139,
	139, 139, 139, 139, 139, 139, 140, 140, 500, 500,
	359, 359, 498, 498, 520, 520, 499, 499, 305, 305,
	305, 305, 305, 306, 306, 306, 509, 509, 509, 509,
	509, 509, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	186, 186, 187, 188, 188, 188, 188, 188, 164, 164,
	164, 179, 179, 179, 179, 179, 179, 179, 167, 167,
	167, 151, 151, 142, 142, 142, 142, 142, 142, 142,
	146, 146, 146, 146, 146, 146, 146, 146, 143, 143,
	153, 153, 153, 153, 153, 147, 147, 148, 148, 148,
	148, 174, 174, 150, 150, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 144, 144, 144, 144, 155, 155,
	155, 155, 395, 395, 395, 178, 178, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 177, 177,
	177, 177, 177, 177, 590, 590, 591, 591, 171, 171,
	171, 171, 171, 171, 447, 447, 165, 165, 165, 165,
	170, 170, 170, 170, 173, 173, 173, 173, 378, 378,
	162, 162, 162, 163, 163, 163, 168, 168, 169, 166,
	166, 172, 172, 172, 172, 145, 145, 145, 145, 603,
	603, 603, 175, 175, 161, 161, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 604, 604, 157,
	157, 157, 156, 156, 156, 156, 159, 159, 160, 160,
	160, 160, 160, 160, 158, 149, 570, 570, 566, 566,
	566, 566, 566, 566, 566, 566, 567, 567, 567, 567,
	572, 572, 109, 109, 109, 109, 109, 119, 119, 119,
	119, 119, 110, 110, 110, 110, 110, 112, 112, 111,
	111, 111, 111, 76, 76, 76, 76, 76, 14, 14,
	14, 77, 77, 245, 245, 207, 207, 207, 324, 324,
	208, 208, 313, 313, 313, 313, 205, 205, 206, 206,
	78, 78, 605, 605, 605, 583, 583, 583, 584, 584,
	584, 584, 584, 584, 307, 307, 308, 308, 413, 413,
	413, 413, 413, 311, 311, 311, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 314, 314, 231, 231, 231,
	322, 323, 323, 315, 315, 321, 320, 320, 319, 319,
	318, 318, 316, 317, 317, 317, 326, 326, 325, 328,
	328, 327, 412, 529, 529, 531, 531, 531, 531, 531,
	531, 531, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 396, 396, 606, 606, 527, 527,
	527, 528, 523, 523, 524, 524, 524, 524, 524, 309,
	309, 310, 310, 310, 310, 525, 526, 341, 341, 451,
	530, 530, 532, 532, 534, 607, 607, 607, 607, 607,
	607, 608, 608, 608, 411, 411, 410, 410, 333, 333,
	535, 535, 535, 535, 536, 536, 536, 536, 536, 539,
	538, 537, 537, 537, 537, 537, 80, 80, 80, 375,
	375, 374, 374, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 182, 182,
	257, 257, 74, 74, 74, 12, 12, 12, 585, 585,
	585, 79, 79, 79, 79, 79, 79, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 575, 575, 574,
	574, 258, 258, 610, 610, 85, 85, 85, 85, 85,
	85, 85, 85, 469, 469, 470, 470, 73, 73, 73,
	73, 73, 397, 397, 394, 394, 393, 393, 340, 340,
	449, 449, 449, 450, 262, 262, 263, 263, 224, 224,
	224, 30, 29, 20, 20, 25, 25, 26, 26, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 27, 27,
	46, 46, 46, 46, 47, 47, 47, 47, 50, 50,
	51, 51, 45, 45, 45, 45, 48, 48, 41, 41,
	594, 594, 595, 595, 115, 115, 120, 120, 120, 120,
	120, 121, 121, 121, 121, 122, 122, 122, 122, 131,
	131, 181, 181, 181, 181, 181, 181, 181, 53, 53,
	53, 53, 65, 65, 65, 65, 129, 612, 612, 612,
	130, 130, 130, 611, 611, 255, 255, 407, 407, 408,
	408, 613, 613, 409, 409, 409, 409, 409, 248, 247,
	249, 249, 250, 250, 71, 71, 71, 240, 240, 239,
	237, 237, 512, 512, 242, 242, 242, 243, 243, 233,
	233, 234, 234, 235, 235, 236, 236, 246, 246, 614,
	614, 107, 107, 107, 184, 184, 299, 299, 299, 404,
	404, 404, 334, 334, 269, 269, 406, 406, 406, 406,
	371, 371, 371, 183, 183, 348, 348, 361, 361, 362,
	362, 463, 463, 363, 113, 113, 114, 114, 128, 128,
	211, 211, 209, 209, 209, 209, 209, 209, 209, 209,
	216, 216, 217, 217, 218, 218, 219, 220, 220, 220,
	220, 352, 352, 221, 221, 221, 210, 210, 210, 212,
	212, 212, 212, 212, 212, 212, 215, 215, 215, 215,
	222, 222, 222, 214, 214, 546, 546, 546, 548, 548,
	550, 550, 549, 549, 545, 545, 547, 547, 609, 609,
	377, 377, 377, 331, 332, 329, 329, 330, 330, 338,
	338, 336, 337, 337, 339, 339, 448, 448, 448, 225,
	225, 225, 368, 368, 368, 368, 369, 369, 400, 400,
	398, 398, 398, 398, 399, 399, 401, 401, 401, 402,
	402, 403, 403, 365, 365, 366, 366, 367, 367, 367,
	367, 429, 429, 213, 213, 213, 345, 345, 345, 346,
	346, 419, 419, 419, 419, 419, 419, 420, 420, 418,
	418, 418, 418, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 453, 454, 454, 347, 347, 455, 405, 405,
	564, 564, 564, 565, 565, 446, 446, 456, 456, 456,
	456, 456, 456, 444, 444, 445, 445, 464, 465, 465,
	381, 381, 381, 381, 379, 379, 382, 382, 382, 382,
	382, 380, 380, 457, 457, 457, 457, 370, 370, 458,
	458, 458, 458, 459, 460, 460, 461, 461, 414, 415,
	415, 471, 471, 471, 471, 473, 344, 344, 344, 344,
	344, 522, 521, 521, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 488, 488, 488, 488, 488,
	488, 488, 474, 474, 474, 474, 474, 478, 478, 478,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 479, 479, 484, 484, 485, 485, 485, 480, 481,
	486, 486, 486, 486, 615, 615, 490, 490, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 476, 476, 476,
	483, 483, 483, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 389, 389, 391, 391,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 423, 423, 423,
	423, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 540, 540, 540, 540,
	540, 540, 540, 540, 425, 425, 543, 543, 544, 544,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 551,
	551, 552, 552, 554, 554, 555, 555, 556, 557, 557,
	557, 558, 559, 559, 553, 553, 560, 560, 560, 560,
	561, 561, 562, 562, 562, 562, 562, 563, 563, 563,
	563, 563, 435, 435, 436, 436, 442, 442, 442, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 259, 259, 259, 259, 259,
	357, 357, 355, 355, 355, 358, 358, 356, 356, 354,
	354, 353, 353, 432, 432, 430, 430, 434, 434, 383,
	383, 489, 489, 489, 489, 489, 489, 489, 489, 384,
	384, 384, 392, 385, 385, 386, 386, 386, 386, 386,
	426, 427, 387, 387, 387, 428, 428, 437, 441, 441,
	440, 439, 439, 438, 438, 416, 416, 417, 417, 364,
	364, 616, 616, 360, 360, 462, 462, 462, 462, 303,
	303, 349, 349, 302, 302, 294, 294, 295, 295, 295,
	295, 342, 342, 443, 443, 491, 491, 492, 492, 493,
	493, 494, 494, 495, 496, 497, 431, 431, 279, 278,
	266, 267, 277, 276, 275, 265, 268, 272, 273, 274,
	270, 271, 285, 284, 283, 238, 241, 290, 291, 291,
	293, 293, 292, 292, 281, 282, 467, 264, 296, 296,
	297, 297, 297, 298, 298, 298, 298, 260, 260, 261,
	261, 286, 286, 287, 288, 288, 280, 280, 280, 251,
	251, 251, 252, 252, 253, 253, 505, 505, 502, 502,
	502, 503, 503, 503, 504, 504, 504, 504, 501, 501,
	501, 501, 501, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 514, 514, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 516, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 1, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 9,
	5, 2, 6, 4, 7, 7, 7, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	5, 5, 5, 2, 2, 0, 1, 3, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 12, 15, 3, 1, 0, 4,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 586, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 32, 31, 100, 80, 154,
	128, 137, 201, 381, 423, 434, 395, 142, 415, 400,
	-136, -137, 451, -53, -65, -130, -129, 73, 129, 409,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -598, 102, -547, -89,
	-92, -122, -602, 161, 219, -110, -111, 364, -117, -118,
	417, -120, -121, 419, 162, -60, -59, 156, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	516, 49, 470, 82, 146, 427, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 416, -212, -210, 583, 531, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 552, 561, -215, -213, -214, -222, 443,
	539, 490, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 168, 229, 328,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 128,
	129, 132, 127, 131, 133, 135, 136, 137, 140, 141,
	142, 144, 145, 147, 148, 149, 151, 152, 154, 155,
	156, 159, 157, 498, 158, 160, 161, 162, 163, 166,
	174, 175, 176, 181, 183, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	225, 230, 231, 232, 236, 233, 242, 243, 247, 248,
	249, 251, 255, 256, 257, 258, 259, 260, 262, 264,
	263, 266, 269, 270, 273, 277, 278, 282, 283, 279,
	284, 285, 287, 288, 291, 289, 292, 293, 290, 294,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 295, 310, 308, 312, 313, 314, 326, 323,
	318, 319, 315, 320, 316, 317, 321, 322, 325, 330,
	331, 334, 216, 336, 337, 340, 358, 344, 345, 346,
	349, 350, 353, 356, 357, 359, 360, 361, 362, 363,
	364, 365, 366, 368, 369, 371, 372, 373, 375, 376,
	377, 379, 381, 382, 384, 385, 387, 388, 389, 390,
	391, 392, 393, 395, 397, 396, 398, 400, 402, 403,
	404, 409, 415, 411, 412, 413, 414, 416, 417, 418,
	419, 421, 422, 423, 425, 426, 427, 428, 430, 432,
	433, 436, 437, 453, 454, 472, 434, 435, 438, 439,
	440, 441, 442, 446, 444, 445, 447, 448, 449, 451,
	452, 455, 456, 458, 459, 460, 461, 462, 463, 466,
	468, 469, 470, 489, 471, 473, 477, 478, 479, 480,
	474, 475, 488, 482, 483, 485, 486, 491, 492, 493,
	494, 495, 496, 497, 499, 501, 509, 510, 511, 513,
	516, 517, 518, 519, 507, 521, 522, 525, 526, 527,
	530, 528, 529, 531, 533, 536, 537, 538, 544, 543,
	545, 548, 553, 554, 556, 557, 558, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 124, 125, 153,
	164, 165, 177, 190, 191, 203, 205, 213, 214, 215,
	237, 238, 240, 245, 267, 333, 335, 351, 355, 370,
	374, 378, 380, 394, 429, 464, 476, 481, 502, 503,
	504, 505, 512, 514, 539, 540, 541, 546, 555, -301,
	2, -281, 342, -274, 2, -251, -251, 381, 28, 2,
	28, 369, 445, 493, 495, 2, -573, -343, 2, 28,
	-254, -251, 102, 201, 443, -274, 2, -573, -343, 25,
	2, -251, 2, 356, 22, 27, 66, 77, 98, 140,
	163, 185, 188, -601, 358, 388, 432, 447, 488, 499,
	513, 2, 543, 288, 444, 490, 229, 120, 518, 438,
	-585, 436, 437, 356, 386, 425, 204, 532, -255, 2,
	434, -251, 288, 2, 586, 94, 278, 74, 429, 448,
	-139, 510, -138, 502, 438, -140, -500, 2, 310, -251,
	586, 586, 586, 28, -264, -251, 490, 229, 438, 120,
	486, 586, 2, 490, 361, 543, 444, 120, 391, 229,
	518, 188, 140, 27, 126, 438, -585, 288, -571, 2,
	-566, 4, -517, -513, -295, -294, 490, 496, 120, -288,
	-280, 576, -287, 586, 586, 586, 2, 248, 249, 390,
	389, 448, 449, 586, 586, 586, 586, 436, 2, 163,
	22, 27, 66, 93, 98, 126, 185, 188, 347, -599,
	358, 388, 447, 488, 492, 499, 513, -584, 471, 68,
	414, 438, -583, -585, 288, 518, 140, -393, 120, 278,
	199, 526, 495, 493, 524, 132, 236, 529, 528, 586,
	586, -101, 2, 583, 32, 31, 142, 451, -204, 490,
	241, 2, -251, 586, 586, 2, 248, 249, 436, 437,
	586, 586, 186, -566, 2, 586, 586, 2, 248, 249,
	436, 437, 241, 2, 68, 440, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	2, -179, 448, 471, 210, 47, 46, 74, 28, 387,
	79, 362, 121, 148, 519, 202, 229, 230, 256, 93,
	94, -395, 44, 249, 248, 437, -590, 436, -447, 491,
	439, 445, 485, 260, 434, 510, 102, 533, 426, 558,
	391, 392, 483, 404, 279, 157, 4, 120, 310, 450,
	502, 278, 433, 365, 84, -609, 2, 490, -611, 2,
	510, 510, 2, -611, 2, -611, 2, -611, 2, -612,
	510, 555, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, -210,
	-212, -211, 586, 586, 586, 586, 586, 586, 586, -179,
	448, 2, 74, 28, -336, -338, 523, 239, 150, 348,
	-209, -211, 2, -546, -498, 2, -421, -520, -423, 574,
	575, 567, 487, 67, 327, 559, -435, 126, 524, 342,
	-519, -424, -437, 153, 429, -358, 8, 9, 5, 6,
	7, -260, -425, -431, 515, 167, 332, -298, 587, 10,
	583, -543, -211, -436, 37, 205, 65, -502, -297, -261,
	-474, 240, -296, -280, -540, -541, 4, -513, -514, -503,
	-477, -485, -481, -482, -488, -251, -516, 77, 111, 112,
	110, 115, 114, 281, 280, 116, 113, 450, 532, 66,
	36, 213, 214, 245, 333, 215, 75, -542, 141, -515,
	237, 238, 464, 51, 394, 177, 125, 124, 335, 56,
	54, 540, -486, 122, 502, 503, 504, 505, 190, 191,
	58, 164, 165, 355, 378, 481, 512, 514, 203, 267,
	43, 106, 187, 235, 217, 244, 246, 250, 268, 271,
	311, 324, 329, 352, 354, 424, 457, -615, 541, 476,
	69, 70, -548, 396, -549, -274, -548, 586, 586, 588,
	586, -329, -331, -332, 2, 28, 138, 583, 2, -452,
	2, -453, -457, -211, 261, -456, 583, -454, 581, -281,
	343, -544, 430, -540, -541, -260, -280, -297, 4, -513,
	-515, 585, -333, 583, 120, 490, 78, 229, 163, -388,
	583, -251, 28, 342, 506, 588, -330, 385, -433, 583,
	342, 186, 345, 60, 292, 2, 2, 2, 2, 2,
	213, -251, 490, 119, 2, 259, 2, 2, 2, 2,
	2, 2, 2, -351, 213, 2, -281, 543, -351, 213,
	2, -351, 213, 2, -394, 2, 87, -265, 213, 2,
	-251, -289, 213, 2, -284, -286, -293, 213, 2, -291,
	-251, -511, 213, 2, -510, -505, 10, -504, 5, 4,
	-513, -517, -514, -516, 77, -421, 2, -128, 2, 60,
	-251, 543, 2, 2, 453, 2, 583, -139, 71, 510,
	43, 448, -408, 2, -409, -247, -248, -249, -464, -250,
	247, 384, 393, 562, 130, 327, 558, -498, -593, 186,
	566, 506, -498, -359, 585, 2, 2, 2, 2, 2,
	2, -457, 213, -281, 2, -278, -501, 4, -513, -517,
	-514, -518, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 126, 130, 134,
	138, 139, 143, 146, 150, 167, 169, 182, 185, 186,
	201, 204, 207, 220, 234, 239, 241, 261, 265, 272,
	280, 281, 327, 332, 338, 342, 343, 347, 348, 367,
	383, 399, 420, 443, 450, 467, 484, 490, 500, 506,
	508, 515, 523, 524, 532, 534, 542, 547, 549, 550,
	551, 552, -519, 2, -457, 213, 2, -283, 213, -457,
	-286, 2, -265, 2, -277, -501, 2, -302, 213, -281,
	-282, -286, -284, 2, 2, 2, 2, 2, -291, 2,
	-510, 213, 2, 543, 241, 506, 588, -349, -294, -295,
	-497, 8, -342, -251, 585, -421, 2, -128, -112, 2,
	182, -421, 213, 2, -128, 213, 2, -421, 213, 2,
	-128, 213, 2, -587, 2, -510, 213, -251, 2, 292,
	2, 2, 513, 2, 98, 490, 119, 2, 413, -600,
	432, 517, 2, 2, 2, 2, 2, 2, 2, 490,
	-270, 2, -251, 182, 474, -291, 213, -292, 2, 444,
	-610, 396, -510, 213, 2, 543, -284, 213, 2, -284,
	229, 243, -265, 213, 2, 495, 493, 495, 493, 186,
	2, 241, 2, 241, 2, -458, 2, -459, -453, -460,
	581, 343, -468, 2, -467, -504, 539, -101, 583, -101,
	583, 448, 583, -510, -281, -281, -421, 2, -128, -112,
	2, -421, 2, -128, 2, -125, -510, -124, 583, 186,
	-421, 2, -128, -112, 2, -421, 2, -128, 2, -204,
	182, 2, 120, 490, -179, 2, 182, 534, 2, 8,
	2, 220, -510, 439, 392, 174, 2, 453, 2, 454,
	74, -395, 558, 74, 186, 2, 186, 2, -378, 2,
	552, 186, 2, 2, -570, 2, 342, 186, 2, 186,
	2, 186, 2, 186, 2, 186, 2, -178, 449, 511,
	489, 389, 249, 2, -128, 549, -112, -421, 549, 2,
	-591, 182, 437, -421, 2, 509, 258, 158, 186, -378,
	2, 186, 2, 186, 2, 5, 2, 390, 472, 2,
	247, 384, 472, 2, -281, -603, 28, 2, 490, 543,
	444, 2, 2, 88, 89, 186, 2, 186, 2, 200,
	186, 2, 186, 558, 2, -370, -457, -407, -408, -407,
	506, -336, -338, -179, 453, 2, -216, -368, -218, 182,
	-398, -399, -219, 272, 169, 338, -220, -377, 28, 138,
	-377, -377, 60, 584, 584, 11, 12, 76, 41, 574,
	575, 576, 577, 180, 578, 579, 572, 573, 571, 564,
	565, 569, 253, 254, 95, 568, 566, 86, 286, 431,
	170, 171, 172, 173, 410, 227, 34, 228, 14, 15,
	16, 33, 347, 271, 559, 217, 457, 567, 17, 18,
	19, 244, 246, 329, 50, 220, -259, -304, -421, -421,
	-421, -421, -421, -421, -421, 354, 583, -364, -416, 581,
	-211, 583, 583, 583, -497, -211, -421, -435, 584, -356,
	583, -211, -435, -430, 583, 429, 581, 583, -438, -421,
	5, 5, 5, 583, 585, -551, 553, 182, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 380, -479, 583, -478, 583, -478, -478,
	544, -476, 583, 561, 554, 583, -476, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	544, 588, -548, -333, 583, -360, -462, -421, 576, -360,
	-360, 342, -353, -421, 106, -381, 250, 311, 187, 268,
	424, 235, -418, 587, -418, -446, 561, -211, -454, -280,
	-211, -456, 583, -452, -446, -102, -497, -86, -99, -107,
	-128, -141, -183, -184, 576, -281, 583, 186, 583, 585,
	-501, 186, -342, -265, -281, -296, -297, -302, 2, 137,
	-353, -566, 518, 438, 444, -342, -254, 38, -432, -471,
	-472, -522, 587, -521, -474, -484, -480, -483, 370, 374,
	-503, 54, 540, -486, 240, 4, -513, -515, 237, 238,
	464, 51, 394, 177, 125, 124, 335, 56, 502, 503,
	504, 505, 190, 191, 58, 541, 476, 69, 70, -566,
	518, 438, 444, -342, 182, -508, 2, -507, -506, 116,
	450, -504, 5, 2, 153, 2, 2, 2, -251, -230,
	588, 64, 418, 153, -351, 213, -230, 153, -230, 153,
	-303, 213, -302, -230, 153, -230, 588, 153, -230, 588,
	153, 585, 588, 153, -508, 2, -394, -500, -353, 38,
	-408, 2, 126, -506, -613, 588, 270, -306, 285, 326,
	209, 343, 556, 336, 130, -509, 5, 4, -431, -443,
	126, 278, 240, -491, -493, 8, -492, 9, -494, 574,
	575, -499, -498, 109, 585, -501, -227, 411, 451, 357,
	-226, 24, 29, 142, 231, 314, 537, 159, -319, 232,
	-316, 361, 153, 468, 527, -580, -581, 435, 497, 498,
	90, 336, 451, 357, 411, 153, -374, -376, 38, 118,
	314, 356, 61, 224, 290, 291, 470, 546, 153, 451,
	357, 411, 357, 24, 142, -242, -239, 451, -581, 99,
	411, 482, 383, -581, -229, 468, 527, -580, -581, 435,
	411, -228, -321, -316, 361, 153, 587, 24, 142, 411,
	451, 357, -596, -597, 29, 411, 357, -574, -545, 552,
	153, -457, 213, -588, -124, 262, 5, 10, -510, -124,
	-349, 588, 588, -501, 576, 437, 436, 153, 153, 153,
	153, 182, 327, 2, 2, 2, 2, 2, 188, -583,
	-601, 2, 2, -281, 213, -335, 342, -569, -350, 490,
	-281, 182, 327, 43, -283, 213, 2, -286, 543, -574,
	327, -285, 213, -281, 38, 583, 327, 2, -394, 2,
	229, -545, 327, -458, -299, -281, -453, -299, 451, -274,
	38, -418, -281, 584, 588, -468, -468, -510, -192, 552,
	186, 102, 583, 583, -204, -465, 588, -464, 220, -511,
	-125, -510, 414, -510, -569, -265, 2, -281, 2, 490,
	251, -510, -192, 220, -510, -510, -510, -500, 28, 454,
	2, -178, 449, 511, 89, 454, 2, -281, 490, 120,
	229, 80, -251, -572, 182, -567, 425, 438, 518, -566,
	-281, 120, -281, 120, -281, 120, -281, -281, 2, 2,
	2, 2, 2, 85, 85, 2, 46, -591, 182, 2,
	509, 2, 509, 2, -251, -251, -251, 471, 270, -281,
	491, -604, 2, 186, 182, 2, 490, 229, 490, 229,
	120, 186, 74, 120, 28, 490, -230, 588, -255, -216,
	-368, -500, -369, -368, -217, -216, -219, 182, 393, 528,
	314, 455, 255, -399, -398, 28, -421, -403, 176, 313,
	-421, -401, -423, 574, 575, -492, -494, -352, 336, -210,
	-210, -210, -339, -448, -421, 383, 229, -473, -471, -471,
	-279, -501, 502, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, 271, 217,
	457, 50, 220, -421, 506, -421, -421, -421, -421, 308,
	327, 332, 515, 167, 525, 138, 336, -616, 484, 40,
	-428, -211, -357, 583, -442, 35, 467, 28, -435, 583,
	2, -416, -421, -417, -354, -353, -353, 584, 542, 28,
	138, 576, 2, 584, 588, 38, 584, -421, -354, -434,
	-430, -353, -441, -440, 549, -389, -390, 557, 295, 123,
	211, 293, -391, 442, -495, 8, -501, 576, -552, 175,
	204, 583, 584, 2, 584, 2, 584, -421, 2, 584,
	-421, 2, 584, -421, 2, 584, -421, 2, 584, 2,
	-421, -421, -421, -421, -421, -421, -421, -353, 8, -495,
	-495, 502, 502, -495, -495, -495, -487, 370, 371, 372,
	373, 273, 274, 275, 276, 374, 375, 376, 377, 300,
	301, 302, 303, 296, 297, 298, 299, 304, 305, 306,
	307, 195, 196, 197, 198, 191, 192, 193, 194, -487,
	-383, 2, -489, -353, 4, 557, 295, 123, 211, 293,
	442, 5, -383, 2, -384, 2, -421, -353, -385, -422,
	-423, 574, 575, 567, -435, -386, 2, -421, -354, -421,
	57, 265, 508, -387, -421, 186, -353, -353, 2, -353,
	2, -549, 38, -353, -345, 588, 186, 38, 4, -345,
	-345, 583, 584, 588, -382, 208, 289, 284, 243, -382,
	-452, -381, 250, -379, 352, -379, -379, -446, -266, 581,
	589, -501, -446, -445, -444, 38, -274, 349, -446, -446,
	585, 584, -445, 582, -564, 583, 586, 586, 586, 586,
	586, -281, 583, -353, -501, 585, 473, 2, 584, 244,
	244, 244, 244, 430, 584, 506, -568, -289, -293, 2,
	552, -101, 344, 584, 588, -344, 37, 581, 585, -495,
	2, 2, -490, 544, 583, 583, -390, 583, 186, -568,
	-293, 2, -343, 588, 506, -251, 2, -281, -351, -230,
	153, -351, -351, -230, 588, 153, -265, -284, -289, -291,
	-293, -251, -510, -511, -230, -285, -593, 584, 510, -409,
	-305, 393, 466, 412, 446, 486, 8, 9, 8, 9,
	588, -501, 588, -594, 93, 506, 78, 438, -244, 279,
	506, -412, 213, 78, -523, -268, 93, -524, -251, 72,
	524, 383, 185, 151, -594, 93, 383, -594, 93, 2,
	231, 93, 451, 471, 28, 60, -457, 41, 41, 28,
	-592, 325, 266, 548, 186, 558, 490, 229, 438, 506,
	506, -457, -376, -471, 118, 290, 291, 60, -496, -491,
	574, 575, -496, 60, -496, -496, -496, 552, -283, -457,
	438, 506, 506, 506, 402, 402, -239, 506, 506, -614,
	566, 402, 588, 41, 41, 28, -592, 325, 266, 186,
	506, -302, -266, 538, 42, 538, 42, 538, 506, 42,
	438, 506, 588, 42, 506, 506, -575, -256, 105, 320,
	283, 321, 97, 317, 96, 316, 103, 318, 104, 319,
	545, 330, 63, 315, 294, 322, -257, -258, 363, 536,
	-510, 451, 357, 411, 153, 220, -465, 220, -465, -294,
	-251, 585, -128, -421, -421, -128, -421, -128, 46, 153,
	2, -610, 259, 583, -309, 327, 186, -342, -466, 241,
	588, -350, -566, 153, -507, -375, -374, 327, -285, 213,
	2, 153, -333, 327, 147, 583, 391, 2, 153, -267,
	213, -252, -251, -394, -233, 494, 153, -372, 534, -404,
	-128, 583, 126, 38, -404, -361, -362, -463, -363, -268,
	583, -274, -418, -101, -467, 584, 584, 584, -191, 346,
	-190, -251, 5, -204, 534, -308, -413, -412, -527, -528,
	-523, 271, 229, 524, 243, 168, -334, -269, -268, 119,
	-198, 552, -124, -125, 584, -465, 220, 474, -192, -192,
	-465, -465, -281, 182, -510, -192, -192, -192, 2, 2,
	2, 2, -378, -281, -265, -302, -281, 585, -342, -342,
	-293, -289, -378, -265, -378, -265, -378, -265, -128, -421,
	2, 448, 182, 182, 585, -378, 391, 120, 490, 361,
	229, -281, -302, -281, -302, -265, 120, -265, 121, -281,
	-457, -369, -217, 343, 255, 455, -401, -402, -423, 429,
	430, -402, 429, 430, 8, 9, 8, 9, -221, 459,
	331, -351, 588, -224, 39, 134, 255, -281, 558, 149,
	-421, -421, 506, -616, 484, -428, 149, -421, 308, 332,
	515, 167, 525, 138, 336, 186, 583, -422, -422, 584,
	-355, -421, -421, 582, 591, 584, -338, 588, -336, -421,
	-353, -353, 584, 585, -353, -342, 582, 582, 588, 584,
	-439, -440, 143, -421, 506, 506, 506, 506, 583, 584,
	585, -557, 353, 583, 583, -421, 584, 584, 584, 584,
	38, 588, 588, 588, 584, 588, 588, 588, 584, 584,
	584, 588, 584, 558, 558, 584, 584, 584, 584, 588,
	584, 588, 584, 186, 584, 584, -392, 367, 584, 11,
	12, 574, 575, 576, 577, 180, 578, 579, 572, 573,
	571, 564, 565, 566, 86, 286, 431, 14, 15, 16,
	244, 220, -422, -422, -422, 584, -426, -427, 186, 182,
	38, -387, -387, -387, 584, 186, -353, 584, 584, 583,
	-550, 288, 327, 584, -415, -414, 550, -462, -346, 2,
	-452, -276, -501, -415, -415, -353, -421, 250, 250, -380,
	534, 342, -382, -452, -445, -497, -420, -419, 184, 39,
	134, 323, 216, -445, -274, -333, -445, -445, -501, -446,
	-446, -444, 584, -565, -497, 584, -347, -455, -544, -338,
	585, -501, -201, -545, -180, 5, 332, -180, -180, -180,
	-342, 506, 506, 25, 368, -471, 581, 582, 8, -501,
	583, -495, -495, -495, -342, 186, 186, 186, -507, -507,
	2, -230, -351, -230, -230, -302, -303, -230, -230, -230,
	-373, 552, -498, -408, 522, 83, 393, 502, -498, -226,
	411, -268, -268, -281, -290, -251, 199, 403, -507, 327,
	-412, 213, -232, 327, -471, -275, -251, 583, -396, 554,
	255, 255, 534, -268, -275, 255, 213, -268, 213, -275,
	2, -275, -576, 393, 337, -421, 60, -317, 277, 391,
	328, -227, 411, 451, 357, -128, -128, -128, -128, -128,
	583, -593, 534, 137, -281, -302, -281, -290, -507, -285,
	451, 357, 411, 324, -296, -496, -496, -374, 451, 357,
	411, -290, -507, -283, -507, -238, -251, -238, 438, -265,
	402, 558, 45, -614, -228, -128, -128, -128, -128, -128,
	583, -266, -229, 411, 5, 213, -268, 5, -268, 213,
	5, -251, -268, -290, -507, -597, 24, 142, -268, -290,
	-507, -256, -510, 332, 530, -574, 438, 506, 506, -457,
	-124, -195, 552, -124, -189, 225, 576, -571, -251, 543,
	-251, -307, -310, -308, -268, -207, -208, 554, 552, 153,
	-300, -281, 581, -192, -510, -281, -466, -291, -292, 153,
	-333, 327, -510, 38, 153, 583, 2, 2, -284, 342,
	327, -267, 213, -234, 144, -614, -265, -415, -346, -371,
	-406, 420, 342, -334, 539, -274, -371, -348, 588, 186,
	566, 585, -334, -461, 576, -101, -101, -192, 588, 583,
	566, 566, 583, -510, -510, 584, 588, -232, -281, -267,
	229, 229, -273, -252, 584, 588, 585, 583, -200, 346,
	-199, 145, 257, 242, 460, 461, 462, 463, 136, -465,
	-198, -125, 186, 186, -61, 552, 490, -192, 587, -251,
	-378, -378, -378, 448, 448, -251, -277, -265, -281, -278,
	-302, 182, 182, -265, 528, -402, 343, 282, -448, -225,
	560, -281, 587, -421, -421, 149, 149, -421, -422, -422,
	-421, 149, 186, 583, -421, -432, 33, 33, 584, 588,
	-417, -421, 584, 542, -338, -338, 584, 576, -501, 587,
	584, -430, 146, -421, 500, 295, 211, 293, -391, 293,
	-391, -391, -495, 5, -501, 576, -558, -271, 583, -251,
	550, -337, 348, 584, -473, -471, -421, -421, -421, -421,
	-421, -495, -476, -476, -491, -491, -421, -426, -421, -473,
	-471, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	138, 327, 336, -422, -427, -426, -421, -421, -471, 584,
	584, 584, -353, -101, 583, 288, -365, 204, -421, -465,
	588, -365, -365, 584, -452, -452, 583, -421, 250, 582,
	588, 590, 566, -333, 585, -444, -445, 582, 584, 588,
	584, 588, -405, 38, 584, -501, -415, -203, -202, 135,
	53, 107, 133, 332, -342, -342, 345, 5, 8, 581,
	582, 585, -495, 584, 584, 584, -342, -342, -342, -230,
	-230, 119, 314, -421, 506, 506, 60, 220, 153, 327,
	536, -529, -524, 151, -421, 583, 229, 583, 583, 2,
	-223, 142, 451, 24, -595, 2, 534, 153, -230, 153,
	-230, 556, -317, 583, 583, 506, 438, -244, 506, 552,
	-353, -421, -193, 126, -500, -581, 587, -581, 587, 438,
	506, 506, 438, 506, 506, 552, 166, 166, 558, -238,
	552, -353, 506, -475, 48, 26, 327, -284, -230, 153,
	506, 506, 518, 451, -510, 332, -290, -507, -285, 451,
	357, 411, -465, -197, 346, -196, 145, 422, 136, 257,
	222, -465, -195, 186, 241, 552, -285, 2, 584, 584,
	588, -530, 38, 340, 340, 583, -281, -82, 552, -464,
	-497, -577, 552, 43, -283, 38, 153, -574, -128, -285,
	-469, -470, 5, 38, -281, 153, 342, 327, -235, 264,
	-614, -505, -545, -338, -371, -360, 328, 91, 584, -415,
	-362, -346, -421, 2, 584, -190, -191, -510, -510, -510,
	-192, -204, -204, -413, -311, 583, -267, -252, 583, -204,
	-269, 2, -511, 588, 583, 566, 566, 566, -198, -465,
	-124, -128, 346, -281, 576, -378, -323, -322, 361, 336,
	-323, 429, 429, 343, 176, 260, -224, -266, -421, -421,
	149, 33, 33, -421, -421, -432, 584, -421, -421, -353,
	582, 5, -421, 584, 584, 8, -421, 584, 585, -559,
	-251, -421, 584, 60, 584, 584, 588, 588, 584, 584,
	584, 584, 584, 584, 584, -427, 186, 138, 336, 583,
	584, 584, -101, -429, 207, 60, -452, -429, -429, -380,
	-342, -452, -419, -266, 581, -501, -497, -455, 583, 585,
	-202, 566, -510, -510, 552, 582, 2, 581, -501, 584,
	119, -268, -268, 490, 429, -238, 383, -412, 153, -531,
	93, -533, 76, 168, 102, 327, 332, 524, 383, 72,
	126, 399, -606, 38, 563, 584, -340, -449, -544, 583,
	-251, -340, -342, 327, 479, 126, 327, 126, 119, 2,
	518, 79, -268, -275, -342, -342, -281, -290, -507, 160,
	584, 588, 566, 2, 576, 576, -290, -507, -285, -290,
	-507, -283, 359, 166, 160, 584, -266, 5, 5, 153,
	-263, 76, -268, 5, -268, -284, 119, 438, 506, 506,
	-195, 588, 583, 566, 566, -195, -511, -124, 2, -333,
	-324, 231, -268, -528, -525, -526, 383, -532, -534, 168,
	383, -128, 2, -206, -205, -251, 5, 583, -309, 346,
	582, -579, 346, -578, 117, 136, -507, -375, -128, -285,
	-333, 584, 588, 147, -397, 534, -266, -281, 153, -236,
	263, -614, -505, -233, -400, -398, 139, 583, 342, -128,
	-338, 566, 584, 584, 119, 119, 223, 152, -340, 583,
	583, -342, 119, 584, -199, -200, -510, -124, -510, -198,
	-465, -62, -63, 229, 93, 366, -278, 490, 229, 583,
	583, -224, -421, -421, -421, 584, -338, -501, 576, -553,
	361, 584, -448, -421, -421, -422, 186, 583, -432, 584,
	-554, 551, -421, -366, -367, -421, 428, 108, 205, -554,
	-554, 584, -497, 2, -510, 2, 581, 2, 220, 38,
	402, -412, -275, -279, -272, -251, 168, 213, 332, 547,
	-396, 255, 583, -422, -281, 583, 2, 30, -607, 130,
	234, 584, 588, -450, -262, -251, -421, -450, 584, 584,
	332, 332, -421, -471, 583, -230, -230, 584, 584, -421,
	506, -500, 100, -498, 2, -581, -265, -421, 506, 5,
	-230, -279, -230, -230, -263, 518, -290, -507, -285, -196,
	-197, -510, -124, -195, 38, -314, 233, 2, -530, 255,
	-272, 255, -605, 552, 584, 588, 566, 566, -307, -207,
	-83, -84, 507, -464, 588, 583, 566, -333, 38, 5,
	583, 583, -251, 342, 583, -266, -246, 92, -614, -505,
	-234, -371, 328, -342, 93, -400, -428, -192, 583, 583,
	-312, 81, 94, 127, 212, 189, 230, 471, 477, 28,
	-312, 584, -340, -340, 584, 583, -192, 584, 588, 28,
	583, 28, 583, -281, -302, -353, -353, 584, -338, 60,
	588, 584, 584, -422, -432, 584, -555, -556, -271, 588,
	583, 583, 452, 582, 2, -238, 383, -251, -533, -272,
	327, 534, -421, -253, 583, -421, 38, 234, 131, 218,
	-411, -608, 101, 480, 221, -449, -224, 584, -410, 534,
	399, -263, -340, 583, 583, 583, 566, 186, 583, -475,
	-230, -284, 584, -586, 397, -128, -318, -319, 220, 583,
	-313, 342, 119, 314, -205, -498, -498, 584, 38, -84,
	9, -578, -579, -421, 38, -128, -469, -340, -281, -340,
	342, -240, -239, 272, -505, -235, 584, -275, -371, -511,
	-511, -410, 584, 584, -511, -63, -342, -342, 584, 584,
	-560, 391, 430, 206, -353, -339, 584, 588, 38, -367,
	2, 2, 2, 402, 153, 208, 584, -535, 287, -251,
	584, 131, 218, -314, 583, -225, -450, -314, 208, -281,
	-582, 534, 584, -326, -325, -322, -328, -327, -322, -353,
	-498, 100, 359, -353, -263, -589, 187, -588, 5, 10,
	-207, 359, -341, -451, -268, 82, 119, -324, -128, 584,
	-128, 584, 584, -397, 584, -281, -237, -512, 402, 404,
	-614, -236, -415, 584, 584, -411, -410, -320, -316, 584,
	584, 584, 584, -561, -562, 50, 521, 109, -421, -561,
	-561, -556, -558, 168, 552, -536, -539, -538, 342, 458,
	187, 360, 584, 479, 546, -320, -342, 552, -333, -421,
	-410, 584, 588, 539, 584, 588, 539, 584, 186, 584,
	-230, -194, 552, 46, -313, -281, 584, 588, 382, 132,
	142, -314, -605, -410, 583, -411, 583, -243, -242, -614,
	-491, -246, 139, -192, -192, -314, -411, -208, 552, -192,
	-563, 151, -562, 379, 181, 429, 379, 181, -563, -563,
	-272, 55, -538, 342, -539, 342, 528, 132, -607, 584,
	55, -535, -314, -325, 220, -327, 186, 359, 436, -588,
	30, -245, -244, 583, -451, 430, 430, 2, -318, -313,
	-411, -340, -314, -340, -241, -342, -240, 328, 528, -320,
	-314, -415, 109, 204, 501, 314, 33, 566, -537, 314,
	418, 64, 451, -537, -415, 566, -536, 583, 583, 346,
	-342, 2, -207, -314, 584, -320, 584, -237, 451, -208,
	-320, 429, 350, -562, -421, 23, 332, 126, -421, -607,
	-353, -353, -191, 583, 584, -313, -320, -410, -208, -411,
	-243, -361, -415, -208, 584, 584, -191, -231, 64, 418,
	-245, -208, -411, -415, -314, -415, -415, -315, -316, 506,
	584, -415, -314, -320, 583, -320, -208, -353, -208, -415,
	584, -415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 534, 535, 537, 538, 539, 541,
	542, 544, 546, 548, 549, 550, 552, 553, 555, 556,
	557, 558, 559, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	628, 630, 0, 1321, 1323, 1325, 1327, 0, 772, 0,
	36, 37, 39, 0, -2, 321, 323, 325, 0, 352,
	354, 355, 357, 359, 360, 361, 363, -2, 0, 469,
	470, 472, 474, -2, 0, 962, 964, 0, 617, 619,
	0, 967, 969, 0, 0, 639, 640, 0, 1428, -2,
	633, 635, 637, 702, 704, 706, 708, 710, 712, 714,
	716, 718, 719, 721, 723, 725, 727, 729, 730, 732,
	734, 736, 737, 739, 740, 742, 744, 746, 748, 750,
	752, 754, 756, 758, 760, 762, 764, 766, -2, 769,
	-2, -2, 0, -2, -2, -2, 1339, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 413, 415, 417, 419,
	421, 424, 426, 428, 1486, 476, 478, 480, 482, 484,
	486, 488, 0, -2, 1500, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1459, 1461, 1463, 1465, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 536, 540, 543, 545, 547, 551,
	554, 560, 562, 564, 521, 522, 525, 2164, 2181, 2182,
	2183, 2186, 2187, 2188, 2189, 2190, 2191, 2632, 2714, 2715,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 523,
	524, 1139, 0, 588, 586, 2149, 589, 2435, 591, 593,
	463, 464, 465, 466, 467, 468, 0, 610, 601, 1498,
	611, 613, 614, 615, 616, 583, 581, 0, 610, 2217,
	608, 1319, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 475, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 392, 1188, 1189, 1190, 1304, 1305,
	2479, 1346, 0, 222, 629, -2, -2, -2, 2597, -2,
	661, -2, 668, 2601, 2481, 673, 0, 675, -2, 678,
	1322, 1324, 1326, 770, 771, 2167, 0, 0, 0, 0,
	0, 38, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	232, -2, -2, -2, -2, 0, 0, 2525, 2269, 2117,
	2183, 2120, 2115, 322, 324, 326, 327, 0, 0, 0,
	0, 0, 0, 353, 356, 358, 362, -2, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 1023, 1015, 1016, 1246, 0, 0, 0, -2, 471,
	473, 526, 527, 0, 1487, 1487, -2, 0, 0, 0,
	0, 292, 279, 963, 965, 966, 0, 0, 0, 0,
	618, 620, 0, 0, 261, 968, 970, 971, 0, 0,
	0, 0, 0, 294, 0, 0, 634, 636, 638, 703,
	705, 707, 709, 711, 713, 715, 717, 720, 722, 724,
	726, 728, 731, 733, 735, 738, 741, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 763, 765, 767,
	768, 778, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 866, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 944, 0, 781, 783, 784, 785,
	0, 844, 864, 865, 874, 0, 1179, 1488, 1348, 1329,
	1343, 1348, 1331, 1332, 1333, 1334, 1335, 1340, 1342, 1336,
	1337, 1338, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 414, 416, 418, 420, 422, 425, 427, 429, -2,
	1457, 1458, 477, 479, 481, 483, 485, 487, 489, 621,
	0, 623, 0, 782, -2, 0, 1492, 1492, 1492, 0,
	0, 1458, 1456, 0, 626, 627, 682, 683, 1760, 0,
	0, 0, 0, 0, 0, 0, 2014, 1846, 0, 684,
	-2, 1877, 1879, 2572, 2597, 2013, 1881, 1882, 1883, 1884,
	1885, 0, 1887, 1888, 1889, 1890, 1891, 1892, 0, 1894,
	0, 1899, 1900, 1901, 0, 2579, 2094, 2177, -2, 0,
	0, 2585, 2173, 0, 1980, 1917, -2, -2, 2200, 2179,
	1692, 1693, 1694, 1695, 1696, -2, -2, 2615, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 0,
	2560, 2580, 2581, 2586, 2588, 2582, 2569, 1942, 2282, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1719, 1728, -2, -2, -2, -2, -2, -2,
	-2, 2573, 2574, 2591, 2594, 2600, 2605, 2606, 2578, 2587,
	2614, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 1720, -2, -2,
	-2, -2, 1475, 2448, 1478, 1139, 1476, 1460, 1462, 0,
	1464, 0, 0, 0, 1469, 1495, 1493, 0, 1544, 1473,
	1474, 1562, 1562, 1586, 0, 1567, 0, 1586, 1487, 1613,
	0, 1573, 2471, 1918, 1919, 0, 2183, 2178, -2, -2,
	2612, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	0, 590, 592, 0, 0, 0, 609, 1497, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 397, 398, 399,
	2580, 0, 0, 0, 404, 0, 406, 407, 408, 409,
	410, 411, 412, 191, 2580, 494, 519, 0, 191, 2580,
	497, 191, 2580, 500, 0, 503, 1244, 191, 2580, 506,
	2145, 191, 2580, 509, 511, 2153, 191, 2580, 515, 2160,
	2158, 516, 2580, 518, 297, 295, 296, 2196, 2197, 2204,
	2205, 2206, 2207, 2613, 2615, 1315, 1316, 1317, 1318, 0,
	1345, 1245, 631, 632, 0, 656, 0, 660, 2568, -2,
	0, 2490, -2, 664, 1349, 1353, 1354, 1355, 1356, 1357,
	0, 0, 0, 0, 1362, 0, 0, 670, 0, 0,
	657, 658, 676, 679, 0, 773, 774, 775, 776, 777,
	70, 0, 2580, 1613, 72, 0, 2139, 2208, 2209, 2210,
	2211, 2212, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 76, 0, 2580, 81, 0, 2580, 0,
	-2, 92, 0, 100, 0, 2142, 109, 0, 2580, 0,
	2114, -2, 0, 203, 280, 281, 282, 283, 0, 990,
	-2, 2580, 1187, 0, 0, 0, 0, 953, 2111, 2116,
	954, 2135, 955, 2121, 0, 328, 329, 330, 331, 332,
	0, 333, 2580, 335, 336, 0, 338, 339, 2580, 341,
	342, 0, 344, 0, 244, 245, 2580, 366, 368, 0,
	370, 371, 0, 373, 0, 0, 0, 377, -2, 393,
	0, 390, 380, 381, 383, 384, 385, 386, 387, 0,
	433, 431, 2150, 0, 0, -2, 2580, 0, 987, 0,
	0, 1224, -2, 2580, 1184, 0, 1231, 2580, 1227, 0,
	-2, 0, 1485, 2580, 1366, 1019, 1020, 1021, 1022, 1625,
	460, 0, 1393, 0, 1395, 0, 1414, 1619, 1562, 0,
	0, 1624, 0, -2, 577, 2166, -2, 529, 0, 530,
	0, -2, 0, 309, 0, 0, 972, 973, 974, 975,
	976, 979, 980, 981, 982, 1599, 262, 264, 0, 0,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 0,
	0, 641, 0, 0, 779, 780, 0, 0, 790, 791,
	792, 0, 309, 2482, 2444, 2303, 799, 0, 802, 805,
	-2, 0, 0, 0, 0, 809, 0, 814, 815, 816,
	0, 0, 820, 822, 961, 824, 0, 0, 826, 0,
	830, 0, 833, 0, 835, 0, 837, -2, -2, -2,
	845, 846, -2, 850, -2, 0, 853, 855, 0, 857,
	-2, 0, 866, 862, 863, 0, 0, 0, 0, 882,
	883, 0, 892, 0, 895, 896, 897, 0, 899, 900,
	0, 902, 903, 904, 905, 0, 0, 908, 909, -2,
	-2, 913, 915, 0, -2, 0, 931, 0, 935, 0,
	0, 943, 0, 786, 787, 191, 1617, 1328, -2, 1330,
	0, -2, 0, 622, 0, 625, 1517, 1443, 1440, 0,
	1514, 1515, 1444, 0, 0, 0, 1451, 0, 1490, 1491,
	0, 0, 0, 1430, 1431, 0, 0, 0, 0, 2019,
	2020, 2021, 2022, 2023, 2024, 2027, 2028, 2025, 2026, 2029,
	2030, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 2033,
	2034, 0, 0, 2036, 0, 2038, 0, 0, 0, 0,
	0, 0, 1825, 1827, 2102, 0, 0, 2035, 1765, 1766,
	1767, 1768, 1769, 1804, 1805, 0, 0, 1878, 2099, 2098,
	1880, 0, 2050, 0, 1893, -2, 0, 2014, 2045, 0,
	0, 1902, 1903, 1904, 0, 0, 2050, 0, 0, 2093,
	1914, 1915, 1757, 0, 0, 1982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 1705, 0, 1707, 0, 1708, 1709,
	1716, 1729, 0, 0, 0, 0, 1733, 0, 0, 0,
	0, 0, 0, 0, 2074, -2, 0, 0, 0, 0,
	1721, 0, 1477, 0, 0, 1548, 2103, 2107, 2108, 1548,
	1548, 0, 0, 2051, 1610, 1610, 0, 0, 1605, 1605,
	1605, 1603, 1586, 0, 1586, 1596, 0, 1586, 1586, 0,
	-2, 1567, 0, 0, 1596, 0, 1580, 565, 567, 569,
	571, 572, 573, 575, 1614, 1615, 0, 0, 0, 0,
	2184, 0, 0, 0, 0, 0, 2169, 0, 349, 0,
	0, 0, 2535, 2481, -2, 595, 612, 1487, 0, 2053,
	1640, 1644, 0, 1646, 1647, 1648, 1649, 1650, 0, 0,
	1641, -2, 1717, 1719, 1740, 2201, 2202, 2203, 1700, 1701,
	1702, 1703, 1704, 1712, 1699, 1699, 1699, 1710, 1739, 1731,
	1739, 1735, 1685, 1686, 1687, 1722, 1723, 1724, 1725, 0,
	2535, 2481, -2, 603, 0, 0, 1425, 207, 209, 210,
	211, 212, 213, 394, 0, 401, 402, 403, 0, 490,
	0, 189, 190, 0, 191, 2580, 495, 0, 498, 0,
	191, 2580, 2109, 504, 0, 507, 0, 0, 513, 0,
	0, 0, 0, 0, 191, 1427, 0, 0, 0, 0,
	-2, 666, 671, 672, 0, 1351, 0, 1358, 693, 694,
	695, 1360, 1361, 0, 1363, 669, 696, 697, 698, 699,
	700, 701, 0, 2123, 2124, 2125, 2126, 2129, 2130, 0,
	0, 667, 686, 674, 0, 680, 110, 1301, 0, 0,
	153, 0, 1301, 1301, 0, 0, 0, 0, 178, 0,
	1058, 0, 0, 0, 0, 125, 138, 149, 122, 123,
	0, 0, 0, 0, 0, 0, 82, 1161, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 96, 97, 0, 137, 0,
	0, 1390, 0, 132, 112, 0, 0, 125, 139, 151,
	0, 182, 184, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 214, 0, 0, 0, 1185, 0, 1484,
	0, 0, 2580, 0, 1599, 2351, -2, -2, 262, 1599,
	952, 0, 0, 2184, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 372, 374, 375, 376, 0, 1223,
	0, 382, 423, 1110, 2580, 0, 0, 450, 445, 0,
	447, 0, 0, 0, 1160, 2580, 1158, 2154, 0, 1182,
	0, 1139, 2580, 2152, 0, 0, 0, 1232, 2193, 1241,
	1245, 1380, 0, 462, 0, 1396, 1398, 0, 0, 1620,
	0, 1622, 1562, 1487, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 268, 0, 1598, 0, 0,
	1599, 262, 2459, 309, 309, 1599, 643, 1599, 645, 0,
	0, 793, 794, 0, 309, 309, 309, 800, 801, 803,
	804, -2, -2, -2, -2, 806, 807, 889, 0, 0,
	0, 888, 819, 823, 0, 946, 2467, 2481, 2535, 959,
	889, 2269, 889, 2269, 889, 2269, 834, 836, 839, 877,
	885, 849, 854, 0, 0, 859, 867, -2, 0, 869,
	0, 871, 0, 873, 889, 890, 893, 898, 901, 906,
	907, 0, 922, 927, 928, 924, 0, 0, 0, 0,
	0, 0, 938, 939, 0, 0, 1178, 0, 1341, 1517,
	1443, 624, 1434, 1516, 1435, 1442, 1445, 0, 0, 1447,
	0, 1449, 0, 1512, 1513, 1520, 1521, 0, 1531, 1532,
	1524, 0, -2, 0, 0, 1527, 1528, 1453, 0, 1470,
	1471, 1472, 1501, 1504, 1260, 0, 2714, 1761, 1635, 1762,
	1763, 2138, 0, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, -2, -2, -2, -2, -2, -2, -2,
	-2, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, -2, -2, -2, 1802, 1803, -2, 2037, 2039,
	0, 2102, 0, -2, 0, -2, -2, -2, -2, 1822,
	0, 1824, 1829, 1831, 1833, 0, 0, 0, 0, 2101,
	1843, 2085, 2086, 0, 0, 2016, 2017, 2018, 1828, 0,
	1847, 2100, 2097, 0, 0, 2049, 1500, 1906, 0, 0,
	0, 0, 1913, 1898, 2047, 0, 2046, 0, 0, 0,
	2057, 0, 2092, 2088, 0, 2136, 1756, 1743, 1744, 1745,
	1746, 1747, 1748, 1758, 0, 2133, 2170, 2176, 1990, 0,
	0, 0, 1943, 1944, 1945, 1946, 1947, 0, 1949, 1950,
	0, 1952, 1953, 0, 1955, 1956, 0, 1958, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 0,
	0, 1962, 0, 2060, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 1964, 0, 1966, 2051, 2071, 0, 0,
	1848, 0, 0, 0, 2014, 0, 1969, 2051, 2079, 0,
	0, 0, 0, 0, 2051, 0, 2084, 0, 1976, 0,
	1978, 1479, 0, 0, 1630, 0, 0, 0, 2106, 1630,
	1630, 0, 1543, 0, 0, 1606, 1607, 1608, 1609, 0,
	0, 1610, 0, 1600, 1604, 1601, 1602, 1596, 1559, 0,
	0, 2140, 1596, 1565, 1595, 0, 1139, 1585, 1596, 1596,
	0, -2, 1569, 1586, 0, 0, 566, 568, 570, 574,
	576, 0, 0, 1500, -2, 0, -2, 311, 1138, 0,
	0, 0, 0, 585, 587, 0, 0, 510, 0, 600,
	0, 579, 0, 582, 0, 1631, 1634, 0, 0, 1645,
	1651, 1652, 0, -2, 0, 0, 1741, 0, 0, 0,
	0, 607, 0, 0, 0, 0, 405, 520, 191, 492,
	0, 191, 191, 501, 0, 0, 191, 512, 191, 2161,
	191, 2159, 298, 517, 1426, 225, 0, 659, 0, 1350,
	1359, 0, 690, 0, 692, 0, 2127, 2131, 2128, 2132,
	0, 681, 0, 0, 0, 0, 1300, 0, 1267, 0,
	0, 157, 2580, 0, 193, 0, 0, 1103, 2146, 0,
	1095, 0, 0, 2289, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 1163, 1165, 1172, 1174, 0, 1168, 2134,
	0, 0, 1169, 0, 1171, 1173, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	1389, 1390, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 2113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 1217, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 0, 0,
	-2, 0, 0, 0, 0, 0, 235, 0, 300, 2112,
	2122, 0, 977, 978, 334, 337, 340, 343, 231, 0,
	378, 0, 0, 1025, 1000, 0, 0, 432, 309, 0,
	0, 446, 450, 2163, 985, 1156, 1159, 0, 1139, 2580,
	1196, 0, 0, 0, 0, 0, 0, 1230, 0, 0,
	2580, 2141, 2192, 2193, 1382, 1390, 0, 1630, 0, 1412,
	1399, 0, 0, 0, 1412, 1416, 1417, 1419, 1420, 0,
	0, 1621, 1627, 528, 578, 1487, 1487, 309, 307, 2412,
	305, 302, 304, 0, 0, 0, 1026, 1028, 1029, 1030,
	193, 0, 2193, 1095, 2340, 2193, 0, 1402, 1404, 0,
	256, 0, 265, 1599, 263, 268, 0, 0, 0, 444,
	642, 647, 788, 0, 309, 796, 797, 798, 841, 879,
	887, 926, 808, 810, 811, 812, 0, 0, 960, 956,
	957, 958, 825, 889, 828, 889, 831, 889, 852, 856,
	861, 868, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 0, 0, 932, 933, 934, 936, 941, 940, 945,
	1618, 1438, 1439, 1441, 0, 1450, 0, 0, 1526, -2,
	-2, 1525, 1529, 1530, -2, -2, -2, -2, 1446, 0,
	1455, 1452, 0, 1511, 1258, 1259, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 1844, 0, -2, 1823, 1826,
	1830, 1832, 1834, 0, 0, 0, 0, 0, 0, 2040,
	0, 2042, 1845, 2095, 2098, 2012, 0, 0, 1499, 1500,
	1500, 0, 1912, 0, 2048, 0, 2055, 2056, 0, 1905,
	0, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1916, 0, 0, 0, 0, 1948, 1951, 1954, 1957,
	0, 0, 0, 0, 1937, 0, 0, 0, 1941, 1711,
	1697, 0, 1739, 1737, 1738, 1732, 1739, 1736, 1689, 0,
	1688, 0, 1961, 0, 1963, 1965, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1968, 2077, 2078, 0, 0,
	0, 0, 0, 0, 1974, 0, 2083, 1975, 1977, 1487,
	0, 1480, 0, 1545, 1534, 1629, 0, 2104, 1599, 1547,
	1549, 2105, 2143, 1534, 1534, 0, 2052, 0, 0, 1590,
	0, 0, 0, 1592, 1563, 0, 0, 1557, 0, 1553,
	1554, 1555, 1556, 1564, 1139, 1594, 1566, 1570, 2170, 0,
	1596, 0, 1581, 0, 1583, 1616, 0, 1575, 1578, 0,
	0, 2185, 1630, 0, 345, 350, 351, 346, 347, 348,
	594, 0, 0, 0, 0, 2054, 0, 1636, 0, 1642,
	0, 0, 0, 0, 602, 0, 0, 0, 208, 1424,
	400, 491, 191, 496, 499, 2110, 191, 505, 508, 514,
	221, 0, 655, -2, 688, 689, 691, 0, 687, 154,
	1301, 0, 0, 1263, 1265, 2157, 1269, 1275, 1278, 0,
	159, 2580, 169, 0, 1074, 0, 2144, 0, 0, 0,
	0, 0, 0, 1303, 0, 0, 2580, 191, 2580, 191,
	172, 174, 177, 0, 181, 179, 0, 1062, 0, 0,
	1065, 111, 1301, 0, 0, 114, 118, 126, 127, 130,
	0, 0, 0, 136, 0, 0, 0, 1280, 1284, 1292,
	0, 0, 0, 1166, 1167, 1170, 1176, 83, 0, 0,
	0, 1288, 1290, 1296, 93, 94, 2155, 95, 0, 1262,
	0, 0, 0, 0, 183, 116, 120, 128, 129, 131,
	0, 1298, 113, 0, 206, 0, 0, 196, 191, 2580,
	0, 198, 0, 199, 200, 215, 0, 0, 0, 988,
	989, 1218, 1180, 1181, 0, 1186, 0, 0, 0, 0,
	1599, 227, 0, 1599, 235, 0, 2118, 0, 365, 0,
	0, 0, 0, 1024, 1121, 0, 995, 0, 0, 0,
	438, 434, 0, 443, 449, 448, 454, -2, 0, 0,
	0, 0, -2, 0, 0, 1234, 1228, 1229, 0, 0,
	0, 0, 2580, 1384, 1390, 0, 1485, 1500, 461, 1391,
	1412, 0, 0, 0, 1401, 1397, 1394, 1630, 0, 0,
	0, 0, 0, 1623, 1626, 531, 532, 284, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 1031, 1035, 0,
	2193, 2193, 0, 2148, 0, 0, 0, 0, 266, 0,
	269, 0, 0, 0, 274, 275, 276, 277, 278, 268,
	258, 1599, 0, 0, 644, 0, 0, 795, 0, 818,
	827, 829, 832, 870, 872, 889, 916, 917, 1052, 0,
	1052, 0, 0, 937, 1448, 0, 1523, 1454, 1505, 1506,
	0, 1260, 0, 1764, 1807, 0, 0, -2, 0, 0,
	1811, 0, 0, 0, -2, 0, 0, 0, 2041, 2043,
	0, 2097, 1907, 0, 0, 0, 1911, 1895, 1896, 0,
	2015, 2058, 2087, 2091, 0, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 0, 2137, 2171, 2175, 1988, 1989, 1993, 2151,
	0, 0, 0, 1920, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 1734, 0, 0, 2059, 2070, 2072, 1849,
	1850, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, -2, -2, -2, 1867, 1868, 1869, -2, -2, -2,
	0, 0, 0, 2073, 2075, 2076, 2080, 2081, 0, 1971,
	1972, 1973, 2082, 0, 1487, 1481, 1542, 0, 1628, 1546,
	0, 1542, 1542, 1494, 1588, 0, 0, 1612, 0, 1560,
	0, 1561, 0, 1593, 0, 1568, 1571, 1572, 1582, 0,
	1574, 0, 1577, 0, 1907, -2, 310, 312, 314, 0,
	317, 318, 0, 0, 597, 598, 596, 580, 0, 0,
	1638, 0, 0, 1714, 1718, 1742, 605, 606, 604, 493,
	502, 223, 0, 1597, 0, 0, 0, 0, 0, 0,
	192, 1072, 1102, 0, 0, 0, 1094, 0, 0, 1108,
	161, 0, 0, 0, 0, 170, 0, 0, 167, 0,
	176, 180, 1059, 0, 0, 0, 0, 1268, 0, 0,
	0, 133, 134, 135, 0, 140, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 1374, 1375, 0, 1369,
	0, 0, 0, 194, 0, 0, 0, 1257, 217, 0,
	0, 0, 0, 0, 1221, 1222, 1281, 1285, 1293, 0,
	0, 0, 235, 233, 0, 236, 0, 239, 240, 0,
	242, 235, 229, 0, 0, 0, 1139, 379, 998, 1109,
	0, 1111, 0, 996, 0, 0, 1110, 430, 0, 437,
	0, 451, 0, 0, 1160, 0, 0, 1183, 1194, 1139,
	0, 1233, 1235, 0, 1243, 0, 0, 0, 1386, 1390,
	0, 1379, 1380, 1519, 1392, 1410, -2, 0, 0, 1500,
	1418, 1415, 1421, 1422, 0, 306, 0, 301, 303, 0,
	287, 0, 0, 1027, 1032, 0, 0, 0, 0, 0,
	1403, 1405, 0, 0, 0, 0, 0, 0, 257, 268,
	1599, 293, 0, 789, 813, 880, 918, 1051, 0, 0,
	920, 0, 0, 1522, 1509, 1510, 1507, 1260, 1809, 1813,
	0, 0, 0, 1815, -2, 0, 1837, -2, -2, 2044,
	2096, 1886, 1500, 1908, 1910, 1897, 2090, 1759, 0, 1995,
	1992, 0, 1979, 0, 1932, 1933, 0, 0, 1936, 1938,
	1939, 1940, 1698, 1691, 1690, 2069, 0, 0, 0, 0,
	1970, 1482, 0, 1984, 0, 0, 1550, 1984, 1984, 1589,
	0, 1591, 1558, 1551, 0, 2171, 1584, 1576, 0, 0,
	315, 0, 319, 320, 0, 1632, 1637, 0, 1643, 1713,
	224, 155, 156, 1272, 1276, 1273, 0, 158, 0, 1073,
	0, 1076, 0, 0, 0, 0, 1083, 1095, 0, 0,
	0, 0, 0, 1096, 0, 1125, 0, 1248, 1255, 0,
	-2, 0, 0, 0, 163, 186, 0, 0, 1302, 165,
	0, 0, 191, 191, 0, 0, 1264, 1266, 1279, 0,
	0, 0, 0, 143, 0, 0, 1282, 1286, 1294, 1289,
	1291, 1297, 0, 1376, 0, 0, 1299, 204, 205, 0,
	191, 0, 191, 197, 191, 1257, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 228, 299, 235, 367, 0,
	1046, 0, 1121, 1113, 1114, 1115, 0, 1120, 1122, 0,
	0, 1012, 997, 0, 1008, 0, 0, 1025, 1000, 0,
	435, 452, 0, 455, 0, 458, 986, 1157, 1191, 1139,
	0, 1225, 0, 0, 0, 0, 0, 0, 0, 1388,
	1390, 0, 1381, 1382, 1412, 1518, 0, 0, 0, 1400,
	1519, 0, 308, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 270, 0, 271, 272, 273, 259,
	260, 646, 648, 0, 0, 654, 1050, 0, 0, 0,
	0, 1508, 1817, -2, -2, 1838, 0, 2172, 2174, 1500,
	0, 1981, 1502, 0, 0, -2, 0, 0, 0, 1483,
	1466, 0, 1541, 1533, 1535, 1537, 2470, 2264, 2579, 1467,
	1468, 1611, 0, 1579, 316, 599, 0, 1639, 0, 0,
	1274, 160, 0, 1077, 1078, 2147, 1080, 0, 1082, 1084,
	1085, 1086, 0, 1089, 2195, 0, 1093, 0, 1104, 1126,
	0, 1135, 0, 1250, 1260, 1254, 0, 1252, 1137, 0,
	162, 164, 185, 1257, 0, 166, 175, 0, 0, 115,
	0, 0, 2258, 146, 144, 142, 1261, 117, 0, 206,
	216, 1256, 218, 201, 191, 0, 1283, 1287, 1295, 237,
	0, 238, 241, 0, 0, 1061, 0, 999, 1112, 0,
	1123, 1124, 1002, 0, 1001, 0, 0, 0, 0, 0,
	436, 439, 0, 442, 0, 0, 0, 0, 0, 1236,
	1234, 0, 1242, 0, 0, 0, 1368, 0, 0, 1383,
	1384, 459, 1406, 0, 0, 1412, 1423, 286, 0, 0,
	1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1034, 1137, 0, 0, 1101, 0, 291, 267, 0, 650,
	0, 652, 0, 919, 921, 0, 0, 1909, 1999, 0,
	0, 1934, 1935, -2, 0, 1875, 1983, 1985, 0, 0,
	0, 0, 0, 1552, 1633, 1270, 0, 1277, 1075, 1079,
	0, 0, 0, 1143, 0, 0, 1097, 0, 1129, 1130,
	1046, 0, 1131, 1132, 1133, 1249, 1511, 1255, 1046, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 195,
	219, 1257, 234, 252, 0, 1192, 1000, 1060, 0, 0,
	1010, 0, 1013, 0, 1009, 1006, 1007, 998, 0, 440,
	441, 456, 0, 457, 0, 1195, 0, 0, 1243, 0,
	0, 1371, 1367, 1390, 1385, 1386, 1630, 1409, 1413, 0,
	0, 1135, 1137, 1057, 0, 649, 0, 0, 929, 930,
	0, 0, 0, 0, 1994, 1503, 1876, 0, 0, 1536,
	1538, 1539, 1540, 1271, 0, 0, 1088, 1148, 0, 0,
	0, 1127, 1128, 1057, 0, 1253, 1251, 1106, 0, 1139,
	168, 0, 1137, 0, 1066, 0, 0, 1069, 0, 0,
	147, 2258, 145, 0, 191, 255, 0, 249, 247, 248,
	1002, 0, 0, 1117, 1119, 0, 1014, 1046, 1012, 453,
	1193, 1226, 1137, 0, 1135, 0, 1378, 1390, 1372, 1373,
	0, 1388, 0, 309, 309, 1046, 1135, 1000, 1056, 309,
	651, 653, 1991, 2011, 2000, -2, 2538, 2265, 0, 2011,
	2011, 1986, 1987, 0, 0, 1090, 1144, 1145, 0, 1140,
	1141, 1142, 2194, 1091, 1092, 1125, 0, 0, 1143, 187,
	1046, 1063, 0, 0, 1064, 0, 0, 150, 0, 152,
	220, 243, 0, 0, 994, 0, 1116, 0, 0, 0,
	0, 1061, 1002, 1135, 0, 1046, 0, 1364, 1377, 0,
	1387, 1368, 0, 288, 289, 1057, 1046, 1630, 0, 290,
	1996, 0, 0, 2002, 2003, 2004, 2005, 2006, 1997, 1998,
	1081, 0, 1146, 0, 1147, 0, 0, 0, 1630, 1134,
	0, 1148, 173, 1067, 0, 1070, 0, 148, 0, 250,
	251, 991, 993, 0, 1118, 1003, 0, 1005, 1000, 1011,
	1046, 0, 1057, 0, 1370, 2156, 1371, 1407, 0, 1000,
	1057, 1100, 0, 2008, 2009, 0, 0, 0, 1149, 0,
	1152, 1153, 0, 1150, 1105, 0, 1125, 0, 0, 0,
	0, 1004, 1002, 1057, 1137, 1000, 1135, 1378, 0, 1630,
	1000, 2007, 2010, 2001, 1087, 1151, 1154, 1155, 1136, 1107,
	0, 0, 253, 0, 1049, 994, 1000, 1135, 1630, 1046,
	1365, 1630, 1098, 1630, 1054, 0, 0, 1045, 1047, 1048,
	992, 1630, 1046, 1239, 1057, 1408, 1099, 1068, 1053, 0,
	254, 1237, 1057, 1000, 0, 1000, 1630, 0, 1630, 1240,
	1054, 1238, 1071,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 572, 3, 578, 573, 3,
	583, 584, 576, 574, 588, 575, 585, 577, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 591, 3,
	564, 566, 565, 569, 587, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 581, 3, 582, 579, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 589, 571, 590, 567,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 568, 57907, 570, 57908, 580, 57909, 586,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1688
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1689
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1693
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1702
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1714
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1738
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1745
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1753
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1792
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1812
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1821
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1832
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1838
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1864
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1869
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1950
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1993
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1996
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2002
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2054
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = nil
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2106
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2114
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2217
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2224
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2264
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2279
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2402
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2429
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = nil
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2585
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2679
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2723
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			return unimplemented(sqllex, "alter function")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2831
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2837
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2842
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2857
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2861
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2880
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = nil
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2964
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3144
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3169
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3188
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "CREATE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "create access method")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "create cast")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplemented(sqllex, "create operator")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplemented(sqllex, "create publication")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "create rule")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "create server")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3228
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3231
		{
		}
	case 391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3232
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3236
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3245
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3248
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3250
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			return unimplemented(sqllex, "drop server")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3266
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3268
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3337
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3348
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3383
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3418
		{

			sqlVAL.union.val = nil
		}
	case 451:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3491
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "DELETE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3505
		{
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "DROP")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3645
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3731
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3761
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3797
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3821
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3829
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "DELETE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "INSERT")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "DELETE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "INSERT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3906
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3939
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3980
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4028
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4032
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "GRANT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4083
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4095
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "RESET")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "RESET")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "USE")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "USE")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4229
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4376
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{
			return unimplemented(sqllex, "set from current")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4419
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = tree.Low
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = tree.Normal
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = tree.High
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4585
		{
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.str = "client_encoding"
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.str = "timezone"
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4658
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4721
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4730
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4940
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = true
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4948
		{
			sqlVAL.union.val = false
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4973
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5075
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = false
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5099
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5145
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = true
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = false
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5213
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5265
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5294
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5302
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5337
		{
		}
	case 929:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5346
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5354
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5450
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5457
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5590
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "RESUME")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5786
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5874
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5890
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5919
		{

			sqlVAL.union.val = nil
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.str = ""
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = nil
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5958
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5962
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5988
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6002
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6017
		{
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6018
		{
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6074
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6087
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6111
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6114
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6117
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6118
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6124
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.str = ""
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6388
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = true
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = false
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6525
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6553
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6563
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6644
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6645
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6647
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6648
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6804
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6813
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6821
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6837
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6847
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6852
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6860
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6925
		{

			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6940
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6954
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6966
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6978
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6988
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6998
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = nil
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7108
		{
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7136
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7140
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7182
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7200
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7219
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7236
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7253
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = false
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = true
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = false
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = true
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = false
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7317
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.str = ""
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.str = ""
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7390
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7396
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7426
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7621
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7627
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7639
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7645
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7659
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7665
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7687
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7746
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7754
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7775
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7798
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7800
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7819
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7853
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7870
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7874
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7917
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7921
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8008
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.str = ""
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8034
		{

		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8049
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.str = ""
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.str = ""
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.str = ""
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8104
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8117
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8118
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8169
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8178
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8254
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8258
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8328
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8349
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8364
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = true
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = false
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8720
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = nil
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8734
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = false
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = true
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8763
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8809
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8830
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8835
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8897
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8953
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9023
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9025
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9048
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9062
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9083
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9095
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9114
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9153
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9163
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9209
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9239
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9272
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = nil
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = true
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = false
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.str = tree.AstFull
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.str = tree.AstRight
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.str = tree.AstInner
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.str = tree.AstHash
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.str = ""
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9461
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9496
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9506
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = true
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = false
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = true
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = false
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9568
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9576
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9577
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9595
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9597
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9605
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9625
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9674
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9687
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = types.Geography
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9736
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9744
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9778
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = nil
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.Int2
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = types.Int
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = types.Float4
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = types.Float
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9821
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = types.Bool
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = types.Float
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9870
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9876
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9898
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = types.String
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = true
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = false
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = types.Date
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9955
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9978
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9986
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10003
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = true
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = false
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = types.Interval
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10027
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = nil
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10156
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10556
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10755
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10781
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10805
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10835
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10846
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10847
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10871
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10937
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11020
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11062
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11133
		{
			return unimplemented(sqllex, "treat")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11154
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.str = ""
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11308
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11376
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11405
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = tree.Any
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = tree.Some
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.All
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Div
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = tree.LT
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.GT
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.LE
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.GE
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.NE
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Like
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11767
		{
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11839
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11891
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11920
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11936
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11945
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11956
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11965
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11973
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11985
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.str = ""
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
