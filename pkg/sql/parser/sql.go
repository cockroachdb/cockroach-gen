// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}

//line sql-gen.y:929
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14521

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1716,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	270, 443,
	-2, 0,
	-1, 71,
	8, 900,
	29, 900,
	618, 900,
	619, 900,
	-2, 0,
	-1, 72,
	8, 900,
	29, 900,
	618, 900,
	619, 900,
	-2, 0,
	-1, 79,
	252, 268,
	540, 268,
	-2, 0,
	-1, 93,
	240, 1449,
	254, 1449,
	270, 439,
	408, 439,
	419, 1196,
	460, 439,
	474, 1196,
	524, 1196,
	552, 439,
	579, 1196,
	-2, 0,
	-1, 99,
	137, 1716,
	247, 1716,
	563, 1716,
	564, 1716,
	-2, 0,
	-1, 117,
	156, 1687,
	176, 1687,
	189, 1687,
	250, 1687,
	283, 1687,
	357, 1687,
	368, 1687,
	558, 1687,
	-2, 1658,
	-1, 159,
	164, 1027,
	269, 1027,
	411, 988,
	479, 988,
	523, 988,
	543, 1027,
	545, 988,
	-2, 0,
	-1, 164,
	4, 1718,
	21, 1718,
	22, 1718,
	23, 1718,
	24, 1718,
	25, 1718,
	26, 1718,
	27, 1718,
	28, 1718,
	30, 1718,
	31, 1718,
	37, 1718,
	41, 1718,
	43, 1718,
	44, 1718,
	46, 1718,
	47, 1718,
	48, 1718,
	49, 1718,
	50, 1718,
	51, 1718,
	52, 1718,
	53, 1718,
	54, 1718,
	56, 1718,
	57, 1718,
	58, 1718,
	59, 1718,
	61, 1718,
	62, 1718,
	63, 1718,
	64, 1718,
	65, 1718,
	66, 1718,
	67, 1718,
	71, 1718,
	72, 1718,
	73, 1718,
	74, 1718,
	76, 1718,
	77, 1718,
	78, 1718,
	82, 1718,
	83, 1718,
	84, 1718,
	85, 1718,
	86, 1718,
	87, 1718,
	88, 1718,
	89, 1718,
	92, 1718,
	93, 1718,
	94, 1718,
	95, 1718,
	96, 1718,
	98, 1718,
	100, 1718,
	101, 1718,
	102, 1718,
	103, 1718,
	104, 1718,
	105, 1718,
	107, 1718,
	108, 1718,
	109, 1718,
	111, 1718,
	112, 1718,
	113, 1718,
	121, 1718,
	122, 1718,
	123, 1718,
	124, 1718,
	125, 1718,
	127, 1718,
	128, 1718,
	129, 1718,
	130, 1718,
	132, 1718,
	133, 1718,
	134, 1718,
	136, 1718,
	137, 1718,
	138, 1718,
	140, 1718,
	141, 1718,
	142, 1718,
	145, 1718,
	146, 1718,
	147, 1718,
	149, 1718,
	150, 1718,
	151, 1718,
	153, 1718,
	154, 1718,
	155, 1718,
	157, 1718,
	158, 1718,
	159, 1718,
	160, 1718,
	161, 1718,
	162, 1718,
	163, 1718,
	164, 1718,
	165, 1718,
	166, 1718,
	167, 1718,
	168, 1718,
	169, 1718,
	170, 1718,
	171, 1718,
	172, 1718,
	173, 1718,
	175, 1718,
	181, 1718,
	182, 1718,
	183, 1718,
	184, 1718,
	188, 1718,
	190, 1718,
	191, 1718,
	192, 1718,
	194, 1718,
	197, 1718,
	198, 1718,
	199, 1718,
	200, 1718,
	201, 1718,
	202, 1718,
	203, 1718,
	204, 1718,
	205, 1718,
	206, 1718,
	207, 1718,
	208, 1718,
	209, 1718,
	210, 1718,
	212, 1718,
	213, 1718,
	215, 1718,
	216, 1718,
	218, 1718,
	219, 1718,
	220, 1718,
	221, 1718,
	222, 1718,
	223, 1718,
	224, 1718,
	225, 1718,
	226, 1718,
	227, 1718,
	229, 1718,
	230, 1718,
	232, 1718,
	233, 1718,
	234, 1718,
	235, 1718,
	236, 1718,
	240, 1718,
	241, 1718,
	242, 1718,
	243, 1718,
	246, 1718,
	247, 1718,
	248, 1718,
	249, 1718,
	251, 1718,
	253, 1718,
	254, 1718,
	256, 1718,
	258, 1718,
	259, 1718,
	260, 1718,
	262, 1718,
	266, 1718,
	267, 1718,
	268, 1718,
	269, 1718,
	270, 1718,
	271, 1718,
	273, 1718,
	274, 1718,
	275, 1718,
	277, 1718,
	278, 1718,
	280, 1718,
	281, 1718,
	284, 1718,
	285, 1718,
	286, 1718,
	287, 1718,
	288, 1718,
	289, 1718,
	290, 1718,
	293, 1718,
	294, 1718,
	295, 1718,
	296, 1718,
	298, 1718,
	299, 1718,
	300, 1718,
	301, 1718,
	302, 1718,
	303, 1718,
	304, 1718,
	305, 1718,
	306, 1718,
	307, 1718,
	308, 1718,
	309, 1718,
	310, 1718,
	311, 1718,
	312, 1718,
	313, 1718,
	314, 1718,
	315, 1718,
	316, 1718,
	317, 1718,
	318, 1718,
	319, 1718,
	320, 1718,
	322, 1718,
	324, 1718,
	325, 1718,
	326, 1718,
	327, 1718,
	328, 1718,
	329, 1718,
	330, 1718,
	331, 1718,
	332, 1718,
	333, 1718,
	334, 1718,
	335, 1718,
	336, 1718,
	337, 1718,
	338, 1718,
	339, 1718,
	340, 1718,
	342, 1718,
	343, 1718,
	345, 1718,
	347, 1718,
	348, 1718,
	349, 1718,
	350, 1718,
	352, 1718,
	353, 1718,
	354, 1718,
	355, 1718,
	356, 1718,
	359, 1718,
	361, 1718,
	363, 1718,
	364, 1718,
	365, 1718,
	366, 1718,
	369, 1718,
	370, 1718,
	371, 1718,
	373, 1718,
	375, 1718,
	376, 1718,
	377, 1718,
	378, 1718,
	379, 1718,
	380, 1718,
	381, 1718,
	382, 1718,
	383, 1718,
	384, 1718,
	385, 1718,
	386, 1718,
	387, 1718,
	389, 1718,
	390, 1718,
	391, 1718,
	392, 1718,
	393, 1718,
	394, 1718,
	395, 1718,
	396, 1718,
	397, 1718,
	398, 1718,
	399, 1718,
	400, 1718,
	401, 1718,
	402, 1718,
	403, 1718,
	405, 1718,
	406, 1718,
	407, 1718,
	409, 1718,
	410, 1718,
	411, 1718,
	412, 1718,
	413, 1718,
	414, 1718,
	415, 1718,
	416, 1718,
	417, 1718,
	418, 1718,
	419, 1718,
	420, 1718,
	421, 1718,
	423, 1718,
	425, 1718,
	426, 1718,
	427, 1718,
	433, 1718,
	434, 1718,
	435, 1718,
	437, 1718,
	438, 1718,
	439, 1718,
	440, 1718,
	441, 1718,
	442, 1718,
	443, 1718,
	444, 1718,
	445, 1718,
	446, 1718,
	448, 1718,
	449, 1718,
	450, 1718,
	452, 1718,
	453, 1718,
	454, 1718,
	455, 1718,
	456, 1718,
	457, 1718,
	458, 1718,
	460, 1718,
	461, 1718,
	462, 1718,
	463, 1718,
	464, 1718,
	465, 1718,
	466, 1718,
	467, 1718,
	468, 1718,
	469, 1718,
	470, 1718,
	471, 1718,
	472, 1718,
	474, 1718,
	475, 1718,
	476, 1718,
	477, 1718,
	478, 1718,
	479, 1718,
	481, 1718,
	482, 1718,
	483, 1718,
	484, 1718,
	485, 1718,
	486, 1718,
	488, 1718,
	489, 1718,
	490, 1718,
	491, 1718,
	492, 1718,
	493, 1718,
	494, 1718,
	495, 1718,
	497, 1718,
	499, 1718,
	500, 1718,
	501, 1718,
	502, 1718,
	503, 1718,
	504, 1718,
	505, 1718,
	506, 1718,
	507, 1718,
	508, 1718,
	509, 1718,
	510, 1718,
	511, 1718,
	512, 1718,
	513, 1718,
	514, 1718,
	515, 1718,
	516, 1718,
	517, 1718,
	519, 1718,
	520, 1718,
	522, 1718,
	523, 1718,
	525, 1718,
	526, 1718,
	527, 1718,
	528, 1718,
	529, 1718,
	530, 1718,
	532, 1718,
	533, 1718,
	535, 1718,
	536, 1718,
	537, 1718,
	538, 1718,
	539, 1718,
	541, 1718,
	543, 1718,
	544, 1718,
	545, 1718,
	546, 1718,
	547, 1718,
	548, 1718,
	549, 1718,
	551, 1718,
	552, 1718,
	553, 1718,
	554, 1718,
	556, 1718,
	557, 1718,
	560, 1718,
	561, 1718,
	562, 1718,
	563, 1718,
	564, 1718,
	565, 1718,
	566, 1718,
	567, 1718,
	569, 1718,
	572, 1718,
	573, 1718,
	574, 1718,
	575, 1718,
	576, 1718,
	577, 1718,
	579, 1718,
	580, 1718,
	581, 1718,
	582, 1718,
	583, 1718,
	584, 1718,
	585, 1718,
	586, 1718,
	591, 1718,
	592, 1718,
	593, 1718,
	594, 1718,
	595, 1718,
	596, 1718,
	-2, 0,
	-1, 165,
	1, 1566,
	135, 1566,
	258, 1566,
	344, 1566,
	406, 1566,
	415, 1566,
	600, 1566,
	631, 1566,
	-2, 0,
	-1, 167,
	1, 1566,
	631, 1566,
	-2, 0,
	-1, 168,
	1, 1566,
	631, 1566,
	-2, 0,
	-1, 169,
	1, 1566,
	540, 1566,
	631, 1566,
	-2, 0,
	-1, 201,
	156, 1686,
	176, 1686,
	189, 1686,
	250, 1686,
	283, 1686,
	357, 1686,
	368, 1686,
	558, 1686,
	-2, 1661,
	-1, 252,
	4, 1725,
	5, 1725,
	6, 1725,
	7, 1725,
	8, 1725,
	9, 1725,
	10, 1725,
	21, 1725,
	22, 1725,
	23, 1725,
	24, 1725,
	25, 1725,
	26, 1725,
	27, 1725,
	28, 1725,
	30, 1725,
	31, 1725,
	37, 1725,
	38, 1725,
	41, 1725,
	43, 1725,
	44, 1725,
	45, 1725,
	46, 1725,
	47, 1725,
	48, 1725,
	49, 1725,
	50, 1725,
	51, 1725,
	52, 1725,
	53, 1725,
	54, 1725,
	56, 1725,
	57, 1725,
	58, 1725,
	59, 1725,
	61, 1725,
	62, 1725,
	63, 1725,
	64, 1725,
	65, 1725,
	66, 1725,
	67, 1725,
	68, 1725,
	69, 1725,
	70, 1725,
	71, 1725,
	72, 1725,
	73, 1725,
	74, 1725,
	76, 1725,
	77, 1725,
	78, 1725,
	80, 1725,
	82, 1725,
	83, 1725,
	84, 1725,
	85, 1725,
	86, 1725,
	87, 1725,
	88, 1725,
	89, 1725,
	92, 1725,
	93, 1725,
	94, 1725,
	95, 1725,
	96, 1725,
	98, 1725,
	100, 1725,
	101, 1725,
	102, 1725,
	103, 1725,
	104, 1725,
	105, 1725,
	107, 1725,
	108, 1725,
	109, 1725,
	110, 1725,
	111, 1725,
	112, 1725,
	113, 1725,
	114, 1725,
	115, 1725,
	116, 1725,
	117, 1725,
	118, 1725,
	119, 1725,
	120, 1725,
	121, 1725,
	122, 1725,
	123, 1725,
	124, 1725,
	125, 1725,
	126, 1725,
	127, 1725,
	128, 1725,
	129, 1725,
	130, 1725,
	131, 1725,
	132, 1725,
	133, 1725,
	134, 1725,
	136, 1725,
	137, 1725,
	138, 1725,
	140, 1725,
	141, 1725,
	142, 1725,
	145, 1725,
	146, 1725,
	147, 1725,
	149, 1725,
	150, 1725,
	151, 1725,
	153, 1725,
	154, 1725,
	155, 1725,
	157, 1725,
	158, 1725,
	159, 1725,
	160, 1725,
	161, 1725,
	162, 1725,
	163, 1725,
	164, 1725,
	165, 1725,
	166, 1725,
	167, 1725,
	168, 1725,
	169, 1725,
	170, 1725,
	171, 1725,
	172, 1725,
	173, 1725,
	174, 1725,
	175, 1725,
	181, 1725,
	182, 1725,
	183, 1725,
	184, 1725,
	188, 1725,
	190, 1725,
	191, 1725,
	192, 1725,
	194, 1725,
	196, 1725,
	197, 1725,
	198, 1725,
	199, 1725,
	200, 1725,
	201, 1725,
	202, 1725,
	203, 1725,
	204, 1725,
	205, 1725,
	206, 1725,
	207, 1725,
	208, 1725,
	209, 1725,
	210, 1725,
	212, 1725,
	213, 1725,
	215, 1725,
	216, 1725,
	218, 1725,
	219, 1725,
	220, 1725,
	221, 1725,
	222, 1725,
	223, 1725,
	224, 1725,
	225, 1725,
	226, 1725,
	227, 1725,
	228, 1725,
	229, 1725,
	230, 1725,
	232, 1725,
	233, 1725,
	234, 1725,
	235, 1725,
	236, 1725,
	240, 1725,
	241, 1725,
	242, 1725,
	243, 1725,
	245, 1725,
	246, 1725,
	247, 1725,
	248, 1725,
	249, 1725,
	251, 1725,
	253, 1725,
	254, 1725,
	255, 1725,
	256, 1725,
	257, 1725,
	258, 1725,
	259, 1725,
	260, 1725,
	261, 1725,
	262, 1725,
	266, 1725,
	267, 1725,
	268, 1725,
	269, 1725,
	270, 1725,
	271, 1725,
	273, 1725,
	274, 1725,
	275, 1725,
	277, 1725,
	278, 1725,
	279, 1725,
	280, 1725,
	281, 1725,
	282, 1725,
	284, 1725,
	285, 1725,
	286, 1725,
	287, 1725,
	288, 1725,
	289, 1725,
	290, 1725,
	291, 1725,
	292, 1725,
	293, 1725,
	294, 1725,
	295, 1725,
	296, 1725,
	298, 1725,
	299, 1725,
	300, 1725,
	301, 1725,
	302, 1725,
	303, 1725,
	304, 1725,
	305, 1725,
	306, 1725,
	307, 1725,
	308, 1725,
	309, 1725,
	310, 1725,
	311, 1725,
	312, 1725,
	313, 1725,
	314, 1725,
	315, 1725,
	316, 1725,
	317, 1725,
	318, 1725,
	319, 1725,
	320, 1725,
	322, 1725,
	323, 1725,
	324, 1725,
	325, 1725,
	326, 1725,
	327, 1725,
	328, 1725,
	329, 1725,
	330, 1725,
	331, 1725,
	332, 1725,
	333, 1725,
	334, 1725,
	335, 1725,
	336, 1725,
	337, 1725,
	338, 1725,
	339, 1725,
	340, 1725,
	341, 1725,
	342, 1725,
	343, 1725,
	344, 1725,
	345, 1725,
	346, 1725,
	347, 1725,
	348, 1725,
	349, 1725,
	350, 1725,
	351, 1725,
	352, 1725,
	353, 1725,
	354, 1725,
	355, 1725,
	356, 1725,
	359, 1725,
	361, 1725,
	364, 1725,
	365, 1725,
	366, 1725,
	369, 1725,
	370, 1725,
	371, 1725,
	372, 1725,
	373, 1725,
	374, 1725,
	375, 1725,
	376, 1725,
	377, 1725,
	378, 1725,
	379, 1725,
	380, 1725,
	381, 1725,
	382, 1725,
	383, 1725,
	384, 1725,
	385, 1725,
	386, 1725,
	387, 1725,
	389, 1725,
	390, 1725,
	391, 1725,
	392, 1725,
	393, 1725,
	394, 1725,
	395, 1725,
	396, 1725,
	397, 1725,
	398, 1725,
	399, 1725,
	400, 1725,
	401, 1725,
	402, 1725,
	403, 1725,
	405, 1725,
	406, 1725,
	407, 1725,
	409, 1725,
	410, 1725,
	411, 1725,
	412, 1725,
	413, 1725,
	414, 1725,
	415, 1725,
	416, 1725,
	417, 1725,
	418, 1725,
	419, 1725,
	420, 1725,
	421, 1725,
	423, 1725,
	425, 1725,
	426, 1725,
	427, 1725,
	433, 1725,
	434, 1725,
	435, 1725,
	437, 1725,
	438, 1725,
	439, 1725,
	440, 1725,
	441, 1725,
	442, 1725,
	443, 1725,
	444, 1725,
	445, 1725,
	446, 1725,
	448, 1725,
	449, 1725,
	450, 1725,
	451, 1725,
	452, 1725,
	453, 1725,
	454, 1725,
	455, 1725,
	456, 1725,
	457, 1725,
	458, 1725,
	460, 1725,
	461, 1725,
	462, 1725,
	463, 1725,
	464, 1725,
	465, 1725,
	466, 1725,
	467, 1725,
	468, 1725,
	469, 1725,
	470, 1725,
	471, 1725,
	472, 1725,
	474, 1725,
	475, 1725,
	476, 1725,
	477, 1725,
	478, 1725,
	479, 1725,
	480, 1725,
	481, 1725,
	482, 1725,
	483, 1725,
	484, 1725,
	485, 1725,
	486, 1725,
	487, 1725,
	488, 1725,
	489, 1725,
	490, 1725,
	491, 1725,
	492, 1725,
	493, 1725,
	494, 1725,
	495, 1725,
	497, 1725,
	499, 1725,
	500, 1725,
	501, 1725,
	502, 1725,
	503, 1725,
	504, 1725,
	505, 1725,
	506, 1725,
	507, 1725,
	508, 1725,
	509, 1725,
	510, 1725,
	511, 1725,
	512, 1725,
	513, 1725,
	514, 1725,
	515, 1725,
	516, 1725,
	517, 1725,
	519, 1725,
	520, 1725,
	521, 1725,
	522, 1725,
	523, 1725,
	525, 1725,
	526, 1725,
	527, 1725,
	528, 1725,
	529, 1725,
	530, 1725,
	532, 1725,
	533, 1725,
	535, 1725,
	536, 1725,
	537, 1725,
	538, 1725,
	539, 1725,
	541, 1725,
	543, 1725,
	544, 1725,
	545, 1725,
	546, 1725,
	547, 1725,
	548, 1725,
	549, 1725,
	550, 1725,
	551, 1725,
	552, 1725,
	553, 1725,
	554, 1725,
	556, 1725,
	557, 1725,
	559, 1725,
	560, 1725,
	561, 1725,
	562, 1725,
	563, 1725,
	564, 1725,
	565, 1725,
	566, 1725,
	567, 1725,
	568, 1725,
	569, 1725,
	572, 1725,
	573, 1725,
	574, 1725,
	575, 1725,
	576, 1725,
	577, 1725,
	579, 1725,
	580, 1725,
	581, 1725,
	582, 1725,
	583, 1725,
	584, 1725,
	585, 1725,
	586, 1725,
	591, 1725,
	592, 1725,
	593, 1725,
	594, 1725,
	595, 1725,
	596, 1725,
	597, 1725,
	611, 1725,
	618, 1725,
	619, 1725,
	620, 1725,
	628, 1725,
	632, 1725,
	-2, 0,
	-1, 794,
	4, 1447,
	21, 1447,
	22, 1447,
	23, 1447,
	24, 1447,
	25, 1447,
	26, 1447,
	27, 1447,
	28, 1447,
	30, 1447,
	31, 1447,
	37, 1447,
	41, 1447,
	43, 1447,
	44, 1447,
	46, 1447,
	47, 1447,
	48, 1447,
	49, 1447,
	50, 1447,
	51, 1447,
	52, 1447,
	53, 1447,
	54, 1447,
	56, 1447,
	57, 1447,
	58, 1447,
	59, 1447,
	61, 1447,
	62, 1447,
	63, 1447,
	64, 1447,
	65, 1447,
	66, 1447,
	67, 1447,
	71, 1447,
	72, 1447,
	73, 1447,
	74, 1447,
	76, 1447,
	77, 1447,
	78, 1447,
	82, 1447,
	83, 1447,
	84, 1447,
	85, 1447,
	86, 1447,
	87, 1447,
	88, 1447,
	89, 1447,
	92, 1447,
	93, 1447,
	94, 1447,
	95, 1447,
	96, 1447,
	98, 1447,
	100, 1447,
	101, 1447,
	102, 1447,
	103, 1447,
	104, 1447,
	105, 1447,
	107, 1447,
	108, 1447,
	109, 1447,
	111, 1447,
	112, 1447,
	113, 1447,
	121, 1447,
	122, 1447,
	123, 1447,
	124, 1447,
	125, 1447,
	127, 1447,
	128, 1447,
	129, 1447,
	130, 1447,
	132, 1447,
	133, 1447,
	134, 1447,
	136, 1447,
	137, 1447,
	138, 1447,
	140, 1447,
	141, 1447,
	142, 1447,
	145, 1447,
	146, 1447,
	147, 1447,
	149, 1447,
	150, 1447,
	151, 1447,
	153, 1447,
	154, 1447,
	155, 1447,
	157, 1447,
	158, 1447,
	159, 1447,
	160, 1447,
	161, 1447,
	162, 1447,
	163, 1447,
	164, 1447,
	165, 1447,
	166, 1447,
	167, 1447,
	168, 1447,
	169, 1447,
	170, 1447,
	171, 1447,
	172, 1447,
	173, 1447,
	175, 1447,
	181, 1447,
	182, 1447,
	183, 1447,
	184, 1447,
	188, 1447,
	190, 1447,
	191, 1447,
	192, 1447,
	194, 1447,
	197, 1447,
	198, 1447,
	199, 1447,
	200, 1447,
	201, 1447,
	202, 1447,
	203, 1447,
	204, 1447,
	205, 1447,
	206, 1447,
	207, 1447,
	208, 1447,
	209, 1447,
	210, 1447,
	212, 1447,
	213, 1447,
	215, 1447,
	216, 1447,
	218, 1447,
	219, 1447,
	220, 1447,
	221, 1447,
	222, 1447,
	223, 1447,
	224, 1447,
	225, 1447,
	226, 1447,
	227, 1447,
	229, 1447,
	230, 1447,
	232, 1447,
	233, 1447,
	234, 1447,
	235, 1447,
	236, 1447,
	240, 1447,
	241, 1447,
	242, 1447,
	243, 1447,
	246, 1447,
	247, 1447,
	248, 1447,
	249, 1447,
	251, 1447,
	253, 1447,
	254, 1447,
	256, 1447,
	258, 1447,
	259, 1447,
	260, 1447,
	262, 1447,
	266, 1447,
	267, 1447,
	268, 1447,
	269, 1447,
	270, 1447,
	271, 1447,
	273, 1447,
	274, 1447,
	275, 1447,
	277, 1447,
	278, 1447,
	280, 1447,
	281, 1447,
	284, 1447,
	285, 1447,
	286, 1447,
	287, 1447,
	288, 1447,
	289, 1447,
	290, 1447,
	293, 1447,
	294, 1447,
	295, 1447,
	296, 1447,
	298, 1447,
	299, 1447,
	300, 1447,
	301, 1447,
	302, 1447,
	303, 1447,
	304, 1447,
	305, 1447,
	306, 1447,
	307, 1447,
	308, 1447,
	309, 1447,
	310, 1447,
	311, 1447,
	312, 1447,
	313, 1447,
	314, 1447,
	315, 1447,
	316, 1447,
	317, 1447,
	318, 1447,
	319, 1447,
	320, 1447,
	322, 1447,
	324, 1447,
	325, 1447,
	326, 1447,
	327, 1447,
	328, 1447,
	329, 1447,
	330, 1447,
	331, 1447,
	332, 1447,
	333, 1447,
	334, 1447,
	335, 1447,
	336, 1447,
	337, 1447,
	338, 1447,
	339, 1447,
	340, 1447,
	342, 1447,
	343, 1447,
	345, 1447,
	347, 1447,
	348, 1447,
	349, 1447,
	350, 1447,
	352, 1447,
	353, 1447,
	354, 1447,
	355, 1447,
	356, 1447,
	359, 1447,
	361, 1447,
	364, 1447,
	365, 1447,
	366, 1447,
	369, 1447,
	370, 1447,
	371, 1447,
	373, 1447,
	375, 1447,
	376, 1447,
	377, 1447,
	378, 1447,
	379, 1447,
	380, 1447,
	381, 1447,
	382, 1447,
	383, 1447,
	384, 1447,
	385, 1447,
	386, 1447,
	387, 1447,
	389, 1447,
	390, 1447,
	391, 1447,
	392, 1447,
	393, 1447,
	394, 1447,
	395, 1447,
	396, 1447,
	397, 1447,
	398, 1447,
	399, 1447,
	400, 1447,
	401, 1447,
	402, 1447,
	403, 1447,
	405, 1447,
	406, 1447,
	407, 1447,
	409, 1447,
	410, 1447,
	411, 1447,
	412, 1447,
	413, 1447,
	414, 1447,
	415, 1447,
	416, 1447,
	417, 1447,
	418, 1447,
	419, 1447,
	420, 1447,
	421, 1447,
	423, 1447,
	425, 1447,
	426, 1447,
	427, 1447,
	433, 1447,
	434, 1447,
	435, 1447,
	437, 1447,
	438, 1447,
	439, 1447,
	440, 1447,
	441, 1447,
	442, 1447,
	443, 1447,
	444, 1447,
	445, 1447,
	446, 1447,
	448, 1447,
	449, 1447,
	450, 1447,
	452, 1447,
	453, 1447,
	454, 1447,
	455, 1447,
	456, 1447,
	457, 1447,
	458, 1447,
	460, 1447,
	461, 1447,
	462, 1447,
	463, 1447,
	464, 1447,
	465, 1447,
	466, 1447,
	467, 1447,
	468, 1447,
	469, 1447,
	470, 1447,
	471, 1447,
	472, 1447,
	474, 1447,
	475, 1447,
	476, 1447,
	477, 1447,
	478, 1447,
	479, 1447,
	481, 1447,
	482, 1447,
	483, 1447,
	484, 1447,
	485, 1447,
	486, 1447,
	488, 1447,
	489, 1447,
	490, 1447,
	491, 1447,
	492, 1447,
	493, 1447,
	494, 1447,
	495, 1447,
	497, 1447,
	499, 1447,
	500, 1447,
	501, 1447,
	502, 1447,
	503, 1447,
	504, 1447,
	505, 1447,
	506, 1447,
	507, 1447,
	508, 1447,
	509, 1447,
	510, 1447,
	511, 1447,
	512, 1447,
	513, 1447,
	514, 1447,
	515, 1447,
	516, 1447,
	517, 1447,
	519, 1447,
	520, 1447,
	522, 1447,
	523, 1447,
	525, 1447,
	526, 1447,
	527, 1447,
	528, 1447,
	529, 1447,
	530, 1447,
	532, 1447,
	533, 1447,
	535, 1447,
	536, 1447,
	537, 1447,
	538, 1447,
	539, 1447,
	541, 1447,
	543, 1447,
	544, 1447,
	545, 1447,
	546, 1447,
	547, 1447,
	548, 1447,
	549, 1447,
	551, 1447,
	552, 1447,
	553, 1447,
	554, 1447,
	556, 1447,
	557, 1447,
	560, 1447,
	561, 1447,
	562, 1447,
	563, 1447,
	564, 1447,
	565, 1447,
	566, 1447,
	567, 1447,
	569, 1447,
	572, 1447,
	573, 1447,
	574, 1447,
	575, 1447,
	576, 1447,
	577, 1447,
	579, 1447,
	580, 1447,
	581, 1447,
	582, 1447,
	583, 1447,
	584, 1447,
	585, 1447,
	586, 1447,
	591, 1447,
	592, 1447,
	593, 1447,
	594, 1447,
	595, 1447,
	596, 1447,
	-2, 0,
	-1, 813,
	195, 2521,
	540, 2521,
	610, 2521,
	630, 2521,
	-2, 0,
	-1, 814,
	195, 2507,
	540, 2507,
	610, 2507,
	630, 2507,
	-2, 0,
	-1, 816,
	195, 2785,
	540, 2785,
	610, 2785,
	630, 2785,
	-2, 0,
	-1, 819,
	195, 2635,
	540, 2635,
	610, 2635,
	630, 2635,
	-2, 0,
	-1, 820,
	195, 2829,
	540, 2829,
	610, 2829,
	630, 2829,
	-2, 0,
	-1, 828,
	195, 2663,
	540, 2663,
	610, 2663,
	630, 2663,
	-2, 766,
	-1, 844,
	8, 899,
	29, 899,
	618, 899,
	619, 899,
	-2, 904,
	-1, 848,
	1, 2575,
	631, 2575,
	-2, 904,
	-1, 849,
	1, 2623,
	631, 2623,
	-2, 904,
	-1, 852,
	1, 2668,
	631, 2668,
	-2, 897,
	-1, 853,
	1, 2724,
	631, 2724,
	-2, 898,
	-1, 854,
	1, 2580,
	631, 2580,
	-2, 901,
	-1, 855,
	1, 2494,
	631, 2494,
	-2, 902,
	-1, 890,
	630, 2453,
	633, 2453,
	-2, 1113,
	-1, 891,
	630, 2455,
	633, 2455,
	-2, 1114,
	-1, 892,
	630, 2454,
	633, 2454,
	-2, 1115,
	-1, 893,
	633, 2379,
	-2, 1116,
	-1, 918,
	189, 287,
	-2, 0,
	-1, 942,
	45, 2426,
	-2, 0,
	-1, 943,
	579, 1425,
	-2, 1197,
	-1, 959,
	4, 1859,
	21, 1859,
	22, 1859,
	23, 1859,
	24, 1859,
	25, 1859,
	26, 1859,
	27, 1859,
	28, 1859,
	30, 1859,
	31, 1859,
	37, 1859,
	41, 1859,
	43, 1859,
	44, 1859,
	46, 1859,
	47, 1859,
	48, 1859,
	49, 1859,
	50, 1859,
	51, 1859,
	52, 1859,
	53, 1859,
	54, 1859,
	56, 1859,
	57, 1859,
	58, 1859,
	59, 1859,
	61, 1859,
	62, 1859,
	63, 1859,
	64, 1859,
	65, 1859,
	66, 1859,
	67, 1859,
	71, 1859,
	72, 1859,
	73, 1859,
	74, 1859,
	76, 1859,
	77, 1859,
	78, 1859,
	82, 1859,
	83, 1859,
	84, 1859,
	85, 1859,
	86, 1859,
	87, 1859,
	88, 1859,
	89, 1859,
	92, 1859,
	93, 1859,
	94, 1859,
	95, 1859,
	96, 1859,
	98, 1859,
	100, 1859,
	101, 1859,
	102, 1859,
	103, 1859,
	104, 1859,
	105, 1859,
	107, 1859,
	108, 1859,
	109, 1859,
	111, 1859,
	112, 1859,
	113, 1859,
	121, 1859,
	122, 1859,
	123, 1859,
	124, 1859,
	125, 1859,
	127, 1859,
	128, 1859,
	129, 1859,
	130, 1859,
	132, 1859,
	133, 1859,
	134, 1859,
	136, 1859,
	137, 1859,
	138, 1859,
	140, 1859,
	141, 1859,
	142, 1859,
	145, 1859,
	146, 1859,
	147, 1859,
	149, 1859,
	150, 1859,
	151, 1859,
	153, 1859,
	154, 1859,
	155, 1859,
	157, 1859,
	158, 1859,
	159, 1859,
	160, 1859,
	161, 1859,
	162, 1859,
	163, 1859,
	164, 1859,
	165, 1859,
	166, 1859,
	167, 1859,
	168, 1859,
	169, 1859,
	170, 1859,
	171, 1859,
	172, 1859,
	173, 1859,
	175, 1859,
	181, 1859,
	182, 1859,
	183, 1859,
	184, 1859,
	188, 1859,
	190, 1859,
	191, 1859,
	192, 1859,
	194, 1859,
	197, 1859,
	198, 1859,
	199, 1859,
	200, 1859,
	201, 1859,
	202, 1859,
	203, 1859,
	204, 1859,
	205, 1859,
	206, 1859,
	207, 1859,
	208, 1859,
	209, 1859,
	210, 1859,
	212, 1859,
	213, 1859,
	215, 1859,
	216, 1859,
	218, 1859,
	219, 1859,
	220, 1859,
	221, 1859,
	222, 1859,
	223, 1859,
	224, 1859,
	225, 1859,
	226, 1859,
	227, 1859,
	229, 1859,
	230, 1859,
	232, 1859,
	233, 1859,
	234, 1859,
	235, 1859,
	236, 1859,
	240, 1859,
	241, 1859,
	242, 1859,
	243, 1859,
	246, 1859,
	247, 1859,
	248, 1859,
	249, 1859,
	251, 1859,
	253, 1859,
	254, 1859,
	256, 1859,
	258, 1859,
	259, 1859,
	260, 1859,
	262, 1859,
	266, 1859,
	267, 1859,
	268, 1859,
	269, 1859,
	270, 1859,
	271, 1859,
	273, 1859,
	274, 1859,
	275, 1859,
	277, 1859,
	278, 1859,
	280, 1859,
	281, 1859,
	284, 1859,
	285, 1859,
	286, 1859,
	287, 1859,
	288, 1859,
	289, 1859,
	290, 1859,
	293, 1859,
	294, 1859,
	295, 1859,
	296, 1859,
	298, 1859,
	299, 1859,
	300, 1859,
	301, 1859,
	302, 1859,
	303, 1859,
	304, 1859,
	305, 1859,
	306, 1859,
	307, 1859,
	308, 1859,
	309, 1859,
	310, 1859,
	311, 1859,
	312, 1859,
	313, 1859,
	314, 1859,
	315, 1859,
	316, 1859,
	317, 1859,
	318, 1859,
	319, 1859,
	320, 1859,
	322, 1859,
	324, 1859,
	325, 1859,
	326, 1859,
	327, 1859,
	328, 1859,
	329, 1859,
	330, 1859,
	331, 1859,
	332, 1859,
	333, 1859,
	334, 1859,
	335, 1859,
	336, 1859,
	337, 1859,
	338, 1859,
	339, 1859,
	340, 1859,
	342, 1859,
	343, 1859,
	345, 1859,
	347, 1859,
	348, 1859,
	349, 1859,
	350, 1859,
	352, 1859,
	353, 1859,
	354, 1859,
	355, 1859,
	356, 1859,
	359, 1859,
	361, 1859,
	364, 1859,
	365, 1859,
	366, 1859,
	369, 1859,
	370, 1859,
	371, 1859,
	373, 1859,
	375, 1859,
	376, 1859,
	377, 1859,
	378, 1859,
	379, 1859,
	380, 1859,
	381, 1859,
	382, 1859,
	383, 1859,
	384, 1859,
	385, 1859,
	386, 1859,
	387, 1859,
	389, 1859,
	390, 1859,
	391, 1859,
	392, 1859,
	393, 1859,
	394, 1859,
	395, 1859,
	396, 1859,
	397, 1859,
	398, 1859,
	399, 1859,
	400, 1859,
	401, 1859,
	402, 1859,
	403, 1859,
	405, 1859,
	406, 1859,
	407, 1859,
	409, 1859,
	410, 1859,
	411, 1859,
	412, 1859,
	413, 1859,
	414, 1859,
	415, 1859,
	416, 1859,
	417, 1859,
	418, 1859,
	419, 1859,
	420, 1859,
	421, 1859,
	423, 1859,
	425, 1859,
	426, 1859,
	427, 1859,
	433, 1859,
	434, 1859,
	435, 1859,
	437, 1859,
	438, 1859,
	439, 1859,
	440, 1859,
	441, 1859,
	442, 1859,
	443, 1859,
	444, 1859,
	445, 1859,
	446, 1859,
	448, 1859,
	449, 1859,
	450, 1859,
	452, 1859,
	453, 1859,
	454, 1859,
	455, 1859,
	456, 1859,
	457, 1859,
	458, 1859,
	460, 1859,
	461, 1859,
	462, 1859,
	463, 1859,
	464, 1859,
	465, 1859,
	466, 1859,
	467, 1859,
	468, 1859,
	469, 1859,
	470, 1859,
	471, 1859,
	472, 1859,
	474, 1859,
	475, 1859,
	476, 1859,
	477, 1859,
	478, 1859,
	479, 1859,
	481, 1859,
	482, 1859,
	483, 1859,
	484, 1859,
	485, 1859,
	486, 1859,
	488, 1859,
	489, 1859,
	490, 1859,
	491, 1859,
	492, 1859,
	493, 1859,
	494, 1859,
	495, 1859,
	497, 1859,
	499, 1859,
	500, 1859,
	501, 1859,
	502, 1859,
	503, 1859,
	504, 1859,
	505, 1859,
	506, 1859,
	507, 1859,
	508, 1859,
	509, 1859,
	510, 1859,
	511, 1859,
	512, 1859,
	513, 1859,
	514, 1859,
	515, 1859,
	516, 1859,
	517, 1859,
	519, 1859,
	520, 1859,
	522, 1859,
	523, 1859,
	525, 1859,
	526, 1859,
	527, 1859,
	528, 1859,
	529, 1859,
	530, 1859,
	532, 1859,
	533, 1859,
	535, 1859,
	536, 1859,
	537, 1859,
	538, 1859,
	539, 1859,
	541, 1859,
	543, 1859,
	544, 1859,
	545, 1859,
	546, 1859,
	547, 1859,
	548, 1859,
	549, 1859,
	551, 1859,
	552, 1859,
	553, 1859,
	554, 1859,
	556, 1859,
	557, 1859,
	560, 1859,
	561, 1859,
	562, 1859,
	563, 1859,
	564, 1859,
	565, 1859,
	566, 1859,
	567, 1859,
	569, 1859,
	572, 1859,
	573, 1859,
	574, 1859,
	575, 1859,
	576, 1859,
	577, 1859,
	579, 1859,
	580, 1859,
	581, 1859,
	582, 1859,
	583, 1859,
	584, 1859,
	585, 1859,
	586, 1859,
	591, 1859,
	592, 1859,
	593, 1859,
	594, 1859,
	595, 1859,
	596, 1859,
	-2, 0,
	-1, 969,
	270, 443,
	-2, 0,
	-1, 1048,
	411, 989,
	479, 989,
	523, 989,
	545, 989,
	-2, 0,
	-1, 1049,
	411, 988,
	479, 988,
	523, 988,
	545, 988,
	-2, 917,
	-1, 1053,
	1, 1041,
	627, 1041,
	629, 1041,
	631, 1041,
	-2, 0,
	-1, 1055,
	1, 963,
	627, 963,
	629, 963,
	631, 963,
	-2, 0,
	-1, 1056,
	1, 967,
	627, 967,
	629, 967,
	631, 967,
	-2, 0,
	-1, 1057,
	1, 1112,
	189, 1112,
	627, 1112,
	629, 1112,
	631, 1112,
	-2, 0,
	-1, 1065,
	1, 994,
	627, 994,
	629, 994,
	631, 994,
	-2, 0,
	-1, 1072,
	1, 1041,
	627, 1041,
	629, 1041,
	631, 1041,
	-2, 0,
	-1, 1073,
	1, 1043,
	627, 1043,
	629, 1043,
	631, 1043,
	-2, 0,
	-1, 1074,
	1, 1046,
	627, 1046,
	629, 1046,
	631, 1046,
	-2, 0,
	-1, 1082,
	1, 1076,
	627, 1076,
	629, 1076,
	631, 1076,
	-2, 0,
	-1, 1083,
	1, 1078,
	627, 1078,
	629, 1078,
	631, 1078,
	-2, 0,
	-1, 1088,
	1, 1106,
	627, 1106,
	629, 1106,
	631, 1106,
	-2, 0,
	-1, 1142,
	176, 1729,
	189, 1729,
	283, 1729,
	357, 1729,
	-2, 1665,
	-1, 1158,
	176, 1728,
	189, 1728,
	283, 1728,
	357, 1728,
	-2, 1662,
	-1, 1185,
	630, 2452,
	-2, 774,
	-1, 1214,
	5, 2444,
	628, 2442,
	-2, 2433,
	-1, 1222,
	5, 2465,
	628, 2462,
	-2, 2453,
	-1, 1223,
	5, 2466,
	628, 2463,
	-2, 2454,
	-1, 1231,
	630, 2450,
	-2, 2432,
	-1, 1232,
	628, 2917,
	-2, 2451,
	-1, 1255,
	628, 2916,
	-2, 2467,
	-1, 1256,
	5, 1934,
	-2, 2887,
	-1, 1257,
	5, 1935,
	-2, 2888,
	-1, 1258,
	5, 1936,
	-2, 2902,
	-1, 1259,
	5, 1937,
	-2, 2866,
	-1, 1260,
	5, 1938,
	-2, 2900,
	-1, 1261,
	5, 1946,
	-2, 2879,
	-1, 1262,
	5, 1933,
	-2, 2875,
	-1, 1263,
	5, 1933,
	-2, 2874,
	-1, 1264,
	5, 1933,
	-2, 2893,
	-1, 1265,
	5, 1944,
	-2, 2868,
	-1, 1266,
	5, 1949,
	-2, 2867,
	-1, 1267,
	5, 1951,
	-2, 2912,
	-1, 1270,
	5, 1973,
	-2, 2905,
	-1, 1271,
	5, 1965,
	-2, 2906,
	-1, 1272,
	5, 1973,
	-2, 2907,
	-1, 1273,
	5, 1969,
	-2, 2908,
	-1, 1274,
	5, 1919,
	-2, 2880,
	-1, 1275,
	5, 1920,
	-2, 2881,
	-1, 1276,
	5, 1921,
	-2, 2869,
	-1, 1304,
	5, 1956,
	-2, 2913,
	-1, 1305,
	5, 1957,
	-2, 2903,
	-1, 1306,
	5, 1958,
	580, 1958,
	-2, 2870,
	-1, 1307,
	5, 1959,
	580, 1959,
	-2, 2871,
	-1, 1345,
	628, 2462,
	-2, 2453,
	-1, 1346,
	628, 2463,
	-2, 2454,
	-1, 1444,
	195, 2829,
	540, 2829,
	610, 2829,
	630, 2829,
	-2, 0,
	-1, 1449,
	1, 750,
	631, 750,
	-2, 1574,
	-1, 1596,
	377, 2427,
	437, 2427,
	481, 2427,
	620, 2427,
	-2, 2417,
	-1, 1602,
	195, 147,
	277, 147,
	342, 147,
	586, 147,
	-2, 2825,
	-1, 1603,
	195, 148,
	277, 148,
	342, 148,
	586, 148,
	-2, 2566,
	-1, 1604,
	195, 149,
	277, 149,
	342, 149,
	586, 149,
	-2, 2746,
	-1, 1610,
	632, 2427,
	-2, 2429,
	-1, 1634,
	1, 1422,
	442, 1377,
	481, 1377,
	603, 1377,
	627, 1422,
	629, 1422,
	631, 1422,
	-2, 1714,
	-1, 1640,
	211, 1519,
	231, 1519,
	450, 1519,
	-2, 0,
	-1, 1689,
	419, 1196,
	579, 1196,
	-2, 438,
	-1, 1706,
	45, 2425,
	-2, 1159,
	-1, 1713,
	1, 1422,
	627, 1422,
	629, 1422,
	631, 1422,
	-2, 1714,
	-1, 1721,
	4, 1447,
	21, 1447,
	22, 1447,
	23, 1447,
	24, 1447,
	25, 1447,
	26, 1447,
	27, 1447,
	28, 1447,
	30, 1447,
	31, 1447,
	37, 1447,
	41, 1447,
	43, 1447,
	44, 1447,
	46, 1447,
	47, 1447,
	48, 1447,
	49, 1447,
	50, 1447,
	51, 1447,
	52, 1447,
	53, 1447,
	54, 1447,
	56, 1447,
	57, 1447,
	58, 1447,
	59, 1447,
	61, 1447,
	62, 1447,
	63, 1447,
	64, 1447,
	65, 1447,
	66, 1447,
	67, 1447,
	71, 1447,
	72, 1447,
	73, 1447,
	74, 1447,
	76, 1447,
	77, 1447,
	78, 1447,
	82, 1447,
	83, 1447,
	84, 1447,
	85, 1447,
	86, 1447,
	87, 1447,
	88, 1447,
	89, 1447,
	92, 1447,
	93, 1447,
	94, 1447,
	95, 1447,
	96, 1447,
	98, 1447,
	100, 1447,
	101, 1447,
	102, 1447,
	103, 1447,
	104, 1447,
	105, 1447,
	107, 1447,
	108, 1447,
	109, 1447,
	111, 1447,
	112, 1447,
	113, 1447,
	121, 1447,
	122, 1447,
	123, 1447,
	124, 1447,
	125, 1447,
	127, 1447,
	128, 1447,
	129, 1447,
	130, 1447,
	132, 1447,
	133, 1447,
	134, 1447,
	136, 1447,
	137, 1447,
	138, 1447,
	140, 1447,
	141, 1447,
	142, 1447,
	145, 1447,
	146, 1447,
	147, 1447,
	149, 1447,
	150, 1447,
	151, 1447,
	153, 1447,
	154, 1447,
	155, 1447,
	157, 1447,
	158, 1447,
	159, 1447,
	160, 1447,
	161, 1447,
	162, 1447,
	163, 1447,
	164, 1447,
	165, 1447,
	166, 1447,
	167, 1447,
	168, 1447,
	169, 1447,
	170, 1447,
	171, 1447,
	172, 1447,
	173, 1447,
	181, 1447,
	182, 1447,
	183, 1447,
	184, 1447,
	188, 1447,
	190, 1447,
	191, 1447,
	192, 1447,
	194, 1447,
	197, 1447,
	198, 1447,
	199, 1447,
	200, 1447,
	201, 1447,
	202, 1447,
	203, 1447,
	204, 1447,
	205, 1447,
	206, 1447,
	207, 1447,
	208, 1447,
	209, 1447,
	210, 1447,
	212, 1447,
	213, 1447,
	215, 1447,
	216, 1447,
	218, 1447,
	219, 1447,
	220, 1447,
	221, 1447,
	222, 1447,
	223, 1447,
	224, 1447,
	225, 1447,
	226, 1447,
	227, 1447,
	229, 1447,
	230, 1447,
	232, 1447,
	233, 1447,
	234, 1447,
	235, 1447,
	236, 1447,
	241, 1447,
	242, 1447,
	243, 1447,
	246, 1447,
	247, 1447,
	248, 1447,
	249, 1447,
	251, 1447,
	253, 1447,
	254, 1447,
	256, 1447,
	258, 1447,
	259, 1447,
	260, 1447,
	262, 1447,
	266, 1447,
	267, 1447,
	268, 1447,
	269, 1447,
	270, 1447,
	271, 1447,
	273, 1447,
	274, 1447,
	275, 1447,
	277, 1447,
	278, 1447,
	280, 1447,
	281, 1447,
	284, 1447,
	285, 1447,
	286, 1447,
	287, 1447,
	288, 1447,
	289, 1447,
	290, 1447,
	293, 1447,
	294, 1447,
	295, 1447,
	296, 1447,
	298, 1447,
	299, 1447,
	300, 1447,
	301, 1447,
	302, 1447,
	303, 1447,
	304, 1447,
	305, 1447,
	306, 1447,
	307, 1447,
	308, 1447,
	309, 1447,
	310, 1447,
	311, 1447,
	312, 1447,
	313, 1447,
	314, 1447,
	315, 1447,
	316, 1447,
	317, 1447,
	318, 1447,
	319, 1447,
	320, 1447,
	322, 1447,
	324, 1447,
	325, 1447,
	326, 1447,
	327, 1447,
	328, 1447,
	329, 1447,
	330, 1447,
	331, 1447,
	332, 1447,
	333, 1447,
	334, 1447,
	335, 1447,
	336, 1447,
	337, 1447,
	338, 1447,
	339, 1447,
	340, 1447,
	342, 1447,
	343, 1447,
	347, 1447,
	348, 1447,
	349, 1447,
	350, 1447,
	352, 1447,
	353, 1447,
	354, 1447,
	355, 1447,
	356, 1447,
	359, 1447,
	361, 1447,
	362, 1447,
	364, 1447,
	365, 1447,
	366, 1447,
	369, 1447,
	370, 1447,
	371, 1447,
	373, 1447,
	375, 1447,
	376, 1447,
	377, 1447,
	378, 1447,
	379, 1447,
	380, 1447,
	381, 1447,
	382, 1447,
	383, 1447,
	384, 1447,
	385, 1447,
	386, 1447,
	387, 1447,
	389, 1447,
	390, 1447,
	391, 1447,
	392, 1447,
	393, 1447,
	394, 1447,
	395, 1447,
	396, 1447,
	397, 1447,
	398, 1447,
	399, 1447,
	400, 1447,
	401, 1447,
	402, 1447,
	403, 1447,
	405, 1447,
	406, 1447,
	407, 1447,
	409, 1447,
	410, 1447,
	411, 1447,
	412, 1447,
	413, 1447,
	414, 1447,
	415, 1447,
	416, 1447,
	417, 1447,
	418, 1447,
	419, 1447,
	420, 1447,
	421, 1447,
	423, 1447,
	425, 1447,
	426, 1447,
	427, 1447,
	433, 1447,
	434, 1447,
	435, 1447,
	437, 1447,
	438, 1447,
	439, 1447,
	440, 1447,
	441, 1447,
	442, 1447,
	443, 1447,
	444, 1447,
	445, 1447,
	446, 1447,
	448, 1447,
	449, 1447,
	450, 1447,
	452, 1447,
	453, 1447,
	454, 1447,
	455, 1447,
	456, 1447,
	457, 1447,
	458, 1447,
	460, 1447,
	461, 1447,
	462, 1447,
	463, 1447,
	464, 1447,
	465, 1447,
	466, 1447,
	467, 1447,
	468, 1447,
	469, 1447,
	470, 1447,
	471, 1447,
	472, 1447,
	474, 1447,
	475, 1447,
	476, 1447,
	477, 1447,
	478, 1447,
	479, 1447,
	481, 1447,
	482, 1447,
	483, 1447,
	484, 1447,
	485, 1447,
	486, 1447,
	488, 1447,
	489, 1447,
	490, 1447,
	491, 1447,
	492, 1447,
	493, 1447,
	494, 1447,
	495, 1447,
	497, 1447,
	499, 1447,
	500, 1447,
	501, 1447,
	502, 1447,
	503, 1447,
	504, 1447,
	505, 1447,
	506, 1447,
	507, 1447,
	508, 1447,
	509, 1447,
	510, 1447,
	511, 1447,
	512, 1447,
	513, 1447,
	514, 1447,
	515, 1447,
	516, 1447,
	517, 1447,
	519, 1447,
	520, 1447,
	522, 1447,
	523, 1447,
	525, 1447,
	526, 1447,
	527, 1447,
	528, 1447,
	529, 1447,
	530, 1447,
	532, 1447,
	533, 1447,
	535, 1447,
	536, 1447,
	537, 1447,
	538, 1447,
	539, 1447,
	541, 1447,
	543, 1447,
	544, 1447,
	545, 1447,
	546, 1447,
	547, 1447,
	548, 1447,
	549, 1447,
	551, 1447,
	552, 1447,
	553, 1447,
	554, 1447,
	556, 1447,
	557, 1447,
	560, 1447,
	561, 1447,
	562, 1447,
	563, 1447,
	564, 1447,
	565, 1447,
	566, 1447,
	567, 1447,
	569, 1447,
	572, 1447,
	573, 1447,
	574, 1447,
	575, 1447,
	576, 1447,
	577, 1447,
	579, 1447,
	580, 1447,
	581, 1447,
	582, 1447,
	583, 1447,
	584, 1447,
	585, 1447,
	586, 1447,
	591, 1447,
	592, 1447,
	593, 1447,
	594, 1447,
	595, 1447,
	596, 1447,
	-2, 0,
	-1, 1744,
	1, 585,
	627, 585,
	629, 585,
	631, 585,
	-2, 1685,
	-1, 1747,
	4, 2911,
	11, 2911,
	12, 2911,
	14, 2911,
	15, 2911,
	16, 2911,
	17, 2911,
	18, 2911,
	19, 2911,
	21, 2911,
	22, 2911,
	23, 2911,
	24, 2911,
	25, 2911,
	26, 2911,
	27, 2911,
	28, 2911,
	30, 2911,
	31, 2911,
	34, 2911,
	35, 2911,
	37, 2911,
	39, 2911,
	41, 2911,
	43, 2911,
	44, 2911,
	46, 2911,
	47, 2911,
	48, 2911,
	49, 2911,
	50, 2911,
	51, 2911,
	52, 2911,
	53, 2911,
	54, 2911,
	56, 2911,
	57, 2911,
	58, 2911,
	59, 2911,
	61, 2911,
	62, 2911,
	63, 2911,
	64, 2911,
	65, 2911,
	66, 2911,
	67, 2911,
	70, 2911,
	71, 2911,
	72, 2911,
	73, 2911,
	74, 2911,
	76, 2911,
	77, 2911,
	78, 2911,
	79, 2911,
	82, 2911,
	83, 2911,
	84, 2911,
	85, 2911,
	86, 2911,
	87, 2911,
	88, 2911,
	89, 2911,
	90, 2911,
	92, 2911,
	93, 2911,
	94, 2911,
	95, 2911,
	96, 2911,
	98, 2911,
	99, 2911,
	100, 2911,
	101, 2911,
	102, 2911,
	103, 2911,
	104, 2911,
	105, 2911,
	107, 2911,
	108, 2911,
	109, 2911,
	110, 2911,
	111, 2911,
	112, 2911,
	113, 2911,
	121, 2911,
	122, 2911,
	123, 2911,
	124, 2911,
	125, 2911,
	127, 2911,
	128, 2911,
	129, 2911,
	130, 2911,
	132, 2911,
	133, 2911,
	134, 2911,
	136, 2911,
	137, 2911,
	138, 2911,
	140, 2911,
	141, 2911,
	142, 2911,
	145, 2911,
	146, 2911,
	147, 2911,
	149, 2911,
	150, 2911,
	151, 2911,
	153, 2911,
	154, 2911,
	155, 2911,
	157, 2911,
	158, 2911,
	159, 2911,
	160, 2911,
	161, 2911,
	162, 2911,
	163, 2911,
	164, 2911,
	165, 2911,
	166, 2911,
	167, 2911,
	168, 2911,
	169, 2911,
	170, 2911,
	171, 2911,
	172, 2911,
	173, 2911,
	177, 2911,
	178, 2911,
	179, 2911,
	180, 2911,
	181, 2911,
	182, 2911,
	183, 2911,
	184, 2911,
	187, 2911,
	188, 2911,
	190, 2911,
	191, 2911,
	192, 2911,
	194, 2911,
	196, 2911,
	197, 2911,
	198, 2911,
	199, 2911,
	200, 2911,
	201, 2911,
	202, 2911,
	203, 2911,
	204, 2911,
	205, 2911,
	206, 2911,
	207, 2911,
	208, 2911,
	209, 2911,
	210, 2911,
	212, 2911,
	213, 2911,
	215, 2911,
	216, 2911,
	218, 2911,
	219, 2911,
	220, 2911,
	221, 2911,
	222, 2911,
	223, 2911,
	224, 2911,
	225, 2911,
	226, 2911,
	227, 2911,
	228, 2911,
	229, 2911,
	230, 2911,
	231, 2911,
	232, 2911,
	233, 2911,
	234, 2911,
	235, 2911,
	236, 2911,
	238, 2911,
	239, 2911,
	241, 2911,
	242, 2911,
	243, 2911,
	245, 2911,
	246, 2911,
	247, 2911,
	248, 2911,
	249, 2911,
	251, 2911,
	253, 2911,
	254, 2911,
	255, 2911,
	256, 2911,
	257, 2911,
	258, 2911,
	259, 2911,
	260, 2911,
	261, 2911,
	262, 2911,
	264, 2911,
	265, 2911,
	266, 2911,
	267, 2911,
	268, 2911,
	269, 2911,
	270, 2911,
	271, 2911,
	273, 2911,
	274, 2911,
	275, 2911,
	277, 2911,
	278, 2911,
	279, 2911,
	280, 2911,
	281, 2911,
	282, 2911,
	284, 2911,
	285, 2911,
	286, 2911,
	287, 2911,
	288, 2911,
	289, 2911,
	290, 2911,
	293, 2911,
	294, 2911,
	295, 2911,
	296, 2911,
	297, 2911,
	298, 2911,
	299, 2911,
	300, 2911,
	301, 2911,
	302, 2911,
	303, 2911,
	304, 2911,
	305, 2911,
	306, 2911,
	307, 2911,
	308, 2911,
	309, 2911,
	310, 2911,
	311, 2911,
	312, 2911,
	313, 2911,
	314, 2911,
	315, 2911,
	316, 2911,
	317, 2911,
	318, 2911,
	319, 2911,
	320, 2911,
	322, 2911,
	323, 2911,
	324, 2911,
	325, 2911,
	326, 2911,
	327, 2911,
	328, 2911,
	329, 2911,
	330, 2911,
	331, 2911,
	332, 2911,
	333, 2911,
	334, 2911,
	335, 2911,
	336, 2911,
	337, 2911,
	338, 2911,
	339, 2911,
	340, 2911,
	342, 2911,
	343, 2911,
	346, 2911,
	347, 2911,
	348, 2911,
	349, 2911,
	350, 2911,
	352, 2911,
	353, 2911,
	354, 2911,
	355, 2911,
	356, 2911,
	359, 2911,
	361, 2911,
	364, 2911,
	365, 2911,
	366, 2911,
	367, 2911,
	369, 2911,
	370, 2911,
	371, 2911,
	373, 2911,
	375, 2911,
	376, 2911,
	377, 2911,
	378, 2911,
	379, 2911,
	380, 2911,
	381, 2911,
	382, 2911,
	383, 2911,
	384, 2911,
	385, 2911,
	386, 2911,
	387, 2911,
	389, 2911,
	390, 2911,
	391, 2911,
	392, 2911,
	393, 2911,
	394, 2911,
	395, 2911,
	396, 2911,
	397, 2911,
	398, 2911,
	399, 2911,
	400, 2911,
	401, 2911,
	402, 2911,
	403, 2911,
	405, 2911,
	406, 2911,
	407, 2911,
	409, 2911,
	410, 2911,
	411, 2911,
	412, 2911,
	413, 2911,
	414, 2911,
	415, 2911,
	416, 2911,
	417, 2911,
	418, 2911,
	419, 2911,
	420, 2911,
	421, 2911,
	423, 2911,
	425, 2911,
	426, 2911,
	427, 2911,
	433, 2911,
	434, 2911,
	435, 2911,
	436, 2911,
	437, 2911,
	438, 2911,
	439, 2911,
	440, 2911,
	441, 2911,
	442, 2911,
	443, 2911,
	444, 2911,
	445, 2911,
	446, 2911,
	448, 2911,
	449, 2911,
	450, 2911,
	451, 2911,
	452, 2911,
	453, 2911,
	454, 2911,
	455, 2911,
	456, 2911,
	457, 2911,
	458, 2911,
	459, 2911,
	460, 2911,
	461, 2911,
	462, 2911,
	463, 2911,
	464, 2911,
	465, 2911,
	466, 2911,
	467, 2911,
	468, 2911,
	469, 2911,
	470, 2911,
	471, 2911,
	472, 2911,
	474, 2911,
	475, 2911,
	476, 2911,
	477, 2911,
	478, 2911,
	479, 2911,
	481, 2911,
	482, 2911,
	483, 2911,
	484, 2911,
	485, 2911,
	486, 2911,
	487, 2911,
	488, 2911,
	489, 2911,
	490, 2911,
	491, 2911,
	492, 2911,
	493, 2911,
	494, 2911,
	495, 2911,
	497, 2911,
	499, 2911,
	500, 2911,
	501, 2911,
	502, 2911,
	503, 2911,
	504, 2911,
	505, 2911,
	506, 2911,
	507, 2911,
	508, 2911,
	509, 2911,
	510, 2911,
	511, 2911,
	512, 2911,
	513, 2911,
	514, 2911,
	515, 2911,
	516, 2911,
	517, 2911,
	519, 2911,
	520, 2911,
	521, 2911,
	522, 2911,
	523, 2911,
	525, 2911,
	526, 2911,
	527, 2911,
	528, 2911,
	529, 2911,
	530, 2911,
	532, 2911,
	533, 2911,
	535, 2911,
	536, 2911,
	537, 2911,
	538, 2911,
	539, 2911,
	541, 2911,
	543, 2911,
	544, 2911,
	545, 2911,
	546, 2911,
	547, 2911,
	548, 2911,
	549, 2911,
	551, 2911,
	552, 2911,
	553, 2911,
	554, 2911,
	556, 2911,
	557, 2911,
	560, 2911,
	561, 2911,
	562, 2911,
	563, 2911,
	564, 2911,
	565, 2911,
	566, 2911,
	567, 2911,
	569, 2911,
	572, 2911,
	573, 2911,
	574, 2911,
	575, 2911,
	576, 2911,
	577, 2911,
	579, 2911,
	580, 2911,
	581, 2911,
	582, 2911,
	583, 2911,
	584, 2911,
	585, 2911,
	586, 2911,
	591, 2911,
	592, 2911,
	593, 2911,
	594, 2911,
	595, 2911,
	596, 2911,
	597, 2911,
	599, 2911,
	608, 2911,
	609, 2911,
	610, 2911,
	611, 2911,
	612, 2911,
	613, 2911,
	615, 2911,
	616, 2911,
	617, 2911,
	618, 2911,
	619, 2911,
	620, 2911,
	621, 2911,
	622, 2911,
	623, 2911,
	626, 2911,
	629, 2911,
	630, 2911,
	632, 2911,
	633, 2911,
	-2, 0,
	-1, 1752,
	195, 2785,
	540, 2785,
	610, 2785,
	630, 2785,
	-2, 0,
	-1, 1806,
	411, 989,
	479, 989,
	523, 989,
	545, 989,
	-2, 0,
	-1, 1817,
	1, 1519,
	627, 1519,
	629, 1519,
	631, 1519,
	-2, 0,
	-1, 1834,
	1, 984,
	627, 984,
	629, 984,
	631, 984,
	-2, 0,
	-1, 1835,
	1, 1028,
	627, 1028,
	629, 1028,
	631, 1028,
	-2, 0,
	-1, 1836,
	1, 1036,
	627, 1036,
	629, 1036,
	631, 1036,
	-2, 0,
	-1, 1839,
	1, 993,
	627, 993,
	629, 993,
	631, 993,
	-2, 0,
	-1, 1841,
	1, 999,
	627, 999,
	629, 999,
	631, 999,
	-2, 0,
	-1, 1844,
	1, 995,
	627, 995,
	629, 995,
	631, 995,
	-2, 0,
	-1, 1849,
	1, 1009,
	627, 1009,
	629, 1009,
	631, 1009,
	-2, 0,
	-1, 1883,
	1, 2767,
	627, 2767,
	629, 2767,
	630, 2767,
	631, 2767,
	-2, 0,
	-1, 1887,
	1, 1087,
	627, 1087,
	629, 1087,
	631, 1087,
	-2, 0,
	-1, 1904,
	1, 1569,
	631, 1569,
	-2, 1574,
	-1, 1907,
	176, 1728,
	189, 1728,
	283, 1728,
	357, 1728,
	-2, 1666,
	-1, 2007,
	156, 1687,
	176, 1687,
	189, 1687,
	250, 1687,
	283, 1687,
	357, 1687,
	368, 1687,
	558, 1687,
	-2, 2138,
	-1, 2068,
	629, 2313,
	-2, 0,
	-1, 2104,
	156, 1687,
	176, 1687,
	189, 1687,
	250, 1687,
	283, 1687,
	357, 1687,
	368, 1687,
	558, 1687,
	-2, 1820,
	-1, 2144,
	540, 2782,
	630, 2782,
	633, 2782,
	-2, 0,
	-1, 2161,
	628, 1961,
	-2, 1949,
	-1, 2193,
	195, 2782,
	630, 2782,
	633, 2782,
	-2, 0,
	-1, 2236,
	1, 752,
	631, 752,
	-2, 1574,
	-1, 2411,
	231, 282,
	-2, 2461,
	-1, 2412,
	231, 283,
	-2, 338,
	-1, 2523,
	1, 986,
	627, 986,
	629, 986,
	631, 986,
	-2, 0,
	-1, 2524,
	1, 1030,
	627, 1030,
	629, 1030,
	631, 1030,
	-2, 0,
	-1, 2525,
	1, 1038,
	627, 1038,
	629, 1038,
	631, 1038,
	-2, 0,
	-1, 2526,
	1, 1089,
	627, 1089,
	629, 1089,
	631, 1089,
	-2, 0,
	-1, 2567,
	1, 1011,
	627, 1011,
	629, 1011,
	631, 1011,
	-2, 0,
	-1, 2589,
	1, 1072,
	627, 1072,
	629, 1072,
	631, 1072,
	-2, 0,
	-1, 2636,
	457, 1755,
	458, 1755,
	-2, 1994,
	-1, 2667,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2014,
	-1, 2668,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2015,
	-1, 2669,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2016,
	-1, 2670,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2017,
	-1, 2671,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2018,
	-1, 2672,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2019,
	-1, 2673,
	99, 0,
	264, 0,
	265, 0,
	612, 0,
	613, 0,
	-2, 2020,
	-1, 2674,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2021,
	-1, 2686,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2033,
	-1, 2687,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2034,
	-1, 2688,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2035,
	-1, 2692,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2042,
	-1, 2698,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2046,
	-1, 2700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2054,
	-1, 2701,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2055,
	-1, 2702,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2056,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2057,
	-1, 2877,
	5, 2465,
	195, 2324,
	628, 2462,
	-2, 2453,
	-1, 2878,
	195, 2325,
	-2, 2862,
	-1, 2879,
	195, 2326,
	-2, 2661,
	-1, 2880,
	195, 2327,
	-2, 2539,
	-1, 2881,
	195, 2328,
	-2, 2599,
	-1, 2882,
	195, 2329,
	-2, 2646,
	-1, 2883,
	195, 2330,
	-2, 2780,
	-1, 2884,
	195, 2331,
	-2, 2121,
	-1, 2956,
	1, 1821,
	2, 1821,
	110, 1821,
	156, 1821,
	176, 1821,
	189, 1821,
	196, 1821,
	214, 1821,
	217, 1821,
	245, 1821,
	250, 1821,
	261, 1821,
	279, 1821,
	283, 1821,
	323, 1821,
	357, 1821,
	362, 1821,
	368, 1821,
	447, 1821,
	451, 1821,
	558, 1821,
	570, 1821,
	588, 1821,
	589, 1821,
	590, 1821,
	600, 1821,
	627, 1821,
	629, 1821,
	631, 1821,
	633, 1821,
	-2, 1820,
	-1, 2969,
	628, 2434,
	-2, 2448,
	-1, 2971,
	1, 355,
	588, 355,
	-2, 1714,
	-1, 3001,
	628, 1960,
	-2, 1950,
	-1, 3216,
	1, 1422,
	442, 1377,
	481, 1377,
	603, 1377,
	627, 1422,
	629, 1422,
	631, 1422,
	-2, 1714,
	-1, 3394,
	363, 1758,
	-2, 2901,
	-1, 3395,
	363, 1759,
	-2, 2764,
	-1, 3399,
	457, 2390,
	458, 2390,
	-2, 2119,
	-1, 3400,
	457, 2394,
	458, 2394,
	-2, 2120,
	-1, 3401,
	457, 2391,
	458, 2391,
	-2, 2119,
	-1, 3402,
	457, 2395,
	458, 2395,
	-2, 2120,
	-1, 3415,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2044,
	-1, 3416,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2048,
	-1, 3422,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2050,
	-1, 3649,
	1, 747,
	627, 747,
	629, 747,
	631, 747,
	-2, 1574,
	-1, 3848,
	45, 2425,
	-2, 1160,
	-1, 3853,
	1, 1422,
	627, 1422,
	629, 1422,
	631, 1422,
	-2, 1714,
	-1, 3959,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2052,
	-1, 3966,
	255, 0,
	257, 0,
	346, 0,
	-2, 2071,
	-1, 4034,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2100,
	-1, 4035,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2101,
	-1, 4036,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2102,
	-1, 4040,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2106,
	-1, 4041,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2107,
	-1, 4042,
	14, 0,
	15, 0,
	16, 0,
	608, 0,
	609, 0,
	610, 0,
	-2, 2108,
	-1, 4090,
	628, 2435,
	-2, 2449,
	-1, 4300,
	630, 3018,
	-2, 1640,
	-1, 4356,
	255, 0,
	257, 0,
	346, 0,
	-2, 2072,
	-1, 4359,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2075,
	-1, 4360,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2077,
	-1, 4474,
	630, 2450,
	-2, 1457,
	-1, 4637,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2076,
	-1, 4638,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	228, 0,
	231, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2078,
	-1, 4649,
	255, 0,
	-2, 2111,
	-1, 4838,
	255, 0,
	-2, 2112,
	-1, 5058,
	53, 0,
	228, 0,
	282, 0,
	487, 0,
	597, 0,
	611, 0,
	-2, 2865,
}

const sqlPrivate = 57344

const sqlLast = 146303

var sqlAct = [...]int{
	292, 5176, 4993, 3170, 5249, 1425, 5120, 3553, 3140, 3290,
	4886, 5104, 4992, 5057, 4705, 5044, 5070, 5190, 5026, 4949,
	5007, 4339, 3834, 3833, 5071, 5004, 4983, 5072, 2408, 1422,
	4930, 5129, 3845, 4878, 4470, 4807, 4784, 1481, 4755, 2296,
	3072, 4771, 1650, 5068, 3999, 5056, 4842, 4100, 2486, 4596,
	4591, 1221, 4585, 4525, 4710, 4552, 3951, 1417, 3260, 4626,
	3675, 1338, 4292, 3870, 2646, 4658, 4576, 2498, 4578, 1620,
	3678, 4284, 4915, 2496, 4207, 4790, 3408, 4471, 1349, 4451,
	892, 2715, 753, 1770, 3073, 1916, 1168, 1415, 3312, 4601,
	3864, 3155, 2459, 3818, 2909, 4257, 3738, 2148, 2654, 4238,
	3681, 825, 4654, 1500, 3823, 3807, 3900, 3898, 892, 3279,
	3274, 1159, 3248, 4240, 3825, 2128, 1225, 3663, 3822, 3800,
	2305, 2110, 1268, 2647, 3276, 3665, 3799, 1593, 4093, 3664,
	3599, 2983, 3559, 3568, 3576, 3536, 3291, 967, 4, 764,
	3606, 971, 4338, 2494, 3307, 2395, 3557, 2079, 4395, 3223,
	3171, 1768, 4843, 2384, 1167, 191, 2397, 5105, 3702, 4060,
	286, 2317, 2651, 2054, 2015, 285, 1214, 1985, 3535, 3392,
	2149, 2728, 962, 2333, 3306, 116, 1420, 1708, 889, 2793,
	2949, 3252, 2396, 2948, 2446, 887, 2382, 3261, 821, 2374,
	2218, 3185, 1814, 2355, 2288, 1464, 2362, 2284, 1220, 1904,
	1218, 1394, 2784, 2216, 2929, 1223, 2712, 2795, 2080, 1408,
	2099, 1483, 2618, 2635, 2616, 2984, 798, 3284, 1329, 1745,
	1711, 2377, 1622, 2445, 1451, 2787, 893, 3098, 894, 3097,
	3058, 2049, 4950, 841, 1042, 3012, 3826, 2938, 2906, 2919,
	898, 1332, 2089, 2096, 1311, 901, 1186, 2839, 2765, 1999,
	2873, 1917, 201, 2617, 191, 1346, 2619, 1405, 202, 1918,
	1479, 817, 806, 1197, 1849, 2405, 1834, 1644, 898, 2472,
	1216, 1743, 120, 901, 106, 2386, 1328, 1736, 1601, 5121,
	1476, 2640, 5177, 1199, 757, 2951, 988, 46, 45, 781,
	754, 943, 766, 43, 34, 882, 32, 30, 1923, 1334,
	1309, 3445, 2205, 834, 837, 1903, 1341, 1063, 1656, 4074,
	944, 4075, 1163, 3439, 5066, 4101, 2207, 5260, 2207, 2207,
	2207, 2928, 4678, 2207, 2207, 1931, 1932, 3555, 1964, 1965,
	1966, 1975, 1976, 1977, 5252, 5240, 5239, 740, 3780, 2928,
	2928, 762, 5209, 5207, 4675, 4672, 4709, 4709, 1968, 1962,
	5150, 5106, 5096, 3880, 2417, 5107, 2928, 1934, 2228, 1931,
	1932, 5094, 5091, 1163, 5088, 2928, 5092, 1981, 5089, 5054,
	5053, 1649, 3879, 2417, 2417, 3634, 5052, 5042, 5040, 1164,
	3317, 4709, 4709, 1962, 1987, 5035, 5030, 1326, 5029, 4793,
	4709, 1934, 4709, 1933, 5002, 4969, 4962, 4961, 4709, 2992,
	2928, 2928, 4954, 4929, 1953, 4926, 2417, 2417, 4908, 4709,
	4840, 4821, 4542, 1950, 2992, 4318, 3506, 3507, 1987, 4786,
	4728, 1344, 4727, 4134, 2417, 4716, 2417, 1933, 4715, 2417,
	1460, 4708, 4709, 4665, 1152, 4709, 4639, 2417, 2225, 4612,
	2992, 4609, 4520, 3317, 1143, 3780, 2928, 4498, 1460, 3254,
	1142, 2928, 4422, 1340, 4358, 4308, 4302, 4254, 2992, 3893,
	3893, 4255, 4165, 2495, 4133, 4085, 4166, 4083, 4134, 4086,
	4067, 4084, 3983, 3979, 2928, 3892, 2417, 2928, 2487, 3893,
	3631, 4064, 3616, 3552, 3547, 2988, 3546, 2928, 2928, 1840,
	2928, 1956, 1957, 1958, 1959, 2228, 3497, 3780, 3495, 3487,
	3498, 1939, 3496, 3488, 1158, 3485, 3456, 3454, 3316, 2928,
	2928, 3301, 3317, 3455, 3014, 2482, 3300, 2921, 1342, 3037,
	2482, 3253, 2991, 2928, 1364, 2981, 2992, 2417, 2228, 2928,
	2973, 99, 1312, 1312, 2417, 1939, 2927, 3506, 3507, 2481,
	2928, 2228, 1972, 2482, 1372, 1982, 3407, 1315, 1313, 1316,
	2928, 2790, 1961, 1963, 252, 4970, 4844, 4835, 4823, 2741,
	2742, 2743, 2760, 2761, 2762, 4793, 3317, 4064, 2920, 1978,
	4589, 1979, 4542, 2225, 4499, 2225, 4318, 2928, 1948, 1949,
	2763, 4256, 3147, 3057, 2242, 2310, 1961, 1963, 2206, 2222,
	1931, 1932, 3512, 3253, 1365, 2416, 1970, 3165, 3048, 2075,
	1643, 4183, 3954, 3926, 2097, 254, 3881, 2228, 2367, 2965,
	1816, 1954, 3506, 3507, 1962, 1987, 2964, 1365, 2963, 2962,
	3506, 3507, 1934, 2961, 1317, 1314, 3882, 4413, 3444, 1151,
	1150, 1149, 1148, 1147, 1146, 2753, 1145, 1141, 252, 1140,
	1139, 1138, 1137, 1136, 2749, 1954, 2791, 1135, 1134, 1987,
	3363, 4826, 1133, 1132, 1131, 1130, 253, 1129, 1933, 1128,
	1980, 1127, 3506, 3507, 1126, 3524, 3525, 3526, 1125, 1953,
	1124, 246, 1123, 1122, 1104, 1040, 1658, 1039, 1950, 1038,
	247, 1969, 1037, 1036, 1035, 4354, 1034, 3506, 3507, 254,
	1033, 3521, 1984, 2208, 1032, 2208, 2208, 2208, 1031, 1030,
	2208, 2208, 3522, 1029, 1028, 1027, 1026, 1025, 1024, 203,
	1023, 1022, 1780, 3512, 1021, 1020, 1019, 1018, 1017, 1016,
	1015, 1014, 2754, 2755, 2756, 2757, 1984, 1013, 2792, 1012,
	2789, 1011, 2748, 1010, 4352, 1009, 1008, 1007, 1006, 1005,
	253, 3521, 1004, 993, 992, 991, 986, 985, 978, 977,
	1960, 976, 2225, 961, 1761, 1670, 1956, 1957, 1958, 1959,
	2225, 960, 917, 916, 915, 914, 1939, 905, 904, 903,
	902, 864, 863, 1955, 832, 831, 830, 812, 280, 279,
	1664, 2559, 2225, 1984, 278, 277, 276, 275, 3512, 3269,
	274, 3879, 273, 203, 272, 271, 3512, 270, 269, 1427,
	1223, 1973, 268, 267, 266, 265, 264, 1955, 263, 2758,
	2759, 1657, 262, 1365, 261, 260, 259, 1961, 1963, 258,
	257, 256, 255, 3522, 4370, 4110, 4603, 1223, 1223, 1223,
	3253, 3065, 4079, 3894, 3602, 1986, 252, 1784, 3512, 3467,
	3450, 1649, 2751, 1948, 1949, 1765, 3441, 3343, 3233, 159,
	2996, 2970, 3065, 2955, 2822, 3550, 2608, 2820, 2806, 2057,
	2804, 2100, 2269, 3512, 3523, 2227, 2056, 2057, 1503, 1986,
	2123, 2026, 1223, 1898, 2056, 1652, 1954, 1472, 1223, 1625,
	1223, 2024, 2228, 1427, 3024, 2206, 2225, 254, 1634, 2222,
	2611, 1930, 5255, 1348, 1455, 2060, 2794, 5081, 3522, 1658,
	3551, 5080, 5077, 2055, 1984, 5055, 3528, 5039, 1223, 4934,
	1223, 1971, 1223, 1468, 1469, 1470, 4832, 4824, 2225, 1625,
	2017, 4847, 1945, 1946, 1952, 1974, 1951, 1947, 4700, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 253, 4653,
	4610, 1658, 4588, 4380, 4428, 1427, 4393, 4379, 3522, 4392,
	1713, 3623, 4386, 246, 4385, 2920, 4384, 1984, 4377, 4376,
	252, 1611, 247, 4374, 4369, 1625, 1935, 1936, 1937, 1938,
	1940, 1941, 1625, 3522, 1931, 1932, 4366, 1669, 4267, 1984,
	1433, 1223, 1365, 1223, 4365, 3523, 4253, 1984, 1625, 4114,
	4113, 203, 1325, 4112, 1399, 1402, 4089, 1223, 1658, 1223,
	4055, 1166, 1663, 4054, 2752, 4053, 1934, 3975, 1447, 4171,
	3970, 254, 1412, 3597, 3543, 1960, 3534, 3505, 1647, 2788,
	1449, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 1984,
	3063, 3502, 3501, 3499, 1717, 1720, 3494, 3493, 1955, 3492,
	3489, 3486, 1933, 3466, 4605, 3449, 3442, 3287, 1625, 3271,
	3440, 3302, 3005, 2424, 1984, 2956, 898, 2777, 1632, 1930,
	3523, 901, 253, 1606, 1931, 1932, 1986, 2019, 1223, 2462,
	2017, 1223, 3506, 3507, 1842, 1929, 1475, 246, 1441, 2422,
	1598, 3506, 3507, 5198, 5197, 1496, 247, 1590, 1595, 2018,
	5119, 2016, 5117, 1350, 4001, 4994, 1934, 4268, 4913, 4898,
	1986, 4894, 4893, 4892, 4872, 4871, 4869, 1486, 1487, 4846,
	3523, 4845, 4819, 2718, 4805, 203, 4802, 4801, 4794, 1706,
	191, 191, 1646, 4181, 1645, 1478, 1628, 4782, 4781, 1488,
	1489, 4724, 1933, 4695, 4651, 3523, 4634, 4633, 1748, 1750,
	1164, 4572, 1785, 3516, 3508, 3509, 3510, 3511, 3513, 3514,
	1939, 4568, 4565, 2738, 2739, 2740, 2764, 2750, 2744, 1723,
	2746, 2747, 2745, 2732, 2733, 2734, 2735, 2736, 2737, 3062,
	4543, 4412, 4391, 1737, 1223, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1455, 252, 3548, 1455, 4319, 1746, 4169, 4168,
	3062, 1951, 1947, 4149, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 4148, 4146, 3062, 4070, 1223, 4058, 3965,
	2004, 3895, 3889, 1223, 3856, 3760, 3517, 3515, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 252, 252, 3508, 3509, 3510,
	3511, 3513, 3514, 3713, 254, 3680, 1739, 2994, 3625, 3471,
	1939, 2724, 3470, 3465, 3431, 3247, 3090, 4268, 3512, 2063,
	4827, 252, 252, 2062, 1908, 1931, 1932, 3512, 2061, 3518,
	3519, 3520, 2058, 2050, 3270, 1858, 3517, 3515, 3516, 3508,
	3509, 3510, 3511, 3513, 3514, 2048, 254, 254, 1790, 1962,
	1931, 1932, 252, 3003, 3002, 253, 2967, 1934, 2960, 2926,
	1760, 3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514,
	246, 2802, 254, 254, 1962, 2003, 1779, 2122, 252, 247,
	4604, 2078, 1934, 2072, 1987, 2071, 252, 2070, 2069, 1223,
	1223, 1223, 2068, 1933, 1902, 1223, 2006, 253, 253, 2067,
	2066, 2065, 1346, 254, 1346, 2064, 2045, 2044, 203, 1987,
	2043, 1984, 246, 246, 2042, 2041, 2040, 2039, 1933, 1503,
	2038, 247, 247, 253, 253, 2037, 2036, 1807, 3522, 254,
	2035, 1223, 2034, 2033, 892, 1427, 2032, 254, 246, 246,
	2166, 892, 2031, 1427, 1843, 1427, 2030, 247, 247, 2019,
	203, 203, 1164, 1341, 253, 1341, 2005, 2002, 1909, 252,
	1997, 2077, 1440, 2126, 2145, 1369, 1360, 4849, 4848, 246,
	4575, 4424, 2195, 4362, 2197, 1742, 203, 203, 247, 4109,
	253, 4082, 4073, 1913, 3453, 2958, 1912, 1905, 253, 2086,
	1143, 4673, 4426, 4108, 2018, 246, 1142, 2134, 3621, 2000,
	3885, 1939, 4501, 246, 247, 1427, 2059, 203, 2118, 1984,
	254, 1223, 247, 5073, 1907, 1931, 1932, 3506, 3507, 2254,
	2253, 252, 3141, 1482, 2262, 2139, 1939, 1467, 1465, 5189,
	1926, 1927, 3594, 203, 2230, 1223, 2107, 2083, 2084, 4902,
	4895, 203, 252, 1503, 1482, 4795, 1482, 1934, 1482, 4608,
	4546, 2821, 1961, 1963, 2819, 2805, 2160, 2803, 4545, 4544,
	191, 253, 2163, 4500, 1482, 2051, 2052, 1480, 1344, 2299,
	1344, 2260, 254, 4415, 2025, 4326, 246, 1961, 1963, 1164,
	4325, 4324, 4323, 1933, 4322, 247, 4825, 4321, 1455, 4320,
	3523, 2132, 2040, 254, 898, 41, 2345, 1466, 4135, 901,
	1340, 898, 1340, 3116, 1742, 2234, 901, 4077, 4076, 3897,
	2233, 1954, 2140, 3896, 3286, 2108, 2133, 3784, 2040, 2189,
	3782, 2267, 3781, 253, 4699, 2131, 5146, 5144, 4791, 4271,
	1460, 2127, 1806, 5069, 2057, 3183, 1954, 2100, 246, 1460,
	3622, 2056, 3952, 2098, 253, 2105, 2257, 247, 1900, 4198,
	3491, 1935, 1936, 1937, 1938, 1940, 1941, 3490, 3413, 246,
	3716, 3101, 1463, 3682, 4164, 1342, 1312, 1342, 247, 2248,
	2210, 3836, 1120, 3835, 3750, 4129, 203, 4130, 4864, 2364,
	2028, 2076, 4865, 1859, 2487, 4785, 5102, 1460, 1324, 4586,
	1815, 3313, 1984, 2117, 2116, 3808, 2398, 203, 4865, 2115,
	2113, 2102, 2112, 2111, 4261, 4532, 2515, 1816, 2399, 4276,
	2154, 1461, 1625, 1625, 2236, 4250, 4204, 1984, 4655, 2790,
	2146, 1121, 4195, 1503, 4174, 3923, 3647, 2580, 2463, 2492,
	3555, 2430, 4003, 2785, 5078, 4719, 4691, 3001, 1741, 3459,
	2073, 2053, 3816, 1937, 1938, 1940, 1941, 2456, 3099, 3508,
	3509, 3510, 3511, 3513, 3514, 1716, 1639, 2344, 3143, 1436,
	3510, 3511, 3513, 3514, 2232, 1398, 2259, 3162, 5093, 5090,
	4513, 4511, 2212, 1955, 3875, 2214, 3159, 4140, 3157, 4887,
	2274, 2219, 2275, 4592, 5001, 2221, 3685, 2351, 4159, 2341,
	2224, 2349, 2282, 2283, 3283, 2409, 2414, 2359, 1955, 1794,
	1773, 3791, 5147, 3342, 2258, 2378, 5079, 4722, 5148, 2310,
	4718, 4697, 3946, 2354, 2791, 2263, 2589, 2255, 4750, 2586,
	1625, 3651, 1625, 2354, 1625, 4217, 4487, 1691, 1683, 1118,
	2276, 2277, 1116, 3038, 1457, 1986, 5251, 2280, 2281, 4903,
	1856, 4743, 1625, 1625, 1100, 4730, 3061, 2304, 5181, 4535,
	2626, 2316, 2354, 956, 3653, 1114, 1625, 2573, 1641, 2571,
	1986, 1112, 3059, 1109, 3061, 4534, 4215, 1741, 1625, 4214,
	1625, 1625, 1625, 1467, 898, 2587, 1857, 5126, 4206, 901,
	3059, 2308, 4189, 4188, 2074, 4186, 4466, 4185, 4173, 1162,
	2401, 2402, 4132, 4131, 892, 2995, 2792, 4216, 2789, 2352,
	2249, 2338, 3797, 3796, 2588, 3752, 3615, 3280, 2452, 3464,
	3463, 3462, 2624, 3461, 3417, 3181, 1223, 2514, 3180, 1692,
	1462, 3164, 4459, 3225, 2835, 2834, 3153, 2379, 2403, 2457,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 3145, 3135,
	1646, 3134, 1645, 1466, 3126, 1855, 3125, 3124, 2337, 2350,
	2469, 2334, 2237, 3106, 1223, 2358, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 957, 3105, 1450, 3066, 2982, 2490, 4720,
	4692, 2388, 2699, 2387, 2388, 2519, 2387, 2391, 4460, 4485,
	1906, 2415, 1458, 1161, 2656, 2436, 1792, 4482, 804, 2714,
	1223, 1459, 1223, 4433, 2500, 1164, 1729, 1164, 1728, 1223,
	4632, 1787, 2166, 2166, 1503, 3009, 1223, 1223, 1223, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1746, 1223, 1746, 1223, 1223, 1223, 1223, 2466,
	2438, 2437, 3748, 2479, 898, 2399, 3682, 2353, 1467, 901,
	1727, 3924, 1726, 2606, 2794, 2487, 5182, 2353, 2507, 2625,
	3075, 1223, 2544, 2628, 2475, 1223, 1223, 1739, 2471, 2474,
	2506, 2474, 2615, 1223, 1441, 1461, 2601, 1223, 3715, 1223,
	1223, 2483, 2986, 2484, 2477, 5127, 2353, 1503, 1461, 4443,
	3045, 1163, 2511, 1223, 1223, 1223, 1223, 1896, 804, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1700, 2160, 2160,
	4502, 1106, 3133, 1788, 2163, 2163, 3120, 1941, 1466, 3514,
	1687, 3103, 2347, 2264, 2265, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1223, 1223, 2523, 1223, 1642, 2623, 1838, 1223,
	2309, 1808, 4143, 2534, 1484, 1485, 1484, 1485, 1484, 1485,
	2598, 1346, 4760, 1384, 3129, 3320, 4442, 2531, 1503, 2766,
	2767, 1873, 2652, 2653, 1484, 1485, 1460, 1346, 2785, 2306,
	2972, 1705, 3358, 2766, 2782, 3405, 2567, 2788, 3078, 2714,
	3089, 4455, 2310, 1223, 1503, 3127, 2578, 3390, 4456, 2565,
	4481, 1869, 2600, 2639, 2626, 4880, 1875, 5213, 1457, 4461,
	2830, 5183, 1341, 752, 2302, 2088, 2524, 3088, 4483, 1854,
	2722, 1457, 1439, 3749, 5075, 2476, 803, 2720, 1341, 2876,
	2876, 2890, 2614, 2766, 5147, 2613, 2910, 2912, 2627, 2612,
	747, 2730, 1899, 2918, 2620, 1911, 1143, 2307, 1164, 1143,
	1143, 4458, 2643, 2781, 3130, 2644, 2645, 4479, 1164, 2943,
	1837, 2380, 1164, 3161, 2308, 2528, 2624, 1804, 2522, 4462,
	2985, 1816, 2154, 2154, 2610, 2389, 1838, 2303, 1816, 959,
	958, 3933, 2525, 2532, 4631, 3128, 3932, 2968, 3041, 2392,
	3360, 1160, 3650, 2935, 1462, 3992, 2794, 3160, 1002, 1427,
	1427, 2092, 4855, 4230, 3032, 4170, 3158, 1462, 3156, 2107,
	5184, 3043, 4533, 4156, 2390, 954, 3371, 953, 2726, 3008,
	2710, 5215, 4187, 3060, 3404, 3656, 3428, 1344, 2832, 3033,
	4184, 4117, 4882, 2833, 861, 2118, 2836, 2779, 2837, 2838,
	1503, 5193, 805, 1344, 1835, 2381, 803, 3011, 4104, 3044,
	2095, 2708, 1164, 2622, 3030, 2989, 1458, 3426, 1712, 1340,
	3803, 3795, 2957, 4231, 2934, 1459, 2090, 1793, 3746, 1458,
	3042, 1110, 191, 3163, 1110, 1340, 4466, 2942, 1459, 2947,
	3027, 2872, 2953, 2954, 2093, 1455, 2885, 2901, 1837, 2166,
	2916, 2914, 3007, 2924, 2925, 3035, 1432, 1110, 2572, 3077,
	2570, 2940, 2941, 1111, 2936, 1110, 4457, 4229, 5076, 3732,
	1836, 5185, 4459, 1710, 2059, 3102, 4452, 3123, 2105, 3104,
	4761, 2368, 1851, 2625, 1342, 5159, 2375, 1870, 2091, 2607,
	2997, 1312, 3374, 4759, 4450, 4154, 5168, 3989, 1503, 4757,
	1342, 4484, 5167, 4454, 2597, 2980, 2946, 5134, 4467, 4468,
	859, 2421, 2420, 4344, 1625, 3052, 3927, 3397, 3398, 4343,
	3004, 3804, 805, 2794, 3067, 3419, 3801, 3570, 4460, 3733,
	4477, 1427, 3029, 3873, 3872, 1689, 3216, 2051, 2052, 2365,
	3367, 3018, 2318, 3139, 3669, 3021, 2599, 3022, 4480, 4756,
	2207, 2365, 1223, 1223, 3174, 1223, 1172, 2704, 4978, 3036,
	3026, 2623, 3013, 3423, 1655, 2160, 1662, 2322, 1668, 3028,
	3724, 2163, 4453, 3731, 3064, 4966, 5074, 2696, 4758, 3990,
	892, 2705, 1427, 1789, 994, 5187, 3121, 3259, 2706, 4683,
	4888, 1686, 2711, 2309, 3424, 2361, 3039, 3745, 3429, 2394,
	2335, 3744, 3741, 2369, 1791, 2340, 1092, 3763, 3108, 3142,
	1460, 995, 4910, 1625, 3076, 1712, 2094, 3251, 3872, 3109,
	3311, 3303, 2360, 1460, 1383, 2319, 1625, 2530, 1625, 2892,
	3725, 1156, 3220, 3373, 1625, 1871, 3310, 1759, 3652, 1764,
	3053, 3054, 1867, 3019, 3055, 3056, 1625, 3294, 802, 3023,
	3093, 3080, 3083, 1778, 3051, 1783, 3070, 2356, 3132, 2393,
	3308, 748, 5191, 3034, 3107, 3370, 3175, 2330, 3267, 2310,
	1427, 2348, 1427, 4881, 3723, 1817, 1640, 3122, 2342, 3263,
	3697, 1367, 2046, 3228, 3323, 3324, 4562, 3154, 3230, 3619,
	2307, 5046, 3221, 5047, 1223, 3330, 3331, 3332, 4478, 3344,
	3182, 3345, 3131, 1107, 4628, 3217, 3218, 898, 3144, 3314,
	3137, 2566, 901, 3114, 3115, 3117, 3118, 3119, 3151, 2154,
	2357, 1841, 2336, 979, 2346, 2713, 1093, 2331, 3167, 3788,
	3346, 2092, 3168, 3169, 1872, 3569, 3219, 2323, 860, 3696,
	898, 4455, 2313, 5133, 2971, 901, 749, 2794, 4456, 2721,
	984, 2365, 2694, 3226, 4340, 2697, 2300, 1003, 3257, 4461,
	3305, 3670, 1223, 1438, 1868, 3802, 191, 1874, 1223, 1223,
	3703, 2329, 4964, 1646, 3318, 3231, 3372, 2088, 5192, 3315,
	2095, 3325, 4644, 3326, 3298, 3321, 1910, 2707, 3245, 2389,
	862, 5211, 5186, 3425, 858, 1354, 2937, 2709, 750, 5157,
	751, 4458, 2314, 3427, 2324, 2325, 2693, 2527, 1803, 1805,
	2521, 1356, 4243, 906, 2093, 5194, 5012, 4965, 3061, 4462,
	4514, 771, 4241, 3289, 1223, 1223, 5112, 3705, 2390, 4155,
	1223, 2320, 3299, 2372, 3081, 1746, 5113, 2776, 1351, 1996,
	913, 996, 997, 1223, 1223, 3469, 2312, 4627, 2939, 1223,
	1223, 5216, 3337, 3340, 3297, 1223, 3278, 3138, 1092, 2952,
	1163, 4005, 5200, 2092, 4574, 4579, 4333, 4924, 3348, 4670,
	3350, 3339, 3352, 4538, 3354, 3355, 1098, 1097, 4105, 2321,
	1373, 4243, 3226, 1156, 1357, 4580, 3349, 1371, 3351, 3347,
	3353, 4241, 4345, 2370, 3296, 3704, 3948, 3364, 4751, 3388,
	1223, 1223, 1223, 1822, 4931, 5018, 1223, 4245, 4948, 3420,
	4804, 1358, 2095, 4537, 4536, 4563, 1223, 1921, 4290, 3376,
	3860, 3378, 4916, 3633, 1094, 2979, 2444, 2208, 2090, 2085,
	1370, 1363, 739, 1223, 1920, 3396, 4917, 2371, 4266, 4244,
	2577, 3379, 4044, 1920, 3381, 4389, 2093, 1915, 4095, 3452,
	4341, 2642, 2332, 2311, 1355, 5132, 4457, 3387, 3386, 2250,
	3385, 5221, 2346, 4717, 3607, 4813, 2247, 3676, 4862, 4291,
	4918, 4210, 4190, 2639, 3406, 3391, 4245, 4141, 1093, 2348,
	980, 981, 4139, 3861, 3852, 3672, 2094, 3268, 3262, 3249,
	2091, 2114, 2470, 4629, 2464, 3447, 3448, 2458, 4467, 4468,
	3451, 2450, 2429, 4096, 2428, 2326, 4932, 3178, 4244, 3443,
	4798, 2695, 2343, 3988, 4125, 3110, 1680, 2345, 2632, 1375,
	4984, 811, 3578, 4059, 1164, 1223, 1223, 1223, 1223, 3949,
	4097, 3065, 4094, 3418, 1223, 1223, 1223, 4920, 4951, 1223,
	2930, 1919, 2579, 2245, 2243, 1920, 4293, 998, 999, 4597,
	1919, 1223, 1346, 1503, 1095, 3246, 2339, 1223, 4346, 1223,
	1386, 4919, 3562, 3563, 1735, 4072, 4777, 4775, 1346, 4694,
	907, 908, 3688, 3684, 3683, 3411, 2933, 2512, 3389, 4921,
	3567, 3566, 1096, 1845, 1844, 2504, 1503, 2327, 2493, 2426,
	2246, 2347, 5111, 1839, 4099, 2978, 2977, 2976, 1346, 2975,
	2974, 1503, 4249, 1341, 1733, 1001, 4239, 3254, 1161, 4875,
	4577, 1721, 4706, 1427, 4553, 1921, 3458, 2932, 2094, 1341,
	4242, 3579, 2931, 2166, 1921, 1722, 3086, 1503, 1098, 1097,
	2273, 4779, 3811, 3545, 4262, 4147, 2468, 1427, 1099, 4136,
	5154, 3082, 3614, 4045, 850, 1427, 4347, 2385, 4681, 1341,
	3635, 3564, 1919, 4679, 4046, 3224, 1154, 4390, 1092, 3600,
	3587, 3920, 2633, 3632, 3617, 3319, 3629, 1223, 3229, 3227,
	2497, 2398, 1996, 3577, 3584, 1797, 1094, 3764, 2344, 1223,
	851, 5220, 1352, 1156, 4689, 4702, 982, 983, 4701, 4242,
	2299, 4437, 4436, 4990, 3111, 3112, 3574, 1427, 4998, 4876,
	3572, 4981, 3671, 2166, 4396, 4061, 4778, 2801, 4671, 3583,
	3601, 4933, 3596, 4419, 1892, 4797, 5020, 5158, 1344, 4126,
	1223, 4707, 910, 909, 5156, 5095, 2299, 4906, 4896, 3660,
	3661, 1155, 1894, 4690, 1344, 4677, 1427, 1891, 1353, 2160,
	1889, 3721, 1455, 4098, 1863, 2163, 3609, 3610, 3611, 3612,
	1340, 3686, 1861, 3648, 3690, 1427, 3573, 1427, 3605, 3556,
	3735, 3585, 3737, 1823, 1344, 3654, 1340, 3588, 3589, 2593,
	3593, 3571, 3540, 3541, 3542, 1833, 1223, 1223, 1093, 4650,
	2364, 3751, 3687, 4430, 1503, 3692, 4991, 2364, 3694, 911,
	912, 1831, 4877, 3620, 1829, 1427, 1340, 3591, 4763, 3592,
	3774, 1827, 1825, 1819, 3673, 1813, 1095, 4137, 4388, 3668,
	3608, 4248, 1427, 3537, 1734, 1342, 1811, 3786, 810, 2160,
	3580, 3581, 3582, 1731, 3964, 2163, 3921, 3918, 3766, 3722,
	3768, 1342, 3753, 3772, 1096, 2272, 3630, 3778, 3500, 3430,
	3626, 3627, 4922, 3628, 1625, 3641, 3700, 3779, 4923, 4435,
	3720, 3250, 3638, 2383, 1732, 1000, 3742, 1427, 1625, 3642,
	1625, 1342, 3152, 3146, 1503, 3100, 3586, 2569, 3649, 3734,
	3006, 892, 1625, 3679, 1501, 3761, 2602, 2503, 2488, 2125,
	2121, 1895, 3657, 3736, 1772, 1625, 3805, 2536, 3538, 2407,
	1099, 3944, 3943, 2154, 3935, 2800, 3765, 1427, 1915, 3362,
	3361, 3328, 3853, 2621, 1850, 2539, 2449, 2427, 2196, 3773,
	2132, 2194, 2029, 1786, 1346, 1704, 1308, 4419, 3821, 3866,
	3868, 3706, 5067, 3844, 3718, 1893, 3785, 3714, 1098, 1097,
	1890, 3841, 3256, 1888, 4515, 4197, 1625, 1862, 4196, 3730,
	4980, 3806, 4519, 3809, 3727, 1860, 4497, 4595, 1625, 1108,
	1625, 3637, 4524, 4510, 3639, 3640, 2595, 3308, 3985, 3643,
	4590, 3644, 2594, 3645, 4448, 1341, 3308, 4447, 1832, 4289,
	4280, 4213, 3851, 2154, 3756, 3747, 1094, 4192, 3762, 4162,
	5125, 3888, 4160, 3877, 1830, 3775, 4138, 1828, 3855, 3850,
	3837, 3859, 3793, 3783, 1826, 1824, 1818, 3281, 1812, 3273,
	2560, 1503, 3132, 3266, 1503, 3258, 3787, 3728, 3925, 1810,
	3242, 3729, 3241, 3222, 3025, 3020, 1730, 2425, 2423, 3862,
	2400, 2366, 2328, 2315, 1321, 2301, 2229, 2226, 2223, 3794,
	2220, 898, 2215, 2213, 2209, 2200, 901, 3916, 1223, 5130,
	3936, 3865, 5051, 2138, 1223, 1223, 5148, 4579, 1223, 1223,
	1223, 1322, 1223, 3108, 2568, 3792, 3813, 1924, 3776, 2251,
	3869, 1223, 2166, 2375, 3409, 3848, 3849, 4580, 3842, 3847,
	1223, 3798, 2239, 2240, 2535, 1223, 2406, 4874, 2605, 3382,
	1344, 1503, 3380, 3215, 5032, 191, 191, 4942, 4611, 3914,
	1223, 3874, 1164, 4531, 4434, 3919, 3309, 3655, 1503, 2268,
	3883, 3917, 1685, 3886, 3887, 4815, 1095, 3941, 2166, 2166,
	1223, 1223, 1340, 1223, 1223, 1223, 3087, 1113, 1115, 1117,
	3061, 3867, 4808, 2526, 4301, 2310, 2603, 1886, 1887, 2467,
	1406, 1223, 1153, 1407, 1096, 1223, 3059, 2166, 2166, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
	1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 3967,
	1223, 3950, 2563, 3410, 4017, 1323, 4018, 3061, 1223, 1223,
	2166, 1925, 3929, 2604, 3930, 1223, 3931, 1342, 2160, 2558,
	3777, 5031, 2533, 3084, 2163, 4488, 1223, 4526, 3977, 3978,
	1099, 3947, 3179, 1155, 1809, 3942, 4834, 1346, 1346, 2238,
	3091, 1223, 4704, 4397, 3876, 4375, 3701, 3092, 839, 1931,
	1932, 3939, 1931, 1932, 3113, 1928, 1477, 1434, 1407, 1407,
	3945, 1374, 5142, 1474, 2160, 2160, 5103, 4209, 3240, 4277,
	2163, 2163, 2451, 1503, 3092, 1445, 2413, 3159, 3157, 3974,
	3166, 3972, 4091, 3150, 1934, 3148, 1427, 1427, 1341, 1341,
	3984, 4208, 4000, 2160, 2160, 281, 3094, 3149, 1866, 2163,
	2163, 1427, 1427, 4989, 892, 1427, 4971, 4941, 3096, 4056,
	4007, 4935, 3991, 3993, 3994, 4102, 4103, 1933, 2652, 4008,
	1933, 856, 3095, 4015, 1223, 4873, 2160, 4016, 842, 842,
	4115, 4116, 2163, 4799, 4122, 4078, 4770, 4682, 4287, 4022,
	4279, 4048, 4020, 3995, 736, 4265, 4088, 2652, 4023, 3854,
	3288, 1223, 2917, 2235, 2147, 5188, 4057, 5022, 4703, 3136,
	1638, 1637, 5023, 1631, 1157, 3618, 4014, 2385, 5219, 4068,
	4069, 4063, 2154, 191, 1649, 4049, 3506, 3507, 1931, 1932,
	4052, 5022, 4937, 5161, 1223, 1223, 5023, 2279, 3047, 2278,
	3046, 1796, 4065, 4066, 1648, 2124, 4367, 1795, 1649, 2796,
	4107, 3365, 2831, 1344, 1344, 1181, 2279, 2278, 1865, 4286,
	4800, 1864, 4744, 4528, 4523, 4522, 4363, 4337, 2154, 2154,
	4106, 3996, 3770, 1223, 1223, 3767, 3368, 2023, 2022, 3384,
	2609, 1223, 5204, 4142, 5169, 1340, 1340, 5037, 4975, 4974,
	4973, 1231, 4080, 4905, 4904, 4851, 4081, 2154, 2154, 4773,
	4734, 4674, 1625, 1625, 4668, 1625, 4570, 4550, 4486, 1625,
	4425, 4314, 1625, 4307, 898, 4252, 4158, 1427, 4150, 901,
	3858, 3857, 4227, 3693, 3636, 3369, 3359, 3336, 4175, 3335,
	2154, 3334, 4118, 3333, 3272, 3244, 3243, 4179, 3085, 288,
	288, 288, 2166, 742, 743, 3016, 758, 742, 758, 769,
	1342, 1342, 809, 4111, 3010, 2999, 829, 2998, 4180, 4182,
	2987, 836, 836, 836, 836, 2725, 2596, 2564, 4199, 2270,
	2557, 288, 2556, 2555, 4211, 4205, 2554, 2553, 2465, 2439,
	4167, 4235, 2435, 2434, 2433, 2432, 4172, 1625, 4221, 2431,
	2203, 2202, 975, 1223, 4294, 2201, 2199, 4274, 2137, 288,
	2136, 1346, 1223, 1885, 4232, 4233, 4303, 4258, 1884, 1820,
	4228, 1625, 3108, 4309, 1699, 1698, 1625, 1625, 1625, 1697,
	1696, 1695, 1694, 1693, 1688, 1684, 1682, 1681, 1615, 4251,
	1614, 4226, 4272, 1613, 1494, 1493, 4247, 1492, 1491, 1625,
	3294, 1625, 1490, 1437, 1393, 1392, 1391, 1503, 1390, 1389,
	1388, 4218, 1341, 1387, 3308, 4298, 4295, 3175, 2160, 4260,
	4311, 4123, 1385, 1380, 2163, 4124, 3234, 1379, 4283, 3237,
	4237, 3239, 1378, 4246, 4236, 1503, 4264, 1377, 1223, 1223,
	1376, 1303, 4273, 4315, 1223, 1223, 2166, 2241, 4225, 1223,
	1223, 1119, 1223, 968, 8, 1105, 4879, 1223, 4278, 4465,
	4297, 4464, 4463, 2592, 98, 1690, 930, 92, 1223, 2373,
	4157, 1069, 3679, 4161, 5019, 4163, 4909, 1673, 3285, 4281,
	938, 3285, 4329, 4327, 1223, 5000, 4275, 3695, 4330, 3184,
	2538, 1821, 2540, 3595, 2959, 4963, 4304, 4371, 742, 742,
	4299, 3468, 4841, 4643, 4296, 2799, 288, 4305, 2027, 2418,
	4348, 3549, 94, 1207, 4312, 1253, 4561, 4560, 4313, 4449,
	4144, 3824, 4557, 4556, 2151, 2153, 4349, 1344, 1171, 1506,
	5045, 2252, 5210, 1213, 2266, 2289, 2261, 3000, 2875, 1230,
	2290, 4328, 1227, 4357, 2155, 1346, 4361, 2157, 1229, 1228,
	2156, 4212, 4331, 1346, 2047, 1226, 2150, 1503, 1503, 1340,
	1503, 4285, 2160, 3292, 3356, 4342, 3884, 1346, 2163, 1740,
	1738, 1071, 2154, 2256, 2719, 2783, 3457, 2020, 1625, 1625,
	1187, 1209, 2780, 1368, 1198, 3575, 3554, 3871, 4087, 2631,
	948, 1503, 3503, 4402, 2786, 1359, 1341, 2898, 2891, 2887,
	3646, 3282, 1901, 4657, 1341, 1998, 3293, 4336, 1897, 1471,
	1191, 2717, 2011, 3435, 2641, 3878, 1223, 3598, 1341, 2993,
	5025, 4004, 3366, 2443, 1342, 1320, 1319, 1346, 3600, 1346,
	4420, 4421, 1366, 1318, 5006, 5003, 4387, 2363, 4564, 3819,
	3820, 2244, 4423, 3040, 2729, 3838, 1203, 1609, 4405, 4407,
	2584, 3937, 4438, 4439, 1427, 4429, 3560, 2291, 4432, 4496,
	4263, 1701, 4711, 4475, 1503, 1215, 1427, 1983, 3211, 1427,
	3210, 4505, 4476, 4868, 4508, 2295, 4394, 4398, 1341, 1456,
	1341, 4489, 1454, 4401, 1223, 4403, 4410, 1503, 4472, 4404,
	4472, 4492, 4493, 191, 4399, 4400, 1453, 4411, 1452, 5178,
	3177, 4414, 4441, 2376, 4153, 4152, 4151, 251, 3403, 1922,
	1914, 1344, 248, 4490, 4444, 250, 2154, 249, 3699, 1344,
	4418, 4092, 3604, 4446, 5101, 4177, 3810, 25, 843, 1625,
	1625, 4431, 844, 1344, 4527, 845, 4529, 3050, 2271, 1473,
	4128, 24, 23, 1340, 4440, 22, 21, 121, 44, 20,
	163, 1340, 2292, 2297, 161, 138, 158, 157, 1427, 4506,
	130, 156, 155, 4581, 154, 1340, 153, 4495, 152, 4512,
	1503, 160, 4491, 151, 150, 1625, 4554, 145, 4521, 149,
	4504, 148, 4598, 4507, 4530, 147, 146, 144, 142, 143,
	2655, 137, 141, 1344, 140, 1344, 4548, 4509, 139, 136,
	135, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1342, 134,
	4551, 133, 132, 4549, 131, 129, 1342, 4582, 162, 128,
	127, 1503, 205, 4541, 126, 1340, 125, 1340, 2636, 124,
	1342, 123, 4547, 1223, 1223, 1223, 4540, 122, 2293, 822,
	823, 63, 4587, 4539, 4599, 62, 118, 119, 19, 42,
	4555, 1503, 4566, 4584, 14, 4559, 1223, 67, 68, 1223,
	1223, 4593, 4573, 4602, 18, 13, 4571, 4567, 37, 1223,
	97, 110, 2166, 109, 108, 38, 105, 1223, 1223, 36,
	17, 16, 15, 2797, 103, 4616, 4600, 3709, 102, 4620,
	1342, 2300, 1342, 101, 1503, 4607, 1625, 4622, 35, 33,
	11, 9, 39, 2109, 12, 4613, 4635, 4614, 5, 196,
	195, 1427, 198, 194, 197, 96, 193, 192, 95, 31,
	10, 188, 4789, 4270, 4630, 87, 190, 189, 187, 186,
	185, 88, 85, 1503, 184, 91, 183, 86, 90, 89,
	4676, 1223, 29, 6, 66, 7, 4625, 3707, 3922, 113,
	114, 40, 2298, 4623, 1223, 4624, 4640, 83, 82, 81,
	80, 28, 65, 1223, 27, 1618, 4688, 180, 2166, 4652,
	229, 228, 227, 226, 2893, 225, 224, 223, 1223, 4646,
	2969, 1223, 4663, 4664, 222, 217, 221, 219, 2160, 218,
	220, 3708, 216, 242, 2163, 241, 1361, 1223, 240, 4685,
	1223, 4686, 239, 238, 232, 1675, 231, 1503, 4666, 4714,
	4667, 237, 236, 235, 234, 1427, 233, 230, 245, 76,
	4753, 215, 214, 213, 211, 1625, 1625, 1625, 207, 210,
	1382, 4687, 4684, 212, 4737, 2299, 4738, 209, 4693, 208,
	206, 244, 288, 243, 288, 288, 1346, 1411, 288, 1421,
	77, 178, 179, 75, 177, 176, 4762, 175, 1754, 174,
	1435, 173, 172, 171, 4749, 74, 182, 4733, 829, 181,
	26, 829, 4772, 2, 1769, 4776, 1503, 4788, 1, 1625,
	4780, 4731, 0, 2294, 2160, 0, 4809, 4736, 0, 0,
	2163, 4783, 0, 3821, 836, 1630, 0, 1341, 0, 0,
	3710, 3711, 0, 3712, 4735, 4746, 0, 4472, 4754, 4767,
	4768, 0, 0, 0, 1223, 1223, 0, 0, 288, 0,
	288, 288, 1411, 4765, 288, 288, 3049, 4814, 4792, 4752,
	4774, 1223, 2166, 1421, 1798, 4769, 4764, 0, 4723, 4818,
	0, 4820, 2154, 4796, 0, 4812, 4787, 288, 4810, 1651,
	0, 0, 0, 1427, 3757, 3758, 1427, 3759, 1427, 1427,
	0, 0, 0, 0, 0, 1671, 0, 4806, 0, 0,
	4817, 4811, 1678, 4602, 0, 0, 1223, 4816, 1223, 0,
	1223, 0, 4850, 1336, 0, 4852, 0, 4853, 4854, 0,
	1346, 1703, 0, 4822, 1421, 0, 0, 4863, 288, 288,
	0, 1411, 4861, 1223, 4739, 1346, 0, 0, 4830, 4831,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 829, 0, 288, 288, 0, 0, 0, 4839,
	0, 283, 283, 738, 0, 4833, 1766, 0, 2154, 4891,
	0, 1341, 0, 0, 1340, 0, 4860, 1774, 2160, 0,
	4859, 4472, 975, 0, 2163, 0, 1341, 4890, 4856, 0,
	0, 0, 1346, 1346, 0, 0, 4472, 4883, 4884, 0,
	0, 0, 4725, 4726, 0, 4912, 1223, 0, 0, 0,
	4914, 0, 0, 1346, 0, 0, 1346, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 4927, 4928, 0, 4899,
	1625, 0, 0, 4829, 0, 0, 0, 0, 4745, 1342,
	4747, 0, 4748, 1341, 1341, 1223, 1223, 4945, 4901, 0,
	4947, 0, 0, 4472, 4472, 1223, 4907, 0, 0, 0,
	0, 0, 4925, 288, 1341, 0, 0, 1341, 0, 0,
	0, 4939, 4938, 4792, 4472, 4936, 0, 4472, 4959, 0,
	4960, 0, 0, 4944, 4953, 0, 1344, 288, 0, 4952,
	4956, 0, 0, 4958, 0, 0, 4955, 4957, 0, 0,
	0, 1344, 0, 0, 0, 1223, 1223, 0, 4976, 1223,
	4968, 0, 0, 1625, 1427, 0, 0, 1427, 1340, 4997,
	4972, 0, 0, 4977, 5005, 5008, 0, 0, 0, 0,
	4979, 0, 2154, 1340, 0, 0, 0, 0, 0, 4967,
	4987, 4988, 0, 5016, 0, 0, 5017, 5028, 0, 5021,
	4996, 4995, 2009, 5024, 0, 0, 2014, 0, 1344, 1344,
	0, 0, 0, 0, 5027, 5014, 0, 0, 0, 0,
	5048, 0, 5050, 0, 0, 1223, 1223, 1223, 0, 1344,
	0, 0, 1344, 1342, 0, 0, 0, 0, 0, 0,
	1340, 1340, 5010, 0, 0, 0, 5015, 0, 1342, 5009,
	5033, 0, 0, 5013, 0, 0, 5038, 5041, 0, 0,
	0, 1340, 1223, 5049, 1340, 0, 0, 5082, 0, 0,
	0, 5062, 5063, 5087, 0, 0, 5065, 5064, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2299, 5083, 0, 0,
	5109, 0, 5084, 5110, 0, 1342, 1342, 0, 0, 0,
	0, 5116, 4900, 0, 5122, 0, 0, 5100, 3393, 1223,
	0, 0, 5108, 0, 5098, 0, 1342, 1427, 0, 1342,
	0, 5115, 5131, 4772, 0, 5114, 5118, 0, 5085, 0,
	0, 0, 742, 0, 0, 5124, 5123, 0, 0, 0,
	5149, 5141, 0, 0, 5137, 5138, 5139, 5145, 0, 5143,
	5140, 5128, 0, 288, 0, 288, 0, 0, 0, 288,
	5152, 5005, 5151, 5155, 5008, 5153, 0, 0, 1346, 0,
	1346, 5164, 1651, 1411, 2129, 288, 5163, 288, 2135, 5162,
	0, 5174, 5160, 5166, 0, 288, 0, 758, 5170, 2893,
	2893, 0, 288, 5165, 5180, 0, 5171, 0, 5027, 0,
	5172, 0, 5173, 0, 5175, 0, 0, 0, 2204, 1427,
	0, 0, 0, 0, 0, 5179, 5195, 0, 5196, 1341,
	288, 1341, 0, 0, 5203, 0, 0, 288, 5202, 4472,
	0, 4472, 0, 0, 0, 5206, 0, 5201, 5199, 1223,
	1223, 0, 0, 5214, 0, 0, 5212, 5208, 1223, 1223,
	0, 5205, 5217, 0, 5226, 0, 0, 0, 0, 5228,
	829, 5222, 3432, 3433, 78, 0, 5233, 5230, 5232, 5236,
	5235, 0, 5238, 5237, 3294, 5229, 0, 0, 0, 5231,
	0, 5241, 79, 0, 0, 0, 1427, 5242, 5247, 5243,
	0, 5246, 5250, 5234, 0, 5248, 0, 5245, 836, 84,
	836, 0, 0, 0, 3294, 0, 1223, 5253, 0, 0,
	836, 836, 5257, 5250, 5259, 5261, 5244, 0, 5254, 0,
	0, 0, 0, 0, 0, 0, 5256, 3506, 3507, 0,
	3524, 3525, 3526, 2289, 1344, 0, 1344, 0, 2290, 0,
	93, 0, 5223, 5224, 0, 0, 0, 0, 0, 3561,
	4353, 0, 2289, 0, 0, 0, 0, 2290, 0, 0,
	0, 0, 0, 0, 0, 0, 1340, 5097, 1340, 0,
	5099, 2893, 2893, 2893, 2893, 3910, 0, 0, 0, 0,
	0, 969, 3590, 0, 0, 0, 0, 0, 3908, 0,
	0, 0, 0, 0, 51, 0, 115, 3603, 3901, 0,
	5258, 0, 99, 112, 0, 0, 3521, 0, 0, 0,
	2485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3624, 290, 0, 0, 0, 2499, 2501,
	4282, 1342, 0, 1342, 0, 0, 0, 0, 0, 0,
	3910, 0, 2505, 0, 3530, 3531, 3532, 3533, 0, 0,
	0, 0, 0, 3908, 2513, 2291, 2516, 2517, 2518, 0,
	0, 288, 0, 3901, 100, 288, 0, 0, 0, 0,
	0, 0, 0, 2295, 2291, 0, 0, 0, 0, 0,
	0, 0, 0, 3912, 0, 0, 0, 0, 0, 0,
	0, 0, 2295, 0, 0, 0, 0, 4332, 0, 0,
	3903, 0, 0, 3512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3902, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 1397, 0, 1397, 1397, 3912, 0,
	2292, 2297, 5225, 0, 288, 0, 288, 0, 0, 0,
	742, 0, 288, 0, 0, 3903, 0, 0, 0, 2292,
	2297, 3528, 3911, 0, 829, 0, 0, 0, 975, 0,
	3902, 0, 0, 0, 0, 1931, 1932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 1962,
	1411, 288, 0, 3522, 0, 0, 0, 1934, 104, 0,
	1498, 0, 0, 0, 0, 829, 1608, 0, 0, 1185,
	0, 0, 288, 0, 0, 0, 2293, 3911, 0, 0,
	2537, 0, 0, 0, 1987, 288, 288, 0, 288, 0,
	288, 0, 288, 1933, 288, 2293, 0, 0, 0, 0,
	3603, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 199, 107, 3899, 2574,
	111, 0, 2575, 0, 2576, 2287, 0, 0, 0, 2300,
	0, 0, 0, 0, 1984, 0, 284, 0, 0, 288,
	288, 288, 288, 0, 0, 0, 0, 252, 2300, 0,
	0, 0, 0, 0, 0, 970, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 1755, 1756, 809, 3963,
	0, 0, 829, 0, 0, 0, 0, 3909, 3904, 3905,
	3906, 3907, 0, 0, 0, 2285, 0, 0, 0, 0,
	2298, 1956, 1957, 1958, 1959, 0, 0, 0, 254, 0,
	0, 1939, 0, 0, 3658, 0, 0, 0, 0, 2298,
	0, 0, 0, 0, 0, 3523, 0, 3913, 4517, 0,
	0, 0, 2723, 0, 0, 164, 0, 0, 0, 2286,
	0, 0, 0, 0, 0, 0, 0, 3938, 2009, 0,
	1501, 204, 3909, 3904, 3905, 3906, 3907, 0, 3659, 253,
	0, 0, 1961, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 2731, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 1876, 0, 200, 1948, 1949,
	0, 4569, 3913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 4583, 0, 0, 0, 0,
	1630, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 3981, 4606, 0,
	0, 2294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3997, 2893, 2893, 742, 0, 0,
	2294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 3518, 3519, 3520, 0, 288, 0,
	742, 3517, 3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 1421, 0, 0, 0, 3960, 3961,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2893, 2893, 2893, 2893, 2893,
	2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893, 2893,
	2893, 2893, 2893, 2893, 2893, 0, 2893, 0, 0, 0,
	1960, 4680, 288, 1421, 0, 0, 758, 0, 758, 0,
	0, 0, 3015, 0, 0, 0, 0, 0, 288, 4090,
	0, 288, 0, 1955, 0, 288, 0, 288, 0, 0,
	3176, 0, 1411, 0, 288, 288, 0, 1421, 1421, 3031,
	0, 0, 0, 0, 288, 0, 0, 0, 4024, 4025,
	4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035,
	4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 0, 4047,
	1931, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 1986, 1931, 1932, 836, 836,
	0, 0, 836, 836, 1962, 0, 0, 2130, 0, 1608,
	0, 3074, 1934, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 0, 288, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 1987,
	0, 0, 0, 0, 0, 0, 1931, 1932, 1933, 0,
	288, 0, 1397, 0, 0, 1987, 0, 0, 0, 1608,
	3322, 829, 0, 0, 1933, 0, 1178, 0, 0, 0,
	1962, 0, 3329, 0, 0, 1953, 0, 0, 1934, 0,
	0, 0, 0, 0, 1950, 0, 1951, 1947, 288, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	288, 288, 3172, 1651, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 288, 3232,
	3958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1185, 1185, 1185, 0, 0, 1939, 0, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 1651, 0, 0, 288,
	0, 288, 1939, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3277, 0,
	3957, 0, 1587, 0, 0, 0, 0, 0, 3074, 0,
	742, 0, 0, 0, 0, 0, 0, 1961, 1963, 3172,
	975, 3074, 1956, 1957, 1958, 1959, 0, 4897, 0, 0,
	0, 0, 1939, 1961, 1963, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4911, 0, 0, 1948,
	1949, 0, 288, 1411, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1421, 288, 1954, 0, 1411, 0,
	1411, 0, 1411, 1961, 1963, 4943, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 288,
	288, 288, 288, 1411, 0, 0, 1411, 0, 288, 0,
	0, 0, 1954, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 2441, 0, 0, 0, 2448, 0,
	0, 0, 0, 1984, 288, 0, 0, 0, 0, 0,
	2461, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2473, 0, 2473, 0,
	0, 0, 0, 1416, 2480, 0, 0, 0, 1630, 1630,
	0, 0, 0, 0, 0, 0, 4409, 0, 0, 0,
	0, 5034, 0, 1984, 0, 0, 0, 5036, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 4427, 0, 0,
	2448, 0, 0, 2509, 1955, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 0, 2529, 0, 1596, 0, 0, 1610,
	1416, 1960, 0, 0, 0, 1962, 0, 0, 2545, 0,
	2547, 0, 2549, 1934, 2551, 0, 2552, 0, 0, 0,
	1986, 0, 0, 1981, 1955, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 2581, 2582, 2583, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 1416, 1416, 3506, 3507, 0, 3524, 3525,
	3526, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 1630, 1630, 1630, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 0, 1951, 1947, 0,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 3521, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 3506, 3507, 0, 3524, 3525, 3526,
	0, 0, 0, 288, 0, 0, 0, 1951, 1947, 0,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 288,
	0, 0, 0, 0, 742, 0, 0, 1501, 1972, 742,
	0, 1982, 742, 1587, 0, 742, 742, 0, 1961, 1963,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 4641, 0, 0,
	0, 288, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 3506, 3507, 3521, 3524, 3525, 3526, 0, 0, 0,
	0, 3512, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3969, 0, 0, 1954, 0, 0,
	4641, 0, 288, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2893, 0, 0, 0, 0,
	3789, 0, 0, 0, 2966, 0, 0, 0, 0, 2655,
	3074, 3074, 288, 0, 3666, 2129, 0, 0, 0, 1185,
	3521, 3074, 0, 2135, 0, 0, 0, 1587, 3814, 0,
	0, 0, 3074, 2135, 0, 3074, 2135, 0, 0, 2135,
	3512, 3843, 3666, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 288, 288, 2129, 0, 288, 0,
	0, 3522, 0, 0, 0, 0, 0, 2893, 4649, 0,
	0, 0, 0, 0, 0, 2129, 0, 288, 0, 3740,
	0, 3740, 0, 2655, 3529, 0, 0, 1411, 0, 0,
	3017, 0, 3891, 1397, 0, 0, 0, 1397, 0, 1397,
	0, 0, 0, 0, 3915, 0, 1960, 0, 3528, 3074,
	0, 3074, 0, 3771, 3074, 2129, 2461, 3512, 3074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 2129, 0, 0, 829, 0, 0, 0, 0,
	4696, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	3522, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 3506, 3507, 1411, 3524, 3525,
	3526, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 3528, 0, 0, 3968, 0,
	0, 1986, 288, 0, 3815, 0, 0, 0, 3817, 3074,
	0, 0, 288, 0, 0, 288, 0, 1587, 3846, 0,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3523, 0, 288, 0, 3522, 0, 0,
	3277, 1984, 1610, 1411, 0, 288, 0, 0, 3074, 0,
	742, 0, 0, 0, 3521, 0, 0, 3074, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 2893, 0, 0,
	0, 0, 2448, 2448, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 3928, 0, 0, 0, 0,
	0, 0, 0, 0, 2893, 0, 0, 0, 1984, 0,
	0, 0, 3523, 0, 0, 3934, 0, 0, 0, 1651,
	0, 0, 0, 1411, 288, 2087, 288, 0, 0, 2893,
	4838, 3255, 1411, 0, 1630, 1630, 0, 0, 0, 0,
	2461, 3512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 3518, 3519, 3520, 0, 0, 4867, 0, 3517,
	3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0, 3523,
	0, 0, 0, 0, 0, 3327, 0, 0, 0, 0,
	0, 0, 4889, 0, 0, 0, 0, 0, 0, 3528,
	0, 0, 0, 0, 3338, 0, 3341, 0, 0, 0,
	0, 4002, 0, 0, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 0, 1630, 0, 0, 0, 0,
	0, 3522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3518, 3519, 3520, 0, 0, 0, 1967, 3517, 3515,
	3516, 3508, 3509, 3510, 3511, 3513, 3514, 0, 0, 0,
	0, 3375, 1608, 3377, 1608, 0, 0, 0, 1587, 0,
	3383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	1170, 0, 1984, 0, 3412, 0, 0, 2455, 3518, 3519,
	3520, 0, 0, 742, 742, 3517, 3515, 3516, 3508, 3509,
	3510, 3511, 3513, 3514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4219, 4220,
	0, 0, 1931, 1932, 0, 4222, 0, 0, 4223, 0,
	0, 1587, 0, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 3523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1587, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4310, 1587, 0,
	0, 0, 2499, 4316, 4317, 0, 0, 0, 0, 0,
	0, 0, 0, 4191, 0, 0, 4193, 4194, 0, 0,
	0, 0, 0, 3740, 0, 0, 0, 2585, 0, 0,
	0, 0, 0, 0, 0, 0, 3421, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 3172, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 2129, 1939, 288,
	0, 0, 0, 758, 758, 1421, 0, 0, 0, 0,
	963, 0, 3518, 3519, 3520, 0, 0, 0, 288, 3517,
	3515, 3516, 3508, 3509, 3510, 3511, 3513, 3514, 0, 288,
	3277, 0, 0, 3277, 2135, 0, 0, 0, 78, 288,
	966, 965, 0, 0, 0, 0, 3846, 0, 0, 1961,
	1963, 0, 288, 0, 0, 0, 79, 288, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 1587, 1948, 1949, 0, 0, 0,
	0, 3074, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 3172, 0, 0, 975, 3074, 0, 0, 0, 3506,
	3507, 0, 3524, 3525, 3526, 0, 0, 0, 1954, 0,
	0, 0, 0, 3613, 93, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 4416, 4417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 1397, 969, 0, 0, 1608, 1608,
	0, 0, 0, 1967, 0, 0, 0, 0, 51, 0,
	115, 0, 1587, 0, 0, 0, 99, 112, 3521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 3662, 0, 0, 0, 0, 0,
	1967, 0, 0, 4372, 0, 0, 1967, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3717, 3719, 100, 0,
	2461, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 1416, 0, 0,
	1955, 0, 1651, 0, 288, 3512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2499, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	1416, 0, 0, 0, 1967, 0, 1421, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1421,
	0, 288, 1421, 1967, 0, 0, 0, 0, 1967, 0,
	0, 0, 1986, 3074, 3074, 0, 3666, 0, 0, 3740,
	3074, 0, 0, 3528, 0, 0, 0, 0, 4474, 0,
	4474, 1651, 0, 0, 0, 0, 0, 4615, 0, 4617,
	4618, 4619, 3074, 4621, 2135, 0, 0, 0, 3666, 0,
	1651, 1651, 288, 2129, 0, 1430, 0, 0, 0, 0,
	0, 0, 0, 0, 3839, 3522, 2129, 2448, 288, 2129,
	0, 288, 104, 1967, 3740, 0, 0, 0, 0, 1967,
	0, 0, 1170, 1170, 1170, 1596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3074, 0, 3074, 288, 0,
	0, 0, 0, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 1610, 0, 0, 0, 1600, 0, 0,
	199, 107, 4669, 1616, 111, 0, 0, 3074, 3074, 0,
	0, 0, 0, 3277, 3277, 0, 1984, 0, 0, 0,
	3666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 288, 1653, 0, 1659, 0, 1665, 0, 970,
	0, 78, 288, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3940, 0, 1608, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 254, 0, 0, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 0, 0, 3953, 0, 3523, 0, 0,
	0, 0, 0, 0, 1630, 1967, 1757, 0, 1762, 164,
	0, 0, 0, 0, 0, 0, 0, 93, 1967, 0,
	0, 0, 1776, 0, 1781, 204, 0, 0, 0, 0,
	0, 4766, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 969, 1610,
	0, 200, 0, 0, 2897, 0, 0, 0, 0, 0,
	1416, 0, 0, 115, 0, 0, 1630, 0, 1967, 99,
	112, 0, 0, 0, 1967, 0, 964, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 1852, 0, 0, 3074,
	2135, 0, 2135, 0, 0, 3846, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4712, 1610, 4712, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 3518, 3519, 3520, 0,
	0, 829, 0, 3517, 3515, 3516, 3508, 3509, 3510, 3511,
	3513, 3514, 3740, 1651, 0, 1651, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1587, 0, 0,
	0, 0, 0, 0, 0, 2129, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 0, 0, 0,
	1587, 0, 0, 0, 3846, 0, 0, 4474, 0, 0,
	1651, 0, 0, 0, 3074, 1587, 0, 0, 0, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 4803, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 2990, 0, 0, 0, 0,
	0, 0, 0, 288, 288, 0, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 1185, 0, 0, 2499, 4002, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3740, 4858, 0, 0, 0, 1630, 0,
	0, 3846, 0, 0, 2081, 2081, 2081, 0, 0, 0,
	0, 0, 0, 199, 107, 0, 0, 111, 0, 0,
	0, 4474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4474, 0, 0, 0,
	0, 2461, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 970, 0, 0, 0, 0, 159, 0, 0,
	2461, 0, 288, 0, 0, 0, 0, 0, 1587, 0,
	0, 4259, 0, 0, 0, 758, 0, 0, 0, 0,
	0, 4269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4474, 4474, 254, 0, 0, 0, 2461,
	0, 0, 0, 0, 4288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4474, 0, 288, 4474, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 2135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 204, 1651,
	0, 0, 0, 0, 0, 0, 253, 0, 1587, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 1421, 4334, 0,
	247, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 4985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4712, 0, 203,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 1610, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 3074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4002, 0, 0, 1587, 0, 1967, 1587, 0,
	1610, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 1651, 0, 0, 0,
	0, 0, 2455, 0, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967, 1967,
	0, 0, 0, 0, 0, 1967, 0, 1967, 1967, 1967,
	1967, 0, 78, 0, 0, 1587, 0, 0, 0, 2897,
	2897, 0, 0, 0, 0, 0, 0, 0, 0, 3846,
	79, 0, 1587, 0, 1967, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 4494, 0, 0, 0, 0, 3074,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 4474,
	2461, 4474, 0, 0, 1651, 1967, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 93, 1967, 0, 0, 1967, 0,
	0, 1967, 78, 0, 1967, 0, 0, 0, 0, 969,
	1967, 1967, 1967, 1967, 1967, 1967, 1967, 0, 0, 0,
	79, 0, 51, 0, 115, 3074, 0, 0, 0, 0,
	99, 112, 0, 0, 0, 969, 0, 84, 0, 0,
	0, 0, 3172, 0, 0, 0, 0, 1587, 51, 0,
	115, 0, 0, 0, 2461, 3074, 99, 112, 0, 0,
	0, 2561, 0, 0, 4594, 0, 0, 0, 0, 3172,
	0, 0, 0, 0, 0, 0, 1967, 0, 93, 3527,
	0, 2897, 2897, 2897, 2897, 0, 0, 1967, 0, 1967,
	0, 1610, 100, 0, 1967, 0, 0, 0, 0, 2590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 2630, 0, 2634, 0, 0,
	99, 112, 0, 0, 2648, 0, 0, 0, 0, 0,
	0, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 0, 2698, 0,
	2700, 2701, 2702, 2703, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 2778, 0, 0, 0, 4698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 2808, 2811,
	2814, 2817, 0, 0, 2823, 2824, 2825, 2826, 2827, 2828,
	2829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2889, 0, 2900, 2902, 2907, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 107, 0, 0, 111, 2461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 107, 0, 0, 111, 252, 287, 287, 287, 0,
	0, 0, 0, 970, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 899, 970,
	0, 1587, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 0, 0, 1587,
	0, 0, 0, 0, 0, 4828, 1608, 0, 0, 0,
	0, 0, 254, 164, 199, 107, 0, 0, 111, 0,
	0, 0, 1967, 1967, 0, 1967, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 164,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 246, 970, 0, 204, 0, 0, 159, 0,
	0, 247, 0, 253, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 1416, 0, 0, 0, 247, 0, 0,
	1751, 200, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 1749, 0, 0, 0,
	0, 1587, 1587, 164, 1587, 0, 0, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 204,
	0, 0, 0, 1343, 1967, 0, 1981, 253, 0, 0,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 0, 246, 1987, 0, 0, 0, 2455, 0, 0,
	0, 247, 1933, 0, 0, 200, 0, 0, 4946, 0,
	1185, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 1967, 1967, 0, 2897, 2897, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3527,
	3527, 0, 0, 1967, 1967, 0, 0, 0, 1587, 0,
	0, 0, 0, 1967, 0, 0, 0, 3235, 3236, 0,
	3238, 0, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 1587, 0, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 4999, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2897, 2897, 2897, 2897, 2897,
	2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,
	2897, 2897, 2897, 2897, 2897, 0, 2897, 3527, 3527, 3527,
	3527, 1972, 5043, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 0, 1587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 1967, 0, 0, 0, 0, 1948, 1949, 0,
	3202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 3357,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	1954, 0, 0, 0, 3192, 3190, 0, 0, 0, 0,
	0, 3194, 3196, 3186, 0, 0, 0, 0, 1931, 1932,
	0, 0, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 1416, 0, 0, 1980,
	1934, 0, 0, 0, 3212, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 1989, 0, 0, 0, 1587, 0,
	1969, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 1984, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1587, 0, 0,
	0, 0, 0, 0, 0, 0, 2455, 0, 0, 3415,
	3416, 0, 0, 0, 0, 3422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 1416, 3436, 3437, 0, 0, 0, 0,
	2778, 1967, 1967, 0, 0, 1185, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	1973, 0, 0, 0, 1939, 3446, 0, 0, 3188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3204,
	0, 3460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 3472, 0,
	0, 0, 0, 3203, 3193, 3191, 3195, 3197, 3187, 3189,
	3205, 3207, 0, 0, 0, 1961, 1963, 0, 0, 0,
	1587, 3199, 3201, 3209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3213, 0, 287,
	0, 287, 287, 0, 0, 287, 0, 0, 0, 0,
	1971, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 2907,
	2907, 2907, 3481, 0, 0, 0, 3482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 0, 0, 0,
	0, 0, 1967, 1967, 3565, 0, 1967, 3527, 3527, 1967,
	0, 0, 0, 1967, 0, 287, 0, 287, 287, 0,
	1967, 287, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 899, 2868, 2869, 2870, 2871, 2864,
	2865, 2866, 2867, 0, 0, 3206, 1967, 1967, 1967, 1967,
	1967, 0, 0, 0, 0, 0, 1967, 0, 1967, 0,
	0, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527,
	3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527, 3527,
	3527, 0, 0, 1960, 3527, 287, 287, 1967, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	0, 0, 1170, 0, 0, 0, 1955, 0, 1967, 0,
	0, 287, 287, 0, 1170, 0, 3214, 0, 2844, 2845,
	2846, 2847, 0, 0, 0, 3198, 3200, 3208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2856, 2857, 2858, 2859, 2852, 2853, 2854, 2855,
	2860, 2861, 2862, 2863, 0, 3698, 0, 0, 0, 0,
	170, 0, 0, 0, 1967, 1255, 0, 0, 1986, 78,
	0, 48, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 0, 0, 0, 0, 79, 0, 0,
	1185, 165, 0, 0, 0, 0, 0, 0, 0, 1610,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 3754, 3755, 1967, 0, 69, 0, 0, 0, 0,
	287, 0, 50, 0, 167, 2840, 2841, 2842, 2843, 2848,
	2849, 2850, 2851, 0, 0, 0, 0, 1967, 1967, 0,
	0, 0, 0, 49, 287, 93, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 52, 70, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 59, 1931, 1932, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 115, 0, 0, 0, 0, 0, 99, 112, 0,
	0, 1962, 0, 0, 0, 71, 0, 1416, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 0, 1987, 0, 0, 0,
	54, 0, 0, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1967, 1967, 0,
	0, 0, 1967, 1967, 0, 0, 1967, 1967, 0, 0,
	0, 1967, 0, 0, 0, 1967, 0, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 2897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 0, 0, 0,
	0, 0, 0, 1956, 1957, 1958, 1959, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	2103, 0, 1343, 2648, 0, 0, 287, 0, 0, 3955,
	3956, 0, 0, 3959, 0, 0, 0, 3962, 0, 0,
	0, 0, 287, 2103, 287, 0, 3966, 2897, 0, 0,
	0, 0, 899, 0, 0, 3973, 0, 0, 0, 899,
	3565, 0, 0, 0, 1961, 1963, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 3986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 55, 0, 0, 287, 4009, 4010, 0, 4011, 4012,
	4013, 0, 0, 0, 0, 1967, 0, 58, 0, 0,
	0, 0, 61, 0, 0, 0, 4019, 0, 0, 0,
	4021, 0, 73, 1954, 0, 0, 0, 0, 0, 0,
	60, 199, 107, 0, 0, 111, 0, 0, 0, 56,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 4050, 4051, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	64, 4062, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4071, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1967, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 1967, 3527, 2897, 0, 0,
	164, 0, 0, 1967, 0, 0, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 1960, 0, 253, 0, 0, 0, 0, 4127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 3527, 2897, 1955, 0, 0, 247, 0,
	0, 0, 200, 0, 0, 0, 4145, 0, 0, 0,
	1967, 0, 0, 0, 0, 0, 0, 0, 1967, 2897,
	0, 0, 0, 0, 0, 0, 1967, 203, 0, 0,
	3, 0, 0, 0, 0, 0, 0, 1967, 287, 1967,
	4176, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4200, 4201,
	0, 0, 1931, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 287, 0, 0, 1962, 0, 0, 287,
	0, 0, 0, 0, 1934, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 287, 0, 3527, 0, 0, 0, 287,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 1953, 0, 1967, 3527, 0, 0, 1967, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 3527, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 4306, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 899, 287, 0, 287, 3414, 287, 0, 287,
	0, 287, 0, 0, 0, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 287, 287,
	0, 0, 0, 4350, 4351, 0, 0, 0, 0, 4355,
	4356, 0, 0, 1347, 4359, 4360, 0, 0, 0, 0,
	0, 0, 4364, 0, 1347, 0, 0, 0, 0, 1961,
	1963, 0, 0, 4368, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 0, 0, 4373,
	0, 0, 0, 0, 0, 1948, 1949, 1968, 1962, 0,
	0, 0, 0, 0, 1347, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 1967, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 1953, 0, 0, 0, 1347, 0, 0,
	0, 0, 1950, 0, 0, 0, 865, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 0,
	0, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 877, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 1343,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 1960, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 4518,
	1955, 1972, 0, 0, 1982, 886, 0, 0, 0, 0,
	287, 1961, 1963, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 287,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	1954, 874, 0, 0, 0, 287, 0, 0, 287, 0,
	0, 0, 287, 0, 287, 0, 0, 0, 804, 0,
	0, 287, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 4636, 4637,
	4638, 1984, 0, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 0,
	287, 2648, 0, 885, 4647, 4648, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 4656, 4659, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 1347,
	0, 0, 1955, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 287, 287, 0,
	0, 0, 0, 0, 0, 867, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 2167, 0, 0, 0, 4713,
	0, 0, 0, 0, 0, 0, 0, 0, 4721, 0,
	0, 0, 0, 0, 0, 899, 0, 871, 0, 0,
	0, 0, 0, 4729, 1986, 0, 1170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4740, 0, 0, 4742, 287, 0, 899, 0,
	0, 0, 0, 0, 0, 287, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 1931, 1932, 0, 1964, 1965,
	1966, 1975, 1976, 1977, 0, 0, 0, 0, 1347, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 1968, 1962,
	287, 1945, 1946, 1952, 1974, 1951, 1947, 1934, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 1981, 866, 287,
	0, 287, 2774, 0, 879, 0, 2775, 0, 0, 0,
	0, 0, 287, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 805, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 287, 287,
	0, 0, 0, 0, 0, 287, 0, 0, 883, 884,
	287, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4866, 0, 0, 0, 4870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 1956, 1957, 1958, 1959, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 1347, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 1982, 0, 0, 0, 0,
	0, 0, 1961, 1963, 0, 0, 0, 0, 0, 0,
	0, 4940, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 1979, 0, 0, 0, 0, 0, 0, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 2648, 0, 0, 0, 0, 0, 0, 0, 0,
	4659, 1954, 0, 0, 0, 1347, 0, 1347, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 1170, 0, 1347, 0, 1347, 1347, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5061, 5061, 5061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 5086, 0, 0,
	0, 0, 0, 1955, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2167, 2167, 1347,
	0, 1973, 117, 0, 0, 0, 2103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 5061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 287, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 1144, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 287, 287, 0, 0, 287, 0, 4378, 0, 0,
	0, 0, 2103, 0, 5061, 5218, 1347, 1330, 0, 0,
	0, 0, 0, 1347, 287, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 287, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2167, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 287, 0, 0, 0, 0, 1978, 0,
	1979, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 1347,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 289, 289, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 1347, 0, 1347, 0, 0, 0, 0, 0, 1347,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1347, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 1960,
	0, 0, 1934, 0, 0, 1343, 1343, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1973, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 3971, 1961, 1963, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 117, 0, 117, 1978, 117, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 1165, 117, 117,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 117, 0, 0, 287,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 287,
	117, 0, 117, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 1347, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 2007,
	0, 1343, 0, 2013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 2103, 0, 2103, 0, 0,
	0, 0, 3484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 789, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 287, 0, 0, 287, 0,
	0, 0, 772, 0, 2101, 0, 2104, 773, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 289, 289, 0, 0, 289, 0, 0, 774, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 775,
	0, 0, 0, 1347, 0, 1347, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 776, 0, 0, 0, 0, 0, 0, 0, 287,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 1507, 289, 289, 1347,
	0, 289, 289, 0, 777, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 289, 0, 0, 0, 0, 778,
	0, 0, 0, 1347, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 779, 789, 0, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 772, 289, 289, 0, 0, 773,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 1347,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 794,
	1507, 289, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1931, 1932,
	774, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0,
	0, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1962, 0, 0, 0, 0, 2167, 0, 0,
	1934, 287, 293, 776, 0, 0, 0, 0, 791, 0,
	1981, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 1507, 1987, 0, 0,
	0, 0, 0, 1347, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 2167, 2167, 0, 777, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 2167, 2167, 287, 0, 0, 0, 0, 0,
	0, 0, 891, 0, 289, 801, 0, 782, 0, 0,
	0, 0, 0, 0, 779, 0, 0, 0, 780, 0,
	0, 0, 0, 0, 2103, 2167, 0, 0, 0, 0,
	891, 0, 0, 0, 0, 804, 0, 802, 0, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 1347, 1956, 1957, 1958, 1959, 0, 0,
	0, 794, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 1165, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 1347, 784,
	287, 287, 0, 0, 799, 800, 0, 797, 0, 0,
	0, 0, 0, 792, 0, 1972, 785, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 0,
	791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 1979, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 786, 0, 793, 0, 0, 0, 0, 0, 1970,
	0, 0, 787, 0, 0, 0, 0, 117, 2103, 0,
	0, 0, 0, 0, 1954, 0, 0, 788, 0, 0,
	0, 0, 796, 2103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 782,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 802,
	0, 783, 0, 0, 0, 0, 289, 0, 0, 0,
	2103, 2103, 0, 0, 1969, 0, 1144, 1507, 0, 1144,
	1144, 0, 289, 289, 289, 1984, 0, 0, 0, 0,
	0, 2103, 289, 287, 2103, 0, 0, 1347, 1347, 289,
	1347, 0, 0, 803, 1347, 0, 0, 1347, 0, 0,
	0, 784, 0, 0, 0, 0, 799, 800, 0, 797,
	0, 0, 0, 0, 0, 792, 0, 289, 785, 0,
	0, 0, 0, 0, 289, 2716, 0, 2167, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 1955, 0, 0, 2007,
	0, 0, 0, 786, 0, 793, 0, 287, 0, 0,
	0, 0, 1347, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 1347, 0, 0, 788,
	0, 1507, 0, 0, 796, 0, 1347, 0, 0, 0,
	0, 1347, 1347, 1347, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	790, 0, 0, 0, 1347, 0, 1347, 287, 0, 0,
	0, 0, 1347, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	1507, 1507, 289, 0, 0, 0, 0, 0, 0, 0,
	1347, 1507, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 1347, 1347, 0, 1347, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 2103, 0, 2103, 0,
	0, 0, 0, 1347, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 289,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 1347, 289, 1347, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	1507, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	1507, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 289, 0, 0, 289, 0,
	0, 0, 1347, 0, 0, 0, 1507, 0, 1507, 1507,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 289, 0, 289, 0, 289, 0, 289,
	0, 289, 0, 0, 1347, 1347, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 117, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 289, 289, 289, 289,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 117, 0, 0, 117, 0,
	0, 1626, 0, 0, 117, 0, 1347, 1347, 1347, 1347,
	1347, 1347, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2167, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 1347,
	1224, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 0, 0, 0, 1975, 1976, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 0, 2167, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 1347, 0, 0, 0, 0, 0, 1933, 289,
	2716, 0, 1507, 0, 0, 0, 0, 0, 0, 1953,
	1347, 1347, 1347, 0, 0, 0, 0, 0, 1950, 0,
	289, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	1962, 1347, 0, 0, 1347, 0, 0, 0, 1934, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 289, 0,
	0, 0, 289, 0, 289, 1987, 1956, 1957, 1958, 1959,
	0, 289, 289, 0, 1933, 0, 1939, 0, 0, 0,
	0, 289, 0, 0, 0, 1953, 0, 2167, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1507, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	289, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 1970, 1956, 1957, 1958, 1959, 0, 289, 0, 0,
	0, 0, 1939, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 289, 1507, 1347, 1347, 0,
	0, 1504, 0, 1972, 0, 0, 1982, 289, 289, 0,
	0, 0, 1507, 1961, 1963, 0, 891, 0, 1347, 0,
	0, 1347, 0, 891, 0, 1347, 0, 0, 0, 0,
	1978, 0, 1979, 0, 0, 1347, 0, 0, 0, 1948,
	1949, 0, 0, 0, 0, 289, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 289, 0, 289, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 1980, 0, 0, 1507, 1504, 1507, 0, 1955, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 1969, 0, 1507, 0, 0, 117, 117, 0,
	117, 0, 0, 1984, 0, 0, 1973, 0, 0, 289,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 117, 0, 117, 0, 0, 0, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 289, 289, 289,
	0, 0, 0, 0, 1955, 289, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 1971, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 289,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 1626, 1626, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 1347, 1330, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0,
	0, 0, 1626, 0, 1626, 0, 1626, 0, 3480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1626, 0, 1626, 1626, 1626, 1931, 1932, 0, 1964, 1965,
	1966, 1975, 1976, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 891, 0, 1968, 1962,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 1627,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 1507,
	0, 117, 1627, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 1330,
	1330, 1956, 1957, 1958, 1959, 1507, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 289, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 1982, 0, 0, 1627, 1504,
	0, 0, 1961, 1963, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 1979, 0, 0, 0, 0, 0, 0, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 0, 0, 0,
	0, 289, 289, 0, 0, 289, 0, 0, 0, 0,
	0, 1954, 289, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 1507, 1968, 1962, 0, 0, 0, 0, 0,
	1980, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 1984, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 1507, 0, 0, 0, 0, 0, 1950, 0,
	0, 289, 0, 0, 0, 0, 1507, 0, 1507, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 289,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	1960, 0, 289, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 1955, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 1973, 0, 1330, 1507, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 1972, 0, 1505,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 289, 1507, 289, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 1626, 0, 0, 0,
	289, 1971, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3479, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 1507, 0, 0, 0,
	0, 0, 891, 1505, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 1969, 1330, 0, 0,
	0, 0, 0, 0, 0, 1330, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 1626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	1626, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1627, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 0, 0, 4986, 0,
	1627, 0, 1627, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 1627, 1627, 0, 0, 0, 0, 0, 0,
	1507, 1507, 0, 1507, 0, 0, 1627, 1507, 0, 0,
	1507, 0, 0, 0, 0, 0, 289, 0, 1627, 0,
	1627, 1627, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 289, 0, 0, 0, 117, 289,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 1507, 1507, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1507,
	0, 0, 0, 289, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 2716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 0, 1507, 1507, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 1968, 1962, 0, 0,
	0, 919, 0, 0, 0, 1934, 1507, 1507, 1505, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 1507,
	0, 0, 921, 0, 0, 0, 0, 922, 289, 0,
	0, 0, 1987, 0, 1505, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 923, 0,
	940, 0, 0, 0, 117, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 1507, 0, 0, 289, 924, 0, 289, 0,
	0, 925, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 289, 0, 0, 0, 0,
	926, 0, 117, 0, 0, 0, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 947, 0, 1626, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 1507, 1507, 0,
	1626, 0, 1626, 0, 0, 0, 1504, 0, 0, 920,
	0, 0, 0, 891, 1626, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 1626, 0, 289,
	1972, 0, 927, 1982, 0, 0, 928, 0, 1507, 289,
	1961, 1963, 0, 1507, 0, 0, 0, 0, 951, 0,
	0, 0, 0, 804, 0, 0, 0, 1978, 0, 1979,
	0, 0, 0, 0, 0, 0, 1948, 1949, 0, 1507,
	1507, 1507, 1507, 1507, 1507, 1507, 0, 0, 1626, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 1507,
	1626, 0, 1626, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 1505, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 945, 0,
	0, 0, 0, 1504, 0, 0, 1504, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 1507, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 1960, 0,
	1504, 0, 0, 0, 0, 0, 1627, 0, 1627, 932,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 941,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 1973,
	0, 803, 0, 1507, 1507, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 1507, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 935, 954, 0, 953, 0,
	0, 0, 936, 0, 0, 1504, 0, 0, 0, 0,
	289, 289, 0, 0, 0, 0, 0, 937, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 955, 1971,
	952, 0, 0, 0, 0, 0, 891, 805, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 3478, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 1962, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 289,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 1626, 1626, 0, 1626, 1507, 0,
	0, 1626, 0, 0, 1626, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 0, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 1626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1507, 0, 1982, 0, 0, 0, 0, 0, 0,
	1961, 1963, 0, 1626, 0, 0, 0, 0, 1626, 1626,
	1626, 0, 0, 1505, 0, 0, 0, 1978, 0, 1979,
	0, 0, 0, 0, 0, 0, 1948, 1949, 0, 0,
	0, 1626, 0, 1626, 0, 0, 0, 289, 0, 1504,
	0, 0, 0, 0, 1970, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 1505, 0, 0, 0, 0, 0, 1504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	1504, 0, 1504, 0, 1968, 1962, 0, 0, 1960, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	1626, 1626, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 1955, 0, 1504, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 1973,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 1504,
	1627, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 1627, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 1626, 1626, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 2775, 1627, 0, 1961, 1963,
	0, 0, 1504, 0, 0, 0, 0, 1626, 1627, 0,
	1627, 0, 0, 0, 0, 1978, 0, 1979, 0, 0,
	0, 0, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 1626, 1626, 1626, 1626, 1626, 1626, 1626,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 1954, 0, 0,
	0, 1505, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1969, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1981, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 1504,
	0, 0, 1933, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 1626, 1626, 1626,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 4982,
	0, 1972, 0, 0, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	1979, 0, 0, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1627, 1627, 0, 1627, 0, 0, 0, 1627,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 1626, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1627, 0, 0, 0, 0, 1627, 1627, 1627, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 1960,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 1627,
	0, 1627, 1981, 0, 0, 1626, 0, 1505, 0, 0,
	0, 0, 1955, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 1953,
	1973, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 1968, 1962, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 1953, 0, 0, 0, 1939, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 1505, 1505, 0,
	1505, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 1972, 1627, 1627,
	1982, 0, 4885, 0, 0, 0, 0, 1961, 1963, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 0, 0, 1939,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	1972, 0, 0, 1982, 0, 0, 0, 0, 0, 0,
	1961, 1963, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 1978, 0, 1979,
	0, 0, 0, 0, 0, 0, 1948, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 1984, 0, 1627,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1955, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 1627, 0, 0, 0,
	0, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 1986, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 0, 0, 4837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 1627, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 4836, 0, 0, 0, 0, 1505, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1502, 0,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 1508, 305, 306, 1509, 1510, 1511, 0,
	1512, 684, 1513, 1514, 1515, 307, 1516, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 1517, 689, 319, 320, 321, 322,
	323, 324, 1518, 1519, 0, 325, 690, 691, 692, 1520,
	326, 327, 693, 1521, 1588, 1522, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1523, 337, 338, 339, 336,
	340, 1524, 341, 1627, 342, 343, 344, 345, 346, 347,
	1525, 348, 349, 350, 1287, 351, 352, 353, 1526, 1527,
	1529, 1528, 1530, 1531, 1532, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 1533, 364, 360, 362, 1534,
	365, 363, 366, 1535, 367, 368, 369, 1536, 1537, 370,
	371, 372, 1538, 373, 374, 375, 1539, 376, 377, 378,
	1540, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 1541, 294,
	1542, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 1543, 397, 398, 399, 1544, 400, 1545,
	1288, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 1546, 413, 702, 1547, 703,
	414, 1548, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 1290, 421, 422, 1549, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 1550, 1289,
	510, 431, 707, 708, 1551, 709, 1552, 432, 433, 1291,
	710, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 1553, 444, 446, 445,
	1554, 447, 711, 1294, 448, 449, 1295, 1555, 450, 451,
	452, 453, 454, 455, 458, 1556, 1557, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 1558, 296,
	1298, 504, 505, 506, 507, 1559, 712, 508, 713, 511,
	512, 1560, 0, 513, 0, 514, 1561, 1562, 516, 517,
	518, 1563, 1564, 519, 520, 714, 1299, 521, 1300, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 1565, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 1566, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 1567, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 1568, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 1569, 602, 603,
	601, 604, 605, 606, 1570, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 1571, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 1572, 637, 638, 0, 633, 624, 1573, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 1574, 647,
	725, 726, 727, 728, 1575, 657, 1576, 648, 649, 650,
	651, 729, 652, 730, 1577, 653, 654, 655, 656, 0,
	658, 659, 1578, 1579, 660, 661, 663, 665, 666, 662,
	664, 667, 1580, 668, 1581, 0, 669, 670, 671, 731,
	732, 733, 1582, 673, 672, 674, 675, 676, 734, 677,
	678, 1583, 1584, 1585, 1586, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 0, 0, 0, 0, 0, 0, 0,
	2944, 0, 0, 0, 0, 0, 0, 0, 2945, 297,
	298, 300, 299, 301, 302, 303, 304, 1508, 305, 306,
	1509, 1510, 1511, 0, 1512, 684, 1513, 1514, 1515, 307,
	1516, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 1517, 689,
	319, 320, 321, 322, 323, 324, 1518, 1519, 0, 325,
	690, 691, 692, 1520, 326, 327, 693, 1521, 1588, 1522,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1523,
	337, 338, 339, 336, 340, 1524, 341, 0, 342, 343,
	344, 345, 346, 347, 1525, 348, 349, 350, 1287, 351,
	352, 353, 1526, 1527, 1529, 1528, 1530, 1531, 1532, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 1533,
	364, 360, 362, 1534, 365, 363, 366, 1535, 367, 368,
	369, 1536, 1537, 370, 371, 372, 1538, 373, 374, 375,
	1539, 376, 377, 378, 1540, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 1541, 294, 1542, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 1543, 397, 398,
	399, 1544, 400, 1545, 1288, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 1546,
	413, 702, 1547, 703, 414, 1548, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 1290, 421, 422, 1549,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 1550, 1289, 510, 431, 707, 708, 1551, 709,
	1552, 432, 433, 1291, 710, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	1553, 444, 446, 445, 1554, 447, 711, 1294, 448, 449,
	1295, 1555, 450, 451, 452, 453, 454, 455, 458, 1556,
	1557, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 1558, 296, 1298, 504, 505, 506, 507, 1559,
	712, 508, 713, 511, 512, 1560, 0, 513, 0, 514,
	1561, 1562, 516, 517, 518, 1563, 1564, 519, 520, 714,
	1299, 521, 1300, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 1565, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 1566, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	1567, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 1568, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 1569, 602, 603, 601, 604, 605, 606, 1570, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 1571, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 1572, 637, 638, 0,
	633, 624, 1573, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 1574, 647, 725, 726, 727, 728, 1575, 657,
	1576, 648, 649, 650, 651, 729, 652, 730, 1577, 653,
	654, 655, 656, 0, 658, 659, 1578, 1579, 660, 661,
	663, 665, 666, 662, 664, 667, 1580, 668, 1581, 0,
	669, 670, 671, 731, 732, 733, 1582, 673, 672, 674,
	675, 676, 734, 677, 678, 1583, 1584, 1585, 1586, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 0, 3980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3982, 297, 298, 300, 299, 301, 302, 303, 304, 1508,
	305, 306, 1509, 1510, 1511, 0, 1512, 684, 1513, 1514,
	1515, 307, 1516, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	1517, 689, 319, 320, 321, 322, 323, 324, 1518, 1519,
	0, 325, 690, 691, 692, 1520, 326, 327, 693, 1521,
	1588, 1522, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 1523, 337, 338, 339, 336, 340, 1524, 341, 0,
	342, 343, 344, 345, 346, 347, 1525, 348, 349, 350,
	1287, 351, 352, 353, 1526, 1527, 1529, 1528, 1530, 1531,
	1532, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 1533, 364, 360, 362, 1534, 365, 363, 366, 1535,
	367, 368, 369, 1536, 1537, 370, 371, 372, 1538, 373,
	374, 375, 1539, 376, 377, 378, 1540, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 1541, 294, 1542, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 1543,
	397, 398, 399, 1544, 400, 1545, 1288, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 1546, 413, 702, 1547, 703, 414, 1548, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 1290, 421,
	422, 1549, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 1550, 1289, 510, 431, 707, 708,
	1551, 709, 1552, 432, 433, 1291, 710, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 1553, 444, 446, 445, 1554, 447, 711, 1294,
	448, 449, 1295, 1555, 450, 451, 452, 453, 454, 455,
	458, 1556, 1557, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1558, 296, 1298, 504, 505, 506,
	507, 1559, 712, 508, 713, 511, 512, 1560, 0, 513,
	0, 514, 1561, 1562, 516, 517, 518, 1563, 1564, 519,
	520, 714, 1299, 521, 1300, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 1565, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 1566, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 1567, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 1568, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 1569, 602, 603, 601, 604, 605, 606,
	1570, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 1571, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 1572, 637,
	638, 0, 633, 624, 1573, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 1574, 647, 725, 726, 727, 728,
	1575, 657, 1576, 648, 649, 650, 651, 729, 652, 730,
	1577, 653, 654, 655, 656, 0, 658, 659, 1578, 1579,
	660, 661, 663, 665, 666, 662, 664, 667, 1580, 668,
	1581, 0, 669, 670, 671, 731, 732, 733, 1582, 673,
	672, 674, 675, 676, 734, 677, 678, 1583, 1584, 1585,
	1586, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4408, 297, 298, 300,
	299, 301, 302, 303, 304, 1508, 305, 306, 1509, 1510,
	1511, 0, 1512, 684, 1513, 1514, 1515, 307, 1516, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 1517, 689, 319, 320,
	321, 322, 323, 324, 1518, 1519, 0, 325, 690, 691,
	692, 1520, 326, 327, 693, 1521, 1588, 1522, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1523, 337, 338,
	339, 336, 340, 1524, 341, 0, 342, 343, 344, 345,
	346, 347, 1525, 348, 349, 350, 1287, 351, 352, 353,
	1526, 1527, 1529, 1528, 1530, 1531, 1532, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 1533, 364, 360,
	362, 1534, 365, 363, 366, 1535, 367, 368, 369, 1536,
	1537, 370, 371, 372, 1538, 373, 374, 375, 1539, 376,
	377, 378, 1540, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	1541, 294, 1542, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 1543, 397, 398, 399, 1544,
	400, 1545, 1288, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 1546, 413, 702,
	1547, 703, 414, 1548, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 1290, 421, 422, 1549, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	1550, 1289, 510, 431, 707, 708, 1551, 709, 1552, 432,
	433, 1291, 710, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 1553, 444,
	446, 445, 1554, 447, 711, 1294, 448, 449, 1295, 1555,
	450, 451, 452, 453, 454, 455, 458, 1556, 1557, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1558, 296, 1298, 504, 505, 506, 507, 1559, 712, 508,
	713, 511, 512, 1560, 0, 513, 0, 514, 1561, 1562,
	516, 517, 518, 1563, 1564, 519, 520, 714, 1299, 521,
	1300, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 1565, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	1566, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 1567, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 1568, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 1569,
	602, 603, 601, 604, 605, 606, 1570, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 1571, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 1572, 637, 638, 0, 633, 624,
	1573, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	1574, 647, 725, 726, 727, 728, 1575, 657, 1576, 648,
	649, 650, 651, 729, 652, 730, 1577, 653, 654, 655,
	656, 0, 658, 659, 1578, 1579, 660, 661, 663, 665,
	666, 662, 664, 667, 1580, 668, 1581, 0, 669, 670,
	671, 731, 732, 733, 1582, 673, 672, 674, 675, 676,
	734, 677, 678, 1583, 1584, 1585, 1586, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4406, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4642, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4503, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4335, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3998, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3812, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2798, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 1499, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2419, 297, 298, 300, 299, 301, 302, 303,
	304, 1508, 305, 306, 1509, 1510, 1511, 0, 1512, 684,
	1513, 1514, 1515, 307, 1516, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 1517, 689, 319, 320, 321, 322, 323, 324,
	1518, 1519, 0, 325, 690, 691, 692, 1520, 326, 327,
	693, 1521, 1588, 1522, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 1523, 337, 338, 339, 336, 340, 1524,
	341, 0, 342, 343, 344, 345, 346, 347, 1525, 348,
	349, 350, 1287, 351, 352, 353, 1526, 1527, 1529, 1528,
	1530, 1531, 1532, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 1533, 364, 360, 362, 1534, 365, 363,
	366, 1535, 367, 368, 369, 1536, 1537, 370, 371, 372,
	1538, 373, 374, 375, 1539, 376, 377, 378, 1540, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 1541, 294, 1542, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 1543, 397, 398, 399, 1544, 400, 1545, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 1546, 413, 702, 1547, 703, 414, 1548,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 1549, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 1550, 1289, 510, 431,
	707, 708, 1551, 709, 1552, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 1553, 444, 446, 445, 1554, 447,
	711, 1294, 448, 449, 1295, 1555, 450, 451, 452, 453,
	454, 455, 458, 1556, 1557, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1558, 296, 1298, 504,
	505, 506, 507, 1559, 712, 508, 713, 511, 512, 1560,
	0, 513, 0, 514, 1561, 1562, 516, 517, 518, 1563,
	1564, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	1565, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 1566, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 1567, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 1568,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 1569, 602, 603, 601, 604,
	605, 606, 1570, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	1571, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	1572, 637, 638, 0, 633, 624, 1573, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 1574, 647, 725, 726,
	727, 728, 1575, 657, 1576, 648, 649, 650, 651, 729,
	652, 730, 1577, 653, 654, 655, 656, 0, 658, 659,
	1578, 1579, 660, 661, 663, 665, 666, 662, 664, 667,
	1580, 668, 1581, 0, 669, 670, 671, 731, 732, 733,
	1582, 673, 672, 674, 675, 676, 734, 677, 678, 1583,
	1584, 1585, 1586, 679, 680, 735, 681, 682, 683, 1502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 1508, 305, 306, 1509, 1510, 1511,
	0, 1512, 684, 1513, 1514, 1515, 307, 1516, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 1517, 689, 319, 320, 321,
	322, 323, 324, 1518, 1519, 0, 325, 690, 691, 692,
	1520, 326, 327, 693, 1521, 1588, 1522, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1523, 337, 338, 339,
	336, 340, 1524, 341, 0, 342, 343, 344, 345, 346,
	347, 1525, 348, 349, 350, 1287, 351, 352, 353, 1526,
	1527, 1529, 1528, 1530, 1531, 1532, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 1533, 364, 360, 362,
	1534, 365, 363, 366, 1535, 367, 368, 369, 1536, 1537,
	370, 371, 372, 1538, 373, 374, 375, 1539, 376, 377,
	378, 1540, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 1541,
	294, 1542, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 1543, 397, 398, 399, 1544, 400,
	1545, 1288, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1546, 413, 702, 1547,
	703, 414, 1548, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 1290, 421, 422, 1549, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 1550,
	1289, 510, 431, 707, 708, 1551, 709, 1552, 432, 433,
	1291, 710, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 1553, 444, 446,
	445, 1554, 447, 711, 1294, 448, 449, 1295, 1555, 450,
	451, 452, 453, 454, 455, 458, 1556, 1557, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1558,
	296, 1298, 504, 505, 506, 507, 1559, 712, 508, 713,
	511, 512, 1560, 0, 513, 0, 514, 1561, 1562, 516,
	517, 518, 1563, 1564, 519, 520, 714, 1299, 521, 1300,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 1565, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 1566,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 1567, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 1568, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 1569, 602,
	603, 601, 604, 605, 606, 1570, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 1571, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 1572, 637, 638, 0, 633, 624, 1573,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 1574,
	647, 725, 726, 727, 728, 1575, 657, 1576, 648, 649,
	650, 651, 729, 652, 730, 1577, 653, 654, 655, 656,
	0, 658, 659, 1578, 1579, 660, 661, 663, 665, 666,
	662, 664, 667, 1580, 668, 1581, 0, 669, 670, 671,
	731, 732, 733, 1582, 673, 672, 674, 675, 676, 734,
	677, 678, 1583, 1584, 1585, 1586, 679, 680, 735, 681,
	682, 683, 2773, 0, 1222, 1194, 1195, 1196, 1192, 1193,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2770,
	305, 306, 0, 0, 0, 0, 0, 1246, 1210, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 1259, 0, 317, 1266, 318, 1265,
	0, 1276, 319, 320, 321, 322, 323, 324, 1212, 1245,
	1177, 325, 1306, 1307, 692, 0, 326, 327, 1252, 0,
	1233, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237,
	1241, 354, 355, 356, 357, 358, 1269, 359, 361, 1263,
	1262, 1182, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 2771, 0, 370, 1254, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1188,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1277, 1278, 392, 1201, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1261, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	1274, 1275, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1284, 0, 1211, 414, 0, 415, 416,
	417, 418, 419, 420, 1247, 1248, 1251, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 1289, 510, 431, 1256, 1257,
	0, 1217, 0, 432, 433, 1291, 1249, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 1285, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 1240, 1239, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1179, 296, 1298, 504, 505, 506,
	507, 1202, 1250, 508, 1264, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 1279, 522, 523, 1189, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 1280,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 1260, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 1190, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	1243, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 1258, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 1305,
	627, 628, 629, 630, 1281, 634, 635, 636, 0, 637,
	638, 1176, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 1270, 1271, 1272, 1273,
	0, 657, 0, 648, 649, 650, 651, 1282, 652, 1283,
	1200, 653, 654, 655, 656, 0, 658, 659, 0, 1183,
	660, 661, 663, 665, 666, 662, 664, 667, 1244, 668,
	0, 0, 669, 670, 671, 731, 1267, 1304, 2769, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1175, 0, 0, 0, 0, 0, 0, 1173, 1174,
	2772, 0, 0, 0, 0, 0, 0, 0, 1206, 2768,
	0, 1166, 1204, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 1177,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	1182, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 1179, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 252, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	1176, 633, 624, 254, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 1183, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 1747, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 246,
	679, 680, 735, 681, 682, 683, 1180, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 1173, 1174, 1222,
	1194, 1195, 1196, 1192, 1193, 1205, 0, 2012, 2010, 0,
	0, 1204, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1246, 1210, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 1259,
	0, 317, 1266, 318, 1265, 0, 1276, 319, 320, 321,
	322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 1269, 359, 361, 1263, 1262, 1182, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1254, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1188, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 1201,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1261,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 1274, 1275, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	1211, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 1256, 1257, 0, 1217, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1179,
	296, 1298, 504, 505, 506, 507, 1202, 1250, 508, 1264,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 1189, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 1260, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 1190, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 252, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	1258, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 1305, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 1176, 633, 624, 254,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 1270, 1271, 1272, 1273, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 1200, 653, 654, 655, 656,
	0, 658, 659, 0, 1183, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	1747, 1267, 1304, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 246, 679, 680, 735, 681,
	682, 683, 1180, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 0, 1173, 1174, 1222, 1194, 1195, 1196, 1192,
	1193, 1205, 0, 2012, 3434, 0, 0, 1204, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1246, 1210,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 1259, 0, 317, 1266, 318,
	1265, 0, 1276, 319, 320, 321, 322, 323, 324, 1212,
	1245, 1177, 325, 1306, 1307, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 1269, 359, 361,
	1263, 1262, 1182, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1254, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1188, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 1201, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1261, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 1274, 1275, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 1211, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 1256,
	1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 1179, 296, 1298, 504, 505,
	506, 507, 1202, 1250, 508, 1264, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 1189,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 1260, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 1190, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 252, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 1258, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	1305, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 1176, 633, 624, 254, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 1270, 1271, 1272,
	1273, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 1200, 653, 654, 655, 656, 0, 658, 659, 0,
	1183, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 1747, 1267, 1304, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 246, 679, 680, 735, 681, 682, 683, 1180, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 1173,
	1174, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 2012,
	2010, 0, 0, 1204, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 1259, 0, 317, 1266, 318, 1265, 2903, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 2908, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 2904, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 1298, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 2905,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 658, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1180, 0, 0, 0, 2818, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 1182, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1188, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1179, 296, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 1189, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 1176, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 1183, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 1173, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 2816, 0, 2815, 1204, 1222,
	1194, 1195, 1196, 1192, 1193, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1246, 1210, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 1259,
	0, 317, 1266, 318, 1265, 0, 1276, 319, 320, 321,
	322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 1269, 359, 361, 1263, 1262, 1182, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1254, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1188, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 1201,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1261,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 1274, 1275, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	1211, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 1256, 1257, 0, 1217, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1179,
	296, 1298, 504, 505, 506, 507, 1202, 1250, 508, 1264,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 1189, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 1260, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 1190, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	1258, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 1305, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 1176, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 1270, 1271, 1272, 1273, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 1200, 653, 654, 655, 656,
	0, 658, 659, 0, 1183, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	731, 1267, 1304, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 0, 0,
	0, 0, 0, 1173, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 2813, 0, 2812, 1204, 1222, 1194,
	1195, 1196, 1192, 1193, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1246, 1210, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 685, 1259, 0,
	317, 1266, 318, 1265, 0, 1276, 319, 320, 321, 322,
	323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0,
	326, 327, 1252, 0, 1233, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 353, 1236, 1234,
	1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357, 358,
	1269, 359, 361, 1263, 1262, 1182, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1254, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1188, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1277, 1278, 392, 1201, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1261, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 1274, 1275, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1284, 0, 1211,
	414, 0, 415, 416, 417, 418, 419, 420, 1247, 1248,
	1251, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 1289,
	510, 431, 1256, 1257, 0, 1217, 0, 432, 433, 1291,
	1249, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 1285, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 1240, 1239, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 1179, 296,
	1298, 504, 505, 506, 507, 1202, 1250, 508, 1264, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 1299, 521, 1300, 1279,
	522, 523, 1189, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 1280, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	1260, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 1190, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 1243, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 1258,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 1305, 627, 628, 629, 630, 1281, 634,
	635, 636, 0, 637, 638, 1176, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	1270, 1271, 1272, 1273, 0, 657, 0, 648, 649, 650,
	651, 1282, 652, 1283, 1200, 653, 654, 655, 656, 0,
	658, 659, 0, 1183, 660, 661, 663, 665, 666, 662,
	664, 667, 1244, 668, 0, 0, 669, 670, 671, 731,
	1267, 1304, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1175, 0, 0, 0, 0,
	0, 0, 1173, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 2810, 0, 2809, 1204, 1222, 1194, 1195,
	1196, 1192, 1193, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1246, 1210, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 1259, 0, 317,
	1266, 318, 1265, 0, 1276, 319, 320, 321, 322, 323,
	324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 1269,
	359, 361, 1263, 1262, 1182, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1254,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1188, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 1201, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1261, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 1274, 1275, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 1211, 414,
	0, 415, 416, 417, 418, 419, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 1179, 296, 1298,
	504, 505, 506, 507, 1202, 1250, 508, 1264, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 1189, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 1260,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	1190, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 1258, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 1305, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 1176, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 1270,
	1271, 1272, 1273, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 1200, 653, 654, 655, 656, 0, 658,
	659, 0, 1183, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 1267,
	1304, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1175, 0, 0, 0, 0, 0,
	0, 1173, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 2807, 0, 1848, 1204, 1222, 1194, 1195, 1196,
	1192, 1193, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 359,
	361, 1263, 1262, 1182, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1188, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 419, 420, 1247, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1179, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	1189, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 1176, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 1183, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1847,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 1180,
	0, 0, 0, 1169, 0, 1222, 1194, 1195, 1196, 1192,
	1193, 1205, 0, 1175, 0, 0, 0, 0, 0, 0,
	1173, 1174, 297, 298, 300, 299, 301, 302, 303, 304,
	1206, 305, 306, 0, 1204, 0, 0, 0, 1246, 1210,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 1259, 0, 317, 1266, 318,
	1265, 0, 1276, 319, 320, 321, 322, 323, 324, 1212,
	1245, 1177, 325, 1306, 1307, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 1269, 359, 361,
	1263, 1262, 1182, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1254, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1188, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 1201, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1261, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 1274, 1275, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 1211, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 1256,
	1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 1179, 296, 1298, 504, 505,
	506, 507, 1202, 1250, 508, 1264, 511, 512, 0, 0,
	513, 0, 514, 1184, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 1189,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 1260, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 1190, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 1258, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	1305, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 1176, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 1270, 1271, 1272,
	1273, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 1200, 653, 654, 655, 656, 0, 658, 659, 0,
	1183, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 731, 1267, 1304, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 1180, 0,
	0, 0, 0, 0, 1222, 1194, 1195, 1196, 1192, 1193,
	1205, 0, 1175, 0, 0, 0, 0, 0, 0, 1173,
	1174, 297, 298, 300, 299, 301, 302, 303, 304, 1206,
	305, 306, 0, 1204, 0, 0, 0, 1246, 1210, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 1259, 0, 317, 1266, 318, 1265,
	0, 1276, 319, 320, 321, 322, 323, 324, 1212, 1245,
	1177, 325, 1306, 1307, 692, 0, 326, 327, 1252, 0,
	1233, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 5011, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237,
	1241, 354, 355, 356, 357, 358, 1269, 359, 361, 1263,
	1262, 1182, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1254, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1188,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1277, 1278, 392, 1201, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1261, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	1274, 1275, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1284, 0, 1211, 414, 0, 415, 416,
	417, 418, 419, 420, 1247, 1248, 1251, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 1289, 510, 431, 1256, 1257,
	0, 1217, 0, 432, 433, 1291, 1249, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 1285, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 1240, 1239, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1179, 296, 1298, 504, 505, 506,
	507, 1202, 1250, 508, 1264, 511, 512, 0, 0, 513,
	0, 514, 1184, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 1279, 522, 523, 1189, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 1280,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 1260, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 1190, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	1243, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 1258, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 1305,
	627, 628, 629, 630, 1281, 634, 635, 636, 0, 637,
	638, 1176, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 1270, 1271, 1272, 1273,
	0, 657, 0, 648, 649, 650, 651, 1282, 652, 1283,
	1200, 653, 654, 655, 656, 0, 658, 659, 0, 1183,
	660, 661, 663, 665, 666, 662, 664, 667, 1244, 668,
	0, 0, 669, 670, 671, 731, 1267, 1304, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1180, 0, 0,
	0, 0, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	0, 1175, 0, 0, 0, 0, 0, 0, 1173, 1174,
	297, 298, 300, 299, 301, 302, 303, 304, 1206, 305,
	306, 0, 1204, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 1177,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	1182, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 2650,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 1179, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 2649, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	1176, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 1183, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 1180, 0, 0, 0,
	0, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0,
	1175, 0, 0, 0, 0, 0, 0, 1173, 1174, 297,
	298, 300, 299, 301, 302, 303, 304, 1206, 305, 306,
	0, 1204, 0, 0, 0, 1246, 1210, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 1259, 0, 317, 1266, 318, 1265, 0, 1276,
	319, 320, 321, 322, 323, 324, 1212, 1245, 1177, 325,
	1306, 1307, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 4732, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 1269, 359, 361, 1263, 1262, 1182,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1254, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1188, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1277,
	1278, 392, 1201, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1261, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 1274, 1275,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 1211, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 1256, 1257, 0, 1217,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 1179, 296, 1298, 504, 505, 506, 507, 1202,
	1250, 508, 1264, 511, 512, 0, 0, 513, 0, 514,
	1184, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 1189, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 1260, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 1190, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 1258, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 1305, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 1176,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 1270, 1271, 1272, 1273, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 1200, 653,
	654, 655, 656, 0, 658, 659, 0, 1183, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 731, 1267, 1304, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 1180, 0, 0, 0, 0,
	0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175,
	0, 0, 0, 0, 0, 0, 1173, 1174, 297, 298,
	300, 299, 301, 302, 303, 304, 1206, 305, 306, 0,
	1204, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 1259, 0, 317, 1266, 318, 1265, 0, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 1298, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 1184,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 658, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1180, 0, 0, 0, 0, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 1182, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1188, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1179, 4300, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 1189, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 1176, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 1183, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 1173, 1174, 2082, 1222, 1194, 1195,
	1196, 1192, 1193, 1205, 1206, 0, 0, 0, 1204, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1246, 1210, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 1259, 0, 317,
	1266, 318, 1265, 0, 1276, 319, 320, 321, 322, 323,
	324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 1269,
	359, 361, 1263, 1262, 1182, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1254,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1188, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 1201, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1261, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 1274, 1275, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 1211, 414,
	0, 415, 416, 417, 418, 419, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 1179, 296, 1298,
	504, 505, 506, 507, 1202, 1250, 508, 1264, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 1189, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 1260,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	1190, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 1258, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 1305, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 1176, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 1270,
	1271, 1272, 1273, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 1200, 653, 654, 655, 656, 0, 658,
	659, 0, 1183, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 1267,
	1304, 3976, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	1180, 0, 0, 0, 0, 0, 1222, 1194, 1195, 1196,
	1192, 1193, 1205, 0, 1175, 0, 0, 0, 0, 0,
	0, 1173, 1174, 297, 298, 300, 299, 301, 302, 303,
	304, 1206, 305, 306, 0, 1204, 0, 0, 0, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 359,
	361, 1263, 1262, 1182, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1188, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 419, 420, 1247, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1179, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	1189, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 1176, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 1183, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 1180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 0, 0,
	1173, 1174, 2082, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	1206, 0, 0, 0, 1204, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 1177,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	1182, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 2908, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 1179, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	1176, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 1183, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 1180, 0, 0, 0,
	0, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0,
	1175, 0, 0, 0, 0, 0, 0, 1173, 1174, 297,
	298, 300, 299, 301, 302, 303, 304, 1206, 305, 306,
	0, 1204, 0, 0, 0, 1246, 1210, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 1259, 0, 317, 1266, 318, 1265, 0, 1276,
	319, 320, 321, 322, 323, 324, 1212, 1245, 1177, 325,
	1306, 1307, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 1269, 359, 361, 1263, 1262, 1182,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1254, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1188, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1277,
	1278, 392, 1201, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1261, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 1274, 1275,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 1211, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 1256, 1257, 0, 1217,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 1179, 296, 1298, 504, 505, 506, 507, 1202,
	1250, 508, 1264, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 1189, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 1260, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 1190, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 1258, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 1305, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 1176,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 1270, 1271, 1272, 1273, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 1200, 653,
	654, 655, 656, 0, 658, 659, 0, 1183, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 731, 1267, 1304, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 0, 0, 1173, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 2010, 0, 2913,
	1204, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 1259, 0, 317, 1266, 318, 1265, 0, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 1298, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 658, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1180, 0, 0, 0, 2911, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 1182, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1188, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1179, 296, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 1189, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 1176, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 1183, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 1180, 0, 0, 0, 2899, 0, 1222,
	1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0,
	0, 0, 0, 0, 1173, 1174, 297, 298, 300, 299,
	301, 302, 303, 304, 1206, 305, 306, 0, 1204, 0,
	0, 0, 1246, 1210, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 1259,
	0, 317, 1266, 318, 1265, 0, 1276, 319, 320, 321,
	322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 1269, 359, 361, 1263, 1262, 1182, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1254, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1188, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 1201,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1261,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 1274, 1275, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	1211, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 1256, 1257, 0, 1217, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1179,
	296, 1298, 504, 505, 506, 507, 1202, 1250, 508, 1264,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 1189, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 1260, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 1190, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	1258, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 1305, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 1176, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 1270, 1271, 1272, 1273, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 1200, 653, 654, 655, 656,
	0, 658, 659, 0, 1183, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	731, 1267, 1304, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1180, 0, 0, 0, 2888, 0, 1222, 1194,
	1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0,
	0, 0, 0, 1173, 1174, 297, 298, 300, 299, 301,
	302, 303, 304, 1206, 305, 306, 0, 1204, 0, 0,
	0, 1246, 1210, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 685, 1259, 0,
	317, 1266, 318, 1265, 0, 1276, 319, 320, 321, 322,
	323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0,
	326, 327, 1252, 0, 1233, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 353, 1236, 1234,
	1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357, 358,
	1269, 359, 361, 1263, 1262, 1182, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1254, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1188, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1277, 1278, 392, 1201, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1261, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 1274, 1275, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1284, 0, 1211,
	414, 0, 415, 416, 417, 418, 419, 420, 1247, 1248,
	1251, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 1289,
	510, 431, 1256, 1257, 0, 1217, 0, 432, 433, 1291,
	1249, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 1285, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 1240, 1239, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 1179, 296,
	1298, 504, 505, 506, 507, 1202, 1250, 508, 1264, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 1299, 521, 1300, 1279,
	522, 523, 1189, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 1280, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	1260, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 1190, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 1243, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 1258,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 1305, 627, 628, 629, 630, 1281, 634,
	635, 636, 0, 637, 638, 1176, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	1270, 1271, 1272, 1273, 0, 657, 0, 648, 649, 650,
	651, 1282, 652, 1283, 1200, 653, 654, 655, 656, 0,
	658, 659, 0, 1183, 660, 661, 663, 665, 666, 662,
	664, 667, 1244, 668, 0, 0, 669, 670, 671, 731,
	1267, 1304, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 1180, 0, 0, 0, 2886, 0, 2877, 2884, 1195,
	1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0, 0,
	0, 0, 1173, 1174, 297, 298, 300, 299, 301, 302,
	303, 304, 1206, 305, 306, 0, 1204, 0, 0, 0,
	1246, 1210, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 1259, 0, 317,
	1266, 318, 1265, 0, 1276, 319, 320, 321, 322, 323,
	324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 1269,
	2880, 361, 1263, 1262, 1182, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1254,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1188, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 1201, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1261, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 1274, 1275, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 1211, 414,
	0, 415, 416, 417, 418, 2881, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 2882, 468, 2879,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 1179, 296, 1298,
	504, 505, 506, 507, 1202, 1250, 508, 1264, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 1189, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 1260,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	1190, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 2883, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 1258, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 1305, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 1176, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 1270,
	1271, 1272, 1273, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 1200, 653, 654, 655, 656, 0, 658,
	659, 0, 1183, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 1267,
	1304, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 0, 679, 680, 735, 681, 2878, 683,
	1180, 0, 0, 0, 2874, 0, 2877, 2884, 1195, 1196,
	1192, 1193, 1205, 0, 1175, 0, 0, 0, 0, 0,
	0, 1173, 1174, 297, 298, 300, 299, 301, 302, 303,
	304, 1206, 305, 306, 0, 1204, 0, 0, 0, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 2880,
	361, 1263, 1262, 1182, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1188, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 2881, 420, 1247, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 2882, 468, 2879, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1179, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	1189, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 2883, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 1176, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 1183, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 2878, 683, 1180,
	0, 0, 0, 0, 0, 1222, 1194, 1195, 1196, 1192,
	1193, 1205, 0, 1175, 0, 0, 0, 0, 0, 0,
	1173, 1174, 297, 298, 300, 299, 301, 302, 303, 304,
	1206, 305, 306, 0, 1204, 0, 0, 0, 1246, 1210,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 1259, 0, 317, 1266, 318,
	1265, 0, 1276, 319, 320, 321, 322, 323, 324, 1212,
	1245, 1177, 325, 1306, 1307, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 1269, 359, 361,
	1263, 1262, 1182, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1254, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1188, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 1201, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1261, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 1274, 1275, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 1211, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 1256,
	1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 1179, 296, 1298, 504, 505,
	506, 507, 1202, 1250, 508, 1264, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 1189,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 1260, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 1190, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 1258, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	1305, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 1176, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 1270, 1271, 1272,
	1273, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 1200, 653, 654, 655, 656, 0, 658, 659, 0,
	1183, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 731, 1267, 1304, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1175, 0, 0, 0, 0, 0, 0, 1173,
	1174, 0, 0, 0, 0, 0, 0, 2018, 0, 1206,
	0, 0, 0, 1204, 1222, 1194, 1195, 1196, 1192, 1193,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2629,
	305, 306, 0, 0, 0, 0, 0, 1246, 1210, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 1259, 0, 317, 1266, 318, 1265,
	0, 1276, 319, 320, 321, 322, 323, 324, 1212, 1245,
	1177, 325, 1306, 1307, 692, 0, 326, 327, 1252, 0,
	1233, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237,
	1241, 354, 355, 356, 357, 358, 1269, 359, 361, 1263,
	1262, 1182, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1254, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1188,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1277, 1278, 392, 1201, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1261, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	1274, 1275, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1284, 0, 1211, 414, 0, 415, 416,
	417, 418, 419, 420, 1247, 1248, 1251, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 1289, 510, 431, 1256, 1257,
	0, 1217, 0, 432, 433, 1291, 1249, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 1285, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 1240, 1239, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1179, 296, 1298, 504, 505, 506,
	507, 1202, 1250, 508, 1264, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 1279, 522, 523, 1189, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 1280,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 1260, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 1190, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	1243, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 1258, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 1305,
	627, 628, 629, 630, 1281, 634, 635, 636, 0, 637,
	638, 1176, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 1270, 1271, 1272, 1273,
	0, 657, 0, 648, 649, 650, 651, 1282, 652, 1283,
	1200, 653, 654, 655, 656, 0, 658, 659, 0, 1183,
	660, 661, 663, 665, 666, 662, 664, 667, 1244, 668,
	0, 0, 669, 670, 671, 731, 1267, 1304, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1180, 0, 0,
	0, 2591, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	0, 1175, 0, 0, 0, 0, 0, 0, 1173, 1174,
	297, 298, 300, 299, 301, 302, 303, 304, 1206, 305,
	306, 0, 1204, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 1177,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	1182, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 1179, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	1176, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 1183, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 1180, 0, 0, 0,
	2562, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0,
	1175, 0, 0, 0, 0, 0, 0, 1173, 1174, 297,
	298, 300, 299, 301, 302, 303, 304, 1206, 305, 306,
	0, 1204, 0, 0, 0, 1246, 1210, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 1259, 0, 317, 1266, 318, 1265, 0, 1276,
	319, 320, 321, 322, 323, 324, 1212, 1245, 1177, 325,
	1306, 1307, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 1269, 359, 361, 1263, 1262, 1182,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1254, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1188, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1277,
	1278, 392, 1201, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1261, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 1274, 1275,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 1211, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 1256, 1257, 0, 1217,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 1179, 296, 1298, 504, 505, 506, 507, 1202,
	1250, 508, 1264, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 1189, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 1260, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 1190, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 1258, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 1305, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 1176,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 1270, 1271, 1272, 1273, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 1200, 653,
	654, 655, 656, 0, 658, 659, 0, 1183, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 731, 1267, 1304, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 1180, 0, 0, 0, 1853,
	0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175,
	0, 0, 0, 0, 0, 0, 1173, 1174, 297, 298,
	300, 299, 301, 302, 303, 304, 1206, 305, 306, 0,
	1204, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 1259, 0, 317, 1266, 318, 1265, 0, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 1298, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 658, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1180, 0, 0, 0, 1782, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 1182, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1188, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1179, 296, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 1189, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 1176, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 1183, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 1180, 0, 0, 0, 1777, 0, 1222,
	1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0,
	0, 0, 0, 0, 1173, 1174, 297, 298, 300, 299,
	301, 302, 303, 304, 1206, 305, 306, 0, 1204, 0,
	0, 0, 1246, 1210, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 1259,
	0, 317, 1266, 318, 1265, 0, 1276, 319, 320, 321,
	322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 1269, 359, 361, 1263, 1262, 1182, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1254, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1188, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 1201,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1261,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 1274, 1275, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	1211, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 1256, 1257, 0, 1217, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1179,
	296, 1298, 504, 505, 506, 507, 1202, 1250, 508, 1264,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 1189, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 1260, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 1190, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	1258, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 1305, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 1176, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 1270, 1271, 1272, 1273, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 1200, 653, 654, 655, 656,
	0, 658, 659, 0, 1183, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	731, 1267, 1304, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1180, 0, 0, 0, 1763, 0, 1222, 1194,
	1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0,
	0, 0, 0, 1173, 1174, 297, 298, 300, 299, 301,
	302, 303, 304, 1206, 305, 306, 0, 1204, 0, 0,
	0, 1246, 1210, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 685, 1259, 0,
	317, 1266, 318, 1265, 0, 1276, 319, 320, 321, 322,
	323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0,
	326, 327, 1252, 0, 1233, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 353, 1236, 1234,
	1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357, 358,
	1269, 359, 361, 1263, 1262, 1182, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1254, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1188, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1277, 1278, 392, 1201, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1261, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 1274, 1275, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1284, 0, 1211,
	414, 0, 415, 416, 417, 418, 419, 420, 1247, 1248,
	1251, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 1289,
	510, 431, 1256, 1257, 0, 1217, 0, 432, 433, 1291,
	1249, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 1285, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 1240, 1239, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 1179, 296,
	1298, 504, 505, 506, 507, 1202, 1250, 508, 1264, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 1299, 521, 1300, 1279,
	522, 523, 1189, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 1280, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	1260, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 1190, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 1243, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 1258,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 1305, 627, 628, 629, 630, 1281, 634,
	635, 636, 0, 637, 638, 1176, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	1270, 1271, 1272, 1273, 0, 657, 0, 648, 649, 650,
	651, 1282, 652, 1283, 1200, 653, 654, 655, 656, 0,
	658, 659, 0, 1183, 660, 661, 663, 665, 666, 662,
	664, 667, 1244, 668, 0, 0, 669, 670, 671, 731,
	1267, 1304, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 1180, 0, 0, 0, 1758, 0, 1222, 1194, 1195,
	1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0, 0,
	0, 0, 1173, 1174, 297, 298, 300, 299, 301, 302,
	303, 304, 1206, 305, 306, 0, 1204, 0, 0, 0,
	1246, 1210, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 1259, 0, 317,
	1266, 318, 1265, 0, 1276, 319, 320, 321, 322, 323,
	324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 1269,
	359, 361, 1263, 1262, 1182, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1254,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1188, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 1201, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1261, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 1274, 1275, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 1211, 414,
	0, 415, 416, 417, 418, 419, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 1179, 296, 1298,
	504, 505, 506, 507, 1202, 1250, 508, 1264, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 1189, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 1260,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	1190, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 1258, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 1305, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 1176, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 1270,
	1271, 1272, 1273, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 1200, 653, 654, 655, 656, 0, 658,
	659, 0, 1183, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 1267,
	1304, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	1180, 0, 0, 0, 1667, 0, 1222, 1194, 1195, 1196,
	1192, 1193, 1205, 0, 1175, 0, 0, 0, 0, 0,
	0, 1173, 1174, 297, 298, 300, 299, 301, 302, 303,
	304, 1206, 305, 306, 0, 1204, 0, 0, 0, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 359,
	361, 1263, 1262, 1182, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1188, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 419, 420, 1666, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1179, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	1189, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 1176, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 1183, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 1180,
	0, 0, 0, 1661, 0, 1222, 1194, 1195, 1196, 1192,
	1193, 1205, 0, 1175, 0, 0, 0, 0, 0, 0,
	1173, 1174, 297, 298, 300, 299, 301, 302, 303, 304,
	1206, 305, 306, 0, 1204, 0, 0, 0, 1246, 1210,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 1259, 0, 317, 1266, 318,
	1265, 0, 1276, 319, 320, 321, 322, 323, 324, 1212,
	1245, 1177, 325, 1306, 1307, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 1269, 359, 361,
	1263, 1262, 1182, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1254, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1188, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 1201, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1261, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 1274, 1275, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 1211, 414, 0, 415,
	416, 417, 418, 419, 420, 1660, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 1256,
	1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 1179, 296, 1298, 504, 505,
	506, 507, 1202, 1250, 508, 1264, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 1189,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 1260, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 1190, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 1258, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	1305, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 1176, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 1270, 1271, 1272,
	1273, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 1200, 653, 654, 655, 656, 0, 658, 659, 0,
	1183, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 731, 1267, 1304, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 1180, 0,
	0, 0, 1654, 0, 1222, 1194, 1195, 1196, 1192, 1193,
	1205, 0, 1175, 0, 0, 0, 0, 0, 0, 1173,
	1174, 297, 298, 300, 299, 301, 302, 303, 304, 1206,
	305, 306, 0, 1204, 0, 0, 0, 1246, 1210, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 1259, 0, 317, 1266, 318, 1265,
	0, 1276, 319, 320, 321, 322, 323, 324, 1212, 1245,
	1177, 325, 1306, 1307, 692, 0, 326, 327, 1252, 0,
	1233, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237,
	1241, 354, 355, 356, 357, 358, 1269, 359, 361, 1263,
	1262, 1182, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1254, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1188,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1277, 1278, 392, 1201, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1261, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	1274, 1275, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1284, 0, 1211, 414, 0, 415, 416,
	417, 418, 419, 420, 1247, 1248, 1251, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 1289, 510, 431, 1256, 1257,
	0, 1217, 0, 432, 433, 1291, 1249, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 1285, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 1240, 1239, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1179, 296, 1298, 504, 505, 506,
	507, 1202, 1250, 508, 1264, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 1279, 522, 523, 1189, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 1280,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 1260, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 1190, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	1243, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 1258, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 1305,
	627, 628, 629, 630, 1281, 634, 635, 636, 0, 637,
	638, 1176, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 1270, 1271, 1272, 1273,
	0, 657, 0, 648, 649, 650, 651, 1282, 652, 1283,
	1200, 653, 654, 655, 656, 0, 658, 659, 0, 1183,
	660, 661, 663, 665, 666, 662, 664, 667, 1244, 668,
	0, 0, 669, 670, 671, 731, 1267, 1304, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1180, 0, 0,
	0, 1617, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	0, 1175, 0, 0, 0, 0, 0, 0, 1173, 1174,
	297, 298, 300, 299, 301, 302, 303, 304, 1206, 305,
	306, 0, 1204, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 1177,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	1182, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 1179, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	1176, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 1183, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 1180, 0, 0, 0,
	1599, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0,
	1175, 0, 0, 0, 0, 0, 0, 1173, 1174, 297,
	298, 300, 299, 301, 302, 303, 304, 1206, 305, 306,
	0, 1204, 0, 0, 0, 1246, 1210, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 1259, 0, 317, 1266, 318, 1265, 0, 1276,
	319, 320, 321, 322, 323, 324, 1212, 1245, 1177, 325,
	1306, 1307, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 1269, 359, 361, 1263, 1262, 1182,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1254, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1188, 381, 382,
	383, 385, 387, 384, 1603, 388, 389, 390, 391, 1277,
	1278, 392, 1201, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1261, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 1274, 1275,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 1211, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 1256, 1257, 0, 1217,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 1179, 296, 1298, 504, 505, 506, 507, 1202,
	1250, 508, 1264, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 1189, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 1260, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 1604, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 1190, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 1258, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 1305, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 1176,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	1602, 646, 0, 647, 1270, 1271, 1272, 1273, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 1200, 653,
	654, 655, 656, 0, 658, 659, 0, 1183, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 731, 1267, 1304, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 1180, 0, 0, 0, 1431,
	0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175,
	0, 0, 0, 0, 0, 0, 1173, 1174, 297, 298,
	300, 299, 301, 302, 303, 304, 1206, 305, 306, 0,
	1204, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 1259, 0, 317, 1266, 318, 1265, 0, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 1298, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 658, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1180, 0, 0, 0, 0, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 1182, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1188, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	1179, 296, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 1189, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 1176, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 1183, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 1180, 0, 0, 0, 0, 0, 1222,
	1194, 1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0,
	0, 0, 0, 0, 1173, 1174, 297, 298, 300, 299,
	301, 302, 303, 304, 1206, 305, 306, 0, 1204, 0,
	0, 0, 1246, 1210, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 1259,
	0, 317, 1266, 318, 1265, 0, 1276, 319, 320, 321,
	322, 323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 5060, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 1269, 359, 361, 1263, 1262, 1182, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 1254, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 1188, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 1201,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 1261,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 1274, 1275, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	1211, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 1256, 1257, 0, 1217, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 1179,
	296, 1298, 504, 505, 506, 507, 1202, 1250, 508, 1264,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 1189, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 1260, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 1190, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	1258, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 1305, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 1176, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 1270, 1271, 1272, 1273, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 1200, 653, 654, 655, 656,
	0, 5059, 659, 0, 1183, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	731, 1267, 1304, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1180, 0, 0, 0, 0, 0, 1222, 1194,
	1195, 1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0,
	0, 0, 0, 1173, 1174, 297, 298, 300, 299, 301,
	302, 303, 304, 1206, 305, 306, 0, 1204, 0, 0,
	0, 1246, 1210, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 5058, 1259, 0,
	317, 1266, 318, 1265, 0, 1276, 319, 320, 321, 322,
	323, 324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0,
	326, 327, 1252, 0, 1233, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 5060, 1236, 1234,
	1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357, 358,
	1269, 359, 361, 1263, 1262, 1182, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1254, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1188, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1277, 1278, 392, 1201, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1261, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 1274, 1275, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1284, 0, 1211,
	414, 0, 415, 416, 417, 418, 419, 420, 1247, 1248,
	1251, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 1289,
	510, 431, 1256, 1257, 0, 1217, 0, 432, 433, 1291,
	1249, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 1285, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 1240, 1239, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 1179, 296,
	1298, 504, 505, 506, 507, 1202, 1250, 508, 1264, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 1299, 521, 1300, 1279,
	522, 523, 1189, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 1280, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	1260, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 1190, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 1243, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 1258,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 1305, 627, 628, 629, 630, 1281, 634,
	635, 636, 0, 637, 638, 1176, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	1270, 1271, 1272, 1273, 0, 657, 0, 648, 649, 650,
	651, 1282, 652, 1283, 1200, 653, 654, 655, 656, 0,
	5059, 659, 0, 1183, 660, 661, 663, 665, 666, 662,
	664, 667, 1244, 668, 0, 0, 669, 670, 671, 731,
	1267, 1304, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 1180, 0, 0, 0, 0, 0, 1222, 1194, 1195,
	1196, 1192, 1193, 1205, 0, 1175, 0, 0, 0, 0,
	0, 0, 1173, 1174, 297, 298, 300, 299, 301, 302,
	303, 304, 1206, 305, 306, 0, 1204, 0, 0, 0,
	1246, 1210, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 1259, 0, 317,
	1266, 318, 1265, 0, 1276, 319, 320, 321, 322, 323,
	324, 1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 4661, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 1269,
	359, 361, 1263, 1262, 1182, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1254,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1188, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 1201, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1261, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 1274, 1275, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 4662, 414,
	0, 415, 416, 417, 418, 419, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 1179, 296, 1298,
	504, 505, 506, 507, 1202, 1250, 508, 1264, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 1189, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 1260,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 4660, 583,
	1190, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 1258, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 1305, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 1176, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 1270,
	1271, 1272, 1273, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 1200, 653, 654, 655, 656, 0, 658,
	659, 0, 1183, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 1267,
	1304, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	1180, 0, 0, 0, 0, 0, 1222, 1194, 1195, 1196,
	3401, 3402, 1205, 0, 1175, 0, 0, 0, 0, 0,
	0, 1173, 1174, 297, 298, 300, 299, 301, 302, 303,
	304, 1206, 305, 306, 0, 1204, 0, 0, 0, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	1212, 1245, 1177, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 359,
	361, 1263, 1262, 1182, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1188, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 419, 420, 1247, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 1179, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	1189, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 1176, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 1183, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 1180,
	0, 0, 0, 0, 0, 1222, 1194, 1195, 1196, 3399,
	3400, 1205, 0, 1175, 0, 0, 0, 0, 0, 0,
	1173, 1174, 297, 298, 300, 299, 301, 302, 303, 304,
	1206, 305, 306, 0, 1204, 0, 0, 0, 1246, 1210,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 1259, 0, 317, 1266, 318,
	1265, 0, 1276, 319, 320, 321, 322, 323, 324, 1212,
	1245, 1177, 325, 1306, 1307, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 1269, 359, 361,
	1263, 1262, 1182, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1254, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1188, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 1201, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1261, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 1274, 1275, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 1211, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 1256,
	1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 1179, 296, 1298, 504, 505,
	506, 507, 1202, 1250, 508, 1264, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 1189,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 1260, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 1190, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 1258, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	1305, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 1176, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 1270, 1271, 1272,
	1273, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 1200, 653, 654, 655, 656, 0, 658, 659, 0,
	1183, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 731, 1267, 1304, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 1180, 0,
	0, 0, 0, 0, 1222, 1194, 1195, 1196, 1192, 1193,
	1205, 0, 1175, 0, 0, 0, 0, 0, 0, 1173,
	1174, 297, 298, 300, 299, 301, 302, 303, 304, 1206,
	305, 306, 0, 1204, 0, 0, 0, 1246, 1210, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 1259, 0, 317, 1266, 318, 1265,
	0, 1276, 319, 320, 321, 322, 323, 324, 1212, 1245,
	1177, 325, 1306, 1307, 692, 0, 326, 327, 1252, 0,
	1233, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237,
	1241, 354, 355, 356, 357, 358, 1269, 359, 361, 1263,
	1262, 1182, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1254, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1188,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1277, 1278, 392, 1201, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1261, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	1274, 1275, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1284, 0, 1211, 414, 0, 415, 416,
	417, 418, 419, 420, 1247, 1248, 1251, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 1289, 510, 431, 1256, 1257,
	0, 1217, 0, 432, 433, 1291, 1249, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 1285, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 1240, 1239, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 1179, 296, 1298, 504, 505, 506,
	507, 1202, 1250, 508, 1264, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 1279, 522, 523, 1189, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 1280,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 1260, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 1190, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	1243, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 1258, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 1305,
	627, 628, 629, 630, 1281, 634, 635, 636, 0, 637,
	638, 1176, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 1270, 1271, 1272, 1273,
	0, 657, 0, 648, 649, 650, 651, 1282, 652, 1283,
	1200, 653, 654, 655, 656, 0, 658, 659, 0, 1183,
	660, 661, 663, 665, 666, 662, 664, 667, 1244, 668,
	0, 0, 669, 670, 671, 731, 1267, 1304, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1180, 0, 0,
	0, 0, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205,
	0, 1175, 0, 0, 0, 0, 0, 0, 2637, 2638,
	297, 298, 300, 299, 301, 302, 303, 304, 1206, 305,
	306, 0, 1204, 0, 0, 0, 1246, 1210, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 1259, 0, 317, 1266, 318, 1265, 0,
	1276, 319, 320, 321, 322, 323, 324, 1212, 1245, 0,
	325, 1306, 1307, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 1269, 359, 361, 1263, 1262,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1254, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 1188, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 1201, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1261, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 1274,
	1275, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 1211, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 1256, 1257, 0,
	1217, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 0, 296, 1298, 504, 505, 506, 507,
	1202, 1250, 508, 1264, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 1189, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 1260, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 1190, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 1258, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 1305, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 1270, 1271, 1272, 1273, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 1200,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 1267, 1304, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0,
	2896, 0, 0, 0, 0, 0, 0, 2894, 2895, 297,
	298, 300, 299, 301, 302, 303, 304, 1206, 305, 306,
	0, 1204, 0, 0, 0, 1246, 1210, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 1259, 0, 317, 1266, 318, 1265, 0, 1276,
	319, 320, 321, 322, 323, 324, 1212, 1245, 0, 325,
	1306, 1307, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 1269, 359, 361, 1263, 1262, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1254, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1188, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1277,
	1278, 392, 1201, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1261, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 1274, 1275,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 1211, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 1256, 1257, 0, 1217,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 0, 296, 1298, 504, 505, 506, 507, 1202,
	1250, 508, 1264, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 1260, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 3394, 3395, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 1258, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 1305, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 1270, 1271, 1272, 1273, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 1200, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 731, 1267, 1304, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 2264, 2265, 297, 298,
	300, 299, 301, 302, 303, 304, 1206, 305, 306, 0,
	1204, 0, 0, 0, 1246, 1210, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	0, 1259, 0, 317, 1266, 318, 1265, 0, 1276, 319,
	320, 321, 322, 323, 324, 1212, 1245, 1177, 325, 1306,
	1307, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	5060, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 1269, 359, 361, 1263, 1262, 1182, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 1254, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1188, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 1201, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1261, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 1274, 1275, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 1211, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 1256, 1257, 0, 1217, 0,
	432, 433, 0, 1249, 0, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 1179, 296, 0, 504, 505, 506, 507, 1202, 1250,
	508, 1264, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 1189, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 1260, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 1190, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 1258, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 1305, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 1176, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 1270, 1271, 1272, 1273, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 1200, 653, 654,
	655, 656, 0, 5059, 659, 0, 1183, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 1267, 1304, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 2915, 0,
	1222, 1194, 1195, 1196, 1192, 1193, 1205, 0, 0, 0,
	0, 0, 0, 0, 0, 1173, 1174, 297, 298, 300,
	299, 301, 302, 303, 304, 1206, 305, 306, 0, 1204,
	0, 0, 0, 1246, 1210, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	1259, 0, 317, 1266, 318, 1265, 0, 1276, 319, 320,
	321, 322, 323, 324, 0, 1245, 0, 325, 1306, 1307,
	692, 0, 326, 327, 1252, 0, 1233, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356,
	357, 358, 1269, 359, 361, 1263, 1262, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1254, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1277, 1278, 392,
	1201, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1261, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 1274, 1275, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1284,
	0, 1211, 414, 0, 415, 416, 417, 418, 419, 420,
	1247, 1248, 1251, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 1289, 510, 431, 1256, 1257, 0, 1217, 0, 432,
	433, 1291, 1249, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 1285, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 1240, 1239, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	0, 296, 1298, 504, 505, 506, 507, 1202, 1250, 508,
	1264, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 1279, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 1280, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 1260, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 1190, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 1243, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 1258, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 1305, 627, 628, 629, 630,
	1281, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 1270, 1271, 1272, 1273, 0, 657, 0, 648,
	649, 650, 651, 1282, 652, 1283, 1200, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 1244, 668, 0, 0, 669, 670,
	671, 731, 1267, 1304, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 1629, 0, 1222, 1194, 1195, 1196,
	1192, 1193, 1205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 1206, 0, 0, 0, 1204, 1246,
	1210, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 1259, 0, 317, 1266,
	318, 1265, 0, 1276, 319, 320, 321, 322, 323, 324,
	0, 1245, 0, 325, 1306, 1307, 692, 0, 326, 327,
	1252, 0, 1233, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242,
	1238, 1237, 1241, 354, 355, 356, 357, 358, 1269, 359,
	361, 1263, 1262, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1254, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1277, 1278, 392, 1201, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1261, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 1274, 1275, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1284, 0, 1211, 414, 0,
	415, 416, 417, 418, 419, 420, 1247, 1248, 1251, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 1289, 510, 431,
	1256, 1257, 0, 1217, 0, 432, 433, 1291, 1249, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	1285, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 1240, 1239, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 0, 296, 1298, 504,
	505, 506, 507, 1202, 1250, 508, 1264, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 1279, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 1280, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 1260, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 1190,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 1243, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 1258, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 1305, 627, 628, 629, 630, 1281, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 1270, 1271,
	1272, 1273, 0, 657, 0, 648, 649, 650, 651, 1282,
	652, 1283, 1200, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	1244, 668, 0, 0, 669, 670, 671, 731, 1267, 1304,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	1166, 0, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	1206, 0, 0, 0, 1204, 1246, 0, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 1245, 0, 325,
	690, 691, 692, 0, 326, 327, 1252, 0, 1233, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1277,
	1278, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1284, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 1247, 1248, 1251, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 1289, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 1291, 1249, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	1331, 444, 446, 445, 0, 447, 1285, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 1240,
	1239, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 0, 296, 1298, 504, 505, 506, 507, 0,
	1250, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 1337, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 1279, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 1280, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 721, 1339, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 252, 602, 603, 601, 604, 605, 606, 1243, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 1281, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 254, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 1282, 652, 1283, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 1244, 668, 0, 0,
	669, 670, 671, 1747, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 246, 679,
	680, 735, 681, 682, 683, 1345, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 1335, 0, 2106, 0, 1246, 0,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	1245, 0, 325, 690, 691, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 1331, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 0, 296, 1298, 504, 505,
	506, 507, 0, 1250, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 1337, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 721, 1339,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 252, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 254, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 1747, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 246, 679, 680, 735, 681, 682, 683, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3558, 0, 1345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 2106,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 1245, 0,
	325, 690, 691, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 1331, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 0, 296, 1298, 504, 505, 506, 507,
	0, 1250, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 1337, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 721, 1339, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 1327, 0, 1345,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 1246, 0, 0, 1335, 307, 1333, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 1245, 0, 325, 690, 691, 692,
	0, 326, 327, 1252, 0, 1233, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 1236,
	1234, 1235, 1242, 1238, 1237, 1241, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1277, 1278, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1284, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 1247,
	1248, 1251, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	1289, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	1291, 1249, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 1331, 444, 446,
	445, 0, 447, 1285, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 1240, 1239, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 0,
	296, 1298, 504, 505, 506, 507, 0, 1250, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 1337, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	1279, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 1280, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 721, 1339, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 1243, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 1281,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 1282, 652, 1283, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 1244, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 1345, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1246, 0,
	0, 1335, 307, 1333, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	1245, 0, 325, 690, 691, 692, 0, 326, 327, 1252,
	0, 1233, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 1236, 1234, 1235, 1242, 1238,
	1237, 1241, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1277, 1278, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1284, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 1247, 1248, 1251, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 1289, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 1291, 1249, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 1331, 444, 446, 445, 0, 447, 1285,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 1240, 1239, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 0, 296, 1298, 504, 505,
	506, 507, 0, 1250, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 1337, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 1279, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	1280, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 721, 1339,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 1243, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 1281, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 1282, 652,
	1283, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 1244,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 1345, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 1246, 0, 0, 1335, 307, 1333,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 1245, 0, 325, 690,
	691, 692, 0, 326, 327, 1252, 0, 1233, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 1236, 1234, 1235, 1242, 1238, 1237, 1241, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1277, 1278,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1284, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 1247, 1248, 1251, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 1289, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 1291, 1249, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 1285, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 1240, 1239,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 0, 296, 1298, 504, 505, 506, 507, 0, 1250,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 1279, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 1280, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 1243, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 1281, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 1282, 652, 1283, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 1244, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 1345, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1246, 0, 0, 0, 307, 4473, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 1245, 0, 325, 690, 691, 692, 0, 326,
	327, 1252, 0, 1233, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 1236, 1234, 1235,
	1242, 1238, 1237, 1241, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1277, 1278, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1284, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 1247, 1248, 1251,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 1289, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 1291, 1249,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 1285, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 1240, 1239, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 0, 296, 1298,
	504, 505, 506, 507, 0, 1250, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 1279, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 1280, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	721, 1339, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1243, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 1281, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	1282, 652, 1283, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 1244, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	291, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	2741, 2742, 2743, 2760, 2761, 2762, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 2763, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 2002, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 1987, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 2753, 0, 337, 338,
	339, 336, 340, 0, 341, 2749, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 0, 0, 2754, 2755, 2756, 2757, 393, 394, 395,
	699, 0, 0, 2748, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	2758, 2759, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 2751, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 0, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 2752, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 1986, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 0, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 1166, 0, 1624, 2738, 2739, 2740, 2764, 2750, 2744,
	0, 2746, 2747, 2745, 2732, 2733, 2734, 2735, 2736, 2737,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 1588,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 0,
	428, 429, 430, 0, 1289, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 1291, 710, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 0, 0, 1298, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 252, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 254, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 1747, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 0, 0, 246,
	679, 680, 735, 681, 682, 683, 0, 1744, 247, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 203, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 1588, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	1289, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	1291, 710, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 0,
	0, 1298, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 252, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 254,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	1747, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 246, 679, 680, 735, 681,
	682, 683, 1624, 1623, 247, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 203, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 1286, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 1588, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1287, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 1288, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 1290, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 1289, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 1291, 710, 1292, 434, 435, 436, 1293,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 1294, 448, 449,
	1295, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 1296, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 1297,
	502, 490, 0, 0, 1298, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	1299, 521, 1300, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 1301,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 1302, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 1624, 1623, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 1771, 0, 684, 0,
	0, 0, 307, 0, 308, 309, 1286, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 1588, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1287, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 1288, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 1290,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 0, 428, 429, 430, 0, 1289, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 1291, 710, 1292, 434,
	435, 436, 1293, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	1294, 448, 449, 1295, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 1296, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 1297, 502, 490, 0, 0, 1298, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 1299, 521, 1300, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 1301, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 1302, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 1624, 1623,
	0, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 3890,
	0, 684, 0, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 1588, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 0, 428, 429, 430, 0, 1289,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 1291,
	710, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 0, 0,
	1298, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 1299, 521, 1300, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 2502, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	725, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 1624, 2411, 0, 0, 0, 0, 2412, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 1771, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 1286, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 1588, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1287, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 1288, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 1290, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 1289, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 1291, 710, 1292, 434, 435, 436, 1293, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	2410, 446, 445, 0, 447, 711, 1294, 448, 449, 1295,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	1296, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 1297, 502,
	490, 0, 0, 1298, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 1299,
	521, 1300, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 1301, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 1302, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 1624, 1623, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 1771, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	1588, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 1289, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 1291, 710, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 0, 0, 1298, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 1166, 0,
	291, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 1753, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 0, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 252,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	254, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 1747, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 291, 0, 0, 246, 679, 680, 735,
	681, 682, 683, 0, 0, 247, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 203, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 296, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 3173, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 2120, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	5227, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 291, 0, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 3840, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 296, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 0, 291, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 1741, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	0, 0, 0, 1345, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	307, 3295, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 1245, 0,
	325, 690, 691, 692, 0, 326, 327, 1252, 0, 1233,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 1236, 1234, 1235, 1242, 1238, 1237, 1241,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1277, 1278, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1284, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 1247, 1248, 1251, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 1289, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 1291, 1249, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 1285, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	1240, 1239, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 0, 296, 1298, 504, 505, 506, 507,
	0, 1250, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 1279, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 1280, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 1243,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 1281, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 1282, 652, 1283, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 1244, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	4001, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 990, 0, 890, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 684, 0,
	0, 0, 307, 2489, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 897, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 987, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 296, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 989, 0, 633, 624, 895, 639, 640, 641, 642,
	643, 896, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 2165, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 900, 0, 0, 0, 307, 0, 308, 309, 1286,
	310, 311, 312, 313, 314, 315, 316, 0, 2171, 0,
	317, 2161, 318, 2177, 0, 2184, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 2187, 2188, 0, 0,
	326, 327, 0, 0, 1588, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1287, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	1269, 359, 361, 2175, 2174, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1254, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 0, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 0, 0, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 2173, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	1288, 401, 402, 403, 2182, 2183, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 0, 0,
	0, 509, 1290, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 0, 428, 429, 430, 0, 1289,
	510, 431, 2168, 2169, 0, 2164, 0, 432, 433, 1291,
	0, 1292, 434, 435, 436, 1293, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 0, 1294, 448, 449, 1295, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 1296, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 1297, 502, 490, 0, 0,
	1298, 504, 505, 506, 507, 0, 0, 508, 2176, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 0, 1299, 521, 1300, 0,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 2158, 535, 536, 537, 2159,
	538, 539, 540, 0, 541, 0, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	2172, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 1301, 579, 580, 581, 582,
	583, 0, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 1302, 611, 612, 613, 614, 615, 616, 617, 2170,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 2186, 627, 628, 629, 630, 0, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	2178, 2179, 2180, 2181, 0, 657, 0, 648, 649, 650,
	651, 0, 652, 0, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 0,
	2162, 2185, 0, 673, 672, 674, 675, 676, 0, 677,
	678, 0, 0, 0, 0, 679, 680, 0, 681, 682,
	683, 890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 4121, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 2152, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 897, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 296, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 4120, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 895, 639, 640, 641, 642, 643, 896, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	4119, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 0, 890, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	2192, 305, 306, 0, 0, 0, 0, 900, 684, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 897, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 296, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 2191,
	597, 598, 599, 600, 0, 2193, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 895, 639, 640, 641, 642,
	643, 896, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 2190, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 0, 890,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 2143, 305, 306, 0, 0, 0,
	0, 900, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 897,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 2142, 597, 598, 599, 600, 0, 2144,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 895,
	639, 640, 641, 642, 643, 896, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 2141, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 888, 0, 890, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 900, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 897, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 895, 639, 640, 641, 642, 643,
	896, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 890, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	900, 684, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 897, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	0, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 0, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 0,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 0,
	710, 0, 434, 435, 436, 0, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 0, 448, 449, 0, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 0, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 0, 502, 490, 0, 296,
	0, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 0, 521, 0, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 0, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 0, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 895, 639,
	640, 641, 642, 643, 896, 0, 645, 646, 0, 647,
	725, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 0, 890, 0, 0, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 900, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 897, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	2541, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 2542, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 895, 639, 640, 641, 642, 643, 896, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 2543, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 0, 291, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 900, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 296, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 1624, 1623, 0, 0,
	0, 0, 1621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 900, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 1286, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 1588, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1287, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 1288, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	1290, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 1289, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 1291, 710, 1292,
	434, 435, 436, 1293, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 1294, 448, 449, 1295, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 1296, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 1297, 502, 490, 0, 0, 1298, 504,
	505, 506, 507, 4224, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 1299, 521, 1300, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 1301, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 1302,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 0,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 1624,
	1623, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 1588, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	1289, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	1291, 710, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 0,
	0, 1298, 504, 505, 506, 507, 3790, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1802, 0, 1624, 1623, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	1588, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 1801, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 1289, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 1291, 710, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 0, 0, 1298, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 1800, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 1799,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1674, 0, 1624,
	1623, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	1286, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 1588, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1287, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 1288, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 1676,
	705, 706, 509, 1290, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	1289, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	1291, 710, 1292, 434, 435, 436, 1293, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 1294, 448, 449, 1295, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 1296, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 1297, 502, 490, 0,
	0, 1298, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 1299, 521, 1300,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 1301, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 1302, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 0, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 1619, 0, 1624, 1623, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 1286, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	1588, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1287, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 1288, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 1290, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 1289, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 1291, 710, 1292, 434, 435,
	436, 1293, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 1294,
	448, 449, 1295, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 1296, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 1297, 502, 490, 0, 0, 1298, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 1299, 521, 1300, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 1301, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 1302, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 0, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 1624, 1623, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 1286, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 1588, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1287, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 1288,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 1290, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 1289, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 1291, 710,
	1292, 434, 435, 436, 1293, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 1294, 448, 449, 1295, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 1296, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 1297, 502, 490, 0, 0, 1298,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 1299, 521, 1300, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 1301, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	1302, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	1624, 1623, 0, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 1286, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 1588, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1287, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 1288, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 1290, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 1289, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 1291, 710, 1292, 434, 435, 436, 1293, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 1294, 448, 449, 1295, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 1296,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 1297, 502, 490,
	0, 0, 1298, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 1299, 521,
	1300, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 1301, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 1302, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 1624, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 1286, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 1588,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1287,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 1288, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 1290, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 0,
	428, 429, 430, 0, 1289, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 1291, 710, 1292, 434, 435, 436,
	1293, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 1294, 448,
	449, 1295, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 1296, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	1297, 502, 490, 0, 0, 1298, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 1299, 521, 1300, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	1301, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 1302, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 3075, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 3832,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 3079,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 3831, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 3078, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 3828, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 3830, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 3827, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 3077, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 3829, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	3075, 326, 327, 693, 0, 0, 3069, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 3071, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 3079, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 3078, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 3068,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 3077,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 3076, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 1882, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 1881,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 1880, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 1883, 588, 589, 596, 597,
	598, 599, 600, 0, 1879, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 1877, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 1878,
	672, 674, 675, 676, 734, 677, 678, 1592, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 1594,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 1337, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 1589, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 1591, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 1337, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 1495, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 1497,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 1337, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 768, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 767, 303, 304, 756,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 759, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 765, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 761, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 755, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 756, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 759, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 760, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 761, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 291, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 756, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 759, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 760,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 761, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 291, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	756, 305, 306, 0, 0, 0, 0, 0, 684, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 759, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 4234, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 0, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 0, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 761, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 291, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	0, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 0, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 295, 428, 429, 430, 0, 0,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 0,
	710, 0, 434, 435, 436, 0, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 0, 448, 449, 0, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 0, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 0, 502, 490, 0, 296,
	0, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 0, 521, 0, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 0, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 0, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 2447, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	725, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 291, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 296, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	1337, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 291, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 3726, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 3265, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 3264,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 2510, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 2454, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 2453,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 295, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	296, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 2440, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 2442, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 291, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 2404, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 1337, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	1719, 0, 291, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 1718, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 1612, 0, 291, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	1605, 0, 291, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 1607, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 1414, 0, 291, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 1413, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	1404, 0, 291, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 1403, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 1401, 0, 291, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 1400, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	1396, 0, 291, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 1395, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 737, 0, 291, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	282, 0, 291, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 295, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 296, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 291, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 684, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 295, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 296, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 291, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	759, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	0, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 760, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 0, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 0, 428, 429, 430, 0, 0,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 0,
	710, 0, 434, 435, 436, 0, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 0, 448, 449, 0, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 0, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 0, 502, 490, 0, 0,
	0, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 0, 521, 0, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 0, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 761, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 0, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	725, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 291, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 2550, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 295, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 296, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 291, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 2548, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	295, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 296, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 291, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 2546, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 295, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 296, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	291, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	2460, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 295, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 296, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 291, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 2217, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 295,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 296, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 2211, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 295, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 296, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 974,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 973,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 972, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 857, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 846, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 855, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 848, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 854, 850, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 851, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 849, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 852,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 853, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 847, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 840,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 846,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 855, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	848, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 854, 850, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 851, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 849, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 852, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 853, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 847, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 291, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 3831, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 4558, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 1442, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	1445, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 1443,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 828, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 827, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 826, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 1446, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 824, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 1442, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 1445, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 1443, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 828, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 827, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 826, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 1446, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 824, 726, 727, 728,
	0, 657, 0, 648, 1444, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 835, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 833, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 746, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 745,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 744, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 291, 3173, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	291, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 0, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	4857, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 291, 3667, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 0,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 0, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 4445, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 4178, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 291, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 2950, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 291, 3173, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 684, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 704, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 0, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 0, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 3304, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 291, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	0, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 704, 705,
	706, 509, 0, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 0, 428, 429, 430, 0, 0,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 0,
	710, 0, 434, 435, 436, 0, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 0, 448, 449, 0, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 0, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 0, 502, 490, 0, 0,
	0, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 0, 521, 0, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 2348, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 0, 827, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 826, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 0, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	824, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 291, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 2520, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 2508, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1775,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1767, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 818,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 814, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 819, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 828,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 827,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 826, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 1752, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 824, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1725, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 1724, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1709,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 1707, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1702, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1679,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 1677, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1672, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1633,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1597, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 704, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1448,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 704, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 827,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 826, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 824, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 1419, 0, 291, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 1418, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 1410,
	0, 291, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 1409, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 291, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 1362,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 838, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 818, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 814, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 813, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 819,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 828, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 827, 580, 581, 582, 583, 815, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 826, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 816, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 824, 726, 727, 728,
	0, 657, 0, 648, 820, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 807, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 808, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 770, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 763, 0, 291,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 741, 0, 291, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 704, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 291, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 704, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	291, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	3863, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 0, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 593, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 291, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 0,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 0, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 827, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 826, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	607, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 824, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 3769, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 3743,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 557, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 291, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 414, 0, 415, 416, 417, 418,
	419, 420, 3739, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 291, 0, 0, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 684, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 685, 686, 0, 317, 687, 318,
	688, 0, 689, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 690, 691, 692, 0, 326, 327, 693,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	694, 695, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	696, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 697, 698, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 699, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 0, 0, 401, 402,
	403, 700, 701, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 702, 0, 703, 414, 0, 415,
	416, 417, 418, 419, 420, 3691, 705, 706, 509, 0,
	421, 422, 0, 423, 424, 425, 426, 427, 0, 0,
	0, 0, 428, 429, 430, 0, 0, 510, 431, 707,
	708, 0, 709, 0, 432, 433, 0, 710, 0, 434,
	435, 436, 0, 437, 0, 0, 0, 438, 439, 440,
	441, 442, 443, 0, 444, 446, 445, 0, 447, 711,
	0, 448, 449, 0, 0, 450, 451, 452, 453, 454,
	455, 458, 0, 0, 456, 457, 459, 460, 0, 461,
	462, 464, 467, 463, 465, 466, 468, 481, 482, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 484, 0, 483, 0, 485, 486, 487, 488, 489,
	496, 498, 499, 494, 495, 497, 500, 501, 503, 491,
	492, 493, 0, 502, 490, 0, 0, 0, 504, 505,
	506, 507, 0, 712, 508, 713, 511, 512, 0, 0,
	513, 0, 514, 0, 0, 516, 517, 518, 0, 0,
	519, 520, 714, 0, 521, 0, 715, 522, 523, 515,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 0,
	533, 534, 716, 535, 536, 537, 717, 538, 539, 540,
	718, 541, 719, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 552, 553, 720, 554, 555,
	557, 556, 558, 0, 559, 0, 560, 561, 562, 0,
	0, 0, 0, 0, 563, 564, 566, 0, 567, 568,
	569, 570, 565, 571, 572, 573, 574, 575, 0, 576,
	577, 578, 0, 579, 580, 581, 582, 583, 721, 584,
	0, 585, 586, 593, 594, 595, 587, 588, 589, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	606, 0, 607, 608, 590, 591, 609, 610, 0, 611,
	612, 613, 614, 615, 616, 617, 722, 0, 618, 0,
	619, 620, 621, 622, 623, 625, 592, 626, 631, 632,
	723, 627, 628, 629, 630, 724, 634, 635, 636, 0,
	637, 638, 0, 633, 624, 0, 639, 640, 641, 642,
	643, 644, 0, 645, 646, 0, 647, 725, 726, 727,
	728, 0, 657, 0, 648, 649, 650, 651, 729, 652,
	730, 0, 653, 654, 655, 656, 0, 658, 659, 0,
	0, 660, 661, 663, 665, 666, 662, 664, 667, 0,
	668, 0, 0, 669, 670, 671, 731, 732, 733, 0,
	673, 672, 674, 675, 676, 734, 677, 678, 291, 0,
	0, 0, 679, 680, 735, 681, 682, 683, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 685, 686, 0,
	317, 687, 318, 688, 0, 689, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 690, 691, 692, 0,
	326, 327, 693, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 694, 695, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 696, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 697, 698, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 699, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 0,
	0, 401, 402, 403, 700, 701, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 702, 0, 703,
	414, 0, 415, 416, 417, 418, 419, 420, 3689, 705,
	706, 509, 0, 421, 422, 0, 423, 424, 425, 426,
	427, 0, 0, 0, 0, 428, 429, 430, 0, 0,
	510, 431, 707, 708, 0, 709, 0, 432, 433, 0,
	710, 0, 434, 435, 436, 0, 437, 0, 0, 0,
	438, 439, 440, 441, 442, 443, 0, 444, 446, 445,
	0, 447, 711, 0, 448, 449, 0, 0, 450, 451,
	452, 453, 454, 455, 458, 0, 0, 456, 457, 459,
	460, 0, 461, 462, 464, 467, 463, 465, 466, 468,
	481, 482, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 484, 0, 483, 0, 485, 486,
	487, 488, 489, 496, 498, 499, 494, 495, 497, 500,
	501, 503, 491, 492, 493, 0, 502, 490, 0, 0,
	0, 504, 505, 506, 507, 0, 712, 508, 713, 511,
	512, 0, 0, 513, 0, 514, 0, 0, 516, 517,
	518, 0, 0, 519, 520, 714, 0, 521, 0, 715,
	522, 523, 515, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 0, 533, 534, 716, 535, 536, 537, 717,
	538, 539, 540, 718, 541, 719, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 552, 553,
	720, 554, 555, 557, 556, 558, 0, 559, 0, 560,
	561, 562, 0, 0, 0, 0, 0, 563, 564, 566,
	0, 567, 568, 569, 570, 565, 571, 572, 573, 574,
	575, 0, 576, 577, 578, 0, 579, 580, 581, 582,
	583, 721, 584, 0, 585, 586, 593, 594, 595, 587,
	588, 589, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 606, 0, 607, 608, 590, 591, 609,
	610, 0, 611, 612, 613, 614, 615, 616, 617, 722,
	0, 618, 0, 619, 620, 621, 622, 623, 625, 592,
	626, 631, 632, 723, 627, 628, 629, 630, 724, 634,
	635, 636, 0, 637, 638, 0, 633, 624, 0, 639,
	640, 641, 642, 643, 644, 0, 645, 646, 0, 647,
	725, 726, 727, 728, 0, 657, 0, 648, 649, 650,
	651, 729, 652, 730, 0, 653, 654, 655, 656, 0,
	658, 659, 0, 0, 660, 661, 663, 665, 666, 662,
	664, 667, 0, 668, 0, 0, 669, 670, 671, 731,
	732, 733, 0, 673, 672, 674, 675, 676, 734, 677,
	678, 291, 0, 0, 0, 679, 680, 735, 681, 682,
	683, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	685, 686, 0, 317, 687, 318, 688, 0, 689, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 690,
	691, 692, 0, 326, 327, 693, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 694, 695, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 696, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 697, 698,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 699, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 0, 0, 401, 402, 403, 700, 701, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	702, 0, 703, 414, 0, 415, 416, 417, 418, 419,
	420, 3677, 705, 706, 509, 0, 421, 422, 0, 423,
	424, 425, 426, 427, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 510, 431, 707, 708, 0, 709, 0,
	432, 433, 0, 710, 0, 434, 435, 436, 0, 437,
	0, 0, 0, 438, 439, 440, 441, 442, 443, 0,
	444, 446, 445, 0, 447, 711, 0, 448, 449, 0,
	0, 450, 451, 452, 453, 454, 455, 458, 0, 0,
	456, 457, 459, 460, 0, 461, 462, 464, 467, 463,
	465, 466, 468, 481, 482, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 484, 0, 483,
	0, 485, 486, 487, 488, 489, 496, 498, 499, 494,
	495, 497, 500, 501, 503, 491, 492, 493, 0, 502,
	490, 0, 0, 0, 504, 505, 506, 507, 0, 712,
	508, 713, 511, 512, 0, 0, 513, 0, 514, 0,
	0, 516, 517, 518, 0, 0, 519, 520, 714, 0,
	521, 0, 715, 522, 523, 515, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 0, 533, 534, 716, 535,
	536, 537, 717, 538, 539, 540, 718, 541, 719, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 552, 553, 720, 554, 555, 557, 556, 558, 0,
	559, 0, 560, 561, 562, 0, 0, 0, 0, 0,
	563, 564, 566, 0, 567, 568, 569, 570, 565, 571,
	572, 573, 574, 575, 0, 576, 577, 578, 0, 579,
	580, 581, 582, 583, 721, 584, 0, 585, 586, 593,
	594, 595, 587, 588, 589, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 606, 0, 607, 608,
	590, 591, 609, 610, 0, 611, 612, 613, 614, 615,
	616, 617, 722, 0, 618, 0, 619, 620, 621, 622,
	623, 625, 592, 626, 631, 632, 723, 627, 628, 629,
	630, 724, 634, 635, 636, 0, 637, 638, 0, 633,
	624, 0, 639, 640, 641, 642, 643, 644, 0, 645,
	646, 0, 647, 725, 726, 727, 728, 0, 657, 0,
	648, 649, 650, 651, 729, 652, 730, 0, 653, 654,
	655, 656, 0, 658, 659, 0, 0, 660, 661, 663,
	665, 666, 662, 664, 667, 0, 668, 0, 0, 669,
	670, 671, 731, 732, 733, 0, 673, 672, 674, 675,
	676, 734, 677, 678, 291, 0, 0, 0, 679, 680,
	735, 681, 682, 683, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 685, 686, 0, 317, 687, 318, 688,
	0, 689, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 690, 691, 692, 0, 326, 327, 693, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 694,
	695, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 696,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 697, 698, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 699, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 0, 0, 401, 402, 403,
	700, 701, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 702, 0, 703, 414, 0, 415, 416,
	417, 418, 419, 420, 3674, 705, 706, 509, 0, 421,
	422, 0, 423, 424, 425, 426, 427, 0, 0, 0,
	0, 428, 429, 430, 0, 0, 510, 431, 707, 708,
	0, 709, 0, 432, 433, 0, 710, 0, 434, 435,
	436, 0, 437, 0, 0, 0, 438, 439, 440, 441,
	442, 443, 0, 444, 446, 445, 0, 447, 711, 0,
	448, 449, 0, 0, 450, 451, 452, 453, 454, 455,
	458, 0, 0, 456, 457, 459, 460, 0, 461, 462,
	464, 467, 463, 465, 466, 468, 481, 482, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	484, 0, 483, 0, 485, 486, 487, 488, 489, 496,
	498, 499, 494, 495, 497, 500, 501, 503, 491, 492,
	493, 0, 502, 490, 0, 0, 0, 504, 505, 506,
	507, 0, 712, 508, 713, 511, 512, 0, 0, 513,
	0, 514, 0, 0, 516, 517, 518, 0, 0, 519,
	520, 714, 0, 521, 0, 715, 522, 523, 515, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 0, 533,
	534, 716, 535, 536, 537, 717, 538, 539, 540, 718,
	541, 719, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 552, 553, 720, 554, 555, 557,
	556, 558, 0, 559, 0, 560, 561, 562, 0, 0,
	0, 0, 0, 563, 564, 566, 0, 567, 568, 569,
	570, 565, 571, 572, 573, 574, 575, 0, 576, 577,
	578, 0, 579, 580, 581, 582, 583, 721, 584, 0,
	585, 586, 593, 594, 595, 587, 588, 589, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 606,
	0, 607, 608, 590, 591, 609, 610, 0, 611, 612,
	613, 614, 615, 616, 617, 722, 0, 618, 0, 619,
	620, 621, 622, 623, 625, 592, 626, 631, 632, 723,
	627, 628, 629, 630, 724, 634, 635, 636, 0, 637,
	638, 0, 633, 624, 0, 639, 640, 641, 642, 643,
	644, 0, 645, 646, 0, 647, 725, 726, 727, 728,
	0, 657, 0, 648, 649, 650, 651, 729, 652, 730,
	0, 653, 654, 655, 656, 0, 658, 659, 0, 0,
	660, 661, 663, 665, 666, 662, 664, 667, 0, 668,
	0, 0, 669, 670, 671, 731, 732, 733, 0, 673,
	672, 674, 675, 676, 734, 677, 678, 291, 0, 0,
	0, 679, 680, 735, 681, 682, 683, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	684, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 685, 686, 0, 317,
	687, 318, 688, 0, 689, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 690, 691, 692, 0, 326,
	327, 693, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 694, 695, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 696, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 697, 698, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 699, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 700, 701, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 702, 0, 703, 414,
	0, 415, 416, 417, 418, 419, 420, 3275, 705, 706,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 707, 708, 0, 709, 0, 432, 433, 0, 710,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 711, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 712, 508, 713, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 714, 0, 521, 0, 715, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 716, 535, 536, 537, 717, 538,
	539, 540, 718, 541, 719, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 720,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	721, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 0, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 722, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 723, 627, 628, 629, 630, 724, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 725,
	726, 727, 728, 0, 657, 0, 648, 649, 650, 651,
	729, 652, 730, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 731, 732,
	733, 0, 673, 672, 674, 675, 676, 734, 677, 678,
	291, 0, 0, 0, 679, 680, 735, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 684, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 685,
	686, 0, 317, 687, 318, 688, 0, 689, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 690, 691,
	692, 0, 326, 327, 693, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 694, 695, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 696, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 697, 698, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	699, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 0, 0, 401, 402, 403, 700, 701, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 702,
	0, 703, 414, 0, 415, 416, 417, 418, 419, 420,
	704, 705, 706, 509, 0, 421, 422, 0, 423, 424,
	425, 426, 427, 0, 0, 0, 0, 428, 429, 430,
	0, 0, 510, 431, 707, 708, 0, 709, 0, 432,
	433, 0, 710, 0, 434, 435, 436, 0, 437, 0,
	0, 0, 438, 439, 440, 441, 442, 443, 0, 444,
	446, 445, 0, 447, 711, 0, 448, 449, 0, 0,
	450, 451, 452, 453, 454, 455, 458, 0, 0, 456,
	457, 459, 460, 0, 461, 462, 464, 467, 463, 465,
	466, 468, 481, 482, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 484, 0, 483, 0,
	485, 486, 487, 488, 489, 496, 498, 499, 494, 495,
	497, 500, 501, 503, 491, 492, 493, 0, 502, 490,
	0, 0, 0, 504, 505, 506, 507, 0, 712, 508,
	713, 511, 512, 0, 0, 513, 0, 514, 0, 0,
	516, 517, 518, 0, 0, 519, 520, 714, 0, 521,
	0, 715, 522, 523, 515, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 0, 533, 534, 716, 535, 536,
	537, 717, 538, 539, 540, 718, 541, 719, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	552, 553, 720, 554, 555, 557, 556, 558, 0, 559,
	0, 560, 561, 562, 0, 0, 0, 0, 0, 563,
	564, 566, 0, 567, 568, 569, 570, 565, 571, 572,
	573, 574, 575, 0, 576, 577, 578, 0, 579, 580,
	581, 582, 583, 721, 584, 0, 585, 586, 808, 594,
	595, 587, 588, 589, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 606, 0, 607, 608, 590,
	591, 609, 610, 0, 611, 612, 613, 614, 615, 616,
	617, 722, 0, 618, 0, 619, 620, 621, 622, 623,
	625, 592, 626, 631, 632, 723, 627, 628, 629, 630,
	724, 634, 635, 636, 0, 637, 638, 0, 633, 624,
	0, 639, 640, 641, 642, 643, 644, 0, 645, 646,
	0, 647, 725, 726, 727, 728, 0, 657, 0, 648,
	649, 650, 651, 729, 652, 730, 0, 653, 654, 655,
	656, 0, 658, 659, 0, 0, 660, 661, 663, 665,
	666, 662, 664, 667, 0, 668, 0, 0, 669, 670,
	671, 731, 732, 733, 0, 673, 672, 674, 675, 676,
	734, 677, 678, 291, 0, 0, 0, 679, 680, 735,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 684, 0, 2478, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 685, 686, 0, 317, 687, 318, 688, 0,
	689, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 690, 691, 692, 0, 326, 327, 693, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 694, 695,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 696, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	697, 698, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 699, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 0, 0, 401, 402, 403, 700,
	701, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 702, 0, 703, 414, 0, 415, 416, 417,
	418, 419, 420, 704, 705, 706, 509, 0, 421, 422,
	0, 423, 424, 425, 426, 427, 0, 0, 0, 0,
	428, 429, 430, 0, 0, 510, 431, 707, 708, 0,
	709, 0, 432, 433, 0, 710, 0, 434, 435, 436,
	0, 437, 0, 0, 0, 438, 439, 440, 441, 442,
	443, 0, 444, 446, 445, 0, 447, 711, 0, 448,
	449, 0, 0, 450, 451, 452, 453, 454, 455, 458,
	0, 0, 456, 457, 459, 460, 0, 461, 462, 464,
	467, 463, 465, 466, 468, 481, 482, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 484,
	0, 483, 0, 485, 486, 487, 488, 489, 496, 498,
	499, 494, 495, 497, 500, 501, 503, 491, 492, 493,
	0, 502, 490, 0, 0, 0, 504, 505, 506, 507,
	0, 712, 508, 713, 511, 512, 0, 0, 513, 0,
	514, 0, 0, 516, 517, 518, 0, 0, 519, 520,
	714, 0, 521, 0, 715, 522, 523, 515, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 0, 533, 534,
	716, 535, 536, 537, 717, 538, 539, 540, 718, 541,
	719, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 552, 553, 720, 554, 555, 557, 556,
	558, 0, 559, 0, 560, 561, 562, 0, 0, 0,
	0, 0, 563, 564, 566, 0, 567, 568, 569, 570,
	565, 571, 572, 573, 574, 575, 0, 576, 577, 578,
	0, 579, 580, 581, 582, 583, 721, 584, 0, 585,
	586, 593, 594, 595, 587, 588, 589, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 606, 0,
	0, 608, 590, 591, 609, 610, 0, 611, 612, 613,
	614, 615, 616, 617, 722, 0, 618, 0, 619, 620,
	621, 622, 623, 625, 592, 626, 631, 632, 723, 627,
	628, 629, 630, 724, 634, 635, 636, 0, 637, 638,
	0, 633, 624, 0, 639, 640, 641, 642, 643, 644,
	0, 645, 646, 0, 647, 725, 726, 727, 728, 0,
	657, 0, 648, 649, 650, 651, 729, 652, 730, 0,
	653, 654, 655, 656, 0, 658, 659, 0, 0, 660,
	661, 663, 665, 666, 662, 664, 667, 0, 668, 0,
	0, 669, 670, 671, 731, 732, 733, 0, 673, 672,
	674, 675, 676, 734, 677, 678, 291, 0, 0, 0,
	679, 680, 735, 681, 682, 683, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 685, 686, 0, 317, 687,
	318, 688, 0, 689, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 690, 691, 692, 0, 326, 327,
	693, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 694, 695, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 696, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 697, 698, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 699, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 0, 0, 401,
	402, 403, 700, 701, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 702, 0, 703, 414, 0,
	415, 416, 417, 418, 419, 420, 1381, 705, 706, 509,
	0, 421, 422, 0, 423, 424, 425, 426, 427, 0,
	0, 0, 0, 428, 429, 430, 0, 0, 510, 431,
	707, 708, 0, 709, 0, 432, 433, 0, 710, 0,
	434, 435, 436, 0, 437, 0, 0, 0, 438, 439,
	440, 441, 442, 443, 0, 444, 446, 445, 0, 447,
	711, 0, 448, 449, 0, 0, 450, 451, 452, 453,
	454, 455, 458, 0, 0, 456, 457, 459, 460, 0,
	461, 462, 464, 467, 463, 465, 466, 468, 481, 482,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 484, 0, 483, 0, 485, 486, 487, 488,
	489, 496, 498, 499, 494, 495, 497, 500, 501, 503,
	491, 492, 493, 0, 502, 490, 0, 0, 0, 504,
	505, 506, 507, 0, 712, 508, 713, 511, 512, 0,
	0, 513, 0, 514, 0, 0, 516, 517, 518, 0,
	0, 519, 520, 714, 0, 521, 0, 715, 522, 523,
	515, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	0, 533, 534, 716, 535, 536, 537, 717, 538, 539,
	540, 718, 541, 719, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 552, 553, 720, 554,
	555, 557, 556, 558, 0, 559, 0, 560, 561, 562,
	0, 0, 0, 0, 0, 563, 564, 566, 0, 567,
	568, 569, 570, 565, 571, 572, 573, 574, 575, 0,
	576, 577, 578, 0, 579, 580, 581, 582, 583, 721,
	584, 0, 585, 586, 593, 594, 595, 587, 588, 589,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 606, 0, 607, 608, 590, 591, 609, 610, 0,
	611, 612, 613, 614, 615, 616, 617, 722, 0, 618,
	0, 619, 620, 621, 622, 623, 625, 592, 626, 631,
	632, 723, 627, 628, 629, 630, 724, 634, 635, 636,
	0, 637, 638, 0, 633, 624, 0, 639, 640, 641,
	642, 643, 644, 0, 645, 646, 0, 647, 725, 726,
	727, 728, 0, 657, 0, 648, 649, 650, 651, 729,
	652, 730, 0, 653, 654, 655, 656, 0, 658, 659,
	0, 0, 660, 661, 663, 665, 666, 662, 664, 667,
	0, 668, 0, 0, 669, 670, 671, 731, 732, 733,
	0, 673, 672, 674, 675, 676, 734, 677, 678, 291,
	0, 0, 0, 679, 680, 735, 681, 682, 683, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 684, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 685, 686,
	0, 317, 687, 318, 688, 0, 689, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 690, 691, 692,
	0, 326, 327, 693, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 694, 695, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 696, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 697, 698, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 699,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	0, 0, 401, 402, 403, 700, 701, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 702, 0,
	703, 414, 0, 415, 416, 417, 418, 419, 420, 704,
	705, 706, 509, 0, 421, 422, 0, 423, 424, 425,
	426, 427, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 510, 431, 707, 708, 0, 709, 0, 432, 433,
	0, 710, 0, 434, 435, 436, 0, 437, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 0, 444, 446,
	445, 0, 447, 711, 0, 448, 449, 0, 0, 450,
	451, 452, 453, 454, 455, 458, 0, 0, 456, 457,
	459, 460, 0, 461, 462, 464, 467, 463, 465, 466,
	468, 481, 482, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 484, 0, 483, 0, 485,
	486, 487, 488, 489, 496, 498, 499, 494, 495, 497,
	500, 501, 503, 491, 492, 493, 0, 502, 490, 0,
	0, 0, 504, 505, 506, 507, 0, 712, 508, 713,
	511, 512, 0, 0, 513, 0, 514, 0, 0, 516,
	517, 518, 0, 0, 519, 520, 714, 0, 521, 0,
	715, 522, 523, 515, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 0, 533, 534, 716, 535, 536, 537,
	717, 538, 539, 540, 718, 541, 719, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 552,
	553, 720, 554, 555, 1310, 556, 558, 0, 559, 0,
	560, 561, 562, 0, 0, 0, 0, 0, 563, 564,
	566, 0, 567, 568, 569, 570, 565, 571, 572, 573,
	574, 575, 0, 576, 577, 578, 0, 579, 580, 581,
	582, 583, 721, 584, 0, 585, 586, 593, 594, 595,
	587, 588, 589, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 606, 0, 607, 608, 590, 591,
	609, 610, 0, 611, 612, 613, 614, 615, 616, 617,
	722, 0, 618, 0, 619, 620, 621, 622, 623, 625,
	592, 626, 631, 632, 723, 627, 628, 629, 630, 724,
	634, 635, 636, 0, 637, 638, 0, 633, 624, 0,
	639, 640, 641, 642, 643, 644, 0, 645, 646, 0,
	647, 725, 726, 727, 728, 0, 657, 0, 648, 649,
	650, 651, 729, 652, 730, 0, 653, 654, 655, 656,
	0, 658, 659, 0, 0, 660, 661, 663, 665, 666,
	662, 664, 667, 0, 668, 0, 0, 669, 670, 671,
	731, 732, 733, 0, 673, 672, 674, 675, 676, 734,
	677, 678, 291, 0, 0, 0, 679, 680, 735, 681,
	682, 683, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 685, 686, 0, 317, 687, 318, 688, 0, 689,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	690, 691, 692, 0, 326, 327, 693, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 694, 695, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 696, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 697,
	698, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 699, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 700, 701,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 702, 0, 703, 0, 0, 415, 416, 417, 418,
	419, 420, 704, 705, 706, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 707, 708, 0, 709,
	0, 432, 433, 0, 710, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 711, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	712, 508, 713, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 714,
	0, 521, 0, 715, 522, 523, 515, 524, 525, 0,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 716,
	535, 536, 537, 717, 538, 539, 540, 718, 541, 719,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 0, 552, 553, 720, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 721, 0, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 0, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 722, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 723, 627, 628,
	629, 630, 724, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 725, 726, 727, 728, 0, 657,
	0, 648, 649, 650, 651, 729, 652, 730, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 731, 732, 733, 0, 673, 672, 674,
	675, 676, 734, 677, 678, 1715, 0, 1426, 0, 679,
	680, 735, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1428, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 1714, 0, 0,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 0, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 0, 508, 0, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 0, 0, 521, 0, 0, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 0, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	0, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1429, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 0, 627, 628, 629, 630, 0, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 0,
	0, 0, 0, 0, 657, 0, 648, 649, 650, 651,
	0, 652, 0, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 0, 0,
	0, 0, 673, 672, 674, 675, 676, 0, 677, 678,
	1636, 0, 1426, 0, 679, 680, 0, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1428, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 1635, 0, 0, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 0, 0, 0, 0,
	0, 432, 433, 0, 0, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 0, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	0, 508, 0, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 0,
	0, 521, 0, 0, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 0,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 0, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1429, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 0, 627, 628,
	629, 630, 0, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 0, 0, 0, 0, 0, 657,
	0, 648, 649, 650, 651, 0, 652, 0, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 0, 0, 0, 0, 673, 672, 674,
	675, 676, 0, 677, 678, 1424, 0, 1426, 0, 679,
	680, 0, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1428, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 1423, 0, 0,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 0, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 0, 508, 0, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 0, 0, 521, 0, 0, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 0, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	0, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1429, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 0, 627, 628, 629, 630, 0, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 0,
	0, 0, 0, 0, 657, 0, 648, 649, 650, 651,
	0, 652, 0, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 0, 0,
	0, 0, 673, 672, 674, 675, 676, 0, 677, 678,
	2231, 0, 1426, 0, 679, 680, 0, 681, 682, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1428, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 0, 0, 0, 509, 0, 421, 422, 0,
	423, 424, 425, 426, 427, 0, 0, 0, 0, 428,
	429, 430, 0, 0, 510, 431, 0, 0, 0, 0,
	0, 432, 433, 0, 0, 0, 434, 435, 436, 0,
	437, 0, 0, 0, 438, 439, 440, 441, 442, 443,
	0, 444, 446, 445, 0, 447, 0, 0, 448, 449,
	0, 0, 450, 451, 452, 453, 454, 455, 458, 0,
	0, 456, 457, 459, 460, 0, 461, 462, 464, 467,
	463, 465, 466, 468, 481, 482, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 484, 0,
	483, 0, 485, 486, 487, 488, 489, 496, 498, 499,
	494, 495, 497, 500, 501, 503, 491, 492, 493, 0,
	502, 490, 0, 0, 0, 504, 505, 506, 507, 0,
	0, 508, 0, 511, 512, 0, 0, 513, 0, 514,
	0, 0, 516, 517, 518, 0, 0, 519, 520, 0,
	0, 521, 0, 0, 522, 523, 515, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 0, 533, 534, 0,
	535, 536, 537, 0, 538, 539, 540, 0, 541, 0,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 557, 556, 558,
	0, 559, 0, 560, 561, 562, 0, 0, 0, 0,
	0, 563, 564, 566, 0, 567, 568, 569, 570, 565,
	571, 572, 573, 574, 575, 0, 576, 577, 578, 0,
	579, 580, 581, 582, 583, 0, 584, 0, 585, 586,
	593, 594, 595, 587, 588, 589, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 606, 1429, 607,
	608, 590, 591, 609, 610, 0, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 618, 0, 619, 620, 621,
	622, 623, 625, 592, 626, 631, 632, 0, 627, 628,
	629, 630, 0, 634, 635, 636, 0, 637, 638, 0,
	633, 624, 0, 639, 640, 641, 642, 643, 644, 0,
	645, 646, 0, 647, 0, 0, 0, 0, 0, 657,
	0, 648, 649, 650, 651, 0, 652, 0, 0, 653,
	654, 655, 656, 0, 658, 659, 0, 0, 660, 661,
	663, 665, 666, 662, 664, 667, 0, 668, 0, 0,
	669, 670, 671, 0, 0, 0, 0, 673, 672, 674,
	675, 676, 0, 677, 678, 2198, 0, 1426, 0, 679,
	680, 0, 681, 682, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1428, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 0, 0, 0,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 0, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 0, 508, 0, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 0, 0, 521, 0, 0, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 0, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	0, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1429, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 0, 627, 628, 629, 630, 0, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 0,
	0, 0, 0, 0, 657, 0, 648, 649, 650, 651,
	0, 652, 0, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 0, 0,
	0, 0, 673, 672, 674, 675, 676, 1426, 677, 678,
	0, 0, 0, 0, 679, 680, 0, 681, 682, 683,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 0, 317,
	0, 318, 0, 0, 0, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 0, 0, 0, 326,
	327, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 1428, 354, 355, 356, 357, 358, 0,
	359, 361, 0, 0, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 0, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 0, 0, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 0, 0,
	401, 402, 403, 0, 0, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	0, 415, 416, 417, 418, 419, 420, 0, 0, 0,
	509, 0, 421, 422, 0, 423, 424, 425, 426, 427,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 510,
	431, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 434, 435, 436, 0, 437, 0, 0, 0, 438,
	439, 440, 441, 442, 443, 0, 444, 446, 445, 0,
	447, 0, 0, 448, 449, 0, 0, 450, 451, 452,
	453, 454, 455, 458, 0, 0, 456, 457, 459, 460,
	0, 461, 462, 464, 467, 463, 465, 466, 468, 481,
	482, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 484, 0, 483, 0, 485, 486, 487,
	488, 489, 496, 498, 499, 494, 495, 497, 500, 501,
	503, 491, 492, 493, 0, 502, 490, 0, 0, 0,
	504, 505, 506, 507, 0, 0, 508, 0, 511, 512,
	0, 0, 513, 0, 514, 0, 0, 516, 517, 518,
	0, 0, 519, 520, 0, 0, 521, 0, 0, 522,
	523, 515, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 0, 533, 534, 0, 535, 536, 537, 0, 538,
	539, 540, 0, 541, 0, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 557, 556, 558, 0, 559, 0, 560, 561,
	562, 0, 0, 0, 0, 0, 563, 564, 566, 0,
	567, 568, 569, 570, 565, 571, 572, 573, 574, 575,
	0, 576, 577, 578, 0, 579, 580, 581, 582, 583,
	0, 584, 0, 585, 586, 593, 594, 595, 587, 588,
	589, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 606, 1429, 607, 608, 590, 591, 609, 610,
	0, 611, 612, 613, 614, 615, 616, 617, 0, 0,
	618, 0, 619, 620, 621, 622, 623, 625, 592, 626,
	631, 632, 0, 627, 628, 629, 630, 0, 634, 635,
	636, 0, 637, 638, 0, 633, 624, 0, 639, 640,
	641, 642, 643, 644, 0, 645, 646, 0, 647, 0,
	0, 0, 0, 0, 657, 0, 648, 649, 650, 651,
	0, 652, 0, 0, 653, 654, 655, 656, 0, 658,
	659, 0, 0, 660, 661, 663, 665, 666, 662, 664,
	667, 0, 668, 0, 0, 669, 670, 671, 0, 0,
	0, 0, 673, 672, 674, 675, 676, 0, 677, 678,
	0, 0, 0, 0, 679, 680, 0, 681, 682, 683,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 0,
	1931, 1932, 1934, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 1987,
	0, 0, 1934, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 1979, 1972, 0, 0,
	1982, 0, 0, 1948, 1949, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 1954, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1962, 1954, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1981, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 1969, 0, 0, 1933,
	0, 0, 0, 0, 0, 1980, 0, 1984, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 1960, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 1932, 0,
	1964, 1965, 1966, 1975, 1976, 1977, 1973, 0, 1972, 0,
	1986, 1982, 0, 0, 0, 0, 0, 0, 1961, 1963,
	1968, 1962, 0, 0, 0, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 1978, 0, 1979, 0, 1981,
	1986, 0, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 1970, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1954, 0, 0,
	0, 0, 0, 0, 0, 1950, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 1971, 0, 4645, 0,
	0, 0, 0, 0, 0, 0, 1980, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 0, 1969, 4469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 1956, 1957, 1958, 1959, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 1972, 0, 1960, 1982, 0, 0,
	0, 0, 0, 0, 1961, 1963, 1968, 1962, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 1955,
	0, 1978, 0, 1979, 0, 1981, 0, 0, 0, 0,
	1948, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1973, 1970, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1954, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 1971, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 4383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 1960, 1982, 0, 0, 0, 0, 0, 0,
	1961, 1963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 1978, 0, 1979,
	0, 0, 0, 0, 0, 0, 1948, 1949, 0, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 1973, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 1962, 0, 1954,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 4382, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 1960, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 0, 0, 1939,
	0, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 1973,
	1972, 0, 0, 1982, 0, 0, 1933, 0, 0, 0,
	1961, 1963, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1978, 0, 1979,
	0, 0, 0, 1986, 0, 0, 1948, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1970, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 1971,
	0, 0, 0, 0, 1939, 0, 0, 0, 1980, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 1969,
	0, 4381, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 1972, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 1979, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 1960, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1962, 0, 1954, 0, 0, 0, 0, 0,
	1934, 1955, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 1973,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 1986, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1956, 1957, 1958, 1959, 0, 1971,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 1955, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 4006, 0, 0, 1931, 1932, 0, 1964, 1965, 1966,
	1975, 1976, 1977, 0, 1973, 1972, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 1968, 1962, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 1978, 0, 1979, 0, 1981, 0, 1986, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 1970,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1953, 1954, 0, 0, 0, 0, 0,
	0, 0, 1950, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 1969, 0, 3476, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	1956, 1957, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 1972, 0, 1960, 1982, 0, 0, 0, 0, 0,
	0, 1961, 1963, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 1955, 0, 1978, 0,
	1979, 0, 1981, 0, 0, 0, 0, 1948, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 1973, 1970, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 1971, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 0, 3475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 1960,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 0, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	1973, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 1954, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942,
	1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0,
	0, 0, 3474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1960, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 1979, 0, 0, 0,
	1986, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 0, 0, 2378, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1962, 1971, 0, 0, 0,
	0, 0, 0, 1934, 0, 1980, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 1981, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 1969, 0, 3473, 0,
	1987, 0, 0, 0, 0, 0, 0, 1984, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 2379, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 1955, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 1987, 0, 0, 0, 0, 1973, 1939, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 2310, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 0, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 1979, 0, 0,
	0, 0, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2308, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 1971, 1954, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 0, 3438, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972,
	0, 0, 1982, 0, 0, 0, 1980, 0, 0, 1961,
	1963, 1968, 1962, 0, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 1978, 1969, 1979, 0,
	1981, 0, 0, 0, 0, 1948, 1949, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 1970, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 1954, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1980, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 2380, 0, 0, 0, 0, 0, 1973, 0, 1984,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 0, 0, 0, 1939, 5136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 2309, 1960, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 2381, 0, 0, 0, 0,
	1955, 0, 1978, 0, 1979, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 1973, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 1954, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	1931, 1932, 1986, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 2307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 0, 0, 0, 0,
	0, 0, 1934, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 1984, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1953,
	0, 0, 0, 0, 0, 0, 0, 5135, 1950, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1968, 1962, 0, 0, 0, 0,
	3409, 0, 0, 1934, 0, 0, 1955, 0, 0, 0,
	0, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	1987, 0, 0, 0, 1973, 0, 1939, 0, 3538, 1933,
	0, 0, 0, 0, 3537, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	1982, 0, 0, 0, 0, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3410,
	0, 0, 0, 0, 1978, 0, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 1971, 0, 1954, 1939, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 1980, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 1969, 1979, 0, 0,
	0, 0, 0, 0, 1948, 1949, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 2923, 0, 0, 0, 0, 0, 1954, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1962, 0, 0, 1960, 2922, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 1980, 0, 1955, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 1953, 1984, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 0, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 0, 0, 1972, 0, 0, 1982, 0,
	0, 1986, 0, 0, 0, 1961, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 1979, 0, 0, 0, 0, 0,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 1954, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 1934, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 1984, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1931, 1932,
	0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1968, 1962, 1960, 0, 0, 0, 0, 0, 0,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1981, 0, 0, 0, 0, 0, 1955, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 1987, 1939, 0,
	4741, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 1982, 0, 0, 0, 0, 0, 1986, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1957, 1958, 1959, 1954, 0,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 0, 0, 0, 0, 1972, 0, 1980, 1982, 0,
	0, 0, 0, 0, 0, 1961, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 1978, 0, 1979, 0, 0, 0, 0, 1984,
	0, 1948, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 1954, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1968, 1962, 1960, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	1955, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	1933, 0, 0, 0, 1969, 1163, 0, 0, 1973, 0,
	0, 1953, 0, 0, 0, 1984, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0, 1972,
	0, 0, 1982, 0, 0, 0, 0, 0, 1986, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1931,
	1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 1968, 1962, 0, 1945, 1946, 1952, 1974, 1951,
	1947, 1934, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940,
	1941, 1981, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 1984,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1968, 1962, 0, 0, 1960, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	1955, 0, 0, 0, 0, 1956, 1957, 1958, 1959, 1987,
	0, 0, 0, 0, 0, 1939, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 1982,
	0, 0, 1986, 0, 0, 0, 1961, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4516, 0, 1978, 0, 1979, 0, 0, 0, 0,
	0, 0, 1948, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 0, 0, 0, 0, 0, 1956, 1957, 1958, 1959,
	0, 0, 0, 0, 0, 1954, 1939, 0, 4202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 1972, 0, 0,
	1982, 0, 0, 0, 1980, 0, 0, 1961, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 1969, 1979, 0, 0, 0,
	0, 0, 0, 1948, 1949, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 1931, 1932, 0,
	1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1968, 1962, 0, 0, 1960, 0, 0, 0, 0, 1934,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 1980, 0, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 1933, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 1953, 1984, 0, 0,
	0, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4203, 0,
	0, 0, 0, 0, 0, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1955, 0,
	0, 0, 0, 1956, 1957, 1958, 1959, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 1972, 0, 0, 1982, 0, 0,
	1986, 0, 0, 0, 1961, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 1979, 0, 0, 0, 0, 0, 0,
	1948, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 1932, 1954, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 1968, 1962, 0, 1945, 1946, 1952,
	1974, 1951, 1947, 1934, 1944, 1942, 1943, 1935, 1936, 1937,
	1938, 1940, 1941, 1981, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1933,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 1984, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 3544, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 1932, 0,
	1964, 1965, 1966, 1975, 1976, 1977, 0, 0, 1972, 0,
	0, 1982, 0, 0, 0, 0, 0, 1986, 1961, 1963,
	1968, 1962, 0, 0, 0, 3539, 0, 0, 0, 1934,
	3987, 0, 0, 0, 0, 1978, 0, 1979, 0, 1981,
	0, 0, 0, 0, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 1970, 0, 0, 1933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1954, 0, 0,
	0, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 1956, 1957, 1958, 1959, 0, 0, 0,
	0, 0, 0, 1939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975,
	1976, 1977, 0, 0, 1972, 0, 1960, 1982, 0, 0,
	0, 0, 0, 0, 1961, 1963, 1968, 1962, 0, 0,
	0, 0, 0, 0, 0, 1934, 0, 0, 0, 1955,
	0, 1978, 0, 1979, 0, 1981, 0, 0, 0, 0,
	1948, 1949, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 1973, 1970, 0,
	0, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1953, 1954, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 1956,
	1957, 1958, 1959, 0, 0, 0, 0, 1971, 0, 1939,
	0, 0, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 1931,
	1932, 0, 1964, 1965, 1966, 1975, 1976, 1977, 0, 0,
	1972, 0, 1960, 1982, 0, 0, 0, 0, 0, 0,
	1961, 1963, 1968, 1962, 0, 0, 0, 3477, 0, 0,
	0, 1934, 0, 0, 0, 1955, 0, 1978, 0, 1979,
	0, 1981, 0, 0, 0, 0, 1948, 1949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 1973, 1970, 0, 0, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 1954,
	0, 0, 0, 0, 0, 0, 0, 1950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 1956, 1957, 1958, 1959, 0,
	3504, 0, 0, 1971, 0, 1939, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947,
	0, 1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941,
	0, 0, 0, 0, 0, 1931, 1932, 0, 1964, 1965,
	1966, 1975, 1976, 1977, 0, 0, 1972, 0, 1960, 1982,
	0, 0, 0, 0, 0, 0, 1961, 1963, 1968, 1962,
	0, 0, 0, 0, 0, 0, 0, 1934, 0, 0,
	0, 1955, 0, 1978, 0, 1979, 0, 1981, 0, 0,
	0, 0, 1948, 1949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 1973,
	1970, 0, 0, 1933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 1954, 0, 0, 0, 0,
	0, 0, 0, 1950, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 1956, 1957, 1958, 1959, 0, 0, 0, 0, 1971,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943,
	1935, 1936, 1937, 1938, 1940, 1941, 0, 0, 0, 0,
	0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976, 1977,
	0, 0, 1972, 0, 1960, 1982, 0, 0, 0, 0,
	0, 0, 1961, 1963, 1968, 1962, 0, 0, 0, 0,
	0, 0, 0, 1934, 0, 0, 0, 1955, 0, 1978,
	0, 1979, 0, 1981, 0, 0, 0, 0, 1948, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 1973, 1970, 0, 0, 1933,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1953, 1954, 0, 0, 0, 0, 0, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 1956, 1957, 1958,
	1959, 0, 0, 0, 0, 1971, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 1945, 1946, 1952, 1974,
	1951, 1947, 0, 1944, 1942, 1943, 1935, 1936, 1937, 1938,
	1940, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	1960, 1982, 0, 0, 0, 0, 0, 0, 1961, 1963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 1978, 0, 1979, 0, 0,
	0, 0, 0, 0, 1948, 1949, 1931, 1932, 0, 1964,
	1965, 1966, 1975, 1976, 1977, 0, 0, 0, 0, 0,
	0, 1973, 1970, 0, 0, 0, 0, 0, 0, 1968,
	1962, 0, 0, 0, 0, 0, 0, 1954, 1934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1981, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 1933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 1980, 0, 0, 0,
	0, 0, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 2491, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 0, 1944,
	1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 1958, 1959, 1960, 0, 0, 0,
	0, 0, 1939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 0, 1964, 1965, 1966, 1975, 1976,
	1977, 0, 0, 1972, 0, 0, 1982, 1973, 0, 0,
	0, 0, 0, 1961, 1963, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 1934, 0, 0, 0, 0, 0,
	1978, 0, 1979, 0, 1981, 0, 0, 0, 0, 1948,
	1949, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 1970, 0, 0,
	1933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1953, 1954, 0, 0, 0, 0, 0, 0, 0,
	1950, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 1945, 1946,
	1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935, 1936,
	1937, 1938, 1940, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 1956, 1957,
	1958, 1959, 0, 0, 0, 0, 0, 0, 1939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 1960, 1982, 0, 0, 0, 0, 0, 0, 1961,
	1963, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	1092, 0, 0, 0, 1955, 0, 1978, 0, 1979, 0,
	0, 0, 0, 0, 0, 1948, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 1049, 0, 0, 0, 0,
	0, 0, 1973, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 1064, 0, 1047, 1046, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 1066, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 1051, 0,
	0, 0, 0, 1103, 0, 1076, 0, 0, 0, 0,
	0, 0, 0, 1061, 1062, 0, 0, 1980, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 1053, 0, 0, 0, 0, 0, 1054, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	1055, 0, 0, 1945, 1946, 1952, 1974, 1951, 1947, 1090,
	1944, 1942, 1943, 1935, 1936, 1937, 1938, 1940, 1941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	1955, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1058, 1059, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1067, 1065, 0, 0, 0,
	0, 0, 0, 1060, 0, 0, 0, 1077, 0, 0,
	1098, 1097, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1945,
	1946, 1952, 1974, 1951, 1947, 0, 1944, 1942, 1943, 1935,
	1936, 1937, 1938, 1940, 1941, 0, 0, 0, 1052, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 0, 1085,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 1083,
	0, 0, 0, 0, 0, 0, 0, 1101, 1078, 0,
	0, 1070, 1068, 0, 0, 1073, 0, 0, 0, 0,
	0, 1074, 0, 0, 1043, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 1075, 0, 0, 0, 0,
	0, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084,
}

var sqlPact = [...]int{
	10219, -1000, -1000, -1000, -1000, 191, -1000, -1000, 190, 189,
	188, 185, 184, 183, 181, 177, 175, 174, 173, -1000,
	-1000, 172, 171, 167, 166, -1000, -1000, 164, -1000, -1000,
	163, -1000, 161, 159, 156, -1000, -1000, 155, -1000, 154,
	-1000, -1000, -1000, -1000, 153, 148, 147, 98658, 98073, 99241,
	2440, 125530, 108000, 2141, 87555, 124945, 86970, 124360, 2315, 13389,
	123775, 2889, 146, -1000, 123190, 145, 144, 143, -1000, 107415,
	122605, 105077, 104492, 2140, -1000, 141, 140, -1000, 11224, 76390,
	139, 138, 137, 136, 2681, 134, -1000, 133, 132, -1000,
	-1000, 131, -1000, 16749, 1646, -1000, 130, 122, -1000, 7578,
	103907, 120, 118, 117, 2591, 116, 115, 73461, 114, 113,
	112, 2452, 2973, -1000, -1000, 2157, -1000, -1000, 111, 108,
	107, 106, 105, 104, 102, 100, 98, 96, 90, 89,
	88, -1000, 87, 86, 85, 84, 83, -1000, 80, 79,
	77, -1000, 76, -1000, 75, 74, 73, 72, 68, 67,
	63, 59, 55, 53, 52, 51, 48, 46, 44, 145706,
	-1000, -1000, 43, -1000, 2049, 1791, 1789, 1783, 1760, 1757,
	1058, 42, 41, 39, 37, 33, 30, 28, 26, 24,
	23, 22, 21, 17, 16, 12, 11, 10, 9, 8,
	6, 165, 5, 3, 2, 1, 0, -1, -2, 3024,
	3665, -1000, 1663, 999, 33481, 3097, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 134275, 126113, -6, -84,
	-7, -1000, 3392, 990, 61115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 263, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 465, 2584,
	768, -1000, -1000, -1000, 122020, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2439, -16, -1000, 2144, -1000, -1000, -1000,
	-1000, -1000, 767, -1000, 2438, 2392, 349, 2385, -1000, -1000,
	-1000, 3528, 2586, 3958, 3955, 3950, 3945, 3941, 133692, 1970,
	3940, 2660, 3931, 3928, 3927, 3926, 3924, 3923, 3922, -1000,
	97488, 1116, 96903, 96318, 3498, 121437, 95733, 120852, 136613, 51547,
	978, 3524, -1000, -1000, -1000, -1000, -1000, -1000, 126113, -1000,
	1110, -1000, -1000, 3921, 2150, 764, 106830, -1000, -1000, 120267,
	1893, -1000, -1000, -1000, 996, 1263, 35877, 35877, 35877, 247,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3537, -1000, -1000,
	-1000, -1000, 126113, 2819, 2819, 1468, 1486, 1486, 2819, 2819,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3920, 3916,
	3915, 3913, 3912, -1000, -1000, -1000, 86385, 26102, 85800, 85215,
	119682, 50948, 95148, 94563, 3911, 3908, 3906, 50349, 81120, 58732,
	3664, 119097, 136028, 3662, 3661, 1107, 2139, 1536, -1000, -1000,
	-1000, -1000, -1000, -1000, -33, 78142, 3720, 126113, -1000, 245,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49750, 809, 49151,
	778, 48552, 753, 118512, -1000, -1000, -1000, -1000, 80525, -1000,
	117927, 2583, 3905, 3904, 1210, 3903, 3370, 1937, 3902, 1966,
	1297, 3901, 3900, 3899, 3898, 3897, 3893, 3892, 1523, 117342,
	3096, 1604, 116757, 1869, 135443, 1106, 93978, 99241, 2741, 116172,
	1463, 1399, -1000, -1000, -1000, -1000, 3191, 2972, 2932, 1171,
	-1000, -1000, -1000, -1000, 64655, 8818, 8792, -1000, -1000, 13581,
	115587, 67620, 99241, 99241, -1000, -1000, -1000, -1000, -1000, -1000,
	47953, 752, 47354, 843, 115002, -1000, -1000, 65248, 3059, 1161,
	-1000, -1000, -1000, -1000, -1000, 114417, 46755, 710, 46156, 835,
	126113, -1000, 3094, 1929, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2472, 1727, 3719, 2814, 79930, 2195, 1485,
	3487, 3184, 3173, 1618, 2138, 3171, 3887, 2771, 3170, 3169,
	3162, 3159, 3143, 1795, 2703, 487, 2694, 32882, 3085, 1886,
	45557, 1606, 1611, 3120, 3112, 3736, 3585, 2100, 2129, 2099,
	2134, 84630, 3886, 3881, 3405, 3108, 3105, 2874, 3100, -1000,
	3056, 1513, 243, -1000, -1000, -1000, -1000, -1000, -1000, 1576,
	-1000, -1000, -1000, -1000, -1000, 89887, -1000, -1000, 1506, -1000,
	-1000, 1506, -1000, -1000, -1000, -1000, -1000, 1370, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1663, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2724, -1000, 2173, -1000, -1000, -1000, 2628,
	3398, 3398, 3398, 3522, 446, 430, -1000, 165, -1000, -1000,
	145000, -1000, -1000, 52146, 52146, 52146, 52146, 52146, 52146, 52146,
	52146, 2335, -1000, 762, -1000, -1000, 803, -1000, 759, 677,
	582, -1000, -1000, -1000, -1000, -1000, -1000, 758, -1000, -1000,
	-1000, -1000, -1000, -1000, 3696, -1000, 29151, -1000, -1000, -1000,
	463, 751, 52146, -1000, -1000, 3753, 3752, 876, -1000, 241,
	1019, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3093, 748, 744, -1000, 738, 735, 734,
	732, 728, -1000, 727, -1000, 722, 719, 718, 717, 716,
	712, 709, 708, -1000, 2151, -1000, -1000, -1000, -1000, -1000,
	-1000, 647, 635, 635, 635, -1000, 1091, -1000, -1000, -1000,
	275, 634, 267, 630, 625, 621, -1000, 707, 703, 702,
	701, 694, 690, 689, 687, 685, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1090, -1000, -1000, -1000, -1000, 1284, -34,
	126113, -1000, 465, -34, -1000, -1000, 683, -1000, 37692, 37692,
	37692, -1000, -1000, 2437, 52146, -1000, 2537, -1000, -28, -28,
	968, 62873, -1000, 59921, 968, 363, 818, 68789, -1000, 3055,
	-1000, -1000, 679, 240, -1000, -1000, -1000, -1000, 26695, 3054,
	126113, 126113, 126113, 99241, 99241, 99241, 126113, 3878, 3876, 3271,
	52146, -1000, -1000, 75805, 138363, 99824, -1000, -1000, 3645, 74044,
	75221, 3092, 138363, 3089, 137783, 3874, -1000, -1000, -1000, -1000,
	-1000, 3246, 3873, 3869, 3868, -1000, 126113, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 252, 3245, -1000, -1000, 103322, 252,
	3244, -1000, 252, 3243, -1000, 102739, -1000, -1000, 2353, 3241,
	-1000, -1000, 256, 3239, -1000, -1000, -1000, 253, 3238, -1000,
	-1000, 235, -92, 3237, -1000, -1000, -1000, -1000, -1000, -1000,
	145000, -1000, -1000, -1000, 137198, -1000, 3412, -1000, 126113, -1000,
	52146, -1000, -1000, 3644, 1880, 3438, 3560, -1000, -1000, -49,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2633, 2617, 1236,
	2474, -1000, 3294, 1445, 35877, 3356, -1000, -1000, -1000, -1000,
	-1000, 232, 26695, 2959, -1000, -1000, 126113, -1000, 126113, 2819,
	2819, -1000, -1000, -1000, 3729, 3728, 2819, 2819, 126113, 126113,
	-1000, -1000, -1000, -1000, -1000, -1000, 5258, 3236, 1645, -1000,
	2468, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2235, 3234, -1000, 2373, 3233, 2160, -1000, -1000, 2445, -1000,
	141411, 1440, -1000, -1000, -1000, -1000, 2028, 3232, -24, -1000,
	-1000, 2326, -1000, -1000, -1000, -1000, 141300, -1000, 2992, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1763, -1000,
	-1000, 2217, 2092, -1000, 1395, 3231, -1000, 2810, 2810, 93393,
	3257, 67027, 65248, 78142, -38, -1000, -1000, -1000, -1000, -1000,
	-106, -1000, 25502, 145000, -1000, -1000, -1000, -1000, 1916, 145000,
	920, -1000, -1000, 3229, -1000, 145000, 894, -1000, -1000, 3228,
	-1000, 2699, -1000, 3088, -1000, -1000, 2530, 2528, 1071, -1000,
	3867, -1000, -1000, 3863, -1000, 3862, 3861, 3860, -1000, 1718,
	2110, 3857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	92810, 2434, -1000, -1000, 89304, 3087, -1000, 2527, 3557, -1000,
	92225, 1098, -1000, 1048, 2523, -1000, 102156, 1030, 2520, -1000,
	3856, 3497, 2766, 1048, 2518, -1000, -1000, -1000, -1000, -1000,
	1042, -1000, 70539, -1000, 70539, -1000, 1674, -1000, 133109, -28,
	99241, 3696, -1000, -90, -1000, -1000, -1000, 990, -1000, 64059,
	-1000, 64059, 106245, 81713, 1024, 3053, 72875, 144794, -1000, 1069,
	-1000, -1000, 145000, -1000, -1000, -1000, 2698, -1000, -170, 2809,
	-1000, 81713, 66434, 3052, 2695, -1000, 145000, -1000, -1000, -1000,
	-1000, 145000, -1000, -1000, -1000, 81713, 89304, -1000, 113832, 91640,
	-1000, -1000, 1508, 2685, -1000, -1000, -1000, 81713, 1405, 81713,
	81713, 81713, -1000, 113247, -1000, -1000, 2196, 1667, 3400, 2193,
	99241, -1000, 1973, -1000, -1000, -1000, 3469, 3255, 126113, -1000,
	-1000, 3086, -1000, 77558, 101573, -1000, 100990, -1000, 100407, -1000,
	99241, -1000, 99241, -1000, 3855, 3854, 3851, -1000, -1000, 3850,
	-1000, 3848, 3461, -1000, 779, 44958, 145000, 3444, -1000, 3845,
	2081, 3085, 145000, -1000, 3235, 1787, 1785, 126113, -1000, -1000,
	126113, -1000, 126113, -1000, -1000, -1000, 2453, 1622, -1000, -1000,
	2631, -1000, -1000, -1000, 1067, -1000, -1000, 99241, 99241, 99241,
	99241, 1280, -1000, 44359, -1000, -1000, 3137, 3844, 1850, -1000,
	1892, -1000, 3051, 3419, -1000, 1469, 1896, 226, 3756, -1000,
	-1000, 257, -1000, -1000, -49, -1000, 132526, -1000, 2628, -1000,
	126113, -1000, 2637, 3079, 3084, 1868, 2430, 2739, -1000, 43760,
	2705, 55740, 2466, 165, -1000, -1000, 165, 165, 34679, -1000,
	-1000, 74044, 74044, 26695, 1378, 52146, 52146, 52146, 52146, 52146,
	52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146,
	52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146,
	52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146, 52146,
	52146, 2394, 52146, 1362, 52146, 52146, 52146, 52146, 2107, -1000,
	-1000, 2077, 485, 2121, 677, -1000, -1000, -1000, 3697, 3697,
	3697, 963, 963, 963, 145461, 145461, 613, 3843, 803, -1000,
	52146, -1000, 81, 63456, 52146, 27290, -1000, 430, 11123, 2668,
	-1000, 428, 27919, -1000, -1000, -1000, 29151, 582, 43131, 52146,
	1076, 145000, -1000, -1000, 1522, 3721, 24902, 3083, 2863, 673,
	858, 856, 32253, 31624, 30995, 30366, 855, 852, 52146, 52146,
	52146, 52146, 52146, 52146, 52146, 52146, -1000, -1000, 3724, -1000,
	3721, -1000, -1000, -1000, -1000, 3721, 1319, 1318, 3721, -1000,
	3721, 3721, 9914, 9914, 42532, 41933, 41334, 56339, 40735, 52146,
	29767, 40136, 39537, -1000, 58136, 126113, -34, 3643, 52146, 322,
	-1000, 142317, -1000, 322, 322, 661, -93, 145000, 2692, 2692,
	61701, 2405, 2346, 2346, 2346, -1000, 968, 19464, 968, 111498,
	2360, 968, 968, 223, 262, 426, 59328, 2537, 111498, 788,
	660, -8, -12, -13, -1000, -1000, -15, -22, -1000, -1000,
	99241, 658, 27290, 26695, 221, 2108, -99, 2715, 2714, -1000,
	2712, 2711, -1000, 2710, 2433, -1000, -1000, -1000, 1917, -104,
	1357, 99241, 126113, 1497, 3838, -105, -1000, 8031, -107, -1000,
	1199, 220, 3721, -1000, -1000, -1000, -1000, -1000, 3835, 3833,
	-1000, 1087, 656, 655, 424, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 647, 635, 635, 635, -1000, 275, 634,
	267, 630, 625, 621, -1000, -1000, -1000, -1000, -1000, 3045,
	99241, 126113, 1410, 3832, 88138, -92, 99824, -26, -1000, -1000,
	126113, -1000, -1000, -1000, 3823, -1000, 99241, -1000, -1000, 99241,
	252, 3226, -1000, 99241, -1000, 99241, 251, 3225, -1000, -1000,
	126113, -1000, 99241, 99241, -1000, 126113, 126113, 126113, 138363, 138363,
	249, -1000, 99241, 917, -110, 1219, -49, -1000, -1000, -1000,
	-1000, 1506, -1000, 1803, -1000, -1000, -1000, -1000, -1000, -1000,
	1510, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 876,
	-1000, -1000, -1000, -1000, 3711, 3709, -35, -1000, -1000, 26695,
	-1000, 2057, -1000, -1000, -1000, -1000, 126113, 126113, -1000, -1000,
	126113, 126113, -1000, -1000, -50, 1713, 562, 1356, -1000, 84045,
	2607, 3456, 3816, 2754, 3389, 1666, -1000, 1616, 618, -1000,
	3541, 89887, 3583, 3609, 1401, -1000, 3040, -1000, -1000, -1000,
	995, 1821, 1881, 1354, 1343, 89887, 2373, -1000, 74044, -1000,
	2763, 3521, 1486, 1470, 1486, 1486, 1466, -1000, 89887, 1879,
	1337, 1336, 1334, -1000, -1000, 1700, 1669, -1000, -1000, 112664,
	1537, -1000, 1331, 1329, 3660, 2724, 2282, 842, 2054, -1000,
	1411, 1328, 3038, -1000, -1000, -51, 3572, 3584, 1401, -1000,
	3037, 1316, -1000, -1000, -1000, 3514, 99241, 26695, 1664, 1662,
	1653, 1835, 1311, -36, -1000, 3566, 1710, -1000, 89304, 89304,
	108583, 126113, 3672, 81713, -1000, 2551, -1000, -1000, -1000, 3486,
	3485, -1000, -1000, 1308, 1305, -1000, 1084, 9624, 3329, -1000,
	138363, 1084, 1084, 2125, 3224, 2794, 1824, -1000, 2808, 960,
	2807, -1000, -1000, -1000, 960, -38, 78142, 126113, 218, -1000,
	81, 52146, 52146, 81, 52146, 81, -1000, 3550, 3223, 3221,
	3814, -1000, -1000, -1000, -1000, -1000, 3813, 2066, 2655, -1000,
	-1000, 617, 2515, 3026, 126113, 197, -1000, 99241, 3127, 76974,
	3216, 138363, 2373, 2514, -1000, -1000, 91055, -1000, 3214, 465,
	2513, -1000, 636, 3812, 3210, -1000, 131943, -1000, 3412, 1309,
	3208, 1154, 916, 3641, -1000, 916, 71123, -1000, 126113, -1000,
	-28, 5184, 82879, -113, -118, 422, -1000, 112081, 126113, 126113,
	3343, 2089, 2073, -1000, 1031, 65248, -1000, 65248, -121, -1000,
	-170, 2804, 1588, 65248, -1000, 1024, -112, 960, -1000, 960,
	-1000, 99241, 3082, -1000, -1000, 81713, 1024, 1024, 1024, -1000,
	-1000, -1000, -1000, 3811, 3809, 3807, 3805, -1000, -1000, 1047,
	99241, 126113, 99241, -1000, -1000, 1704, -1000, 217, -1000, 138363,
	-1000, 138363, 126113, 99241, -1000, 1047, 126113, 1047, 126113, 1047,
	126113, 1047, 1047, -1000, -1000, -1000, -1000, -1000, 81, -1000,
	-1000, 145000, -1000, 52146, -1000, -1000, 1608, 3804, 1742, -1000,
	3081, -1000, 3080, -1000, 20, -1000, -1000, 3723, 1963, -1000,
	3751, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3803,
	145000, -1000, 2122, -1000, -1000, -1000, -1000, 99241, 99241, 99241,
	99241, 126113, 3328, -1000, 126113, 3324, 99241, -1000, 3755, -1000,
	-1000, 89887, -1000, 2637, 3079, -1000, -1000, -1000, -1000, -1000,
	-1000, 1514, 2406, -1000, 2682, -1000, 1642, -1000, -1000, -1000,
	145000, 56938, -1000, -1000, 145000, 1930, -1000, 55141, 54542, -1000,
	-1000, 1765, 99241, 2728, -1000, 2728, -87, -1000, 142030, 2679,
	99241, -1000, -1000, -1000, -1000, -1000, 992, 1053, 1053, 1434,
	1434, 1434, 1434, 3571, 1269, 348, 1244, 14699, 14699, 10356,
	10356, 10356, 10356, 10356, 14699, 6019, 963, 963, 6019, 6019,
	6019, 6019, 6019, 963, 963, 963, 14699, 14699, 14699, 963,
	145461, 145255, 10891, 52146, 52146, 1304, 1877, 485, 7381, 52146,
	9727, 9727, 9727, 9727, -1000, 2113, -1000, -1000, -1000, -1000,
	3014, 616, 56339, 56339, -1000, -1000, -1000, -1000, 28535, 52146,
	-1000, -1000, -1000, -1000, 38908, -1000, -1000, 140999, -323, 421,
	-1000, 216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 417, -83, -5, -1000, 52146,
	52146, 52146, 416, -1000, 210, 52146, 126113, -1000, 17332, 787,
	-120, -1000, -123, 1521, -1000, 52146, -1000, -1000, 1303, -1000,
	1301, 1300, 1299, -1000, 615, 414, -1000, 209, -1000, 2342,
	614, 611, 52146, -1000, -1000, -1000, -1000, -1000, 140739, -1000,
	-1000, 140533, -1000, -1000, 140327, -1000, -1000, 140067, -1000, -1000,
	-1000, -1000, -1000, 144588, 16712, 15474, 14805, 9423, 13637, 12739,
	-124, 412, -130, 411, 991, 984, 410, 408, 407, -131,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -133, 404, -1000, 3013, -83, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 403, -1000, 402, -1000, 144382,
	-83, 388, 6673, -1000, 56339, 56339, 56339, 56339, 387, -1000,
	141919, -1000, 144176, 38309, 38309, 38309, 385, 143970, 52146, -83,
	-143, -1000, -145, -1000, -1000, -1000, -1000, 556, -146, 1072,
	37692, 60529, 26695, -1000, 1072, 1072, 52146, -1000, 52146, 2690,
	-1000, -1000, -1000, -1000, 2689, 2035, 2692, 61701, -1000, -1000,
	-1000, -1000, 111498, -1000, 3696, 2852, -1000, 111498, -1000, -1000,
	126113, 465, -1000, 111498, 111498, 26695, 968, -1000, 968, 111498,
	833, -1000, -1000, -1000, -1000, -1000, 384, 71709, -5, 204,
	26695, 1048, -1000, -1000, 2829, 2829, 2829, 2829, 2829, 99241,
	-1000, -1000, 138363, 1296, -44, -58, 2803, -1000, 3669, -1000,
	2170, -1000, 74044, -1000, 802, 943, 26695, -1000, -1000, -1000,
	610, -1000, 3721, 3721, -1000, 3721, 138363, 3011, 285, 2802,
	-1000, 2431, -39, 180, 138363, 3802, -1000, -1000, 252, -1000,
	99241, 252, 252, -1000, 99241, 99241, 2353, -1000, 256, -1000,
	253, -1000, -1000, -92, -1000, 1066, 35877, -1000, 1506, -1000,
	-1000, 1665, -1000, 2093, -1000, 1248, -1000, -1000, 35877, -1000,
	3346, -1000, 1788, -1000, -1000, -1000, -1000, 5277, 126113, 126113,
	99241, -1000, 109749, 126113, -1000, 2205, 138363, -1000, 2511, 131360,
	2493, 130777, 74044, -1000, -1000, 607, 1001, 2678, 2677, 1146,
	126113, 126113, 2676, 130194, 129611, -1000, 3801, 126113, 2194, 52146,
	109749, 3513, 2352, 4030, 81, 81, -1000, 81, -1000, -1000,
	605, 1448, 99241, 99241, 126113, 138363, 99241, 2063, -1000, -1000,
	-1000, -1000, -1000, 90470, -1000, -1000, 1486, -1000, -1000, -1000,
	1486, 2373, 1962, 126113, 138363, 99241, 138363, 129028, 2047, 128445,
	2046, -1000, -1000, 2042, 1830, 126113, -1000, -1000, -1000, -1000,
	1557, -1000, 842, 1295, 3007, 52146, 52146, 2240, 81, 81,
	-1000, 81, 587, 26695, 2040, -1000, 3042, 126113, 3750, 127862,
	3747, 126113, 126113, 126113, 138363, 3403, 126113, -1000, -112, -40,
	-136, -1000, 942, 940, -106, -1000, 3672, -1000, 937, 2150,
	126113, 138363, -1000, 127279, 9624, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2216, 79335, 1165, 126113, 1395, -1000, -1000, 1823,
	1293, 1292, 89887, 2185, 1822, 1938, 138363, 65248, 1035, 65248,
	2767, -1000, -1000, 24302, -1000, 145000, 145000, -1000, 145000, -1000,
	76974, 81713, 126113, -1000, -1000, 1093, 126113, 83462, 1011, 3201,
	69955, -106, 1024, 89304, 81713, 3118, 126113, 2725, 126113, -1000,
	-1000, 2373, 3200, 465, 2510, -1000, 138363, 3640, 3199, 586,
	3799, 3798, -1000, 99241, 2428, 2509, -1000, -1000, 126696, 3262,
	842, 126113, 1072, 61701, 2041, -1000, 68206, 1129, 126113, 1957,
	158, -1000, -1000, -1000, -4, 126113, -1000, 810, -1000, -1000,
	5184, 5184, 1024, -136, 584, 65841, -154, -1000, 203, 583,
	933, 929, -1000, 5262, -1000, -170, -1000, 81713, 1031, 65248,
	3002, -170, 2800, 3001, -1000, -1000, 1065, -1000, 1467, 1024,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -29, 1933, 126113, -92, -92, -60, -44, -1000, 1047,
	-1000, 1047, -1000, 1047, -1000, -1000, -1000, 145000, -1000, -1000,
	-1000, 1738, 1733, 126113, -1000, 3075, -1000, 126113, -1000, -1000,
	26695, 126113, 99241, 26695, 99241, 3073, 3072, -1000, -1000, -1000,
	126113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1179,
	-1000, 1930, 2403, -1000, 582, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2606, -1000, -45, 34679, 974, -1000,
	-1000, 99241, -30, 52146, 52146, 6085, 6035, 52146, 56339, 56339,
	-1000, 52146, 5524, -1000, -1000, -1000, -1000, -1000, 2999, 581,
	52146, 74044, 6974, 6750, -1000, 381, 12343, 6019, -1000, 52146,
	-1000, 545, -1000, 378, 37093, -1000, 142717, -56, -156, -1000,
	20078, -83, -157, -1000, -1000, 798, -1000, 3176, -1000, 52146,
	143686, 2577, 2145, 1921, 1754, 3721, 3746, 23702, -1000, 72292,
	1074, 2363, 139912, -1000, -1000, -1000, -1000, 74044, 74044, 52146,
	52146, -1000, 52146, 52146, 52146, -1000, -1000, -1000, 3721, 972,
	-1000, -1000, -1000, 972, -1000, -1000, 1486, -1000, 1486, -1000,
	52146, -1000, -1000, 2988, 52146, -1000, 74044, 74044, 56339, 56339,
	56339, 56339, 56339, 56339, 56339, 56339, 56339, 56339, 56339, 56339,
	56339, 56339, 56339, 56339, 56339, 56339, 56339, 56339, 2669, 56339,
	3695, 3695, 3695, 609, -1000, 3069, 2988, 52146, 52146, 74044,
	376, 374, 371, -1000, 52146, -83, -1000, -1000, 8902, 580,
	-1000, 2594, -1000, 2861, -1000, 52146, -1000, -152, -1000, 2537,
	-1000, -1000, 2861, 2861, -159, 145000, 61701, 61701, -1000, 578,
	52146, 2674, -1000, -1000, 785, -324, -1000, 928, -1000, -1000,
	-1000, -1000, -1000, -1000, 927, -1000, 465, -1000, -1000, -1000,
	202, 111498, 111498, 784, -1000, -162, -1000, -1000, -164, -1000,
	3637, 367, 26695, -1000, 1072, 2762, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2709, -275, 138363, 138363, 1810, 2383, 3745,
	-1000, 3722, 797, 782, 195, 3721, 364, 361, 360, -92,
	138363, 138363, 1793, 74637, 138363, -1000, -1000, -1000, 252, -1000,
	-1000, -1000, 251, -1000, -1000, -1000, -1000, 2761, -1000, -49,
	-1000, -1000, -1000, 52146, -1000, 1015, -1000, -1000, 3409, 577,
	1283, 1282, -1000, -165, -1000, 918, -1000, -1000, -1000, -1000,
	2946, -1000, 3197, -1000, 2508, -1000, 1135, 2503, 1925, -1000,
	52146, 576, 2765, 575, 565, 3796, 2218, 3794, 1148, 3193,
	2353, 3190, 2353, -1000, -1000, -1000, 1000, -1000, 145000, -167,
	-1000, 2352, -1000, 561, 560, -1000, -50, 1695, 541, 1278,
	1064, -1000, -1000, 52146, 52146, 110915, -1000, 491, 3401, -31,
	-1000, -1000, -1000, 1792, 1277, 1275, -1000, -1000, -1000, -1000,
	2373, 1784, 1273, 1272, -1000, -1000, -1000, -1000, -1000, 2498,
	-1000, 126113, -1000, 3188, 126113, 126113, 1062, -1000, 3135, 3132,
	983, 126113, 52146, 52146, 143399, 143288, -1000, 1056, -1000, -1000,
	52146, -1000, -51, 1268, 3570, 2497, 99241, -1000, 2353, 3182,
	1259, -1000, 1256, -1000, -1000, -1000, 3564, 3563, 1274, -1000,
	108583, 81713, 81713, 3672, 65248, -1000, -1000, -1000, 81713, -1000,
	-1000, 78742, -1000, -1000, 1084, 126113, 138363, 99241, 1856, -1000,
	-1000, 88138, 88721, 126113, 2794, -92, 960, -1000, 2610, 960,
	1035, 2986, -1000, 2720, -1000, 1055, 99241, 3793, 357, -172,
	-52, 74044, -1000, -1000, -1000, -1000, 2493, 99241, 126113, 1394,
	2764, 126113, 126113, 3636, -1000, 2449, 619, 99241, 969, -1000,
	3696, -1000, -1000, -1000, 126113, -1000, -1000, 1049, -1000, 3554,
	99241, 3631, 3181, 1048, 81, 99241, 3734, -1000, -1000, 3629,
	99241, 3180, 2426, 2495, 2641, 842, 82296, 1048, 2362, -66,
	-1000, 1957, 36476, 3399, -173, -1000, -1000, -1000, 1072, 71123,
	61701, 52146, 3791, -174, -1000, -1000, -1000, -1000, -1000, 108583,
	81713, 1024, 126113, 126113, 3789, 81713, 81713, 81713, -57, 558,
	-1000, 909, 907, 904, -1000, -1000, -1000, -1000, -1000, -1000,
	902, 901, 900, 895, 1031, -1000, -1000, -170, 65248, 1031,
	65248, 81, -1000, 2370, 99241, -1000, 23102, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1047, 3742, -106, -1000, -1000, -1000,
	2243, 2465, 2243, 1932, 1926, -1000, -1000, 2399, -1000, -1000,
	-1000, -1000, 2745, 3394, 26695, 3568, 9727, 52146, 52146, 579,
	5266, 651, 9727, 52146, 52146, 74044, 6490, -175, 52146, 52146,
	-1000, 52146, 776, 145000, -1000, 3741, 52146, 355, 347, -1000,
	-1000, -1000, 3718, -1000, -1000, -1000, 145000, 52146, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 335, -1000, 194, -1000, -1000,
	-1000, 134858, -1000, 52146, 334, 3512, -1000, 330, 329, 11694,
	314, 139652, 139446, 139240, 327, -1000, -1000, 325, 323, 145000,
	3069, 145000, -1000, -1000, 1070, 1070, 1436, 1436, 1436, 1436,
	3695, 526, 1061, 405, 601, 601, 601, 676, 609, 609,
	601, 601, 601, 609, 2983, 2672, 544, 7658, -1000, -1000,
	145000, 145000, 320, -1000, -1000, -1000, -83, 317, 8902, -1000,
	2857, 3510, 145000, -1000, 61701, 2857, 2857, -1000, -1000, 2035,
	126113, 145000, 61701, -1000, 2852, -1000, 21296, 20690, -1000, 26695,
	-1000, -1000, -1000, -1000, 3696, -1000, 71709, -1000, 543, -1000,
	-3, -1000, 2762, -1000, 893, -1000, -1000, 81713, 81713, 2829,
	-1000, 2872, -275, -138, 126113, -1000, -1000, 774, 3788, 796,
	26695, 315, -1000, -1000, -1000, -92, -92, 126113, 2958, 99241,
	126113, 1398, -92, -1000, -1000, -1000, 3341, 145000, 3030, 2841,
	2840, 126113, 126113, -1000, 109749, 35877, 1572, 110332, 126113, 3178,
	-1000, 3175, -1000, 1146, 2267, 138979, 62287, -1000, 62287, 126113,
	-1000, -1000, -1000, -1000, 2056, 1786, 3786, 1203, -1000, 3473,
	126113, -1000, 126113, -1000, -1000, -1000, 109749, -1000, 126113, 126113,
	99241, 126113, -1000, 138363, 3149, -182, 145000, -59, -1000, 883,
	-1000, 1430, -1000, 22502, 126113, 138363, 99241, 126113, 138363, 99241,
	3164, 1126, 126113, -1000, 1125, 2311, -1000, -1000, 3131, -1000,
	145000, 143001, 81, 52146, 3145, -187, 26695, -1000, 3740, 3739,
	3163, 3478, -1000, 126113, 3738, 126113, 99241, 3340, -1000, -1000,
	-1000, 1045, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1774,
	1255, 1239, 2422, 2421, 2378, -60, 2185, 1035, -61, 542,
	-1000, 879, -1000, -1000, 878, 870, 1035, -1000, 81713, 65248,
	3785, 465, -1000, 2742, -1000, 105660, 83462, 2381, -1000, -1000,
	524, 126113, 126113, 523, -1000, 81, -1000, 3784, 109749, 513,
	-1000, 2368, -1000, 773, -1000, -1000, 2614, 138363, 2373, 81,
	99241, -1000, 1029, 465, 313, -63, -1000, 3177, 1143, 26695,
	99241, 3158, 2645, 842, 82296, -1000, 1309, 2739, -1000, -65,
	-1000, 682, 81, 2362, -1000, -66, 145000, -1000, 869, -188,
	311, -1000, 3335, -1000, -1000, -190, -1000, -1000, 5197, 5197,
	81713, 65248, 81713, 81713, 81713, 65248, 81713, -1000, 1031, 960,
	-1000, -170, -1000, 2477, -1000, -1000, -1000, -1000, -1000, -1000,
	26695, 1690, -1000, 509, 508, -1000, -1000, -1000, -1000, 3394,
	9727, 9727, 52146, 52146, 52146, 9727, 6490, -193, -1000, 9727,
	9727, -83, -1000, -1000, 142717, -1000, -1000, -1000, 145000, -1000,
	21902, 2271, -1000, 138949, -1000, 34679, -1000, -1000, 52146, 52146,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56339, 2954,
	506, 74044, -1000, -1000, 310, 1059, 52146, 53943, 2537, 1059,
	1059, -1000, -196, -1000, -1000, -1000, 3696, -1000, 3696, -3,
	-1000, -1000, 3782, 26695, -1000, 81713, -1000, -1000, -1000, 2374,
	-1000, -1000, 3076, -195, 795, -1000, 3779, -1000, -1000, 149,
	138363, 2910, 127, 2792, -1000, 81, -1000, -1000, -1000, -1000,
	-1000, -1000, 2787, 3628, -1000, 2034, -1000, 126113, 126113, -1000,
	126113, -1000, 26695, 126113, 2879, 1315, -1000, 1001, 2673, 505,
	56339, 1178, 99241, 926, 2835, 2832, -1000, 3657, 3509, 2847,
	-198, -1000, 126113, 52146, 126113, -201, -204, 2482, -1000, -1000,
	1177, 1314, 52146, 1174, -1000, -1000, -1000, 74044, 503, 2353,
	2353, -1000, -207, -209, -1000, -1000, -1000, 52146, 1235, 126113,
	35278, -1000, 3778, 3401, -1000, -1000, -1000, -1000, -1000, -1000,
	126113, 126113, -1000, 126113, 126113, -1000, 52146, -1000, 142601, 52146,
	1231, -1000, -1000, -1000, 3737, 2353, 26695, 2353, -1000, 2353,
	3478, 1195, 2407, 126113, 138363, 99241, 1894, 1894, 2979, -1000,
	-1000, -1000, 2541, 2541, 81713, 65248, 65248, -1000, -67, 1035,
	-1000, 3627, 2245, 3777, -1000, -1000, -1000, -1000, 2671, -1000,
	-1000, -1000, 126113, 2670, 2843, 62287, 500, 499, 126113, 1025,
	-1000, -210, 83462, 1011, 1017, -1000, -68, 490, -1000, 865,
	-1000, -1000, -1000, -1000, 465, -1000, 2757, 3624, -1000, 3735,
	489, 488, 126113, 2418, 486, 26695, 3396, 842, 82296, -1000,
	3262, 1957, -1000, 2490, 126113, 3378, -1000, 2739, 485, -1000,
	1024, 484, 1024, -1000, -218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1031, -75, -1000, 888, 622, -1000,
	-1000, 99241, 99241, 52146, 52146, -1000, 9727, 9727, 9727, -1000,
	287, -1000, -1000, 2362, 3503, -1000, -76, 18622, 18529, 6584,
	56339, 74044, -219, -1000, -1000, 126113, 145000, -77, -1000, 145000,
	483, 481, 439, -1000, -1000, -1000, 771, 770, -1000, -1000,
	-1000, -1000, 138363, 3773, -1000, 138363, -92, 138363, 138363, 1764,
	-1000, 109166, 126113, -1000, -1000, 1925, 1777, -1000, -1000, 126113,
	2494, -1000, -1000, -1000, 1038, 52146, 7658, 56339, 478, 52146,
	-1000, 477, 476, 3616, 3316, -1000, 2735, 2933, 2030, 62287,
	-1000, 3394, -1000, 18133, -1000, 1139, 2038, -1000, -1000, -1000,
	-1000, 145000, 56339, 3478, 62287, -1000, -1000, 475, 474, 145000,
	473, 860, 2903, -1000, -1000, -1000, -1000, -106, -106, -1000,
	145000, 81, 145000, 471, 3570, -1000, -1000, -1000, -1000, 2353,
	99241, 859, -1000, -1000, -1000, 1229, -1000, -1000, -1000, -1000,
	3772, 3771, 2902, 88138, -1000, -221, -1000, -1000, -1000, 2062,
	81, 1011, -1000, -1000, 2381, 470, -1000, 1022, 2708, 2708,
	-224, 62287, 62287, -226, 2412, 2753, -1000, 280, 3602, 1017,
	-1000, 3703, -1000, 3296, 3296, 52146, 3598, 3334, -1000, 81,
	-1000, 3734, 62287, -1000, 99241, 62287, 2416, 2137, 2625, 82296,
	-1000, 2641, -1000, -1000, -227, 126113, 1957, -1000, -1000, 81713,
	-1000, -1000, -1000, 2477, -1000, 126113, -1000, 126113, -1000, -1000,
	-232, -233, -1000, 2229, 52146, 34679, -1000, -1000, 6584, -234,
	-1000, -78, -1000, 3597, 53943, 3768, 3767, 3766, -1000, -1000,
	-275, -1000, -92, -92, -92, 126113, -1000, 2003, -1000, 2493,
	-1000, -1000, 3151, -1000, 2853, 469, 17730, 7658, 2592, 126113,
	15779, 2373, 2373, -1000, 3594, 2927, -1000, -1000, 2240, 467,
	-1000, -1000, -1000, -1000, 974, 126113, 1022, 2850, 99241, 7658,
	1144, -235, 2243, 2243, 52146, 34080, 2307, -1000, 52146, -1000,
	-1000, 3478, 65248, 138363, -1000, -1000, 138363, 2413, -1000, 2890,
	3706, -1000, 2412, 126113, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1139, -241, -243, -1000,
	-1000, 3466, -1000, 3331, 2742, 81, -1000, -1000, -1000, -244,
	145000, 81, 3765, 1029, 278, -251, 1143, -252, 99241, 2136,
	-1000, 842, -1000, 2645, 1072, 3268, -1000, -253, -1000, -259,
	-260, -1000, -1000, 276, 53344, 53344, 53344, -83, -87, -1000,
	126113, 466, -1000, -1000, -1000, -1000, -1000, 119, -1000, -1000,
	3117, 964, -1000, 837, 1958, 273, 1152, 272, 268, -1000,
	-1000, -1000, 2847, -1000, 126113, -1000, -1000, -1000, 964, 465,
	-1000, 52146, 1139, -265, -1000, 1124, -267, -1000, 1123, -268,
	-1000, 2900, -1000, -277, 2353, -1000, -275, 249, 1894, 1026,
	3548, -1000, -1000, -1000, 2611, -278, -1000, -1000, 2030, 1139,
	2240, 2559, -1000, 2245, 1025, -1000, -1000, -1000, -1000, -1000,
	1139, 464, 2030, 462, 1546, 842, -1000, -1000, 1486, 3396,
	3206, 1462, 1024, -1000, -1000, -1000, 3252, -1000, 57537, 2425,
	1920, 141617, 3252, 3252, -1000, -1000, 138363, 126113, 1022, 3534,
	-1000, 951, 950, 1601, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1072, -279, -1000, 2592, 145000, 1022, -1000, 2243,
	2779, -1000, 2243, 2899, -1000, 2290, -1000, -1000, -1000, -1000,
	2892, -1000, 1890, 3682, -1000, -1000, 1022, 126113, 2240, 2030,
	1022, 1914, 1908, 3762, 1011, 2412, 2030, 62287, 2240, 62287,
	2207, -1000, 126113, -1000, 2137, 1433, -1000, 1660, -1000, -1000,
	2127, 3651, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -92,
	-1000, -1000, 849, -1000, 3279, -1000, 1169, 2204, 2204, -1000,
	-1000, 837, -1000, -1000, 456, -1000, 455, -1000, 138363, 2366,
	-1000, -1000, -1000, -1000, 1022, 2240, 1072, -1000, 3760, -1000,
	2412, -1000, 2240, -286, 1022, -287, 2284, -1000, -1000, -106,
	2136, -1000, 1656, 71123, 1794, -1000, -1000, 2351, 52745, 52146,
	-1000, 3674, -1000, -1000, 2700, -1000, 2847, 52146, 52146, 249,
	69372, 1072, 1022, -1000, -1000, 2611, 1022, 1139, 1072, 2030,
	-1000, 842, 1546, 71123, -261, -1000, -1000, -1000, 145000, -1000,
	-1000, -1000, -1000, -293, -294, -1000, -136, 108583, -1000, 1072,
	-1000, 1072, 2030, -1000, 2240, 138363, 2207, -261, -1000, 2240,
	1226, -295, -1000, -1000, 2240, 1022, -1000, -1000, -1000, -1000,
	-1000, 264, -1000, 1022, 1072, 52146, 1072, -1000, -312, -1000,
	2240, -1000,
}

var sqlPgo = [...]int{
	0, 4598, 4593, 4590, 4589, 4586, 4585, 4583, 4582, 4581,
	4579, 4577, 4575, 4574, 4573, 173, 4572, 4571, 4570, 4563,
	4561, 4560, 4559, 4557, 4553, 4549, 4548, 4544, 4543, 4542,
	4541, 4539, 4538, 4537, 4536, 4534, 4533, 4532, 4531, 4526,
	4524, 4523, 4522, 4518, 4515, 4513, 4512, 4510, 4509, 4507,
	4506, 4505, 4504, 4497, 4496, 4495, 4493, 4492, 4491, 4490,
	4487, 4484, 4482, 4481, 4480, 4479, 4478, 4477, 4471, 4470,
	4469, 4468, 4466, 59, 4465, 4464, 4463, 4462, 4459, 4458,
	4457, 4456, 4455, 4454, 4452, 4451, 4450, 4449, 4448, 4447,
	4446, 4445, 4443, 4442, 75, 4441, 297, 4440, 4439, 4438,
	4437, 4436, 4435, 4434, 4433, 4432, 4430, 4429, 4428, 296,
	4424, 137, 172, 4423, 4422, 3973, 4421, 4420, 294, 4419,
	4418, 4413, 4408, 4404, 308, 4402, 4401, 4400, 4399, 4396,
	274, 4395, 4394, 4393, 4391, 4390, 4388, 83, 151, 4385,
	4384, 1525, 4378, 4377, 4374, 4369, 4368, 4367, 4366, 272,
	275, 4365, 4361, 4360, 261, 188, 4359, 293, 4357, 4351,
	4349, 4346, 4344, 4342, 4340, 4339, 4338, 4335, 4334, 4332,
	4331, 4329, 4320, 4319, 4318, 4314, 4312, 4311, 4309, 4308,
	4307, 4306, 4305, 4301, 4299, 4297, 4294, 4293, 4291, 4288,
	4286, 4284, 4282, 4281, 4280, 4277, 4276, 4275, 4274, 4270,
	266, 234, 140, 4269, 4268, 288, 287, 4267, 4266, 4265,
	4262, 4261, 3578, 4260, 4259, 4258, 4257, 4255, 4252, 4248,
	4247, 4246, 150, 3, 48, 4245, 4244, 105, 113, 99,
	88, 106, 107, 4242, 128, 4241, 141, 125, 4238, 129,
	117, 23, 22, 175, 258, 12082, 252, 4237, 4235, 4232,
	256, 212, 4230, 259, 4229, 4228, 4227, 4226, 4225, 4224,
	76, 56, 221, 4223, 4220, 153, 186, 194, 197, 196,
	193, 302, 60, 109, 90, 62, 49, 15, 96, 232,
	19, 1, 282, 4219, 279, 6, 157, 11, 35, 4218,
	4216, 4202, 4199, 3771, 124, 4193, 284, 262, 191, 4190,
	4188, 4187, 263, 4185, 4182, 53, 233, 209, 91, 110,
	40, 144, 4181, 152, 182, 32, 4180, 285, 70, 4176,
	4171, 103, 98, 9218, 4703, 4170, 4167, 127, 87, 92,
	5646, 165, 160, 215, 115, 176, 177, 57, 228, 226,
	200, 166, 4166, 269, 4165, 3625, 190, 203, 167, 6116,
	4164, 4163, 4161, 93, 4160, 112, 4159, 4158, 72, 30,
	4, 2, 158, 41, 39, 12, 4157, 21, 142, 55,
	25, 4155, 20, 4154, 4153, 4152, 4146, 52, 4145, 78,
	174, 4143, 4142, 301, 4141, 111, 64, 34, 4140, 42,
	235, 4139, 239, 146, 4137, 4135, 267, 201, 4134, 94,
	248, 4133, 4132, 4131, 4130, 4129, 4128, 147, 9, 136,
	4126, 4125, 159, 4123, 65, 253, 214, 4122, 63, 4121,
	4120, 187, 58, 161, 298, 192, 237, 133, 242, 204,
	250, 4119, 4118, 4117, 238, 4115, 4114, 225, 179, 4112,
	4110, 257, 307, 100, 50, 85, 251, 89, 213, 169,
	4109, 217, 4108, 4107, 305, 199, 224, 43, 10, 33,
	104, 118, 4106, 7, 249, 171, 243, 134, 4105, 7145,
	2499, 2426, 246, 4104, 168, 135, 81, 148, 164, 283,
	97, 4103, 4102, 3735, 4101, 4100, 4097, 4096, 202, 4095,
	4094, 4093, 180, 183, 210, 4091, 123, 77, 54, 18,
	132, 276, 299, 130, 241, 218, 277, 4090, 4089, 4086,
	208, 4083, 73, 143, 181, 219, 271, 71, 4081, 170,
	4076, 162, 270, 74, 163, 4075, 231, 4074, 4070, 4069,
	4068, 4067, 4064, 4062, 122, 247, 4059, 4058, 4057, 37,
	211, 4056, 281, 207, 260, 121, 86, 4054, 101, 2376,
	4053, 116, 222, 69, 5, 4052, 29, 4051, 3606, 67,
	4050, 0, 14660, 10245, 12658, 13682, 4049, 5374, 4048, 4045,
	4044, 236, 84, 4043, 4042, 4041, 114, 4040, 95, 4039,
	4037, 79, 4036, 26, 16, 17, 27, 24, 198, 51,
	4035, 4033, 61, 156, 154, 4032, 300, 244, 4031, 4028,
	4025, 4023, 102, 4022, 46, 4021, 44, 4017, 4015, 45,
	13, 31, 4014, 4013, 178, 4012, 131, 223, 184, 4011,
	185, 4010, 82, 145, 4009, 4007, 4006, 68, 66, 278,
	229, 227, 120, 4005, 291, 4000, 216, 3997, 3996, 28,
	3994, 3991, 264, 126, 119, 47, 265, 149, 38, 195,
	230, 3990, 3989, 189, 3987, 3986, 3985, 289, 3984, 3586,
	280, 3983, 36, 3982, 3981, 3979, 14, 3976, 3975, 220,
	3319, 3971, 3967, 8, 3961, 206,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 225, 225, 225, 225, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 625, 625, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 523, 523, 523, 554, 554, 554, 554, 556,
	556, 652, 652, 653, 653, 653, 653, 653, 140, 140,
	420, 420, 420, 61, 61, 61, 61, 61, 620, 620,
	227, 227, 227, 229, 229, 228, 228, 228, 228, 228,
	85, 85, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 226, 226, 226, 136, 136, 136, 136, 136, 136,
	136, 136, 137, 137, 138, 138, 230, 230, 230, 232,
	232, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 236, 18, 18, 18, 119, 119,
	119, 119, 119, 119, 119, 114, 114, 558, 558, 559,
	559, 221, 221, 222, 222, 222, 222, 223, 223, 224,
	224, 224, 76, 76, 233, 233, 235, 235, 234, 234,
	234, 234, 234, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 64, 64, 64, 64, 64, 65, 65, 65,
	65, 65, 65, 66, 66, 66, 66, 66, 66, 67,
	67, 74, 74, 74, 74, 74, 74, 74, 74, 202,
	202, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 82, 82, 82, 82, 82, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 654, 654,
	654, 654, 654, 654, 654, 654, 654, 654, 655, 655,
	656, 656, 657, 657, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 658, 658, 658, 658, 658, 658, 658,
	658, 658, 658, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	91, 91, 381, 381, 344, 344, 92, 92, 92, 93,
	93, 94, 94, 78, 78, 617, 617, 618, 618, 618,
	618, 514, 514, 79, 626, 626, 626, 628, 628, 627,
	627, 96, 96, 419, 419, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 98, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 106, 106, 106, 106, 106, 107, 107, 107,
	104, 104, 104, 101, 101, 101, 100, 100, 100, 105,
	105, 105, 616, 333, 333, 103, 103, 103, 102, 102,
	102, 397, 397, 108, 108, 108, 108, 345, 109, 109,
	109, 109, 109, 109, 109, 109, 112, 112, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 516, 516, 4, 4, 263, 263, 262, 262, 262,
	262, 5, 5, 5, 266, 266, 265, 264, 110, 110,
	110, 481, 481, 115, 115, 115, 435, 435, 116, 116,
	116, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 622, 622, 390, 390, 296, 296,
	296, 296, 128, 128, 128, 128, 129, 129, 129, 129,
	130, 130, 207, 207, 146, 146, 146, 146, 145, 145,
	145, 145, 145, 145, 145, 145, 68, 68, 68, 69,
	69, 70, 70, 71, 71, 72, 72, 73, 73, 73,
	73, 73, 149, 149, 31, 31, 31, 31, 150, 150,
	649, 649, 152, 148, 148, 148, 148, 148, 147, 147,
	151, 151, 151, 151, 153, 155, 155, 155, 155, 155,
	154, 154, 154, 154, 154, 156, 156, 548, 548, 405,
	405, 546, 546, 568, 568, 547, 547, 351, 351, 351,
	351, 351, 352, 352, 352, 557, 557, 557, 557, 557,
	557, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 208, 208, 208,
	209, 209, 214, 214, 215, 215, 215, 216, 216, 216,
	213, 213, 213, 210, 210, 211, 211, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 219, 219, 217,
	217, 218, 218, 660, 660, 659, 659, 220, 220, 220,
	220, 220, 183, 183, 183, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 406, 406, 186, 186,
	186, 170, 170, 158, 158, 158, 158, 158, 158, 158,
	163, 163, 163, 163, 163, 163, 163, 163, 164, 164,
	164, 159, 159, 172, 172, 172, 172, 172, 165, 165,
	166, 166, 166, 167, 167, 167, 167, 194, 194, 169,
	169, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	160, 160, 160, 160, 174, 174, 174, 174, 442, 442,
	442, 200, 200, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 197,
	197, 197, 197, 197, 197, 641, 641, 642, 642, 642,
	190, 190, 190, 190, 190, 190, 495, 495, 184, 184,
	184, 184, 189, 189, 189, 189, 192, 192, 192, 192,
	425, 425, 181, 181, 181, 182, 182, 182, 187, 187,
	199, 188, 382, 382, 185, 185, 191, 191, 191, 191,
	193, 193, 193, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 162, 162, 162, 162, 195, 195, 180, 180,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 661, 661, 176, 176, 176, 175, 175, 175, 175,
	178, 178, 179, 179, 179, 179, 179, 179, 177, 168,
	198, 619, 619, 614, 614, 614, 614, 614, 614, 614,
	614, 614, 615, 615, 615, 615, 621, 621, 120, 120,
	120, 120, 120, 120, 120, 131, 131, 131, 131, 131,
	131, 131, 134, 134, 121, 121, 121, 121, 121, 121,
	121, 124, 124, 122, 122, 122, 122, 123, 123, 86,
	86, 86, 86, 86, 17, 17, 17, 87, 87, 287,
	287, 241, 241, 241, 369, 369, 242, 242, 359, 359,
	359, 359, 237, 237, 238, 238, 239, 240, 240, 88,
	88, 662, 662, 662, 634, 634, 634, 635, 635, 635,
	635, 635, 635, 353, 353, 354, 354, 461, 461, 461,
	461, 461, 357, 357, 357, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 367, 368, 368, 360, 360, 366,
	365, 365, 364, 364, 363, 363, 361, 362, 362, 362,
	371, 371, 370, 373, 373, 372, 460, 577, 577, 579,
	579, 579, 579, 579, 579, 579, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 443, 443, 663, 663, 664, 665, 575,
	575, 575, 576, 571, 571, 572, 572, 572, 572, 572,
	355, 355, 356, 356, 356, 356, 573, 574, 388, 388,
	499, 578, 578, 580, 580, 582, 666, 666, 666, 666,
	666, 666, 667, 667, 667, 459, 459, 458, 458, 457,
	457, 379, 379, 583, 583, 583, 583, 584, 584, 584,
	584, 584, 587, 586, 585, 585, 585, 585, 585, 90,
	90, 90, 422, 422, 421, 421, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 204, 204, 299, 299, 299, 84, 84, 84, 14,
	14, 14, 14, 14, 14, 14, 314, 314, 15, 15,
	15, 636, 636, 636, 89, 89, 89, 89, 89, 89,
	377, 377, 377, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 624,
	624, 623, 623, 300, 300, 669, 669, 95, 95, 95,
	95, 95, 95, 95, 95, 517, 517, 518, 518, 83,
	83, 83, 83, 83, 444, 444, 441, 441, 440, 440,
	387, 387, 497, 497, 497, 498, 304, 304, 305, 305,
	260, 260, 260, 34, 33, 24, 24, 28, 28, 29,
	29, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	30, 30, 54, 54, 54, 54, 55, 55, 55, 55,
	58, 58, 59, 59, 53, 53, 53, 53, 56, 56,
	50, 50, 60, 60, 60, 60, 60, 643, 645, 645,
	644, 644, 648, 648, 648, 648, 648, 648, 646, 646,
	647, 647, 650, 650, 651, 651, 127, 127, 132, 132,
	132, 132, 132, 133, 133, 133, 133, 135, 135, 135,
	135, 144, 144, 203, 203, 203, 203, 203, 203, 203,
	62, 62, 62, 62, 75, 75, 75, 75, 142, 671,
	671, 671, 143, 143, 143, 670, 670, 297, 297, 454,
	454, 455, 455, 672, 672, 456, 456, 456, 456, 456,
	290, 289, 291, 291, 292, 292, 81, 81, 81, 280,
	280, 279, 281, 281, 282, 282, 277, 277, 560, 560,
	284, 284, 284, 285, 285, 273, 273, 274, 274, 275,
	275, 276, 276, 288, 288, 555, 555, 673, 673, 118,
	118, 118, 206, 206, 343, 343, 343, 451, 451, 451,
	380, 380, 311, 311, 453, 453, 453, 453, 453, 418,
	418, 418, 205, 205, 395, 395, 408, 408, 409, 409,
	511, 511, 410, 125, 125, 126, 126, 141, 141, 245,
	245, 243, 243, 243, 243, 243, 243, 243, 243, 250,
	250, 251, 251, 252, 252, 253, 254, 254, 254, 254,
	398, 398, 255, 255, 255, 244, 244, 244, 246, 246,
	246, 246, 246, 246, 246, 249, 249, 249, 249, 256,
	256, 256, 248, 248, 594, 594, 594, 596, 596, 598,
	598, 597, 597, 593, 593, 595, 595, 668, 668, 424,
	424, 424, 376, 378, 374, 374, 375, 375, 385, 385,
	383, 384, 384, 386, 386, 496, 496, 496, 261, 261,
	261, 415, 415, 415, 415, 416, 416, 447, 447, 445,
	445, 445, 445, 446, 446, 448, 448, 448, 449, 449,
	450, 450, 412, 412, 413, 413, 414, 414, 414, 414,
	477, 477, 247, 247, 247, 392, 392, 392, 393, 393,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 468, 468, 466, 466, 466, 466, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 501, 502, 502, 394,
	394, 503, 452, 452, 612, 612, 612, 613, 613, 494,
	494, 504, 504, 504, 504, 504, 504, 492, 492, 493,
	493, 512, 513, 513, 428, 428, 428, 428, 426, 426,
	429, 429, 429, 429, 429, 427, 427, 505, 505, 505,
	505, 417, 417, 506, 506, 506, 506, 507, 508, 508,
	509, 509, 462, 463, 463, 519, 519, 519, 519, 521,
	391, 391, 391, 391, 391, 570, 569, 569, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 536,
	536, 536, 536, 536, 536, 536, 522, 522, 522, 522,
	522, 526, 526, 526, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 527, 527, 532, 532, 533,
	533, 533, 528, 529, 534, 534, 534, 534, 674, 674,
	538, 538, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 524, 524, 524, 531, 531, 531, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	436, 436, 438, 438, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 471, 471, 471, 471, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 588, 588, 588, 588, 588, 588,
	588, 588, 473, 473, 591, 591, 592, 592, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 590, 590, 599,
	599, 600, 600, 602, 602, 603, 603, 604, 605, 605,
	605, 606, 607, 607, 601, 601, 608, 608, 608, 608,
	609, 609, 610, 610, 610, 610, 610, 611, 611, 611,
	611, 611, 483, 483, 484, 484, 490, 490, 490, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 350, 350, 349, 301, 301, 301,
	301, 301, 301, 403, 403, 401, 401, 401, 404, 404,
	402, 402, 400, 400, 399, 399, 480, 480, 478, 478,
	482, 482, 430, 430, 537, 537, 537, 537, 537, 537,
	537, 537, 431, 431, 431, 439, 432, 432, 433, 433,
	433, 433, 433, 474, 475, 434, 434, 434, 476, 476,
	485, 489, 489, 488, 487, 487, 486, 486, 464, 464,
	465, 465, 411, 411, 675, 675, 407, 407, 510, 510,
	510, 510, 347, 347, 396, 396, 346, 346, 338, 338,
	339, 339, 339, 339, 389, 389, 491, 491, 539, 539,
	540, 540, 541, 541, 542, 542, 543, 544, 545, 479,
	479, 322, 321, 308, 309, 320, 319, 318, 307, 310,
	315, 316, 317, 312, 313, 329, 328, 327, 278, 283,
	334, 335, 335, 337, 337, 336, 336, 324, 325, 326,
	515, 306, 340, 340, 341, 341, 341, 342, 342, 342,
	342, 302, 302, 303, 303, 330, 330, 331, 332, 332,
	323, 323, 323, 293, 293, 293, 294, 294, 295, 295,
	553, 553, 550, 550, 550, 551, 551, 551, 552, 552,
	552, 552, 549, 549, 549, 549, 549, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 562, 562, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 564, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 567, 567,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 3, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 4,
	3, 6, 6, 6, 6, 6, 8, 4, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 3, 2, 1, 4,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 4, 3, 1, 2, 3, 2, 2,
	2, 4, 6, 3, 1, 2, 2, 7, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 7, 4, 7, 8, 8, 9, 11,
	5, 2, 6, 9, 4, 7, 7, 10, 7, 10,
	10, 13, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 4, 4, 3, 4, 1, 1,
	1, 1, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	7, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	5, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 3, 4, 5, 4, 4, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 4, 3, 4, 4,
	5, 1, 1, 10, 10, 3, 5, 5, 5, 3,
	5, 6, 4, 4, 5, 5, 2, 3, 2, 5,
	4, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 3, 2, 2, 4, 7, 3, 4,
	6, 5, 7, 5, 5, 3, 3, 0, 2, 2,
	2, 1, 1, 1, 8, 10, 11, 8, 11, 5,
	4, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 14, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 631, -111, -108, -76, -74, -115, -116,
	-97, -117, -110, -139, -144, -125, -126, -127, -140, -146,
	-203, -208, -209, -210, -211, -220, -3, -61, -63, -77,
	-96, -98, -109, -119, -118, -120, -128, -136, -131, -114,
	-68, -141, -145, -157, -204, -205, -206, 33, 32, 104,
	83, 160, 133, 142, 211, 402, 450, 462, 418, 147,
	441, 423, -151, -152, 481, -62, -75, -143, -142, 76,
	134, 176, 307, 433, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -84, -80, -91, -85, -78,
	-79, -82, -654, 106, -595, -99, -102, -135, -658, 168,
	230, -121, -122, -123, 384, -129, -130, 443, -132, -133,
	-134, 446, 169, -70, -69, 162, -243, -245, -148, -147,
	-149, -207, -158, -159, -160, -161, -162, -164, -165, -167,
	-194, -168, -169, -170, -171, -172, -173, -177, -197, -174,
	-175, -176, -179, -178, -180, -185, -181, -182, -183, -184,
	-186, -187, -189, -190, -191, -192, -193, -195, -196, 486,
	-188, -198, -166, -199, 551, 52, 502, 85, 152, 454,
	21, -7, -8, -9, -10, -11, -12, -13, -17, -16,
	-60, -4, -5, -81, -83, -86, -87, -88, -95, -89,
	-90, -594, -100, -101, -104, -106, -107, -103, -105, 442,
	603, -246, -244, 628, 567, -163, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 590, 599, -249, -247,
	-248, -256, 473, 575, 524, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, -345, 2, -324, -330, -331, -332, -323, -293, -564,
	-567, 4, -561, -565, 175, 240, 345, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 197, 198, 199, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 212, 216, 218, 219, 220, 221, 222,
	223, 229, 230, 232, 233, 234, 235, 236, 241, 242,
	243, 247, 253, 254, 258, 259, 260, 262, 266, 267,
	268, 269, 270, 271, 273, 275, 274, 277, 280, 281,
	284, 285, 286, 287, 288, 289, 293, 294, 290, 295,
	296, 298, 299, 302, 300, 303, 304, 301, 305, 308,
	309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 306, 307, 322, 320, 324, 325, 326, 327, 328,
	343, 338, 339, 340, 332, 333, 329, 334, 330, 331,
	335, 336, 342, 337, 347, 348, 349, 350, 353, 227,
	246, 355, 356, 359, 361, 378, 364, 365, 366, 369,
	370, 373, 376, 377, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 389, 390, 392, 393, 394, 396, 397,
	398, 400, 402, 403, 405, 406, 407, 409, 410, 411,
	412, 413, 414, 415, 417, 418, 420, 419, 421, 423,
	425, 426, 427, 433, 434, 441, 435, 437, 438, 439,
	440, 442, 443, 444, 445, 446, 448, 449, 450, 452,
	453, 454, 455, 456, 458, 460, 461, 465, 466, 467,
	483, 484, 505, 462, 463, 464, 468, 469, 470, 471,
	472, 476, 474, 475, 477, 478, 479, 481, 482, 485,
	486, 488, 489, 490, 491, 492, 493, 494, 497, 499,
	500, 501, 502, 503, 523, 504, 506, 510, 511, 512,
	513, 507, 508, 522, 515, 516, 517, 519, 520, 525,
	526, 527, 528, 529, 530, 532, 533, 535, 543, 544,
	545, 546, 548, 551, 552, 553, 554, 541, 556, 557,
	560, 561, 565, 562, 566, 563, 564, 567, 569, 572,
	573, 574, 580, 579, 581, 582, 583, 585, 586, 591,
	592, 594, 595, 596, 37, 53, 54, 57, 59, 61,
	72, 73, 74, 78, 129, 130, 159, 171, 172, 184,
	200, 201, 213, 215, 224, 225, 226, 248, 249, 251,
	256, 278, 352, 354, 371, 375, 391, 395, 399, 401,
	416, 457, 495, 509, 514, 536, 537, 538, 539, 547,
	549, 575, 576, 577, 584, 593, -345, 2, -324, 362,
	-317, 2, -293, -293, 402, 29, 2, 29, 390, 475,
	527, 529, 2, -622, -390, 2, 29, -296, -293, 106,
	211, 473, -317, 2, -622, 211, -390, 26, 2, -293,
	2, 376, 23, 28, 69, 80, 102, 145, 170, 193,
	197, -657, 378, 410, 460, 477, 522, 533, 548, 2,
	579, 299, 474, 524, 240, 124, 553, 468, -636, 465,
	466, 376, 408, 452, 214, 568, -297, 2, 462, -293,
	299, 2, 631, 98, 77, 457, 478, -154, 2, 289,
	544, -155, -156, -153, 536, -548, 468, 452, 322, -293,
	631, 631, 631, 29, -306, 2, -293, -306, 2, -212,
	2, -306, -659, -219, -218, -217, 22, 434, 183, 271,
	195, 231, 327, 405, 194, 50, -212, 2, 524, 240,
	468, 124, 520, 631, 631, 2, 524, 381, 579, 474,
	124, 413, 240, 553, 197, 145, 28, 71, 48, 530,
	607, 468, -636, 604, 605, 299, 131, -620, 2, -614,
	4, -565, -561, -339, -338, 524, 530, 124, -332, -323,
	620, -331, 631, 631, 631, 631, 2, 259, 260, 412,
	411, 478, 479, 29, 631, 631, 631, 631, 465, 2,
	170, 23, 28, 69, 97, 102, 131, 193, 197, 367,
	-655, 378, 410, 477, 522, 526, 533, 548, -635, 504,
	71, 440, 468, -634, -636, 299, 553, 145, -440, 124,
	289, 209, 561, 529, 527, 559, 137, 247, 564, 563,
	631, 631, -112, 2, 628, 33, 32, -111, -115, 147,
	481, -236, 524, 252, 2, -293, 631, 631, 631, 2,
	259, 260, 465, 466, 29, 631, 631, 195, -614, 520,
	2, 631, 631, 631, 2, 29, 259, 260, 465, 466,
	252, 2, 71, 470, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 2, -201, 478, 504, 220, 49, 48, 77, 29,
	409, 82, 382, 125, 131, 154, 554, 212, 240, 241,
	267, 97, 98, -442, 46, 260, 71, 259, 466, -641,
	465, -495, 525, 469, 475, 519, 89, 271, 462, 544,
	546, 106, 569, 453, 596, 413, 414, 517, 427, 290,
	163, 196, 4, 124, 322, 452, 480, 275, 274, 536,
	289, 461, 385, 87, 631, -668, 2, 524, -670, 2,
	544, 544, 2, -670, 2, -670, 2, -670, 2, -671,
	544, 593, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, -244, -246, -245, 631, 631, 631, 631, 631,
	631, 631, -201, 478, 2, 77, 29, 29, -383, -385,
	558, 250, 156, 368, -243, -245, 2, -594, -546, 2,
	-469, -568, -471, 618, 619, 611, 521, 70, -349, 344,
	597, -483, 131, 559, 362, -567, -472, -485, 159, 378,
	457, -404, 8, 9, 5, 6, 7, -302, -473, -479,
	550, 174, 351, -342, 632, 10, 628, -591, -245, -484,
	38, 215, 68, -550, -341, -303, -522, 251, -340, -323,
	-588, -589, 4, -561, -562, -551, -525, -533, -529, -530,
	-536, -293, -564, 80, 115, 116, 114, 119, 118, 292,
	291, 120, 117, 480, 568, 69, 37, 224, 225, 256,
	352, 226, 78, -590, 146, -563, 248, 249, 495, 54,
	416, 184, 130, 129, 354, 59, 57, 576, -534, 126,
	536, 537, 538, 539, 200, 201, 61, 171, 172, 375,
	399, 514, 547, 549, 213, 278, 45, 110, 196, 245,
	228, 255, 257, 261, 279, 282, 323, 341, 346, 372,
	374, 451, 487, -674, 577, 509, 72, 73, 189, -596,
	419, -597, -317, -596, 631, 631, 633, 631, -374, -376,
	-378, 2, 29, 143, 628, 2, -500, 2, -501, -505,
	-245, 272, -504, 628, -502, 626, -324, 363, -592, 458,
	-588, -589, -302, -323, -341, 4, -561, -563, 630, -379,
	628, 124, 468, 524, 81, 240, 97, 170, 197, -435,
	628, -293, 29, 362, 540, 633, -375, 407, -481, 628,
	362, 365, 195, 365, 63, 303, 2, 2, 2, 2,
	2, 224, -293, 524, 123, 2, 270, 2, 2, 2,
	2, 2, 2, 2, -397, 224, 2, -324, 579, -397,
	224, 2, -397, 224, 2, -441, 2, 91, -307, 224,
	2, -293, -333, 224, 2, -328, -330, -337, 224, 2,
	-335, -293, -556, 224, 2, -554, 4, -561, 120, 480,
	-469, 2, -141, 2, 63, -293, 579, 2, 483, 2,
	628, -154, 2, 74, 544, 45, 478, -155, 2, -455,
	2, -456, -289, -290, -291, -512, -292, 258, 406, 415,
	600, 135, 344, 596, -649, 195, 610, 540, -546, -546,
	-546, -405, 630, -214, 56, -306, -660, -659, -660, -544,
	29, -539, 8, -540, 618, 619, -544, -544, -660, -660,
	2, 2, 2, 2, 2, 2, -505, 224, -324, 2,
	-321, -549, 4, -561, -565, -562, -566, -564, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 60, 68, 69,
	75, 79, 81, 91, 97, 106, 114, 115, 117, 116,
	118, 119, 120, 131, 135, 139, 143, 144, 148, 152,
	156, 174, 176, 189, 193, 195, 211, 214, 217, 231,
	244, 250, 252, 272, 276, 283, 291, 292, 344, 351,
	357, 362, 363, 367, 368, 388, 404, 422, 447, 473,
	480, 498, 518, 524, 534, 540, 542, 550, 558, 559,
	568, 570, 578, 587, 588, 589, 590, -567, 80, 2,
	-505, 224, 2, -327, 224, -505, -330, 2, -307, 2,
	-469, -629, 532, 166, 435, 2, -346, 224, -324, -326,
	-330, -328, 2, 2, 2, 2, -469, 2, -558, 2,
	-553, 10, -552, 5, 4, -561, -565, -562, -472, 2,
	-483, 29, -335, 2, -554, 224, 2, 29, 29, 579,
	407, 252, 540, 633, -396, -338, -339, -545, 4, 8,
	-389, -293, 630, -469, 2, -141, -124, 2, 189, -469,
	224, 2, -141, 224, 2, -469, 224, 2, -141, 224,
	2, -293, 2, -637, 2, -558, 224, 224, -293, 2,
	303, 2, 2, 548, 2, 102, 524, 123, 2, 439,
	-656, 460, 552, 2, 2, 2, 2, 2, 2, 2,
	524, -312, 2, -293, 189, 507, -335, 224, -336, 2,
	474, -669, 419, -554, 224, 2, 579, -328, 224, 2,
	-328, 240, 254, -307, 224, 2, 529, 527, 529, 527,
	195, 2, 252, 2, 252, 2, -506, 2, -507, -501,
	-508, 626, 363, -516, 2, -515, -552, 575, -112, 628,
	-112, 628, 478, 628, -558, -324, -324, -469, 2, -141,
	-124, 2, -469, 2, -141, 2, -293, 2, -138, -558,
	-137, 628, 195, 569, -293, 2, -469, 2, -141, -124,
	2, -469, 2, -141, 2, -236, 189, 2, 124, 524,
	-201, 2, 189, 570, 2, 8, 2, 231, -558, 469,
	414, 181, 2, 483, 2, 484, 77, -442, 596, 77,
	195, 2, 195, 2, -425, 2, 590, 407, 195, 2,
	2, -619, 2, 362, 195, 2, 195, 2, 195, 2,
	195, 2, 195, 2, -200, 479, 545, 523, 411, 260,
	2, -141, 587, -124, 260, 259, -469, 587, 2, -642,
	189, 466, -469, 2, 543, 269, 164, 195, -425, 2,
	195, 2, 195, 2, 5, 2, 43, 412, 505, 2,
	258, 406, 505, 2, 503, 2, -324, 524, 579, 474,
	124, 29, 2, 465, 2, 2, 92, 93, 195, 2,
	195, 2, 210, 195, 2, 195, 524, -406, 630, 596,
	2, -417, -505, -454, -455, -454, 540, -383, -385, -201,
	483, 2, -250, -415, -252, 189, -445, -446, -253, 283,
	176, 357, -254, -424, 29, 143, -424, -424, 63, 629,
	629, 11, 12, 79, 43, 618, 619, 620, 621, 187,
	622, 623, 616, 617, 615, 608, 609, 613, 264, 265,
	99, 612, 610, 90, 297, 459, 177, 178, 179, 180,
	436, 238, 35, 239, 14, 15, 16, -349, 34, 367,
	282, 597, 228, 487, 611, 17, 18, 19, 255, 257,
	346, 53, 231, -301, 378, -348, 521, 70, -469, -469,
	-469, -469, -469, -469, -469, -469, 374, 628, -411, -464,
	626, -245, 628, 628, 628, 628, -545, -245, -469, -483,
	629, -402, 628, -245, -483, -478, 628, 457, 626, 628,
	-486, -469, 5, 5, 5, 628, 630, -599, 591, 189,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 628, 628, 628, 401, -527, 628, -526,
	628, -526, -526, 580, -524, 628, 599, 592, 628, -524,
	628, 628, 628, 628, 628, 628, 628, 628, 628, 628,
	628, 628, 628, 580, 530, 633, -596, -379, 628, -407,
	-510, -469, 620, -407, -407, 362, -399, -469, 110, -428,
	261, 323, 196, 279, 451, 245, -466, 632, -466, -494,
	599, -245, -502, -323, -245, -504, 628, -500, -494, -113,
	-545, -96, -109, -118, -141, -157, -205, -206, 620, -324,
	628, 195, 628, 630, -549, 195, -389, -307, -334, -293,
	-324, -340, -341, -346, -318, -293, 2, 2, 142, -399,
	-614, 553, 468, 29, 474, -556, -296, 39, -480, -519,
	-520, -570, 632, -569, -522, -532, -528, -531, 391, 395,
	-551, 57, 576, -534, 251, 4, -561, -563, 248, 249,
	495, 54, 416, 184, 130, 129, 354, 59, 536, 537,
	538, 539, 200, 201, 61, 577, 509, 72, 73, -614,
	553, 468, 29, 474, 189, -556, 189, -556, 2, 2,
	159, 2, 2, 2, -293, -271, 633, 67, 444, 159,
	-397, 224, -271, 159, -271, 159, -347, 224, -346, -271,
	159, -271, 633, 159, -271, 633, 159, 630, 633, 159,
	-556, 2, -441, -548, -399, 39, -455, 2, 131, 4,
	5, -672, 633, 281, -352, 296, 343, 219, 363, 594,
	355, 135, -557, 5, 4, -479, -491, 131, 289, 251,
	-539, -541, 9, -542, 618, 619, -547, -546, 113, 630,
	-549, -215, 246, 41, -306, -306, -660, -660, 8, 8,
	-660, -660, -306, -306, -268, 437, 481, 377, -267, 25,
	30, 147, 242, 328, 573, 165, -364, 243, 442, -361,
	381, 159, 499, 562, -629, -632, 464, 532, 166, 435,
	94, 355, 481, 377, 437, 159, -421, -423, 39, 122,
	328, 376, 64, 234, 301, 302, 502, 584, 159, 481,
	377, 437, 377, -15, -282, 25, 147, -284, -279, 481,
	30, -632, 103, 437, 603, 442, 387, 516, 404, -632,
	-629, 277, -631, 586, 342, -270, 499, 562, -629, -632,
	464, 437, -269, -366, -361, 381, 159, 632, 25, 147,
	437, 481, 377, -652, -653, 30, -263, -262, 25, 147,
	481, 565, -266, 231, -265, 25, -150, -130, -149, 442,
	481, -150, 2, 437, 377, -623, -314, -593, 231, 590,
	159, -314, -314, -505, 224, -646, 189, 2, -639, -137,
	273, 5, 10, -558, -137, -396, 633, 633, -549, 620,
	466, 465, 159, 159, 159, 159, 260, 189, 344, 344,
	590, 2, 2, 2, 2, 2, 197, -634, -657, 2,
	2, -324, 224, -381, 362, -617, -618, 524, -324, 189,
	344, 45, -327, 224, 2, -330, 579, -623, 344, -329,
	224, -324, 39, 628, 344, 2, -441, 2, 240, -593,
	344, -506, -343, -324, -501, -343, 481, -317, 39, -466,
	-324, 629, 633, -516, -516, -558, -224, 590, 195, 628,
	-236, 590, 590, 260, -513, 633, -512, 231, -559, -558,
	-138, -558, 440, 195, 260, -558, -617, -307, 2, -324,
	2, 524, 262, -558, -224, 231, -558, -558, -558, -548,
	29, 484, 2, -200, 479, 545, 93, 484, 2, -324,
	524, 124, 240, 83, -646, 189, 2, -293, -621, 189,
	-615, 452, 468, 553, -614, -324, 124, -324, 124, -324,
	124, -324, -324, 2, 2, 2, 2, 2, 88, 2,
	-141, -469, 2, 88, 2, 48, 500, -642, 189, 2,
	543, 2, 543, 2, -293, -293, -293, 357, 504, 281,
	590, -324, -324, -324, -325, -330, 469, 525, 554, 466,
	-469, 2, -661, 2, 195, 189, 2, 524, 240, 524,
	240, 124, 195, 77, 124, 29, 524, 463, 630, 4,
	-271, 633, -297, -250, -415, -548, -416, -415, -251, -250,
	-253, 189, 415, 563, 328, 485, 266, -446, -445, 29,
	-469, -450, 183, 327, -469, -448, -471, 618, 619, -540,
	-542, -398, 355, -244, -244, -244, -386, -496, -469, 404,
	240, -521, -519, -519, -322, -549, 536, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, -469, -469, -469, -469, -469, -469, -469,
	-469, -469, -469, 282, 228, 487, 53, 231, -469, 540,
	-469, -469, -469, -469, 320, 344, 351, 550, 174, 560,
	143, 355, -675, 518, 42, -476, -245, -403, 628, -490,
	36, 498, 29, -483, 628, 2, -464, -469, -465, -350,
	-348, -293, 618, 619, 620, 621, 622, 623, 608, 609,
	610, 14, 15, 16, 613, 617, 615, 616, 187, 99,
	612, 297, 459, 90, 177, 178, 179, 180, 264, 265,
	17, 18, 19, 35, 611, -400, -399, -399, 629, 578,
	29, 143, 620, 2, 629, 633, 39, 629, -469, -400,
	-482, -478, -399, -489, -488, 587, -436, -437, 595, 306,
	127, 222, 304, -438, 472, -543, 8, -549, 620, -600,
	182, 214, 628, 629, 2, 629, 2, 629, -469, 2,
	629, -469, 2, 629, -469, 2, 629, -469, 2, 629,
	2, 629, 2, -469, -469, -469, -469, -469, -469, -469,
	-399, 8, -543, -543, 536, 536, -543, -543, -543, -535,
	391, 392, 393, 394, 284, 285, 286, 287, 395, 396,
	397, 398, 312, 313, 314, 315, 308, 309, 310, 311,
	316, 317, 318, 319, 205, 206, 207, 208, 201, 202,
	203, 204, -535, -430, 2, -537, -399, 4, 595, 306,
	127, 222, 304, 472, 5, -430, 2, -431, 2, -469,
	-399, -432, -470, -471, 618, 619, 611, -349, -433, 2,
	-469, -400, -469, 60, 276, 542, -434, -469, 195, -399,
	-399, 2, -399, 2, -472, 2, -597, 39, -399, -392,
	633, 195, 39, 4, -392, -392, 628, 629, 633, -429,
	218, 300, 295, 254, -429, -500, -428, 261, -426, 372,
	-426, -426, -494, -308, 626, 634, -549, -494, -493, -492,
	39, -317, 369, -494, -494, 630, 629, -493, 627, -612,
	628, 631, 631, 631, 631, 631, -324, 628, -399, -549,
	630, 506, 2, 629, 255, 255, 255, 255, 255, 362,
	458, 629, 540, -616, -333, -337, 525, 2, 590, -111,
	364, 629, 633, -391, 38, 626, 630, -543, 2, 2,
	-538, 580, 628, 628, -437, 628, 195, -616, -337, 525,
	2, -622, -390, -390, 540, -293, 2, -324, -397, -271,
	159, -397, -397, -271, 633, 159, -307, -328, -333, -335,
	-337, -293, -554, -556, -271, -329, -649, 629, 544, -456,
	-351, 415, 497, 438, 476, 520, 9, 9, 633, -549,
	-216, 467, 328, -306, -306, -306, -306, 633, -650, 97,
	540, 81, 628, 468, -286, 290, 540, -460, 224, 81,
	-571, 97, -310, -572, -293, 75, 559, 404, 193, 157,
	-650, 97, 404, -650, 97, 2, 242, 97, 481, 504,
	628, 29, 63, -505, 43, 43, 29, -630, -631, 277,
	195, 596, 524, 240, 468, 540, 540, -505, -423, -519,
	122, 301, 302, 63, -544, -544, 63, -544, -544, -544,
	590, -327, -505, 468, 540, 540, 540, 425, 515, 425,
	515, -279, -155, 515, 540, 540, 29, -201, 445, 131,
	-673, 610, 425, 277, -631, 540, 195, 633, 43, 43,
	29, -630, 195, 540, -346, -308, 574, 44, 574, 44,
	574, 540, 44, 468, 540, 633, 44, -262, -617, -617,
	-223, -222, -293, 5, -389, -265, -558, -264, 326, 77,
	540, 540, -15, 481, -624, -298, 109, 334, 294, 335,
	101, 331, 100, 330, 107, 332, 108, 333, 581, 347,
	582, 348, 66, 329, 305, 336, 501, 337, 583, 349,
	-299, -300, 150, 383, 572, 124, -554, -15, -15, 481,
	377, 437, 159, -647, 231, 29, -636, 231, -513, 231,
	-513, -338, -293, 630, -141, -469, -469, -141, -469, -141,
	48, 159, 159, 2, 2, -669, 270, 628, -355, 344,
	195, -389, -514, 633, 252, -324, 175, -614, 159, -554,
	-422, -421, 344, -329, 224, 2, 159, -379, 344, 153,
	628, 413, 2, 159, -309, 224, -294, -293, -441, -273,
	528, 159, -419, 570, -451, -141, 628, 131, 39, -451,
	-408, -409, -511, -410, -310, 628, -317, -466, -112, -515,
	629, 629, 629, -223, 366, -236, -380, -311, -310, 123,
	417, 417, -230, 590, -137, -138, 629, 633, -513, 231,
	507, -138, -558, -224, -224, -513, -513, -324, 189, -558,
	-224, -224, -224, 2, 2, 2, 2, -425, -324, -307,
	-346, -324, 29, 630, -556, -556, -337, -333, -425, -307,
	-425, -307, -425, -307, -425, -425, -141, -469, 504, 2,
	478, 189, 189, 630, -425, 8, -382, 447, 5, 2,
	413, 124, 524, 381, 240, -324, -346, -324, -346, -307,
	124, -307, 125, -324, 4, -505, -416, -251, 363, 266,
	485, -448, -449, -471, 457, 458, -449, 457, 458, 8,
	9, 8, 9, -255, 489, 350, -397, 633, -260, 40,
	139, 266, -324, 596, 155, -469, -469, 540, -675, 518,
	-476, 155, -469, 320, 351, 550, 174, 560, 143, 355,
	195, 628, -470, -470, 629, -401, -469, -469, 627, 636,
	629, 630, 629, -385, 633, -383, -469, -399, -399, 629,
	630, -399, -389, 627, 627, 633, 629, -487, -488, 148,
	-469, 540, 540, 540, 540, 628, 629, 630, -605, 373,
	628, 628, -469, 629, 629, 629, 629, 39, 633, 633,
	633, 629, 633, 633, 633, 629, 629, 629, 633, 629,
	596, 596, 629, 629, 629, 629, 633, 629, 633, 629,
	195, 629, 629, -439, 388, 629, 11, 12, 618, 619,
	620, 621, 187, 622, 623, 616, 617, 615, 608, 609,
	610, 90, 297, 459, 14, 15, 16, -349, 255, 231,
	-470, -470, -470, -470, 629, -474, -475, 195, 189, 39,
	-434, -434, -434, 629, 195, -399, 629, 629, 628, -598,
	299, 344, 629, -463, -462, 588, -510, -393, 2, -500,
	-319, -549, -463, -463, -399, -469, 261, 261, -427, 570,
	362, -429, -500, -493, -545, -468, -467, 191, 40, 139,
	338, 339, 340, 227, 192, -493, -317, -379, -493, -493,
	-549, -494, -494, -492, 629, -613, -545, 629, -394, -503,
	-592, -385, 630, -549, -233, -593, -202, 5, 351, -202,
	-202, -202, -202, -324, -556, 540, 540, 231, 26, 389,
	-519, 626, 627, 8, -549, 628, -543, -543, -543, -556,
	195, 195, 231, 362, 195, -554, 2, -271, -397, -271,
	-271, -346, -347, -271, -271, -271, -420, 590, -546, -455,
	557, 86, 415, 536, -546, 121, 467, -267, 437, 481,
	-310, -310, -324, -240, -239, -237, -293, 5, -334, 209,
	426, -554, 344, -460, 224, -272, 344, 224, -318, -519,
	628, -443, 592, 266, 266, 570, -310, -318, 266, 224,
	-310, 224, -318, 2, -318, -625, 415, 356, -469, -238,
	-237, 63, -362, 288, 413, 345, -268, 437, 481, 377,
	-141, -141, -141, 628, -649, 570, 142, -324, -346, -324,
	-334, -554, -329, 481, 377, 437, 341, -340, -544, -544,
	-421, 481, 377, 437, -334, -554, -327, -554, -278, 224,
	-293, 425, -278, 224, 425, 425, 468, -307, 425, 596,
	47, -673, 540, 195, -469, -469, -269, -141, -141, -141,
	628, -308, -270, 437, 5, 224, -310, 5, -310, 224,
	5, -293, -310, -334, -554, -653, 25, 147, -310, -224,
	633, 610, 610, -266, 610, -334, -554, -298, 383, -558,
	351, 566, -307, -623, -314, 468, 540, 540, -505, -643,
	-644, 211, 450, 468, 453, -556, -137, -227, 590, -137,
	-221, 235, 620, -620, -558, -293, 579, -293, -353, -356,
	-354, -310, -461, -460, -575, -576, -571, 282, 240, 559,
	254, 175, 97, -241, -242, 592, 590, 159, -344, -324,
	626, -224, -618, -558, 175, -315, -293, -514, -335, -336,
	159, -379, 344, -554, 39, 159, 628, 2, 2, -328,
	362, 344, -309, 224, -274, 149, -673, -307, -463, -393,
	-418, -453, 447, 362, -380, 575, -317, -418, -395, 633,
	195, 610, 630, -380, -509, 620, -112, -112, -224, 628,
	628, -558, 629, 633, 630, 628, 610, 610, -232, 366,
	-231, 151, 268, 253, 491, 492, 493, 494, 141, 490,
	128, 325, 236, 530, -513, -558, -230, -138, 195, -513,
	231, 195, -71, 590, 524, -224, 632, 453, -293, -425,
	-425, -425, 478, 478, -293, 189, -389, -320, -549, -307,
	-324, -321, -346, 189, 189, -307, 563, -449, 363, 293,
	-496, -261, 598, -324, 632, -469, -469, 155, 155, -469,
	-470, -470, -469, 155, 195, 628, -469, -480, 34, 34,
	629, 633, -465, -469, -348, 629, 578, -385, -385, 629,
	620, -549, 632, 629, -478, 152, -469, 534, 306, 222,
	304, -438, 304, -438, -438, -543, 5, -549, 620, -606,
	-313, 628, -293, 588, -384, 368, 629, -521, -519, -469,
	-469, -469, -469, -469, -543, -524, -524, -539, -539, -469,
	-474, -469, -521, -519, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, -470, -470, -470, -470, -470, -470,
	-470, -470, -470, -470, 143, 344, 355, -470, -475, -474,
	-469, -469, -519, 629, 629, 629, -399, -111, 628, 299,
	-412, 214, -469, -513, 633, -412, -412, 629, -500, -500,
	628, -469, 261, 627, 633, 635, 610, 610, -379, 630,
	-492, -493, 627, 629, 633, 629, 633, -452, 39, 629,
	-549, -463, -235, -234, 140, 56, 111, 138, 351, 255,
	-645, 590, -556, -556, 468, 365, 5, 8, 626, 627,
	630, -543, 629, 629, 629, -556, -556, 468, -614, 553,
	468, 29, -556, -271, -271, 123, 328, -469, -213, 590,
	592, 540, 540, 629, 633, 610, 63, 231, 159, 344,
	572, 344, -572, 157, -577, -469, 628, 240, 628, 628,
	2, -257, -258, -259, 147, 481, 25, -651, 2, 570,
	159, -271, 159, -271, 594, 629, 633, -362, 628, 628,
	540, 468, -286, 540, 590, -399, -469, -225, 131, -548,
	-632, 632, -632, 632, 468, 540, 540, 468, 540, 540,
	344, -293, 159, -293, -293, 590, 173, 173, 596, -278,
	-469, -469, 189, 540, 590, -399, 540, -523, 51, 27,
	344, -328, -271, 159, 540, 540, 553, 481, -222, -558,
	-558, -137, -558, -558, 351, -15, -334, -554, -329, 481,
	377, 437, -622, -622, 211, -337, -647, -513, -229, 366,
	-228, 151, 449, 141, 268, 236, -513, -227, 195, 252,
	590, -329, 2, 629, 629, 633, 633, -578, -272, -324,
	-309, 240, 240, -316, -294, 39, 359, 359, 628, -324,
	-92, 590, -512, -545, -315, -626, 590, 45, -327, 39,
	159, -623, -141, -329, -517, -518, 5, 39, -324, 159,
	362, 344, -275, 275, -673, -553, -593, -385, -418, -407,
	345, 95, 629, -463, -409, -393, -469, 2, 629, -223,
	-558, -224, -236, -311, 2, -559, -558, -558, 633, 628,
	610, 610, 610, 610, 610, 610, 610, -230, -513, -137,
	-230, -138, -141, 366, -324, 620, -425, 5, -368, -367,
	381, 355, -368, 457, 457, 363, 183, 271, -260, -308,
	-469, -469, 155, 34, 34, -469, -469, -480, 629, -469,
	-469, -399, 627, 5, -469, 629, 629, 8, -469, 629,
	630, -607, -293, -469, 629, 63, 629, 629, 633, 633,
	629, 629, 629, 629, 629, 629, 629, -475, 195, 143,
	355, 628, 629, 629, -111, -477, 217, 63, -500, -477,
	-477, -427, -389, -500, -467, -308, 626, -308, 626, -549,
	-545, -503, 628, 630, -234, 610, -558, -558, -202, 211,
	-645, -645, 590, -337, 627, 2, 626, -549, 629, -337,
	195, -616, -337, 525, 123, 189, 221, 221, -310, -310,
	-239, -546, 524, 457, -278, 404, -460, 159, 159, -579,
	97, -581, 79, 175, 106, 344, 351, 559, 404, 75,
	131, 362, 422, -663, -664, -665, 39, 601, 602, 629,
	-387, -497, -592, 628, -293, -387, -389, 344, 512, 131,
	362, 344, 131, 362, 585, 123, 2, 553, 82, -310,
	-318, -237, -389, -389, -324, -334, -554, 167, 629, 633,
	610, 2, 620, 620, -334, -554, -329, -334, -554, -327,
	159, 575, -278, 575, 379, 173, 540, -141, -469, 167,
	629, -308, 5, 5, 159, -305, 79, -310, 5, -310,
	-328, 123, 590, 468, 540, 540, 362, 362, 365, -643,
	-644, -227, 633, 628, 610, 610, 610, -227, -559, -137,
	2, -379, -369, 242, -310, -576, -573, -574, 404, -461,
	-580, -582, 175, 404, -357, 628, -309, -294, 628, -141,
	2, -240, 628, -355, 366, 627, -628, 366, -627, 121,
	141, -554, -422, -141, -329, -377, 590, -379, 629, 633,
	153, -444, 570, -308, -324, 159, -276, 274, -673, -553,
	-273, -447, -445, 144, 628, 362, -141, -385, 610, 629,
	629, 123, 629, -231, -232, -558, -137, -558, -558, -558,
	-137, -558, -230, -513, -513, -72, -73, 240, 97, 386,
	-321, 524, 240, 628, 628, -260, -469, -469, -469, 629,
	-385, -549, 620, -601, 381, 629, -496, -469, -469, -470,
	195, 628, -480, 629, -602, 589, -469, -413, -414, -469,
	455, 112, 215, -602, -602, 629, -545, -545, 2, -558,
	365, 2, 540, 626, 2, 195, -556, 195, 195, 231,
	-141, 231, 39, 425, -460, -318, -318, -322, -315, 175,
	224, 351, 585, -443, 266, 628, -470, 563, -324, 628,
	2, 223, 223, 31, 63, -666, 135, 244, 629, 633,
	-498, -304, -293, -469, -498, 629, 629, 351, 563, 351,
	585, -469, 563, -519, 628, -271, -271, 629, 629, -469,
	540, -548, 104, -546, 2, -632, -278, -389, -389, -307,
	-469, 189, -469, 540, 5, -271, -322, -271, -271, -305,
	553, 361, -334, -554, -329, -648, 525, 475, 554, 469,
	198, 456, -648, 189, -228, -229, -558, -137, -137, -227,
	39, -363, -364, 2, -578, 266, -315, 266, 233, 158,
	-387, 628, 628, -389, -662, 590, 629, -353, -241, -93,
	-94, 541, -512, 633, 628, 610, -379, 328, 123, 39,
	5, 628, 628, -293, 362, 628, -308, -288, 96, -673,
	-553, -274, -418, 345, -389, 97, -447, -476, -224, 628,
	-224, 629, -230, 633, 29, 628, 29, 628, -324, -346,
	-399, -399, 629, -385, 63, 633, 629, 629, -470, -480,
	629, -603, -604, -313, 633, 628, 628, 482, 627, 627,
	-556, 2, -556, -556, -556, 468, -278, 404, -293, -572,
	-581, -315, 344, -242, 570, 590, -469, -470, -295, 628,
	-469, 628, 628, 39, 131, 244, 136, 229, -459, -667,
	105, 513, 232, -497, -260, 629, -458, 570, 422, -470,
	-305, -387, 628, 628, 628, 610, 195, -141, 628, -523,
	-271, -328, 610, 540, 2, 2, 195, -622, 629, -638,
	420, -141, -241, 628, -242, -358, 84, 98, 132, 223,
	199, 241, 504, 510, 29, -358, 629, -387, -387, 629,
	-359, 362, 123, 328, 629, 39, -94, 9, -627, -628,
	-469, 39, 123, -141, -517, -387, -324, -387, 362, -280,
	-279, 283, -553, -275, 629, -318, -418, -559, -73, -389,
	-389, 629, 629, -608, 413, 458, 216, -399, -386, 629,
	633, 39, -414, 2, 2, 2, -645, -337, 425, -272,
	159, 218, 629, -583, 298, -293, 629, -422, -422, 39,
	136, 229, -365, -361, 628, -261, -498, -242, 218, -324,
	-633, 570, 629, -371, -370, -367, -373, -372, -367, -399,
	-546, 104, 379, -399, -305, -137, -556, -556, 362, -640,
	196, -639, 5, 10, -359, -388, -499, -310, -458, 629,
	629, 85, 123, -369, -141, 629, -141, 2, -377, 629,
	629, -444, 629, -324, -277, -560, 425, 427, -673, -276,
	-463, 144, 629, 629, 629, 629, -609, -610, 53, 556,
	113, -469, -609, -609, -604, -606, 195, 175, -457, 599,
	-584, -587, -586, 606, 488, 196, 380, 629, 512, 584,
	629, 629, -666, -389, -457, -379, -469, -458, 629, 633,
	575, 629, 633, 575, 629, 195, 629, -271, -645, -271,
	-648, -226, 590, 48, -287, -286, 629, 633, -459, -458,
	-365, 403, 137, 147, -363, -662, -458, 628, -459, 628,
	-285, -284, -673, -539, -288, 144, 345, 563, -224, -611,
	157, -610, 400, 188, 457, 400, 188, -611, -611, -556,
	-315, -242, 58, -586, 606, -587, 606, 563, 137, -463,
	629, -583, -242, -370, 231, -372, 195, 379, 195, 465,
	-639, 31, -242, -499, -365, -459, -242, 458, 458, 2,
	-241, -359, -459, -387, -365, -387, -281, -282, -283, -389,
	-280, 345, 563, 481, 113, 214, 535, 328, 34, 610,
	-585, 328, 444, 67, 481, -585, -584, 628, 628, -556,
	366, -242, -365, -463, 2, -359, -365, 629, -242, 629,
	-555, 377, -277, 481, -408, 457, 370, -610, -469, 24,
	351, 131, -666, -399, -399, -271, -223, 628, -463, -242,
	-287, -242, -458, -463, -459, -673, -285, -408, -463, 629,
	629, -223, -463, -463, -459, -365, -554, -281, -463, -360,
	-361, 540, 629, -365, -242, 628, -242, -463, -399, -463,
	629, -360,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 588, 589, 591, 592,
	593, 595, 596, 598, 600, 602, 603, 604, 606, 607,
	609, 610, 611, 612, 613, 615, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 704, 706, 0, 1543, 1545, 1547, 1549, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	363, 365, 367, 369, 0, 401, 403, 404, 406, 408,
	409, 410, 412, -2, 0, 521, 522, 524, 526, -2,
	0, 1128, 1130, 1132, 0, 692, 694, 0, 1135, 1137,
	1139, 0, 0, 716, 717, 0, 1657, -2, 708, 710,
	712, 714, 791, 793, 795, 797, 799, 801, 803, 805,
	807, 809, 810, 812, 814, 816, 818, 820, 821, 823,
	825, 827, 828, 830, 831, 833, 835, 837, 839, 841,
	843, 845, 847, 849, 851, 853, 855, 857, 859, -2,
	862, 863, 864, 866, -2, -2, 0, -2, -2, -2,
	1561, 49, 51, 53, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 463, 465, 467, 469, 471, 474, 476,
	478, 1715, 528, 530, 532, 534, 536, 538, 540, 0,
	0, -2, 1729, 0, 0, 948, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1688, 1690,
	1692, 1694, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 590, 594, 597, 599, 601, 605, 608, 614, 616,
	618, 573, 574, 577, 2427, 2445, 2446, 2447, 2450, 2451,
	2452, 2453, 2454, 2455, 2936, 3017, 3018, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759,
	2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
	2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779,
	2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
	2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
	2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899,
	2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 575, 576, 1322, 0,
	657, 655, 2412, 658, 2722, 660, 662, 515, 516, 517,
	518, 519, 520, 0, 685, 671, 1727, 686, 688, 689,
	690, 691, 652, 650, 0, 690, 685, 2482, 683, 1541,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 442, 1381, 1382, 1383, 1526, 1527, 2773, 1568,
	0, 259, 705, -2, -2, 2901, -2, 745, 746, -2,
	-2, 760, 764, 755, 2905, 0, 2776, 2759, -2, 767,
	1544, 1546, 1548, 867, 868, 869, 2431, 873, 871, 883,
	884, 887, 0, 904, -2, 0, 2478, 2744, -2, -2,
	905, 906, -2, -2, -2, -2, 885, 886, 0, 0,
	0, 0, 0, 44, 46, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 269,
	-2, -2, -2, -2, 0, 0, 2824, 2537, 2380, 2447,
	2383, 2378, 364, 366, 368, 370, 371, 0, 0, 0,
	0, 0, 0, 0, 402, 405, 407, 411, -2, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1202, 1194, 1195, 1448, 0, 0, 0, -2,
	523, 525, 578, 579, 0, 1716, 1716, 586, 587, -2,
	0, 0, 0, 0, 334, 324, 1129, 1131, 1133, 1134,
	0, 0, 0, 0, 0, 693, 695, 0, 0, 2818,
	301, 1136, 1138, 1140, 1141, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 709, 711, 713, 715, 792, 794,
	796, 798, 800, 802, 804, 806, 808, 811, 813, 815,
	817, 819, 822, 824, 826, 829, 832, 834, 836, 838,
	840, 842, 844, 846, 848, 850, 852, 854, 856, 858,
	860, 861, 912, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1017, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1108,
	0, 0, 915, 918, 919, 920, 921, 922, 923, 0,
	990, 1015, 1016, 1026, 865, 0, 1362, 1717, 1570, 1551,
	1565, 1570, 1553, 1554, 1555, 1556, 1557, 1562, 1564, 1558,
	1559, 1560, 50, 52, 54, 56, 58, 60, 62, 64,
	66, 68, 70, 72, 464, 466, 468, 470, 472, 475,
	477, 479, -2, 1686, 1687, 529, 531, 533, 535, 537,
	539, 541, 696, 0, 699, 0, 917, 698, -2, 0,
	1721, 1721, 1721, 0, 0, 1687, 1685, 0, 702, 703,
	771, 772, 1994, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 2082, 0, 773, -2, 2115, 2117, 2876, 2695,
	2901, 2253, 2119, 2120, 2121, 2122, 2123, 0, 2125, 2126,
	2127, 2128, 2129, 2130, 0, 2132, 0, 2137, 2138, 2139,
	0, 2883, 2357, 2441, -2, 0, 0, 2889, 2437, 0,
	2220, 2155, -2, -2, 2464, 2443, 1926, 1927, 1928, 1929,
	1930, -2, -2, 2919, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 0, 2864, 2884, 2885, 2890,
	2892, 2886, 2873, 2180, 2551, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1953, 1962,
	-2, -2, -2, -2, -2, -2, -2, 2877, 2878, 2895,
	2898, 2904, 2909, 2910, 2882, 2891, 2918, 2920, 2921, 2922,
	2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932,
	2933, 2934, 2935, 1954, -2, -2, -2, -2, 0, 1704,
	2737, 1707, 1322, 1705, 1689, 1691, 0, 1693, 0, 0,
	0, 1698, 1724, 1722, 0, 1773, 1702, 1703, 1796, 1796,
	1820, 0, 1801, 0, 1820, 1716, 1847, 0, 1807, 2764,
	2156, 2157, 0, 2447, 2442, -2, -2, 2916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 659, 661, 0, 0, 0, 684, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 445, 446, 447, 448,
	449, 2884, 0, 0, 0, 454, 0, 456, 457, 458,
	459, 460, 461, 462, 229, 2884, 546, 571, 0, 229,
	2884, 549, 229, 2884, 552, 0, 555, 1446, 229, 2884,
	558, 2408, 229, 2884, 561, 563, 2416, 229, 2884, 567,
	2423, 2421, 568, 0, 570, 249, 245, 246, 247, 248,
	1537, 1538, 1539, 1540, 0, 1567, 1447, 707, 0, 733,
	0, 743, 744, 2872, -2, 0, 2785, 748, 749, -2,
	751, 1571, 1575, 1576, 1577, 1578, 1579, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 740, 741, 758, 759,
	765, 768, 0, 876, 872, 888, 0, 903, 0, 904,
	904, 2397, 2388, 2389, 0, 0, 904, 904, 0, 0,
	907, 908, 909, 910, 911, 83, 0, 2884, 1847, 85,
	0, 2402, 2472, 2473, 2474, 2475, 2476, 2917, 2937, 2938,
	2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948,
	2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968,
	2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988,
	2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008,
	3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 2919, 89,
	0, 2884, 94, 0, 2884, 0, -2, 110, 0, 126,
	0, 153, -2, -2, -2, 134, 0, 2884, 0, 2377,
	-2, 0, 241, 325, 326, 327, 0, 634, 0, 643,
	337, 338, 2460, 2461, 2468, 2469, 2470, 2471, 0, 736,
	2254, 0, 0, 1166, -2, 0, 1375, 1377, 1377, 0,
	-2, 0, 0, 0, 1118, 2374, 2379, 1119, 1120, 2398,
	1121, 2384, 0, 372, 373, 374, 375, 376, 0, 377,
	2884, 379, 380, 0, 382, 383, 2884, 385, 386, 0,
	388, 0, 390, 0, 281, 285, 2884, 2884, 415, 418,
	0, 420, 421, 0, 423, 0, 0, 0, 427, -2,
	443, 0, 440, 430, 431, 433, 434, 435, 436, 437,
	0, 483, 481, 2413, 0, 0, -2, 2884, 0, 1163,
	0, 0, 1426, -2, 0, 1368, 0, 1433, 2884, 1429,
	0, -2, 0, 1714, 2884, 1588, 1198, 1199, 1200, 1201,
	1859, 512, 0, 1621, 0, 1623, 0, 1643, 1853, 1796,
	0, 0, 1858, 0, -2, 631, 2430, -2, 581, 0,
	582, 0, -2, 0, 351, 0, 0, 1144, 1146, 1147,
	1149, 1150, 1153, 1154, 1155, 1156, 0, 1158, 1833, 302,
	304, 0, 0, 0, 0, 1143, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 0, 0, 718, 0, 0,
	913, 914, 0, 0, 930, 931, 932, 0, 351, 2777,
	2732, 2573, 939, 0, 942, 945, -2, 0, 0, 0,
	0, 952, 0, 957, 958, 959, 0, -2, 0, 966,
	968, 1127, 970, 0, 0, 972, 0, 976, 0, 979,
	0, 981, 0, 983, -2, -2, -2, 991, 992, -2,
	997, -2, 0, 1001, -2, 0, 1004, 0, 1007, -2,
	0, 1017, 1013, 1014, 0, 0, 0, 0, 1034, 1035,
	0, 1044, 0, 1047, 1048, 1049, 0, 0, 1054, 1055,
	0, 1057, 1058, 1059, 1061, 1062, 1063, 0, 2853, 2782,
	2537, 0, 1071, -2, 1077, 1079, 0, -2, 0, 1095,
	0, 1099, 0, 0, 1107, 0, 0, 916, 0, 924,
	925, 229, 1851, 1550, -2, 1552, 0, -2, 0, 697,
	0, 701, 1746, 1672, 1669, 0, 1743, 1744, 1673, 0,
	0, 0, 1680, 0, 1719, 1720, 0, 0, 0, 1659,
	1660, 0, 0, 0, 0, 2259, 2260, 2261, 2262, 2275,
	2263, 2264, 2274, 2272, 2273, 2265, 2266, 2271, 2285, 2286,
	2276, 2277, 2267, 2280, 2278, 2279, 2281, 2282, 2283, 2284,
	0, 0, 2290, 0, 2268, 2269, 2270, 2298, 0, 0,
	2299, 0, 2301, 0, 2291, 2287, 2288, 2289, 0, 2061,
	2063, 2365, 0, 0, 0, 2297, 2292, 2293, 1999, 2000,
	2001, 2002, 2003, 2036, 2040, 2041, 0, 0, 2116, 2362,
	2361, 2118, 0, 0, 2313, 0, 2131, -2, 0, 2254,
	2308, 0, 0, 2140, 2141, 2142, 0, 0, 2313, 0,
	0, 2356, 2152, 2153, 1991, 0, 0, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1940, 1939, 0, 1941,
	0, 1942, 1943, 1950, 1963, 0, 0, 0, 0, 1967,
	0, 0, 0, 0, 0, 0, 0, 2337, -2, 0,
	0, 0, 0, 1955, 0, 0, 1706, 0, 0, 1777,
	2366, 2370, 2371, 1777, 1777, 0, 0, 2314, 1844, 1844,
	0, 0, 1839, 1839, 1839, 1837, 1820, 0, 1820, 1830,
	0, 1820, 1820, 0, -2, 1801, 0, 0, 1830, 0,
	1814, 619, 621, 623, 625, 626, 627, 629, 1848, 1849,
	0, 0, 0, 0, 2448, 0, 0, 0, 0, 2420,
	0, 0, 2433, 0, 0, 2407, 397, 398, 0, 0,
	0, 2835, 2776, 0, -2, 664, 687, 1716, 0, 2316,
	1874, 1878, 0, 1880, 1881, 1882, 1883, 1884, 0, 0,
	1875, -2, 1951, 1953, 1974, 2465, 2466, 2467, 1934, 1935,
	1936, 1937, 1938, 1946, 1933, 1933, 1933, 1944, 1973, 1965,
	1973, 1969, 1919, 1920, 1921, 1956, 1957, 1958, 1959, 0,
	2835, 2776, 0, -2, 0, 674, 0, 0, 1654, 444,
	0, 451, 452, 453, 0, 542, 0, 227, 228, 0,
	229, 2884, 547, 0, 550, 0, 229, 2884, 2372, 556,
	0, 559, 0, 0, 565, 0, 0, 0, 0, 0,
	229, 1656, 0, 0, 0, 0, -2, 753, 761, 762,
	763, 0, 1573, 0, 1580, 782, 783, 784, 1582, 1583,
	0, 1585, 756, 785, 786, 787, 788, 789, 790, 0,
	2386, 2387, 2392, 2393, 0, 0, 754, 775, 757, 0,
	769, 879, 874, 875, 889, 890, 0, 0, 2390, 2391,
	0, 0, 895, 896, 135, 1523, 0, 0, 182, 0,
	1523, 1523, 0, 0, 0, 0, 210, 0, 0, 1232,
	0, 0, 0, 0, 153, 167, 178, 147, 148, 149,
	0, 0, 0, 0, 0, 0, 95, 1344, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 1360, 0, 0,
	0, 0, 0, 112, 113, 0, 0, 118, 119, 0,
	0, 166, 0, 0, 0, 0, 0, 1618, 0, 157,
	153, 0, 0, 152, 154, 137, 0, 0, 153, 168,
	180, 0, 216, 218, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 251, 0, 633, 635, 0, 0,
	0, 0, 641, 0, 644, 0, 734, 738, 739, 0,
	0, 735, 737, 0, 0, 1369, 0, 0, 0, 1713,
	0, 0, 0, 0, 2884, 1521, 0, 1506, 0, 1833,
	2624, -2, -2, 302, 1833, 1117, 0, 0, 2448, 2382,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 419, 422, 424, 425, 426, 0, 1425, 0, 432,
	473, 1291, 2884, 0, 0, 502, 495, 0, 498, 0,
	0, 0, 1343, 2884, 1341, 2417, 0, 1366, 0, 1322,
	2884, 2415, 0, 0, 0, 1434, 2457, 1443, 1447, 1606,
	0, 514, 0, 1624, 1626, 0, 0, 1854, 0, 1856,
	1796, 1716, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 1157, 308, 0, 1832, 0, 0, 339,
	1833, 302, 2750, 0, 1142, 351, 351, 1833, 720, 1833,
	722, 0, 0, 933, 934, 0, 351, 351, 351, 940,
	941, 943, 944, -2, -2, -2, -2, 946, 947, 1041,
	0, 0, 0, 1040, 960, 0, 962, 965, 969, 0,
	1111, 2759, 2776, 2835, 1125, 1041, 2537, 1041, 2537, 1041,
	2537, 1041, 1041, 985, 1029, 1037, 996, 1003, 0, 998,
	1002, 1005, 1008, 0, 1010, 1018, 0, -2, 0, 1021,
	0, 1023, 0, 1025, 1041, 1042, 1045, 0, 1053, 1056,
	0, 1064, 1065, 1066, 1067, 2428, 1068, 1069, 1070, -2,
	1074, 1075, 0, 1086, 1091, 1092, 1088, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 0, 1110, 0, 926,
	1361, 0, 1563, 1746, 1672, 700, 1663, 1745, 1664, 1671,
	1674, 0, 0, 1676, 0, 1678, 0, 1741, 1742, 1749,
	1750, 0, 1760, 1761, 1753, 0, -2, 0, 0, 1756,
	1757, 1682, 0, 1699, 1700, 1701, 1730, 1733, 1462, 0,
	3017, 1995, 1869, 1996, 1997, 2401, 0, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, -2, -2, -2,
	-2, -2, -2, -2, -2, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, -2, -2, -2, 2037,
	2038, 2039, -2, 2300, 2302, 0, 2365, 0, -2, 0,
	-2, -2, -2, -2, 2058, 0, 2060, 2065, 2067, 2069,
	0, 0, 0, 0, 2364, 2079, 2348, 2349, 0, 0,
	2256, 2257, 2258, 2064, 0, 2083, 2363, 2360, 0, 0,
	2294, 0, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 0, 2312, 1729, 2144, 0,
	0, 0, 0, 2151, 2136, 2310, 0, 2309, 0, 0,
	0, 2320, 0, 2355, 2351, 0, 2399, 1990, 1977, 1978,
	1979, 1980, 1981, 1982, 1992, 0, 2396, 2434, 2440, 2230,
	0, 0, 0, 2181, 2182, 2183, 2184, 2185, 0, 2187,
	2188, 0, 2190, 2191, 0, 2193, 2194, 0, 2196, 2197,
	2198, 2199, 2200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 0, 0, 2202, 0, 2323, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2204, 0, 2206, 2314,
	2334, 0, 0, 2084, 0, 0, 0, 0, 0, 2209,
	2314, 2342, 0, 0, 0, 0, 0, 2314, 0, 2347,
	0, 2216, 0, 2218, 949, 950, 1708, 0, 0, 1864,
	0, 0, 0, 2369, 1864, 1864, 0, 1772, 0, 0,
	1840, 1841, 1842, 1843, 0, 0, 1844, 0, 1834, 1838,
	1835, 1836, 1830, 1793, 0, 0, 2403, 1830, 1799, 1829,
	0, 1322, 1819, 1830, 1830, 0, -2, 1803, 1820, 0,
	0, 620, 622, 624, 628, 630, 0, 0, 1729, -2,
	0, -2, 353, 1321, 0, 0, 0, 0, 0, 0,
	654, 656, 0, 0, 562, 0, 0, 670, 0, 648,
	0, 651, 0, 1865, 1868, 0, 0, 1879, 1885, 1886,
	0, -2, 0, 0, 1975, 0, 0, 0, 0, 0,
	682, 0, 685, 0, 0, 0, 455, 572, 229, 544,
	0, 229, 229, 553, 0, 0, 229, 564, 229, 2424,
	229, 2422, 250, 569, 1655, 262, 0, 742, 0, 1572,
	1581, 0, 779, 0, 781, 0, 2394, 2395, 0, 770,
	0, 877, 0, 891, 892, 893, 894, 0, 0, 0,
	0, 1522, 0, 0, 1469, 0, 0, 186, 2884, 0,
	231, 0, 0, 1284, 2409, 0, 1274, 0, 0, 2559,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 150, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 1346,
	1348, 1355, 1357, 0, 1351, 1352, 0, 1354, 1356, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 1378, 0, 0, 0, 1379, 1380, 1594, 1595,
	0, 1617, 1618, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 2376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 351, 638,
	639, 347, 344, 346, 640, 645, 0, 646, 0, 0,
	0, 0, 1371, 0, 1421, 1419, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 0, 0, 0, 0, -2, 1373, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	342, 2375, 2385, 0, 1151, 1152, 378, 381, 384, 387,
	268, 0, 0, 417, 428, 0, 0, 1204, 1176, 0,
	0, 482, 351, 0, 0, 497, 0, 502, 2426, 1161,
	1339, 1342, 0, 1322, 2884, 1389, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 2884, 2404, 2456, 2457, 1608,
	1618, 0, 1864, 0, 1641, 1627, 0, 0, 0, 1641,
	1645, 1646, 1648, 1649, 0, 0, 1855, 1861, 580, 632,
	1716, 1716, 351, 349, 2698, 0, 0, 1630, 1632, 0,
	0, 0, 294, 0, 305, 1833, 303, 0, 308, 0,
	0, 1833, 302, 0, 494, 719, 724, 928, 0, 351,
	936, 937, 938, 987, 1031, 1039, 1090, 951, 953, 954,
	955, 0, 0, 0, 1126, 1122, 1123, 1124, 971, 1041,
	974, 1041, 977, 1041, 980, 982, 1000, 1006, 1019, 1012,
	1020, 0, 0, 0, 1033, 0, 1051, 0, 1060, 1073,
	0, 0, 0, 0, 0, 0, 0, 1096, 1097, 1098,
	1100, 1105, 1104, 1109, 927, 1852, 1667, 1668, 1670, 0,
	1679, 0, 0, 1755, -2, -2, 1754, 1758, 1759, -2,
	-2, -2, -2, 1675, 0, 1684, 1681, 0, 1740, 1460,
	1461, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	2080, 0, -2, 2059, 2062, 2066, 2068, 2070, 0, 0,
	0, 0, 0, 0, 2303, 0, 2305, 2081, 2358, 2361,
	2296, 0, 2252, 0, 0, 1728, 1729, 1729, 0, 2150,
	0, 2311, 0, 2318, 2319, 0, 2143, 0, 2352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2154, 0,
	0, 0, 0, 2186, 2189, 2192, 2195, 0, 0, 0,
	0, 2175, 0, 0, 0, 2179, 1945, 1931, 0, 1973,
	1971, 1972, 1966, 1973, 1970, 1923, 0, 1922, 0, 2201,
	0, 2203, 2205, 0, 0, 2207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 2088, 2089, 2109, 2208, 2340, 2341, 0, 0, 0,
	0, 0, 0, 2214, 0, 2346, 2215, 2217, 1716, 0,
	1709, 0, 1774, 1763, 1863, 0, 2367, 1833, 1776, 1778,
	2368, 2406, 1763, 1763, 0, 2315, 0, 0, 1824, 0,
	0, 0, 1826, 1797, 0, 0, 1791, 0, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1798, 1322, 1828, 1800, 1804,
	2434, 0, 1830, 0, 1815, 0, 1817, 1850, 0, 1809,
	1812, 0, 0, 2449, 1864, 0, 391, 399, 400, 392,
	393, 394, 395, 0, 1509, 0, 0, 0, 0, 0,
	2317, 0, 1870, 0, 1876, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 1653, 450, 543, 229, 548,
	551, 2373, 229, 557, 560, 566, 258, 0, 732, -2,
	777, 778, 780, 0, 776, 882, 878, 183, 1523, 0,
	0, 0, 1465, 0, 1187, 0, 1182, 1183, 1467, 1471,
	1477, 1480, 0, 188, 2884, 200, 0, 2884, 0, 1248,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 2884,
	229, 2884, 229, 204, 206, 209, 0, 215, 211, 0,
	1184, 0, 1236, 0, 0, 1239, 136, 1523, 0, 0,
	139, 143, 155, 0, 0, 0, 165, 0, 0, 0,
	1482, 1486, 1494, 0, 0, 0, 1349, 1350, 1353, 1359,
	96, 0, 0, 0, 1490, 1492, 1498, 111, 114, 2884,
	2418, 0, 116, 2884, 0, 0, 0, 1464, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 141, 145, 156,
	0, 1500, 138, 0, 244, 0, 0, 234, 229, 2884,
	0, 236, 0, 237, 238, 252, 0, 0, 0, 637,
	0, 0, 0, 642, 0, 1164, 1165, 1420, 0, 1364,
	1365, 0, 1376, 1370, 0, 0, 0, 0, 0, 1502,
	1503, 0, 0, 0, 1521, 1518, 1833, 264, 0, 1833,
	272, 0, 2381, 0, 286, 414, 0, 0, 0, 0,
	1203, 1302, 1205, 1207, 1208, 1209, 231, 0, 2457, 1274,
	2613, 2457, 0, 0, 1171, 0, 0, 0, 488, 484,
	0, 493, 496, 501, 0, 500, 2410, 506, -2, 0,
	0, 0, 0, -2, 0, 0, 1436, 1430, 1431, 0,
	0, 0, 0, 2884, 1610, 1618, 0, 1714, 1729, 513,
	1619, 1641, 0, 0, 0, 1629, 1625, 1622, 1864, 0,
	0, 0, 0, 0, 1857, 1860, 583, 584, 328, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 306, 0,
	309, 0, 0, 0, 314, 315, 316, 317, 318, 319,
	0, 0, 0, 0, 308, 340, 296, 1833, 0, 308,
	0, 0, 721, 0, 0, 935, 0, 961, 964, 973,
	975, 978, 1022, 1024, 1041, 0, 1052, 1080, 2405, 1081,
	1226, 0, 1226, 0, 0, 1101, 1677, 0, 1752, 1683,
	1734, 1735, 0, 1462, 0, 1998, 2043, 0, 0, -2,
	0, 0, 2047, 0, 0, 0, -2, 0, 0, 0,
	2304, 2306, 0, 2360, 2295, 2145, 0, 0, 0, 2149,
	2133, 2134, 0, 2255, 2321, 2350, 2354, 0, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 0, 2400, 2435, 2439, 2228,
	2229, 2233, 2414, 0, 0, 0, 2158, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 1968, 0, 0, 2322,
	2333, 2335, 2085, 2086, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, -2, -2, -2, 2103, 2104, 2105,
	-2, -2, -2, 2110, 0, 0, 0, 2336, 2338, 2339,
	2343, 2344, 0, 2211, 2212, 2213, 2345, 0, 1716, 1710,
	1771, 0, 1862, 1775, 0, 1771, 1771, 1723, 1822, 0,
	0, 1846, 0, 1794, 0, 1795, 0, 0, 1827, 0,
	1802, 1805, 1806, 1816, 0, 1808, 0, 1811, 0, 2145,
	-2, 352, 354, 356, 0, 359, 360, 0, 0, 0,
	663, 0, 1509, 1509, 0, 665, 649, 0, 0, 1872,
	0, 0, 1948, 1952, 1976, 676, 678, 0, 0, 2835,
	2776, 0, 675, 545, 554, 260, 0, 1831, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	230, 0, 1283, 0, 1246, 0, 0, 1273, 0, 0,
	1289, 190, 191, 192, 0, 0, 0, 0, 202, 0,
	0, 198, 0, 208, 214, 213, 0, 1233, 0, 0,
	0, 0, 1470, 0, 0, 0, 162, 163, 164, 0,
	169, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 1600, 1601, 0, 1591,
	159, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 1459, 254, 0, 0, 0, 0, 0, 348, 343,
	345, 0, 1363, 1423, 1424, 1372, 1483, 1487, 1495, 0,
	0, 0, 0, 0, 690, 1520, 0, 272, 270, 0,
	273, 0, 276, 277, 0, 0, 272, 266, 0, 0,
	0, 1322, 429, 1174, 1290, 0, 0, 1292, 1210, 1214,
	0, 2457, 2457, 0, 2411, 0, 1172, 0, 0, 1291,
	480, 0, 487, 0, 499, 503, 0, 0, 1343, 0,
	0, 1367, 1392, 1322, 0, 1435, 1437, 0, 1445, 0,
	0, 0, 1612, 1618, 0, 1605, 1606, 1748, 1620, 1639,
	-2, 0, 0, 1729, 1647, 1644, 1650, 1651, 0, 0,
	0, 331, 0, 1631, 1633, 0, 1145, 1148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 308, 1833,
	298, 1833, 335, 0, 929, 956, 1032, 1050, 1082, 1225,
	0, 0, 1084, 0, 0, 1751, 1738, 1739, 1736, 1462,
	2045, 2049, 0, 0, 0, 2051, -2, 0, 2073, -2,
	-2, 2307, 2359, 2124, 1729, 2146, 2148, 2135, 2353, 1993,
	0, 2235, 2232, 0, 2219, 0, 2170, 2171, 0, 0,
	2174, 2176, 2177, 2178, 1932, 1925, 1924, 2332, 0, 0,
	0, 0, 2210, 1711, 0, 2224, 0, 0, 1779, 2224,
	2224, 1823, 0, 1825, 1792, 1780, 0, 1789, 0, 2435,
	1818, 1810, 0, 0, 357, 0, 361, 362, 396, 0,
	666, 667, 0, 0, 1866, 1871, 0, 1877, 1947, 0,
	0, 0, 0, 0, 261, 0, 880, 881, 184, 185,
	1188, 1186, 1474, 1478, 1475, 0, 187, 0, 0, 1247,
	0, 1250, 0, 0, 0, 0, 1257, 1274, 0, 0,
	0, 0, 0, 0, 1276, 0, 1275, 0, 0, 1306,
	0, 1450, 1457, 0, -2, 0, 0, 0, 194, 220,
	0, 0, 0, 0, 223, 1524, 196, 0, 0, 229,
	229, 1185, 0, 0, 1466, 1468, 1481, 0, 0, 0,
	0, 172, 0, 0, 1484, 1488, 1496, 1491, 1493, 1499,
	0, 0, 117, 0, 0, 1602, 0, 158, 0, 0,
	0, 1501, 242, 243, 0, 229, 0, 229, 235, 229,
	1459, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	1505, 263, 0, 0, 0, 0, 0, 265, 341, 272,
	416, 0, 1235, 0, 1302, 1294, 1295, 1296, 0, 1206,
	1301, 1303, 0, 0, 1211, 0, 0, 0, 0, 1191,
	1173, 0, 1204, 1176, 0, 485, 504, 0, 507, 0,
	510, 1162, 1340, 1384, 1322, 1387, 0, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 1614, 1618, 0, 1607,
	1608, 1641, 1747, 0, 0, 0, 1628, 1748, 0, 350,
	351, 0, 351, 310, 0, 311, 312, 313, 320, 321,
	322, 323, 297, 300, 308, 723, 725, 0, 0, 731,
	1224, 0, 0, 0, 0, 1737, 2053, -2, -2, 2074,
	0, 2436, 2438, 1729, 0, 2221, 1731, 0, 0, -2,
	0, 0, 0, 1712, 1695, 0, 1770, 1762, 1764, 1766,
	2762, 2532, 2883, 1696, 1697, 1845, 0, 0, 1813, 358,
	1508, 668, 0, 0, 1873, 0, 673, 0, 0, 0,
	870, 0, 0, 1476, 189, 0, 0, 1251, 1252, 1254,
	0, 1256, 1258, 1259, 1176, 0, 1263, 0, 2459, 0,
	1268, 1271, 1272, 0, 0, 1285, 1307, 0, 1316, 0,
	1452, 1462, 1456, 0, 1454, 1318, 0, 193, 222, 195,
	224, 219, 0, 1459, 0, 197, 207, 0, 0, 140,
	0, 0, 2526, 175, 173, 171, 115, 121, 123, 1463,
	161, 0, 142, 0, 244, 253, 1458, 255, 239, 229,
	0, 0, 1485, 1489, 1497, 0, 1512, 1513, 1514, 1515,
	0, 0, 0, 0, 274, 0, 275, 278, 279, 0,
	0, 1176, 1234, 1175, 1293, 0, 1304, 1176, 0, 0,
	0, 0, 0, 0, 1178, 0, 1177, 0, 0, 486,
	489, 0, 492, 0, 0, 0, 0, 0, 1391, 0,
	1438, 1436, 0, 1444, 0, 0, 0, 1590, 0, 0,
	1609, 1610, 511, 1634, 0, 0, 1641, 1652, 330, 0,
	333, 307, 299, 0, 727, 0, 729, 0, 1083, 1085,
	0, 0, 2147, 2239, 0, 0, 2172, 2173, -2, 0,
	2113, 2223, 2225, 0, 0, 0, 0, 0, 1781, 1790,
	1509, 1867, 680, 677, 679, 0, 1472, 0, 1479, 231,
	1249, 1253, 0, 1260, 0, 0, 0, 1264, 1326, 0,
	0, 1343, 1343, 1277, 0, 0, 1310, 1311, 1231, 0,
	1312, 1313, 1314, 1451, 1740, 1457, 1176, 0, 0, 221,
	226, 0, 0, 0, 0, 0, 0, 160, 0, 233,
	256, 1459, 0, 0, 1516, 1517, 0, 0, 271, 290,
	0, 1385, 1178, 0, 1305, 1212, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1213, 1318, 0, 0, 1282,
	1189, 0, 1192, 0, 1174, 0, 490, 491, 508, 0,
	509, 0, 0, 1392, 0, 0, 1445, 0, 0, 1597,
	1589, 1618, 1611, 1612, 1864, 0, 1642, 0, 726, 0,
	0, 1093, 1094, 0, 0, 0, 0, 2234, 1732, 2114,
	0, 0, 1765, 1767, 1768, 1769, 669, 0, 1473, 201,
	0, 1320, 1262, 1331, 0, 0, 0, 0, 0, 1278,
	1308, 1309, 1306, 1230, 0, 1455, 1453, 1287, 1320, 1322,
	199, 0, 1318, 0, 1240, 0, 0, 1243, 0, 0,
	176, 2526, 174, 0, 229, 647, 1509, 229, 0, 293,
	0, 284, 282, 283, 1170, 0, 1298, 1300, 1316, 1318,
	1231, 0, 1193, 1235, 1191, 505, 1386, 1390, 1388, 1428,
	1318, 0, 1316, 0, 1604, 1618, 1598, 1599, 0, 1614,
	0, 0, 351, 728, 730, 2231, 2251, 2240, -2, 2838,
	2533, 0, 2251, 2251, 2226, 2227, 0, 0, 1176, 0,
	1265, 1327, 1328, 0, 1323, 1324, 1325, 2458, 1266, 1267,
	1269, 1270, 1864, 0, 1317, 1326, 225, 1176, 1237, 0,
	0, 1238, 0, 0, 179, 0, 181, 257, 1507, 1510,
	0, 280, 0, 0, 1167, 1169, 1176, 0, 1231, 1316,
	1176, 0, 0, 0, 1176, 1178, 1316, 0, 1231, 0,
	1593, 1603, 0, 1613, 1590, 0, 1637, 0, 332, 2236,
	0, 0, 2242, 2243, 2244, 2245, 2246, 2237, 2238, 681,
	1255, 1261, 0, 1329, 0, 1330, 0, 0, 0, 1286,
	1315, 1331, 205, 1241, 0, 1244, 0, 177, 0, 0,
	288, 289, 1297, 1299, 1176, 1231, 1864, 1179, 0, 1181,
	1178, 1190, 1231, 0, 1176, 0, 1616, 1592, 1596, 2419,
	1597, 1635, 0, 0, 0, 2248, 2249, 0, 0, 0,
	1332, 0, 1335, 1336, 0, 1333, 1306, 0, 0, 229,
	0, 1864, 1176, 1281, 1180, 1170, 1176, 1318, 1864, 1316,
	1586, 1618, 1604, 0, 1864, 2247, 2250, 2241, 1319, 1334,
	1337, 1338, 1288, 0, 0, 1511, 291, 0, 1279, 1864,
	1168, 1864, 1316, 1441, 1231, 0, 1593, 1864, 1638, 1228,
	0, 0, 1280, 1439, 1231, 1176, 1615, 1587, 1636, 1242,
	1227, 0, 292, 1176, 1864, 0, 1864, 1442, 0, 1440,
	1228, 1245,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 616, 3, 622, 617, 3,
	628, 629, 620, 618, 633, 619, 630, 621, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 636, 3,
	608, 610, 609, 613, 632, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 626, 3, 627, 623, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 634, 615, 635, 611,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 612, 57951, 614, 57952, 624, 57953, 625, 57954, 631,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1562
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1569
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1575
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1591
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1600
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1601
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1704
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1737
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1953
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1977
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2015
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2062
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2074
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2095
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2157
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2177
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2185
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2196
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2206
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2216
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2225
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2236
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2242
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2268
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2288
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2320
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2408
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2418
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2421
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2479
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2514
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2577
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2674
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2678
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3004
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3020
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3225
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3344
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3349
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3354
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = nil
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3462
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3658
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3679
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3680
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3689
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3708
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "CREATE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3726
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "create access method")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "create cast")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3736
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3739
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3740
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3741
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3742
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			return unimplemented(sqllex, "create publication")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3745
		{
			return unimplemented(sqllex, "create rule")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			return unimplemented(sqllex, "create server")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3747
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3754
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
		}
	case 441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3758
		{
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3761
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3762
		{
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3765
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3770
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3771
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3772
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3773
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3774
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3775
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3776
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3777
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3779
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			return unimplemented(sqllex, "drop server")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3792
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3863
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3909
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3929
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3965
		{

			sqlVAL.union.val = nil
		}
	case 503:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3993
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4012
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4025
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4052
		{
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4063
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "DROP")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4148
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4168
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4225
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4368
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4376
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "DELETE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "INSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "DELETE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "INSERT")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4566
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4599
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4690
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4706
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "GRANT")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4802
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4825
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "RESET")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "RESET")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "USE")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4893
		{
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "USE")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4961
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5025
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5033
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5055
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5130
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			return unimplemented(sqllex, "set from current")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5162
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5171
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5208
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5225
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = tree.Low
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = tree.Normal
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = tree.High
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = true
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = false
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = false
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			return helpWith(sqllex, "FETCH")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "MOVE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = int64(1)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = int64(-1)
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = int64(1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = int64(1)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = int64(-1)
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5581
		{
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5582
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5586
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5622
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.str = "client_encoding"
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.str = "timezone"
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5672
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5687
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5735
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5783
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5789
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5803
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5864
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5894
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5917
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5951
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5974
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5990
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = true
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = true
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = false
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6026
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6082
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6096
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6147
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = true
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = false
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6171
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6212
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6217
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = true
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = false
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6256
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6264
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6274
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6285
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6307
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6317
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6351
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6361
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6366
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6382
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6395
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6400
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6440
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6448
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6474
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6479
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6492
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6506
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6515
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6596
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6609
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6742
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, TenantID: roachpb.MakeTenantID(tenID)}}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6804
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6855
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6867
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6868
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6881
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6909
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6922
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6962
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7073
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7088
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{

			sqlVAL.union.val = nil
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.str = ""
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7132
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = nil
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7155
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7159
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7195
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7208
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7222
		{
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7305
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7316
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7461
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7568
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7613
		{

			sqlVAL.union.val = true
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = false
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7623
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7627
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7630
		{
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7727
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7738
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7765
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7848
		{
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7903
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7935
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8020
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8029
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8037
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8073
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8075
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8077
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8098
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8140
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8163
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = true
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8197
		{

			sqlVAL.union.val = true
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = false
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8212
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8226
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8238
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8250
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8260
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8270
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = true
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = true
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = nil
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8417
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8445
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8447
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8449
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8453
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8488
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8505
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8523
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8539
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8555
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = false
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = true
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = false
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = true
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = false
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8633
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.str = ""
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8692
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8698
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8923
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8929
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8941
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8947
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8961
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8967
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9026
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = true
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = false
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = tree.Types
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9086
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9114
		{
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9119
		{
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9130
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9148
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9157
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9207
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9274
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9285
		{
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9306
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9347
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9349
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9353
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.str = ""
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9466
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{

		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9503
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.str = ""
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.str = ""
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.str = ""
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.str = ""
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9558
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9583
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9829
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9844
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10023
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10024
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10086
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10130
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = true
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = false
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10200
		{
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = nil
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10213
		{
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10214
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = true
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = false
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = false
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = true
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10243
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10244
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10247
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10248
		{
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10301
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10306
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10332
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10491
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10493
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10508
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10530
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10577
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10608
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10650
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10660
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10706
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10736
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10769
		{
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = nil
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = true
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = false
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.str = tree.AstFull
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.str = tree.AstRight
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.str = tree.AstInner
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10889
		{
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.str = tree.AstHash
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.str = ""
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10958
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10963
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10981
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10993
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11003
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = true
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = false
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = true
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = false
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11052
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11065
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11073
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11102
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11122
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11171
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11184
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = types.Geography
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11233
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11241
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11275
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = nil
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = types.Int2
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = types.Int
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = types.Float4
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = types.Float
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = types.Bool
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11348
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11361
		{
			sqlVAL.union.val = types.Float
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11367
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11373
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11395
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = types.String
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = true
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = false
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = types.Date
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11444
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11452
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11466
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11475
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11483
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11500
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = true
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = false
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = false
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = types.Interval
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11524
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11608
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = nil
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11653
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11713
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11862
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12057
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12079
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12187
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12291
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12296
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12306
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12322
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12346
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12380
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12391
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12392
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12404
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12416
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12482
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12607
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12612
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12621
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12663
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12673
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12683
		{
			return unimplemented(sqllex, "treat")
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12709
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.str = ""
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12858
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12894
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12914
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12918
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12926
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12944
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12955
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12975
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12991
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12997
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12999
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13001
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13004
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13008
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13019
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13031
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13056
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13228
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13287
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13305
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13362
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13366
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13371
		{
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13372
		{
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13376
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13399
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13403
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13411
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13421
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13444
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13484
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13488
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13492
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13525
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13541
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13550
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13561
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13578
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13595
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13688
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13692
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13710
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13737
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13744
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13752
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13770
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13774
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13814
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13827
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13834
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13859
		{
			sqlVAL.str = ""
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13865
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13869
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
