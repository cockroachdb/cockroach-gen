// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:693
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lex.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12041

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1364,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	234, 204,
	487, 204,
	-2, 0,
	-1, 80,
	222, 1159,
	236, 1159,
	252, 349,
	376, 349,
	385, 941,
	417, 349,
	429, 941,
	471, 941,
	498, 349,
	524, 941,
	-2, 0,
	-1, 86,
	252, 353,
	-2, 0,
	-1, 87,
	129, 1364,
	229, 1364,
	509, 1364,
	510, 1364,
	-2, 0,
	-1, 103,
	146, 1335,
	164, 1335,
	177, 1335,
	232, 1335,
	265, 1335,
	329, 1335,
	339, 1335,
	504, 1335,
	-2, 1306,
	-1, 139,
	154, 816,
	251, 816,
	379, 785,
	434, 785,
	490, 816,
	492, 785,
	-2, 0,
	-1, 141,
	4, 1366,
	21, 1366,
	22, 1366,
	23, 1366,
	24, 1366,
	25, 1366,
	26, 1366,
	27, 1366,
	29, 1366,
	30, 1366,
	36, 1366,
	41, 1366,
	42, 1366,
	44, 1366,
	45, 1366,
	46, 1366,
	47, 1366,
	48, 1366,
	49, 1366,
	50, 1366,
	52, 1366,
	53, 1366,
	54, 1366,
	55, 1366,
	57, 1366,
	58, 1366,
	59, 1366,
	60, 1366,
	61, 1366,
	62, 1366,
	63, 1366,
	67, 1366,
	68, 1366,
	69, 1366,
	70, 1366,
	72, 1366,
	73, 1366,
	74, 1366,
	78, 1366,
	79, 1366,
	80, 1366,
	81, 1366,
	82, 1366,
	83, 1366,
	84, 1366,
	87, 1366,
	88, 1366,
	89, 1366,
	90, 1366,
	91, 1366,
	93, 1366,
	95, 1366,
	96, 1366,
	97, 1366,
	98, 1366,
	99, 1366,
	100, 1366,
	102, 1366,
	103, 1366,
	104, 1366,
	106, 1366,
	107, 1366,
	115, 1366,
	116, 1366,
	117, 1366,
	118, 1366,
	120, 1366,
	121, 1366,
	122, 1366,
	124, 1366,
	125, 1366,
	126, 1366,
	128, 1366,
	129, 1366,
	131, 1366,
	132, 1366,
	133, 1366,
	136, 1366,
	137, 1366,
	138, 1366,
	140, 1366,
	141, 1366,
	143, 1366,
	144, 1366,
	145, 1366,
	147, 1366,
	148, 1366,
	149, 1366,
	150, 1366,
	151, 1366,
	152, 1366,
	153, 1366,
	154, 1366,
	155, 1366,
	156, 1366,
	157, 1366,
	158, 1366,
	159, 1366,
	160, 1366,
	161, 1366,
	163, 1366,
	169, 1366,
	170, 1366,
	171, 1366,
	172, 1366,
	176, 1366,
	178, 1366,
	182, 1366,
	183, 1366,
	184, 1366,
	185, 1366,
	186, 1366,
	187, 1366,
	188, 1366,
	189, 1366,
	190, 1366,
	191, 1366,
	192, 1366,
	193, 1366,
	195, 1366,
	196, 1366,
	198, 1366,
	199, 1366,
	201, 1366,
	202, 1366,
	203, 1366,
	204, 1366,
	205, 1366,
	206, 1366,
	207, 1366,
	208, 1366,
	209, 1366,
	211, 1366,
	212, 1366,
	214, 1366,
	215, 1366,
	216, 1366,
	217, 1366,
	218, 1366,
	222, 1366,
	223, 1366,
	224, 1366,
	225, 1366,
	226, 1366,
	229, 1366,
	230, 1366,
	231, 1366,
	233, 1366,
	235, 1366,
	236, 1366,
	238, 1366,
	240, 1366,
	241, 1366,
	242, 1366,
	244, 1366,
	248, 1366,
	249, 1366,
	250, 1366,
	251, 1366,
	252, 1366,
	253, 1366,
	255, 1366,
	256, 1366,
	257, 1366,
	259, 1366,
	260, 1366,
	262, 1366,
	263, 1366,
	266, 1366,
	270, 1366,
	271, 1366,
	274, 1366,
	275, 1366,
	276, 1366,
	277, 1366,
	279, 1366,
	280, 1366,
	281, 1366,
	282, 1366,
	283, 1366,
	284, 1366,
	285, 1366,
	286, 1366,
	287, 1366,
	288, 1366,
	289, 1366,
	290, 1366,
	291, 1366,
	292, 1366,
	293, 1366,
	294, 1366,
	295, 1366,
	296, 1366,
	297, 1366,
	298, 1366,
	299, 1366,
	300, 1366,
	302, 1366,
	304, 1366,
	305, 1366,
	306, 1366,
	307, 1366,
	308, 1366,
	309, 1366,
	310, 1366,
	311, 1366,
	312, 1366,
	313, 1366,
	314, 1366,
	315, 1366,
	317, 1366,
	319, 1366,
	321, 1366,
	322, 1366,
	324, 1366,
	325, 1366,
	326, 1366,
	327, 1366,
	328, 1366,
	331, 1366,
	334, 1366,
	335, 1366,
	336, 1366,
	337, 1366,
	340, 1366,
	341, 1366,
	342, 1366,
	344, 1366,
	346, 1366,
	347, 1366,
	348, 1366,
	349, 1366,
	350, 1366,
	351, 1366,
	352, 1366,
	353, 1366,
	354, 1366,
	355, 1366,
	356, 1366,
	357, 1366,
	359, 1366,
	360, 1366,
	361, 1366,
	362, 1366,
	363, 1366,
	364, 1366,
	365, 1366,
	366, 1366,
	367, 1366,
	368, 1366,
	369, 1366,
	370, 1366,
	371, 1366,
	372, 1366,
	373, 1366,
	375, 1366,
	377, 1366,
	378, 1366,
	379, 1366,
	380, 1366,
	381, 1366,
	382, 1366,
	383, 1366,
	384, 1366,
	385, 1366,
	386, 1366,
	387, 1366,
	389, 1366,
	395, 1366,
	397, 1366,
	398, 1366,
	399, 1366,
	400, 1366,
	401, 1366,
	402, 1366,
	403, 1366,
	404, 1366,
	406, 1366,
	407, 1366,
	408, 1366,
	410, 1366,
	411, 1366,
	412, 1366,
	413, 1366,
	414, 1366,
	415, 1366,
	417, 1366,
	418, 1366,
	419, 1366,
	420, 1366,
	421, 1366,
	422, 1366,
	423, 1366,
	424, 1366,
	425, 1366,
	426, 1366,
	427, 1366,
	429, 1366,
	430, 1366,
	431, 1366,
	432, 1366,
	433, 1366,
	434, 1366,
	436, 1366,
	437, 1366,
	438, 1366,
	439, 1366,
	440, 1366,
	441, 1366,
	443, 1366,
	444, 1366,
	445, 1366,
	446, 1366,
	447, 1366,
	448, 1366,
	449, 1366,
	451, 1366,
	453, 1366,
	454, 1366,
	455, 1366,
	456, 1366,
	457, 1366,
	458, 1366,
	459, 1366,
	460, 1366,
	461, 1366,
	462, 1366,
	463, 1366,
	464, 1366,
	465, 1366,
	467, 1366,
	468, 1366,
	470, 1366,
	472, 1366,
	473, 1366,
	474, 1366,
	475, 1366,
	476, 1366,
	477, 1366,
	478, 1366,
	479, 1366,
	480, 1366,
	482, 1366,
	483, 1366,
	484, 1366,
	485, 1366,
	486, 1366,
	488, 1366,
	490, 1366,
	491, 1366,
	492, 1366,
	493, 1366,
	494, 1366,
	495, 1366,
	497, 1366,
	498, 1366,
	499, 1366,
	500, 1366,
	502, 1366,
	503, 1366,
	506, 1366,
	507, 1366,
	508, 1366,
	509, 1366,
	510, 1366,
	511, 1366,
	512, 1366,
	514, 1366,
	517, 1366,
	518, 1366,
	519, 1366,
	520, 1366,
	521, 1366,
	522, 1366,
	524, 1366,
	525, 1366,
	526, 1366,
	527, 1366,
	532, 1366,
	533, 1366,
	534, 1366,
	535, 1366,
	536, 1366,
	537, 1366,
	-2, 0,
	-1, 142,
	1, 1237,
	127, 1237,
	240, 1237,
	318, 1237,
	375, 1237,
	383, 1237,
	541, 1237,
	565, 1237,
	-2, 0,
	-1, 144,
	1, 1237,
	565, 1237,
	-2, 0,
	-1, 145,
	1, 1237,
	565, 1237,
	-2, 0,
	-1, 146,
	1, 1237,
	487, 1237,
	565, 1237,
	-2, 0,
	-1, 175,
	146, 1334,
	164, 1334,
	177, 1334,
	232, 1334,
	265, 1334,
	329, 1334,
	339, 1334,
	504, 1334,
	-2, 1309,
	-1, 213,
	4, 1373,
	5, 1373,
	6, 1373,
	7, 1373,
	8, 1373,
	9, 1373,
	10, 1373,
	21, 1373,
	22, 1373,
	23, 1373,
	24, 1373,
	25, 1373,
	26, 1373,
	27, 1373,
	29, 1373,
	30, 1373,
	36, 1373,
	37, 1373,
	41, 1373,
	42, 1373,
	43, 1373,
	44, 1373,
	45, 1373,
	46, 1373,
	47, 1373,
	48, 1373,
	49, 1373,
	50, 1373,
	52, 1373,
	53, 1373,
	54, 1373,
	55, 1373,
	57, 1373,
	58, 1373,
	59, 1373,
	60, 1373,
	61, 1373,
	62, 1373,
	63, 1373,
	64, 1373,
	65, 1373,
	66, 1373,
	67, 1373,
	68, 1373,
	69, 1373,
	70, 1373,
	72, 1373,
	73, 1373,
	74, 1373,
	76, 1373,
	78, 1373,
	79, 1373,
	80, 1373,
	81, 1373,
	82, 1373,
	83, 1373,
	84, 1373,
	87, 1373,
	88, 1373,
	89, 1373,
	90, 1373,
	91, 1373,
	93, 1373,
	95, 1373,
	96, 1373,
	97, 1373,
	98, 1373,
	99, 1373,
	100, 1373,
	102, 1373,
	103, 1373,
	104, 1373,
	105, 1373,
	106, 1373,
	107, 1373,
	108, 1373,
	109, 1373,
	110, 1373,
	111, 1373,
	112, 1373,
	113, 1373,
	114, 1373,
	115, 1373,
	116, 1373,
	117, 1373,
	118, 1373,
	119, 1373,
	120, 1373,
	121, 1373,
	122, 1373,
	123, 1373,
	124, 1373,
	125, 1373,
	126, 1373,
	128, 1373,
	129, 1373,
	131, 1373,
	132, 1373,
	133, 1373,
	136, 1373,
	137, 1373,
	138, 1373,
	140, 1373,
	141, 1373,
	143, 1373,
	144, 1373,
	145, 1373,
	147, 1373,
	148, 1373,
	149, 1373,
	150, 1373,
	151, 1373,
	152, 1373,
	153, 1373,
	154, 1373,
	155, 1373,
	156, 1373,
	157, 1373,
	158, 1373,
	159, 1373,
	160, 1373,
	161, 1373,
	162, 1373,
	163, 1373,
	169, 1373,
	170, 1373,
	171, 1373,
	172, 1373,
	176, 1373,
	178, 1373,
	181, 1373,
	182, 1373,
	183, 1373,
	184, 1373,
	185, 1373,
	186, 1373,
	187, 1373,
	188, 1373,
	189, 1373,
	190, 1373,
	191, 1373,
	192, 1373,
	193, 1373,
	195, 1373,
	196, 1373,
	198, 1373,
	199, 1373,
	201, 1373,
	202, 1373,
	203, 1373,
	204, 1373,
	205, 1373,
	206, 1373,
	207, 1373,
	208, 1373,
	209, 1373,
	210, 1373,
	211, 1373,
	212, 1373,
	214, 1373,
	215, 1373,
	216, 1373,
	217, 1373,
	218, 1373,
	222, 1373,
	223, 1373,
	224, 1373,
	225, 1373,
	226, 1373,
	228, 1373,
	229, 1373,
	230, 1373,
	231, 1373,
	233, 1373,
	235, 1373,
	236, 1373,
	237, 1373,
	238, 1373,
	239, 1373,
	240, 1373,
	241, 1373,
	242, 1373,
	243, 1373,
	244, 1373,
	248, 1373,
	249, 1373,
	250, 1373,
	251, 1373,
	252, 1373,
	253, 1373,
	255, 1373,
	256, 1373,
	257, 1373,
	259, 1373,
	260, 1373,
	261, 1373,
	262, 1373,
	263, 1373,
	264, 1373,
	266, 1373,
	270, 1373,
	271, 1373,
	272, 1373,
	273, 1373,
	274, 1373,
	275, 1373,
	276, 1373,
	277, 1373,
	279, 1373,
	280, 1373,
	281, 1373,
	282, 1373,
	283, 1373,
	284, 1373,
	285, 1373,
	286, 1373,
	287, 1373,
	288, 1373,
	289, 1373,
	290, 1373,
	291, 1373,
	292, 1373,
	293, 1373,
	294, 1373,
	295, 1373,
	296, 1373,
	297, 1373,
	298, 1373,
	299, 1373,
	300, 1373,
	302, 1373,
	303, 1373,
	304, 1373,
	305, 1373,
	306, 1373,
	307, 1373,
	308, 1373,
	309, 1373,
	310, 1373,
	311, 1373,
	312, 1373,
	313, 1373,
	314, 1373,
	315, 1373,
	316, 1373,
	317, 1373,
	318, 1373,
	319, 1373,
	320, 1373,
	321, 1373,
	322, 1373,
	323, 1373,
	324, 1373,
	325, 1373,
	326, 1373,
	327, 1373,
	328, 1373,
	331, 1373,
	335, 1373,
	336, 1373,
	337, 1373,
	340, 1373,
	341, 1373,
	342, 1373,
	343, 1373,
	344, 1373,
	345, 1373,
	346, 1373,
	347, 1373,
	348, 1373,
	349, 1373,
	350, 1373,
	351, 1373,
	352, 1373,
	353, 1373,
	354, 1373,
	355, 1373,
	356, 1373,
	357, 1373,
	359, 1373,
	360, 1373,
	361, 1373,
	362, 1373,
	363, 1373,
	364, 1373,
	365, 1373,
	366, 1373,
	367, 1373,
	368, 1373,
	369, 1373,
	370, 1373,
	371, 1373,
	372, 1373,
	373, 1373,
	375, 1373,
	377, 1373,
	378, 1373,
	379, 1373,
	380, 1373,
	381, 1373,
	382, 1373,
	383, 1373,
	384, 1373,
	385, 1373,
	386, 1373,
	387, 1373,
	389, 1373,
	395, 1373,
	397, 1373,
	398, 1373,
	399, 1373,
	400, 1373,
	401, 1373,
	402, 1373,
	403, 1373,
	404, 1373,
	406, 1373,
	407, 1373,
	408, 1373,
	409, 1373,
	410, 1373,
	411, 1373,
	412, 1373,
	413, 1373,
	414, 1373,
	415, 1373,
	417, 1373,
	418, 1373,
	419, 1373,
	420, 1373,
	421, 1373,
	422, 1373,
	423, 1373,
	424, 1373,
	425, 1373,
	426, 1373,
	427, 1373,
	429, 1373,
	430, 1373,
	431, 1373,
	432, 1373,
	433, 1373,
	434, 1373,
	435, 1373,
	436, 1373,
	437, 1373,
	438, 1373,
	439, 1373,
	440, 1373,
	441, 1373,
	442, 1373,
	443, 1373,
	444, 1373,
	445, 1373,
	446, 1373,
	447, 1373,
	448, 1373,
	449, 1373,
	451, 1373,
	453, 1373,
	454, 1373,
	455, 1373,
	456, 1373,
	457, 1373,
	458, 1373,
	459, 1373,
	460, 1373,
	461, 1373,
	462, 1373,
	463, 1373,
	464, 1373,
	465, 1373,
	467, 1373,
	468, 1373,
	469, 1373,
	470, 1373,
	472, 1373,
	473, 1373,
	474, 1373,
	475, 1373,
	476, 1373,
	477, 1373,
	478, 1373,
	479, 1373,
	480, 1373,
	482, 1373,
	483, 1373,
	484, 1373,
	485, 1373,
	486, 1373,
	488, 1373,
	490, 1373,
	491, 1373,
	492, 1373,
	493, 1373,
	494, 1373,
	495, 1373,
	496, 1373,
	497, 1373,
	498, 1373,
	499, 1373,
	500, 1373,
	502, 1373,
	503, 1373,
	505, 1373,
	506, 1373,
	507, 1373,
	508, 1373,
	509, 1373,
	510, 1373,
	511, 1373,
	512, 1373,
	513, 1373,
	514, 1373,
	517, 1373,
	518, 1373,
	519, 1373,
	520, 1373,
	521, 1373,
	522, 1373,
	524, 1373,
	525, 1373,
	526, 1373,
	527, 1373,
	532, 1373,
	533, 1373,
	534, 1373,
	535, 1373,
	536, 1373,
	537, 1373,
	538, 1373,
	546, 1373,
	553, 1373,
	554, 1373,
	555, 1373,
	562, 1373,
	566, 1373,
	-2, 0,
	-1, 672,
	180, 2119,
	487, 2119,
	545, 2119,
	564, 2119,
	-2, 0,
	-1, 673,
	180, 2219,
	487, 2219,
	545, 2219,
	564, 2219,
	-2, 0,
	-1, 674,
	180, 2106,
	487, 2106,
	545, 2106,
	564, 2106,
	-2, 0,
	-1, 676,
	180, 2342,
	487, 2342,
	545, 2342,
	564, 2342,
	-2, 0,
	-1, 678,
	180, 2378,
	487, 2378,
	545, 2378,
	564, 2378,
	-2, 0,
	-1, 685,
	180, 2245,
	487, 2245,
	545, 2245,
	564, 2245,
	-2, 627,
	-1, 717,
	564, 2056,
	567, 2056,
	-2, 874,
	-1, 718,
	564, 2058,
	567, 2058,
	-2, 875,
	-1, 719,
	564, 2057,
	567, 2057,
	-2, 876,
	-1, 720,
	567, 1990,
	-2, 877,
	-1, 743,
	177, 219,
	-2, 0,
	-1, 766,
	43, 2060,
	-2, 0,
	-1, 767,
	524, 1136,
	-2, 942,
	-1, 783,
	4, 1499,
	21, 1499,
	22, 1499,
	23, 1499,
	24, 1499,
	25, 1499,
	26, 1499,
	27, 1499,
	29, 1499,
	30, 1499,
	36, 1499,
	41, 1499,
	42, 1499,
	44, 1499,
	45, 1499,
	46, 1499,
	47, 1499,
	48, 1499,
	49, 1499,
	50, 1499,
	52, 1499,
	53, 1499,
	54, 1499,
	55, 1499,
	57, 1499,
	58, 1499,
	59, 1499,
	60, 1499,
	61, 1499,
	62, 1499,
	63, 1499,
	67, 1499,
	68, 1499,
	69, 1499,
	70, 1499,
	72, 1499,
	73, 1499,
	74, 1499,
	78, 1499,
	79, 1499,
	80, 1499,
	81, 1499,
	82, 1499,
	83, 1499,
	84, 1499,
	87, 1499,
	88, 1499,
	89, 1499,
	90, 1499,
	91, 1499,
	93, 1499,
	95, 1499,
	96, 1499,
	97, 1499,
	98, 1499,
	99, 1499,
	100, 1499,
	102, 1499,
	103, 1499,
	104, 1499,
	106, 1499,
	107, 1499,
	115, 1499,
	116, 1499,
	117, 1499,
	118, 1499,
	120, 1499,
	121, 1499,
	122, 1499,
	124, 1499,
	125, 1499,
	126, 1499,
	128, 1499,
	129, 1499,
	131, 1499,
	132, 1499,
	133, 1499,
	136, 1499,
	137, 1499,
	138, 1499,
	140, 1499,
	141, 1499,
	143, 1499,
	144, 1499,
	145, 1499,
	147, 1499,
	148, 1499,
	149, 1499,
	150, 1499,
	151, 1499,
	152, 1499,
	153, 1499,
	154, 1499,
	155, 1499,
	156, 1499,
	157, 1499,
	158, 1499,
	159, 1499,
	160, 1499,
	161, 1499,
	163, 1499,
	169, 1499,
	170, 1499,
	171, 1499,
	172, 1499,
	176, 1499,
	178, 1499,
	182, 1499,
	183, 1499,
	184, 1499,
	185, 1499,
	186, 1499,
	187, 1499,
	188, 1499,
	189, 1499,
	190, 1499,
	191, 1499,
	192, 1499,
	193, 1499,
	195, 1499,
	196, 1499,
	198, 1499,
	199, 1499,
	201, 1499,
	202, 1499,
	203, 1499,
	204, 1499,
	205, 1499,
	206, 1499,
	207, 1499,
	208, 1499,
	209, 1499,
	211, 1499,
	212, 1499,
	214, 1499,
	215, 1499,
	216, 1499,
	217, 1499,
	218, 1499,
	222, 1499,
	223, 1499,
	224, 1499,
	225, 1499,
	226, 1499,
	229, 1499,
	230, 1499,
	231, 1499,
	233, 1499,
	235, 1499,
	236, 1499,
	238, 1499,
	240, 1499,
	241, 1499,
	242, 1499,
	244, 1499,
	248, 1499,
	249, 1499,
	250, 1499,
	251, 1499,
	252, 1499,
	253, 1499,
	255, 1499,
	256, 1499,
	257, 1499,
	259, 1499,
	260, 1499,
	262, 1499,
	263, 1499,
	266, 1499,
	270, 1499,
	271, 1499,
	274, 1499,
	275, 1499,
	276, 1499,
	277, 1499,
	279, 1499,
	280, 1499,
	281, 1499,
	282, 1499,
	283, 1499,
	284, 1499,
	285, 1499,
	286, 1499,
	287, 1499,
	288, 1499,
	289, 1499,
	290, 1499,
	291, 1499,
	292, 1499,
	293, 1499,
	294, 1499,
	295, 1499,
	296, 1499,
	297, 1499,
	298, 1499,
	299, 1499,
	300, 1499,
	302, 1499,
	304, 1499,
	305, 1499,
	306, 1499,
	307, 1499,
	308, 1499,
	309, 1499,
	310, 1499,
	311, 1499,
	312, 1499,
	313, 1499,
	314, 1499,
	315, 1499,
	317, 1499,
	319, 1499,
	321, 1499,
	322, 1499,
	324, 1499,
	325, 1499,
	326, 1499,
	327, 1499,
	328, 1499,
	331, 1499,
	335, 1499,
	336, 1499,
	337, 1499,
	340, 1499,
	341, 1499,
	342, 1499,
	344, 1499,
	346, 1499,
	347, 1499,
	348, 1499,
	349, 1499,
	350, 1499,
	351, 1499,
	352, 1499,
	353, 1499,
	354, 1499,
	355, 1499,
	356, 1499,
	357, 1499,
	359, 1499,
	360, 1499,
	361, 1499,
	362, 1499,
	363, 1499,
	364, 1499,
	365, 1499,
	366, 1499,
	367, 1499,
	368, 1499,
	369, 1499,
	370, 1499,
	371, 1499,
	372, 1499,
	373, 1499,
	375, 1499,
	377, 1499,
	378, 1499,
	379, 1499,
	380, 1499,
	381, 1499,
	382, 1499,
	383, 1499,
	384, 1499,
	385, 1499,
	386, 1499,
	387, 1499,
	389, 1499,
	395, 1499,
	397, 1499,
	398, 1499,
	399, 1499,
	400, 1499,
	401, 1499,
	402, 1499,
	403, 1499,
	404, 1499,
	406, 1499,
	407, 1499,
	408, 1499,
	410, 1499,
	411, 1499,
	412, 1499,
	413, 1499,
	414, 1499,
	415, 1499,
	417, 1499,
	418, 1499,
	419, 1499,
	420, 1499,
	421, 1499,
	422, 1499,
	423, 1499,
	424, 1499,
	425, 1499,
	426, 1499,
	427, 1499,
	429, 1499,
	430, 1499,
	431, 1499,
	432, 1499,
	433, 1499,
	434, 1499,
	436, 1499,
	437, 1499,
	438, 1499,
	439, 1499,
	440, 1499,
	441, 1499,
	443, 1499,
	444, 1499,
	445, 1499,
	446, 1499,
	447, 1499,
	448, 1499,
	449, 1499,
	451, 1499,
	453, 1499,
	454, 1499,
	455, 1499,
	456, 1499,
	457, 1499,
	458, 1499,
	459, 1499,
	460, 1499,
	461, 1499,
	462, 1499,
	463, 1499,
	464, 1499,
	465, 1499,
	467, 1499,
	468, 1499,
	470, 1499,
	472, 1499,
	473, 1499,
	474, 1499,
	475, 1499,
	476, 1499,
	477, 1499,
	478, 1499,
	479, 1499,
	480, 1499,
	482, 1499,
	483, 1499,
	484, 1499,
	485, 1499,
	486, 1499,
	488, 1499,
	490, 1499,
	491, 1499,
	492, 1499,
	493, 1499,
	494, 1499,
	495, 1499,
	497, 1499,
	498, 1499,
	499, 1499,
	500, 1499,
	502, 1499,
	503, 1499,
	506, 1499,
	507, 1499,
	508, 1499,
	509, 1499,
	510, 1499,
	511, 1499,
	512, 1499,
	514, 1499,
	517, 1499,
	518, 1499,
	519, 1499,
	520, 1499,
	521, 1499,
	522, 1499,
	524, 1499,
	525, 1499,
	526, 1499,
	527, 1499,
	532, 1499,
	533, 1499,
	534, 1499,
	535, 1499,
	536, 1499,
	537, 1499,
	-2, 0,
	-1, 808,
	4, 1157,
	21, 1157,
	22, 1157,
	23, 1157,
	24, 1157,
	25, 1157,
	26, 1157,
	27, 1157,
	29, 1157,
	30, 1157,
	36, 1157,
	41, 1157,
	42, 1157,
	44, 1157,
	45, 1157,
	46, 1157,
	47, 1157,
	48, 1157,
	49, 1157,
	50, 1157,
	52, 1157,
	53, 1157,
	54, 1157,
	55, 1157,
	57, 1157,
	58, 1157,
	59, 1157,
	60, 1157,
	61, 1157,
	62, 1157,
	63, 1157,
	67, 1157,
	68, 1157,
	69, 1157,
	70, 1157,
	72, 1157,
	73, 1157,
	74, 1157,
	78, 1157,
	79, 1157,
	80, 1157,
	81, 1157,
	82, 1157,
	83, 1157,
	84, 1157,
	87, 1157,
	88, 1157,
	89, 1157,
	90, 1157,
	91, 1157,
	93, 1157,
	95, 1157,
	96, 1157,
	97, 1157,
	98, 1157,
	99, 1157,
	100, 1157,
	102, 1157,
	103, 1157,
	104, 1157,
	106, 1157,
	107, 1157,
	115, 1157,
	116, 1157,
	117, 1157,
	118, 1157,
	120, 1157,
	121, 1157,
	122, 1157,
	124, 1157,
	125, 1157,
	126, 1157,
	128, 1157,
	129, 1157,
	131, 1157,
	132, 1157,
	133, 1157,
	136, 1157,
	137, 1157,
	138, 1157,
	140, 1157,
	141, 1157,
	143, 1157,
	144, 1157,
	145, 1157,
	147, 1157,
	148, 1157,
	149, 1157,
	150, 1157,
	151, 1157,
	152, 1157,
	153, 1157,
	154, 1157,
	155, 1157,
	156, 1157,
	157, 1157,
	158, 1157,
	159, 1157,
	160, 1157,
	161, 1157,
	163, 1157,
	169, 1157,
	170, 1157,
	171, 1157,
	172, 1157,
	176, 1157,
	178, 1157,
	182, 1157,
	183, 1157,
	184, 1157,
	185, 1157,
	186, 1157,
	187, 1157,
	188, 1157,
	189, 1157,
	190, 1157,
	191, 1157,
	192, 1157,
	193, 1157,
	195, 1157,
	196, 1157,
	198, 1157,
	199, 1157,
	201, 1157,
	202, 1157,
	203, 1157,
	204, 1157,
	205, 1157,
	206, 1157,
	207, 1157,
	208, 1157,
	209, 1157,
	211, 1157,
	212, 1157,
	214, 1157,
	215, 1157,
	216, 1157,
	217, 1157,
	218, 1157,
	222, 1157,
	223, 1157,
	224, 1157,
	225, 1157,
	226, 1157,
	229, 1157,
	230, 1157,
	231, 1157,
	233, 1157,
	235, 1157,
	236, 1157,
	238, 1157,
	240, 1157,
	241, 1157,
	242, 1157,
	244, 1157,
	248, 1157,
	249, 1157,
	250, 1157,
	251, 1157,
	252, 1157,
	253, 1157,
	255, 1157,
	256, 1157,
	257, 1157,
	259, 1157,
	260, 1157,
	262, 1157,
	263, 1157,
	266, 1157,
	270, 1157,
	271, 1157,
	274, 1157,
	275, 1157,
	276, 1157,
	277, 1157,
	279, 1157,
	280, 1157,
	281, 1157,
	282, 1157,
	283, 1157,
	284, 1157,
	285, 1157,
	286, 1157,
	287, 1157,
	288, 1157,
	289, 1157,
	290, 1157,
	291, 1157,
	292, 1157,
	293, 1157,
	294, 1157,
	295, 1157,
	296, 1157,
	297, 1157,
	298, 1157,
	299, 1157,
	300, 1157,
	302, 1157,
	304, 1157,
	305, 1157,
	306, 1157,
	307, 1157,
	308, 1157,
	309, 1157,
	310, 1157,
	311, 1157,
	312, 1157,
	313, 1157,
	314, 1157,
	315, 1157,
	317, 1157,
	319, 1157,
	321, 1157,
	322, 1157,
	324, 1157,
	325, 1157,
	326, 1157,
	327, 1157,
	328, 1157,
	331, 1157,
	335, 1157,
	336, 1157,
	337, 1157,
	340, 1157,
	341, 1157,
	342, 1157,
	344, 1157,
	346, 1157,
	347, 1157,
	348, 1157,
	349, 1157,
	350, 1157,
	351, 1157,
	352, 1157,
	353, 1157,
	354, 1157,
	355, 1157,
	356, 1157,
	357, 1157,
	359, 1157,
	360, 1157,
	361, 1157,
	362, 1157,
	363, 1157,
	364, 1157,
	365, 1157,
	366, 1157,
	367, 1157,
	368, 1157,
	369, 1157,
	370, 1157,
	371, 1157,
	372, 1157,
	373, 1157,
	375, 1157,
	377, 1157,
	378, 1157,
	379, 1157,
	380, 1157,
	381, 1157,
	382, 1157,
	383, 1157,
	384, 1157,
	385, 1157,
	386, 1157,
	387, 1157,
	389, 1157,
	395, 1157,
	397, 1157,
	398, 1157,
	399, 1157,
	400, 1157,
	401, 1157,
	402, 1157,
	403, 1157,
	404, 1157,
	406, 1157,
	407, 1157,
	408, 1157,
	410, 1157,
	411, 1157,
	412, 1157,
	413, 1157,
	414, 1157,
	415, 1157,
	417, 1157,
	418, 1157,
	419, 1157,
	420, 1157,
	421, 1157,
	422, 1157,
	423, 1157,
	424, 1157,
	425, 1157,
	426, 1157,
	427, 1157,
	429, 1157,
	430, 1157,
	431, 1157,
	432, 1157,
	433, 1157,
	434, 1157,
	436, 1157,
	437, 1157,
	438, 1157,
	439, 1157,
	440, 1157,
	441, 1157,
	443, 1157,
	444, 1157,
	445, 1157,
	446, 1157,
	447, 1157,
	448, 1157,
	449, 1157,
	451, 1157,
	453, 1157,
	454, 1157,
	455, 1157,
	456, 1157,
	457, 1157,
	458, 1157,
	459, 1157,
	460, 1157,
	461, 1157,
	462, 1157,
	463, 1157,
	464, 1157,
	465, 1157,
	467, 1157,
	468, 1157,
	470, 1157,
	472, 1157,
	473, 1157,
	474, 1157,
	475, 1157,
	476, 1157,
	477, 1157,
	478, 1157,
	479, 1157,
	480, 1157,
	482, 1157,
	483, 1157,
	484, 1157,
	485, 1157,
	486, 1157,
	488, 1157,
	490, 1157,
	491, 1157,
	492, 1157,
	493, 1157,
	494, 1157,
	495, 1157,
	497, 1157,
	498, 1157,
	499, 1157,
	500, 1157,
	502, 1157,
	503, 1157,
	506, 1157,
	507, 1157,
	508, 1157,
	509, 1157,
	510, 1157,
	511, 1157,
	512, 1157,
	514, 1157,
	517, 1157,
	518, 1157,
	519, 1157,
	520, 1157,
	521, 1157,
	522, 1157,
	524, 1157,
	525, 1157,
	526, 1157,
	527, 1157,
	532, 1157,
	533, 1157,
	534, 1157,
	535, 1157,
	536, 1157,
	537, 1157,
	-2, 0,
	-1, 889,
	379, 786,
	434, 786,
	492, 786,
	-2, 0,
	-1, 890,
	379, 785,
	434, 785,
	492, 785,
	-2, 727,
	-1, 894,
	1, 830,
	561, 830,
	563, 830,
	565, 830,
	-2, 0,
	-1, 895,
	1, 762,
	561, 762,
	563, 762,
	565, 762,
	-2, 0,
	-1, 896,
	1, 764,
	561, 764,
	563, 764,
	565, 764,
	-2, 0,
	-1, 897,
	1, 873,
	177, 873,
	561, 873,
	563, 873,
	565, 873,
	-2, 0,
	-1, 905,
	1, 789,
	561, 789,
	563, 789,
	565, 789,
	-2, 0,
	-1, 911,
	1, 830,
	561, 830,
	563, 830,
	565, 830,
	-2, 0,
	-1, 912,
	1, 832,
	561, 832,
	563, 832,
	565, 832,
	-2, 0,
	-1, 913,
	1, 835,
	561, 835,
	563, 835,
	565, 835,
	-2, 0,
	-1, 919,
	1, 852,
	561, 852,
	563, 852,
	565, 852,
	-2, 0,
	-1, 920,
	1, 854,
	561, 854,
	563, 854,
	565, 854,
	-2, 0,
	-1, 968,
	164, 1375,
	177, 1375,
	265, 1375,
	329, 1375,
	-2, 1313,
	-1, 983,
	164, 1374,
	177, 1374,
	265, 1374,
	329, 1374,
	-2, 1310,
	-1, 1009,
	564, 2055,
	-2, 635,
	-1, 1037,
	5, 2047,
	562, 2045,
	-2, 2036,
	-1, 1045,
	5, 2068,
	562, 2065,
	-2, 2056,
	-1, 1046,
	5, 2069,
	562, 2066,
	-2, 2057,
	-1, 1054,
	564, 2053,
	-2, 2035,
	-1, 1055,
	562, 2460,
	-2, 2054,
	-1, 1078,
	562, 2459,
	-2, 2070,
	-1, 1079,
	5, 1574,
	-2, 2430,
	-1, 1080,
	5, 1575,
	-2, 2431,
	-1, 1081,
	5, 1576,
	-2, 2445,
	-1, 1082,
	5, 1577,
	-2, 2409,
	-1, 1083,
	5, 1578,
	-2, 2443,
	-1, 1084,
	5, 1586,
	-2, 2422,
	-1, 1085,
	5, 1573,
	-2, 2418,
	-1, 1086,
	5, 1573,
	-2, 2417,
	-1, 1087,
	5, 1573,
	-2, 2436,
	-1, 1088,
	5, 1584,
	-2, 2411,
	-1, 1089,
	5, 1589,
	-2, 2410,
	-1, 1090,
	5, 1591,
	-2, 2455,
	-1, 1093,
	5, 1613,
	-2, 2448,
	-1, 1094,
	5, 1605,
	-2, 2449,
	-1, 1095,
	5, 1613,
	-2, 2450,
	-1, 1096,
	5, 1609,
	-2, 2451,
	-1, 1097,
	5, 1559,
	-2, 2423,
	-1, 1098,
	5, 1560,
	-2, 2424,
	-1, 1099,
	5, 1561,
	-2, 2412,
	-1, 1127,
	5, 1596,
	-2, 2456,
	-1, 1128,
	5, 1597,
	-2, 2446,
	-1, 1129,
	5, 1598,
	525, 1598,
	-2, 2413,
	-1, 1130,
	5, 1599,
	525, 1599,
	-2, 2414,
	-1, 1167,
	562, 2065,
	-2, 2056,
	-1, 1168,
	562, 2066,
	-2, 2057,
	-1, 1198,
	180, 2378,
	487, 2378,
	545, 2378,
	564, 2378,
	-2, 0,
	-1, 1201,
	1, 613,
	565, 613,
	-2, 1245,
	-1, 1330,
	397, 2031,
	436, 2031,
	555, 2031,
	-2, 2028,
	-1, 1342,
	566, 2031,
	-2, 2032,
	-1, 1349,
	1, 1133,
	561, 1133,
	563, 1133,
	565, 1133,
	-2, 1362,
	-1, 1405,
	385, 941,
	524, 941,
	-2, 348,
	-1, 1425,
	43, 2059,
	-2, 2029,
	-1, 1430,
	1, 1133,
	561, 1133,
	563, 1133,
	565, 1133,
	-2, 1362,
	-1, 1437,
	4, 1157,
	21, 1157,
	22, 1157,
	23, 1157,
	24, 1157,
	25, 1157,
	26, 1157,
	27, 1157,
	29, 1157,
	30, 1157,
	36, 1157,
	41, 1157,
	42, 1157,
	44, 1157,
	45, 1157,
	46, 1157,
	47, 1157,
	48, 1157,
	49, 1157,
	50, 1157,
	52, 1157,
	53, 1157,
	54, 1157,
	55, 1157,
	57, 1157,
	58, 1157,
	59, 1157,
	60, 1157,
	61, 1157,
	62, 1157,
	63, 1157,
	67, 1157,
	68, 1157,
	69, 1157,
	70, 1157,
	72, 1157,
	73, 1157,
	74, 1157,
	78, 1157,
	79, 1157,
	80, 1157,
	81, 1157,
	82, 1157,
	83, 1157,
	84, 1157,
	87, 1157,
	88, 1157,
	89, 1157,
	90, 1157,
	91, 1157,
	93, 1157,
	95, 1157,
	96, 1157,
	97, 1157,
	98, 1157,
	99, 1157,
	100, 1157,
	102, 1157,
	103, 1157,
	104, 1157,
	106, 1157,
	107, 1157,
	115, 1157,
	116, 1157,
	117, 1157,
	118, 1157,
	120, 1157,
	121, 1157,
	122, 1157,
	124, 1157,
	125, 1157,
	126, 1157,
	128, 1157,
	129, 1157,
	131, 1157,
	132, 1157,
	133, 1157,
	136, 1157,
	137, 1157,
	138, 1157,
	140, 1157,
	141, 1157,
	143, 1157,
	144, 1157,
	145, 1157,
	147, 1157,
	148, 1157,
	149, 1157,
	150, 1157,
	151, 1157,
	152, 1157,
	153, 1157,
	154, 1157,
	155, 1157,
	156, 1157,
	157, 1157,
	158, 1157,
	159, 1157,
	160, 1157,
	161, 1157,
	169, 1157,
	170, 1157,
	171, 1157,
	172, 1157,
	176, 1157,
	178, 1157,
	182, 1157,
	183, 1157,
	184, 1157,
	185, 1157,
	186, 1157,
	187, 1157,
	188, 1157,
	189, 1157,
	190, 1157,
	191, 1157,
	192, 1157,
	193, 1157,
	195, 1157,
	196, 1157,
	198, 1157,
	199, 1157,
	201, 1157,
	202, 1157,
	203, 1157,
	204, 1157,
	205, 1157,
	206, 1157,
	207, 1157,
	208, 1157,
	209, 1157,
	211, 1157,
	212, 1157,
	214, 1157,
	215, 1157,
	216, 1157,
	217, 1157,
	218, 1157,
	223, 1157,
	224, 1157,
	225, 1157,
	226, 1157,
	229, 1157,
	230, 1157,
	231, 1157,
	233, 1157,
	235, 1157,
	236, 1157,
	238, 1157,
	240, 1157,
	241, 1157,
	242, 1157,
	244, 1157,
	248, 1157,
	249, 1157,
	250, 1157,
	251, 1157,
	252, 1157,
	253, 1157,
	255, 1157,
	256, 1157,
	257, 1157,
	259, 1157,
	260, 1157,
	262, 1157,
	263, 1157,
	266, 1157,
	270, 1157,
	271, 1157,
	274, 1157,
	275, 1157,
	276, 1157,
	277, 1157,
	279, 1157,
	280, 1157,
	281, 1157,
	282, 1157,
	283, 1157,
	284, 1157,
	285, 1157,
	286, 1157,
	287, 1157,
	288, 1157,
	289, 1157,
	290, 1157,
	291, 1157,
	292, 1157,
	293, 1157,
	294, 1157,
	295, 1157,
	296, 1157,
	297, 1157,
	298, 1157,
	299, 1157,
	300, 1157,
	302, 1157,
	304, 1157,
	305, 1157,
	306, 1157,
	307, 1157,
	308, 1157,
	309, 1157,
	310, 1157,
	311, 1157,
	312, 1157,
	313, 1157,
	314, 1157,
	315, 1157,
	317, 1157,
	321, 1157,
	322, 1157,
	324, 1157,
	325, 1157,
	326, 1157,
	327, 1157,
	328, 1157,
	331, 1157,
	333, 1157,
	335, 1157,
	336, 1157,
	337, 1157,
	340, 1157,
	341, 1157,
	342, 1157,
	344, 1157,
	346, 1157,
	347, 1157,
	348, 1157,
	349, 1157,
	350, 1157,
	351, 1157,
	352, 1157,
	353, 1157,
	354, 1157,
	355, 1157,
	356, 1157,
	357, 1157,
	359, 1157,
	360, 1157,
	361, 1157,
	362, 1157,
	363, 1157,
	364, 1157,
	365, 1157,
	366, 1157,
	367, 1157,
	368, 1157,
	369, 1157,
	370, 1157,
	371, 1157,
	372, 1157,
	373, 1157,
	375, 1157,
	377, 1157,
	378, 1157,
	379, 1157,
	380, 1157,
	381, 1157,
	382, 1157,
	383, 1157,
	384, 1157,
	385, 1157,
	386, 1157,
	387, 1157,
	389, 1157,
	395, 1157,
	397, 1157,
	398, 1157,
	399, 1157,
	400, 1157,
	401, 1157,
	402, 1157,
	403, 1157,
	404, 1157,
	406, 1157,
	407, 1157,
	408, 1157,
	410, 1157,
	411, 1157,
	412, 1157,
	413, 1157,
	414, 1157,
	415, 1157,
	417, 1157,
	418, 1157,
	419, 1157,
	420, 1157,
	421, 1157,
	422, 1157,
	423, 1157,
	424, 1157,
	425, 1157,
	426, 1157,
	427, 1157,
	429, 1157,
	430, 1157,
	431, 1157,
	432, 1157,
	433, 1157,
	434, 1157,
	436, 1157,
	437, 1157,
	438, 1157,
	439, 1157,
	440, 1157,
	441, 1157,
	443, 1157,
	444, 1157,
	445, 1157,
	446, 1157,
	447, 1157,
	448, 1157,
	449, 1157,
	451, 1157,
	453, 1157,
	454, 1157,
	455, 1157,
	456, 1157,
	457, 1157,
	458, 1157,
	459, 1157,
	460, 1157,
	461, 1157,
	462, 1157,
	463, 1157,
	464, 1157,
	465, 1157,
	467, 1157,
	468, 1157,
	470, 1157,
	472, 1157,
	473, 1157,
	474, 1157,
	475, 1157,
	476, 1157,
	477, 1157,
	478, 1157,
	479, 1157,
	480, 1157,
	482, 1157,
	483, 1157,
	484, 1157,
	485, 1157,
	486, 1157,
	488, 1157,
	490, 1157,
	491, 1157,
	492, 1157,
	493, 1157,
	494, 1157,
	495, 1157,
	497, 1157,
	498, 1157,
	499, 1157,
	500, 1157,
	502, 1157,
	503, 1157,
	506, 1157,
	507, 1157,
	508, 1157,
	509, 1157,
	510, 1157,
	511, 1157,
	512, 1157,
	514, 1157,
	517, 1157,
	518, 1157,
	519, 1157,
	520, 1157,
	521, 1157,
	522, 1157,
	524, 1157,
	525, 1157,
	526, 1157,
	527, 1157,
	532, 1157,
	533, 1157,
	534, 1157,
	535, 1157,
	536, 1157,
	537, 1157,
	-2, 0,
	-1, 1511,
	1, 486,
	561, 486,
	563, 486,
	565, 486,
	-2, 1333,
	-1, 1514,
	4, 2454,
	11, 2454,
	12, 2454,
	14, 2454,
	15, 2454,
	16, 2454,
	17, 2454,
	18, 2454,
	19, 2454,
	21, 2454,
	22, 2454,
	23, 2454,
	24, 2454,
	25, 2454,
	26, 2454,
	27, 2454,
	29, 2454,
	30, 2454,
	33, 2454,
	34, 2454,
	36, 2454,
	38, 2454,
	41, 2454,
	42, 2454,
	44, 2454,
	45, 2454,
	46, 2454,
	47, 2454,
	48, 2454,
	49, 2454,
	50, 2454,
	52, 2454,
	53, 2454,
	54, 2454,
	55, 2454,
	57, 2454,
	58, 2454,
	59, 2454,
	60, 2454,
	61, 2454,
	62, 2454,
	63, 2454,
	67, 2454,
	68, 2454,
	69, 2454,
	70, 2454,
	72, 2454,
	73, 2454,
	74, 2454,
	75, 2454,
	78, 2454,
	79, 2454,
	80, 2454,
	81, 2454,
	82, 2454,
	83, 2454,
	84, 2454,
	85, 2454,
	87, 2454,
	88, 2454,
	89, 2454,
	90, 2454,
	91, 2454,
	93, 2454,
	94, 2454,
	95, 2454,
	96, 2454,
	97, 2454,
	98, 2454,
	99, 2454,
	100, 2454,
	102, 2454,
	103, 2454,
	104, 2454,
	105, 2454,
	106, 2454,
	107, 2454,
	115, 2454,
	116, 2454,
	117, 2454,
	118, 2454,
	120, 2454,
	121, 2454,
	122, 2454,
	124, 2454,
	125, 2454,
	126, 2454,
	128, 2454,
	129, 2454,
	131, 2454,
	132, 2454,
	133, 2454,
	136, 2454,
	137, 2454,
	138, 2454,
	140, 2454,
	141, 2454,
	143, 2454,
	144, 2454,
	145, 2454,
	147, 2454,
	148, 2454,
	149, 2454,
	150, 2454,
	151, 2454,
	152, 2454,
	153, 2454,
	154, 2454,
	155, 2454,
	156, 2454,
	157, 2454,
	158, 2454,
	159, 2454,
	160, 2454,
	161, 2454,
	165, 2454,
	166, 2454,
	167, 2454,
	168, 2454,
	169, 2454,
	170, 2454,
	171, 2454,
	172, 2454,
	175, 2454,
	176, 2454,
	178, 2454,
	181, 2454,
	182, 2454,
	183, 2454,
	184, 2454,
	185, 2454,
	186, 2454,
	187, 2454,
	188, 2454,
	189, 2454,
	190, 2454,
	191, 2454,
	192, 2454,
	193, 2454,
	195, 2454,
	196, 2454,
	198, 2454,
	199, 2454,
	201, 2454,
	202, 2454,
	203, 2454,
	204, 2454,
	205, 2454,
	206, 2454,
	207, 2454,
	208, 2454,
	209, 2454,
	210, 2454,
	211, 2454,
	212, 2454,
	213, 2454,
	214, 2454,
	215, 2454,
	216, 2454,
	217, 2454,
	218, 2454,
	220, 2454,
	221, 2454,
	223, 2454,
	224, 2454,
	225, 2454,
	226, 2454,
	228, 2454,
	229, 2454,
	230, 2454,
	231, 2454,
	233, 2454,
	235, 2454,
	236, 2454,
	237, 2454,
	238, 2454,
	239, 2454,
	240, 2454,
	241, 2454,
	242, 2454,
	243, 2454,
	244, 2454,
	246, 2454,
	247, 2454,
	248, 2454,
	249, 2454,
	250, 2454,
	251, 2454,
	252, 2454,
	253, 2454,
	255, 2454,
	256, 2454,
	257, 2454,
	259, 2454,
	260, 2454,
	261, 2454,
	262, 2454,
	263, 2454,
	264, 2454,
	266, 2454,
	270, 2454,
	271, 2454,
	274, 2454,
	275, 2454,
	276, 2454,
	277, 2454,
	278, 2454,
	279, 2454,
	280, 2454,
	281, 2454,
	282, 2454,
	283, 2454,
	284, 2454,
	285, 2454,
	286, 2454,
	287, 2454,
	288, 2454,
	289, 2454,
	290, 2454,
	291, 2454,
	292, 2454,
	293, 2454,
	294, 2454,
	295, 2454,
	296, 2454,
	297, 2454,
	298, 2454,
	299, 2454,
	300, 2454,
	302, 2454,
	303, 2454,
	304, 2454,
	305, 2454,
	306, 2454,
	307, 2454,
	308, 2454,
	309, 2454,
	310, 2454,
	311, 2454,
	312, 2454,
	313, 2454,
	314, 2454,
	315, 2454,
	317, 2454,
	320, 2454,
	321, 2454,
	322, 2454,
	324, 2454,
	325, 2454,
	326, 2454,
	327, 2454,
	328, 2454,
	331, 2454,
	335, 2454,
	336, 2454,
	337, 2454,
	338, 2454,
	340, 2454,
	341, 2454,
	342, 2454,
	344, 2454,
	346, 2454,
	347, 2454,
	348, 2454,
	349, 2454,
	350, 2454,
	351, 2454,
	352, 2454,
	353, 2454,
	354, 2454,
	355, 2454,
	356, 2454,
	357, 2454,
	359, 2454,
	360, 2454,
	361, 2454,
	362, 2454,
	363, 2454,
	364, 2454,
	365, 2454,
	366, 2454,
	367, 2454,
	368, 2454,
	369, 2454,
	370, 2454,
	371, 2454,
	372, 2454,
	373, 2454,
	375, 2454,
	377, 2454,
	378, 2454,
	379, 2454,
	380, 2454,
	381, 2454,
	382, 2454,
	383, 2454,
	384, 2454,
	385, 2454,
	386, 2454,
	387, 2454,
	389, 2454,
	395, 2454,
	396, 2454,
	397, 2454,
	398, 2454,
	399, 2454,
	400, 2454,
	401, 2454,
	402, 2454,
	403, 2454,
	404, 2454,
	406, 2454,
	407, 2454,
	408, 2454,
	409, 2454,
	410, 2454,
	411, 2454,
	412, 2454,
	413, 2454,
	414, 2454,
	415, 2454,
	416, 2454,
	417, 2454,
	418, 2454,
	419, 2454,
	420, 2454,
	421, 2454,
	422, 2454,
	423, 2454,
	424, 2454,
	425, 2454,
	426, 2454,
	427, 2454,
	429, 2454,
	430, 2454,
	431, 2454,
	432, 2454,
	433, 2454,
	434, 2454,
	436, 2454,
	437, 2454,
	438, 2454,
	439, 2454,
	440, 2454,
	441, 2454,
	442, 2454,
	443, 2454,
	444, 2454,
	445, 2454,
	446, 2454,
	447, 2454,
	448, 2454,
	449, 2454,
	451, 2454,
	453, 2454,
	454, 2454,
	455, 2454,
	456, 2454,
	457, 2454,
	458, 2454,
	459, 2454,
	460, 2454,
	461, 2454,
	462, 2454,
	463, 2454,
	464, 2454,
	465, 2454,
	467, 2454,
	468, 2454,
	470, 2454,
	472, 2454,
	473, 2454,
	474, 2454,
	475, 2454,
	476, 2454,
	477, 2454,
	478, 2454,
	479, 2454,
	480, 2454,
	482, 2454,
	483, 2454,
	484, 2454,
	485, 2454,
	486, 2454,
	488, 2454,
	490, 2454,
	491, 2454,
	492, 2454,
	493, 2454,
	494, 2454,
	495, 2454,
	497, 2454,
	498, 2454,
	499, 2454,
	500, 2454,
	502, 2454,
	503, 2454,
	506, 2454,
	507, 2454,
	508, 2454,
	509, 2454,
	510, 2454,
	511, 2454,
	512, 2454,
	514, 2454,
	517, 2454,
	518, 2454,
	519, 2454,
	520, 2454,
	521, 2454,
	522, 2454,
	524, 2454,
	525, 2454,
	526, 2454,
	527, 2454,
	532, 2454,
	533, 2454,
	534, 2454,
	535, 2454,
	536, 2454,
	537, 2454,
	538, 2454,
	540, 2454,
	543, 2454,
	544, 2454,
	545, 2454,
	546, 2454,
	547, 2454,
	548, 2454,
	550, 2454,
	551, 2454,
	552, 2454,
	553, 2454,
	554, 2454,
	555, 2454,
	556, 2454,
	557, 2454,
	558, 2454,
	560, 2454,
	563, 2454,
	564, 2454,
	566, 2454,
	567, 2454,
	-2, 0,
	-1, 1519,
	180, 2342,
	487, 2342,
	545, 2342,
	564, 2342,
	-2, 0,
	-1, 1568,
	379, 786,
	434, 786,
	492, 786,
	-2, 0,
	-1, 1594,
	1, 781,
	561, 781,
	563, 781,
	565, 781,
	-2, 0,
	-1, 1595,
	1, 817,
	561, 817,
	563, 817,
	565, 817,
	-2, 0,
	-1, 1596,
	1, 825,
	561, 825,
	563, 825,
	565, 825,
	-2, 0,
	-1, 1597,
	1, 788,
	561, 788,
	563, 788,
	565, 788,
	-2, 0,
	-1, 1599,
	1, 792,
	561, 792,
	563, 792,
	565, 792,
	-2, 0,
	-1, 1605,
	1, 799,
	561, 799,
	563, 799,
	565, 799,
	-2, 0,
	-1, 1633,
	1, 2400,
	561, 2400,
	563, 2400,
	564, 2400,
	565, 2400,
	-2, 850,
	-1, 1634,
	1, 2339,
	561, 2339,
	563, 2339,
	564, 2339,
	565, 2339,
	-2, 851,
	-1, 1649,
	1, 1240,
	565, 1240,
	-2, 1245,
	-1, 1652,
	164, 1374,
	177, 1374,
	265, 1374,
	329, 1374,
	-2, 1314,
	-1, 1746,
	146, 1335,
	164, 1335,
	177, 1335,
	232, 1335,
	265, 1335,
	329, 1335,
	339, 1335,
	504, 1335,
	-2, 1774,
	-1, 1806,
	563, 1924,
	-2, 0,
	-1, 1841,
	146, 1335,
	164, 1335,
	177, 1335,
	232, 1335,
	265, 1335,
	329, 1335,
	339, 1335,
	504, 1335,
	-2, 1461,
	-1, 1890,
	562, 1601,
	-2, 1589,
	-1, 1927,
	1, 615,
	565, 615,
	-2, 1245,
	-1, 2041,
	213, 220,
	-2, 2064,
	-1, 2042,
	213, 221,
	-2, 264,
	-1, 2172,
	1, 783,
	561, 783,
	563, 783,
	565, 783,
	-2, 0,
	-1, 2173,
	1, 819,
	561, 819,
	563, 819,
	565, 819,
	-2, 0,
	-1, 2174,
	1, 827,
	561, 827,
	563, 827,
	565, 827,
	-2, 0,
	-1, 2207,
	1, 801,
	561, 801,
	563, 801,
	565, 801,
	-2, 0,
	-1, 2253,
	414, 1401,
	415, 1401,
	-2, 1634,
	-1, 2284,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1654,
	-1, 2285,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1655,
	-1, 2286,
	94, 0,
	246, 0,
	247, 0,
	547, 0,
	548, 0,
	-2, 1656,
	-1, 2287,
	94, 0,
	246, 0,
	247, 0,
	547, 0,
	548, 0,
	-2, 1657,
	-1, 2288,
	94, 0,
	246, 0,
	247, 0,
	547, 0,
	548, 0,
	-2, 1658,
	-1, 2289,
	94, 0,
	246, 0,
	247, 0,
	547, 0,
	548, 0,
	-2, 1659,
	-1, 2290,
	94, 0,
	246, 0,
	247, 0,
	547, 0,
	548, 0,
	-2, 1660,
	-1, 2291,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1661,
	-1, 2303,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1673,
	-1, 2304,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1674,
	-1, 2305,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1675,
	-1, 2308,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1680,
	-1, 2314,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1684,
	-1, 2316,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1692,
	-1, 2317,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1693,
	-1, 2318,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1694,
	-1, 2319,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1695,
	-1, 2455,
	5, 2068,
	180, 1935,
	562, 2065,
	-2, 2056,
	-1, 2456,
	180, 1936,
	-2, 2405,
	-1, 2457,
	180, 1937,
	-2, 2244,
	-1, 2458,
	180, 1938,
	-2, 2135,
	-1, 2459,
	180, 1939,
	-2, 2185,
	-1, 2460,
	180, 1940,
	-2, 2229,
	-1, 2461,
	180, 1941,
	-2, 2337,
	-1, 2462,
	180, 1942,
	-2, 1757,
	-1, 2531,
	1, 1462,
	2, 1462,
	105, 1462,
	146, 1462,
	164, 1462,
	177, 1462,
	181, 1462,
	197, 1462,
	200, 1462,
	228, 1462,
	232, 1462,
	243, 1462,
	261, 1462,
	265, 1462,
	303, 1462,
	329, 1462,
	333, 1462,
	339, 1462,
	405, 1462,
	409, 1462,
	504, 1462,
	515, 1462,
	529, 1462,
	530, 1462,
	531, 1462,
	541, 1462,
	561, 1462,
	563, 1462,
	565, 1462,
	567, 1462,
	-2, 1461,
	-1, 2544,
	562, 2037,
	-2, 2051,
	-1, 2546,
	52, 1362,
	131, 1362,
	-2, 280,
	-1, 2571,
	562, 1600,
	-2, 1590,
	-1, 2710,
	1, 1133,
	561, 1133,
	563, 1133,
	565, 1133,
	-2, 1362,
	-1, 2890,
	334, 1404,
	-2, 2444,
	-1, 2891,
	334, 1405,
	-2, 2323,
	-1, 2895,
	414, 2001,
	415, 2001,
	-2, 1755,
	-1, 2896,
	414, 2005,
	415, 2005,
	-2, 1756,
	-1, 2897,
	414, 2002,
	415, 2002,
	-2, 1755,
	-1, 2898,
	414, 2006,
	415, 2006,
	-2, 1756,
	-1, 2911,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1682,
	-1, 2912,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1686,
	-1, 2918,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1688,
	-1, 3146,
	1, 612,
	561, 612,
	563, 612,
	565, 612,
	-2, 1245,
	-1, 3279,
	1, 1133,
	561, 1133,
	563, 1133,
	565, 1133,
	-2, 1362,
	-1, 3390,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1690,
	-1, 3397,
	237, 0,
	239, 0,
	320, 0,
	-2, 1709,
	-1, 3464,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1738,
	-1, 3465,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1739,
	-1, 3466,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1740,
	-1, 3470,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1744,
	-1, 3471,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1745,
	-1, 3472,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1746,
	-1, 3518,
	562, 2038,
	-2, 2052,
	-1, 3555,
	564, 2053,
	-2, 1167,
	-1, 3659,
	564, 2561,
	-2, 1292,
	-1, 3718,
	237, 0,
	239, 0,
	320, 0,
	-2, 1710,
	-1, 3721,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1713,
	-1, 3722,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1715,
	-1, 3938,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1714,
	-1, 3939,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1716,
	-1, 3950,
	237, 0,
	-2, 1747,
	-1, 4108,
	237, 0,
	-2, 1748,
	-1, 4268,
	49, 0,
	210, 0,
	264, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 2408,
}

const sqlPrivate = 57344

const sqlLast = 114768

var sqlAct = [...]int{

	247, 4136, 4034, 2775, 3987, 3069, 4158, 2805, 3263, 4267,
	4278, 3701, 3264, 3990, 4380, 4242, 2607, 2038, 4226, 4223,
	4208, 1160, 1369, 4279, 2140, 4280, 3551, 4041, 1171, 2648,
	4061, 3975, 4154, 4112, 3429, 3890, 3862, 3895, 993, 3927,
	4329, 4266, 3959, 2263, 3651, 3876, 4050, 3592, 3382, 3844,
	1502, 2149, 3291, 1498, 3788, 1877, 3164, 3805, 984, 4075,
	2331, 3296, 1661, 3900, 3627, 2125, 3289, 3259, 3612, 3610,
	719, 2904, 1535, 2271, 1352, 1982, 3552, 2264, 2814, 3344,
	1332, 683, 3346, 1847, 2827, 1234, 2816, 2487, 2746, 3521,
	2764, 2733, 3112, 3955, 2673, 719, 1327, 3092, 3084, 3700,
	3052, 2824, 2759, 2085, 2813, 1576, 2807, 3073, 2524, 2776,
	2761, 2033, 2032, 1992, 2609, 3249, 3757, 822, 2742, 2523,
	1816, 992, 166, 3489, 4113, 3075, 4, 1792, 1754, 2268,
	1335, 3051, 2373, 2888, 2344, 1533, 1423, 102, 2687, 2027,
	2123, 714, 241, 2011, 2018, 2747, 1041, 1217, 1963, 240,
	1966, 1836, 2364, 4155, 1478, 3119, 1649, 2505, 1817, 1151,
	1953, 2375, 1878, 2823, 2328, 2235, 2252, 2647, 2484, 2233,
	3261, 2556, 1512, 1833, 1489, 2147, 2073, 2769, 1428, 1046,
	720, 721, 2555, 1203, 2598, 649, 2367, 1154, 2513, 2817,
	1787, 2495, 1826, 1133, 2417, 2451, 1739, 1662, 1663, 1346,
	2234, 2345, 2072, 2236, 175, 1048, 176, 1605, 716, 166,
	1354, 665, 725, 1510, 816, 677, 1168, 2097, 795, 728,
	1037, 2526, 1452, 2257, 767, 1364, 1981, 1022, 652, 42,
	41, 39, 1156, 1131, 30, 28, 26, 725, 660, 1668,
	883, 903, 2939, 1044, 728, 1375, 2935, 3503, 1648, 3504,
	2114, 4447, 3071, 1676, 1677, 2504, 1709, 1710, 1711, 1719,
	1720, 1721, 2114, 2114, 2114, 988, 4437, 2114, 4424, 635,
	3325, 988, 2504, 657, 4423, 1712, 1707, 4414, 2504, 2772,
	4397, 2047, 4395, 1679, 3804, 4309, 3804, 1150, 4302, 4310,
	3305, 1725, 2504, 1212, 4300, 4297, 4294, 1043, 2504, 4298,
	4295, 4289, 4264, 837, 4263, 2047, 2047, 4262, 2047, 4257,
	4256, 2133, 4251, 2133, 2133, 989, 3804, 1678, 4249, 2148,
	4221, 4198, 3804, 1091, 3804, 2562, 4191, 1698, 4190, 4185,
	2504, 4184, 2504, 3804, 3306, 3804, 1695, 3325, 3024, 3025,
	4178, 1148, 4150, 1368, 2047, 4110, 3854, 4092, 4089, 2562,
	4086, 3688, 2047, 4043, 3804, 4008, 4007, 4044, 3999, 2047,
	2047, 3998, 2047, 3966, 3940, 3804, 3919, 2047, 2562, 3127,
	2133, 969, 3908, 968, 3839, 3827, 3325, 1542, 2504, 2504,
	3803, 3720, 3667, 3661, 3804, 2562, 3341, 3341, 3625, 3513,
	3511, 3496, 3626, 3514, 3512, 2504, 1212, 1039, 3413, 3409,
	3340, 3332, 2047, 2504, 3341, 3333, 2370, 1701, 1702, 1703,
	1704, 1137, 3068, 1138, 3142, 978, 2504, 1684, 2903, 983,
	3063, 3062, 3493, 3141, 2504, 2504, 2504, 1182, 2558, 1134,
	1134, 1676, 1677, 3015, 2989, 2981, 1166, 3016, 2990, 2982,
	2979, 239, 1135, 2950, 2504, 2948, 2831, 2504, 4199, 2047,
	2133, 2949, 1716, 2803, 1707, 1726, 2802, 2136, 213, 1163,
	2136, 1679, 1706, 1708, 2047, 2497, 2582, 2561, 1676, 1677,
	2504, 2562, 2553, 2547, 2503, 4114, 2504, 2047, 2504, 1722,
	2135, 1723, 1187, 4105, 2136, 4093, 2133, 3493, 1693, 1694,
	2371, 1707, 87, 2504, 2496, 1678, 3889, 3854, 1679, 2938,
	3828, 215, 3030, 2047, 3688, 1698, 1714, 1183, 3333, 2664,
	1986, 2597, 1932, 1162, 1695, 2113, 2129, 1676, 1677, 2739,
	1699, 2046, 2681, 1719, 1720, 1721, 2595, 1812, 1363, 3583,
	3385, 3363, 1678, 1834, 2021, 1578, 2540, 1528, 3307, 2539,
	1707, 2538, 1698, 2537, 2536, 1139, 1136, 1679, 977, 976,
	214, 975, 1377, 974, 1598, 1725, 973, 3308, 3024, 3025,
	972, 207, 1724, 971, 967, 3714, 966, 213, 2868, 3773,
	208, 2372, 965, 2369, 964, 963, 962, 961, 960, 959,
	1713, 1678, 958, 957, 213, 1701, 1702, 1703, 1704, 956,
	2115, 1698, 177, 955, 954, 1684, 953, 952, 951, 1376,
	1695, 881, 2115, 2115, 2115, 3040, 880, 2115, 879, 878,
	215, 877, 876, 875, 1020, 874, 873, 872, 871, 870,
	869, 868, 1701, 1702, 1703, 1704, 867, 215, 866, 865,
	864, 863, 1684, 862, 861, 860, 859, 858, 1705, 857,
	1706, 1708, 856, 1389, 855, 854, 853, 852, 851, 850,
	840, 839, 835, 834, 828, 1383, 827, 785, 1700, 214,
	784, 742, 741, 740, 739, 731, 1693, 1694, 730, 729,
	698, 1701, 1702, 1703, 1704, 689, 214, 1706, 1708, 688,
	687, 1684, 1046, 671, 1717, 235, 1046, 207, 234, 233,
	232, 231, 230, 1676, 1677, 229, 208, 228, 1699, 227,
	226, 177, 1237, 225, 1368, 224, 1237, 223, 222, 221,
	1357, 220, 1377, 2374, 219, 218, 1716, 217, 2771, 1726,
	1216, 3305, 3030, 1679, 1221, 216, 1706, 1708, 3732, 1377,
	1207, 3902, 3531, 3507, 1046, 1699, 1046, 3342, 1046, 3115,
	2961, 2944, 2720, 3041, 1357, 2755, 2566, 2545, 2530, 2400,
	1837, 2386, 1693, 1694, 2792, 3024, 3025, 1678, 3042, 3043,
	3044, 1343, 2384, 213, 3066, 1756, 2113, 2047, 2129, 1357,
	1714, 2228, 1338, 1675, 1377, 1961, 139, 3716, 1860, 1765,
	1715, 1371, 1223, 1170, 1699, 1690, 1691, 1697, 1718, 1696,
	1692, 4285, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 1183, 3067, 213, 4265, 3742, 215, 1367, 2112, 3741,
	2047, 1795, 4165, 1357, 1046, 1546, 1705, 4102, 1794, 1357,
	1795, 2143, 2368, 1357, 1434, 1436, 4117, 1794, 3954, 3039,
	1164, 1046, 3909, 1046, 1499, 1201, 1700, 1357, 3985, 3888,
	1798, 1147, 1532, 1046, 4096, 1046, 215, 1388, 2575, 1793,
	1756, 4094, 2496, 1705, 1439, 214, 3780, 1684, 3755, 1382,
	1230, 3754, 1324, 1329, 3748, 725, 207, 3747, 3746, 1183,
	3739, 3738, 728, 1700, 3736, 208, 3731, 1426, 3033, 3034,
	3026, 3027, 3028, 3029, 3031, 3032, 1676, 1677, 3728, 1357,
	1492, 3727, 1196, 3624, 3535, 214, 3630, 177, 4118, 3534,
	2142, 3533, 1705, 1366, 1365, 3517, 207, 1046, 3484, 1707,
	1046, 1757, 3483, 1755, 1763, 208, 1679, 3482, 3405, 3030,
	3401, 3336, 1700, 3024, 3025, 3110, 3042, 3043, 3044, 3904,
	3059, 3050, 3023, 3020, 3019, 3024, 3025, 177, 2054, 3017,
	2988, 166, 166, 2987, 2986, 2983, 1515, 1517, 1717, 2980,
	1678, 1758, 3133, 2960, 3024, 3025, 989, 3042, 3043, 3044,
	1698, 1483, 1486, 213, 1547, 2943, 1421, 1696, 1692, 1695,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 2936,
	213, 3045, 1495, 2757, 2088, 2804, 2531, 3581, 2357, 1207,
	1675, 2052, 1207, 1674, 4441, 4389, 4388, 3039, 2340, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 215, 1689, 1687, 1688,
	1680, 1681, 1682, 1683, 1685, 1686, 4359, 1614, 3631, 3882,
	3394, 1509, 3040, 215, 4319, 213, 4317, 1653, 3039, 1513,
	1046, 1172, 3431, 4157, 4146, 4143, 1046, 4142, 4141, 4133,
	1701, 1702, 1703, 1704, 1715, 2669, 3064, 4126, 4116, 4115,
	1684, 4090, 1718, 1696, 1692, 214, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 4074, 207, 4073, 215, 213,
	2334, 1455, 214, 4059, 4056, 208, 4004, 1527, 991, 3981,
	1600, 213, 3952, 207, 3935, 3934, 3916, 3030, 3915, 1541,
	3879, 3855, 208, 3772, 1647, 1706, 1708, 177, 3753, 3030,
	3026, 3027, 3028, 3029, 3031, 3032, 1676, 1677, 3689, 2564,
	3683, 1745, 215, 3680, 177, 3571, 3570, 214, 3030, 3557,
	3556, 1693, 1694, 3499, 215, 1552, 3487, 3631, 207, 1707,
	3396, 1743, 1569, 3343, 3326, 3282, 1679, 208, 3221, 3194,
	3167, 1046, 1046, 1046, 3166, 1330, 3135, 1046, 1342, 1345,
	2965, 1601, 2964, 1699, 1168, 2959, 1168, 2927, 3903, 177,
	3041, 214, 2732, 1814, 2756, 1801, 1800, 989, 1799, 1796,
	1678, 1237, 207, 214, 1788, 1786, 2573, 2572, 2542, 1046,
	3045, 208, 719, 2535, 207, 1658, 1895, 719, 1657, 1650,
	3040, 2502, 2382, 208, 1859, 1863, 1046, 969, 1815, 968,
	1357, 1810, 3040, 177, 1809, 1874, 1808, 1807, 1806, 1805,
	1921, 1652, 1345, 1345, 213, 177, 1804, 37, 1046, 1803,
	1654, 3040, 1802, 1797, 1237, 1783, 1671, 1672, 1782, 1781,
	1780, 1779, 1778, 1777, 1823, 1680, 1681, 1682, 1683, 1685,
	1686, 213, 1868, 1676, 1677, 1950, 2633, 1776, 1775, 1774,
	1207, 1773, 1345, 1772, 1864, 1771, 1959, 215, 3776, 3107,
	1770, 3167, 1820, 1821, 1769, 1758, 1870, 1744, 213, 1742,
	1684, 1705, 1737, 1679, 1930, 1924, 1453, 1789, 1790, 166,
	1195, 1844, 2144, 1925, 215, 1185, 1178, 3036, 3037, 3038,
	3724, 1700, 3530, 989, 3035, 3033, 3034, 3026, 3027, 3028,
	3029, 3031, 3032, 3510, 1676, 1677, 214, 1678, 1845, 3502,
	2399, 215, 2385, 2947, 2533, 1706, 1708, 207, 3970, 3778,
	3024, 3025, 1866, 2383, 725, 1835, 208, 1458, 3041, 725,
	3529, 728, 1757, 214, 1679, 3131, 728, 3024, 3025, 1740,
	3041, 4386, 3830, 1842, 207, 3311, 1855, 1220, 177, 4379,
	3292, 1778, 4144, 208, 1134, 1927, 1952, 4046, 1212, 3041,
	214, 1837, 1357, 1357, 1952, 1923, 1813, 1952, 1678, 4045,
	3907, 207, 1237, 1699, 1166, 177, 1166, 3857, 4097, 3856,
	208, 1645, 3829, 3775, 1974, 4095, 1839, 1854, 1853, 1852,
	1871, 1889, 1850, 1849, 1848, 1918, 1867, 1163, 3984, 1163,
	3692, 1146, 177, 3691, 1778, 1219, 3690, 1684, 2007, 3197,
	1213, 2010, 1875, 3505, 2015, 213, 3328, 3327, 2652, 4051,
	3383, 2985, 1696, 1692, 1568, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 2039, 2044, 1218, 1795, 3634, 1955,
	2984, 1938, 2909, 1945, 1794, 2635, 3569, 213, 1212, 1615,
	1215, 1162, 3266, 1162, 3265, 3036, 3037, 3038, 215, 949,
	1767, 4261, 3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031,
	3032, 1764, 1212, 1991, 3035, 3033, 3034, 3026, 3027, 3028,
	3029, 3031, 3032, 2141, 3030, 1577, 3036, 3037, 3038, 4042,
	215, 4305, 2019, 3035, 3033, 3034, 3026, 3027, 3028, 3029,
	3031, 3032, 950, 4290, 213, 3132, 725, 214, 2089, 1892,
	4277, 1700, 2164, 728, 3250, 2828, 1578, 1357, 207, 1357,
	2036, 1357, 2034, 1209, 2078, 3589, 3588, 208, 3574, 3360,
	3144, 3956, 3071, 3433, 2953, 2365, 4286, 1357, 1357, 214,
	2571, 1811, 1791, 2083, 1366, 1365, 3257, 215, 1357, 177,
	207, 2094, 2082, 1457, 1482, 1433, 1360, 1190, 4299, 208,
	1357, 4296, 1357, 1357, 1357, 2014, 3301, 3546, 2675, 4137,
	2678, 1556, 3891, 4220, 1986, 4123, 3170, 3564, 2811, 2768,
	3243, 177, 3602, 1883, 719, 2163, 4370, 2151, 4346, 2045,
	4345, 3377, 4025, 3818, 1407, 3148, 214, 1399, 3150, 947,
	4287, 1214, 2583, 1361, 945, 2172, 4436, 207, 1458, 2213,
	943, 4018, 2091, 2601, 941, 938, 208, 4010, 1342, 2211,
	2601, 3852, 930, 3598, 3597, 2065, 3591, 1613, 2599, 2104,
	2064, 2156, 2565, 2413, 3587, 2599, 3585, 2117, 177, 3543,
	3542, 2146, 1939, 3246, 3126, 3601, 2958, 2168, 1680, 1681,
	1682, 1683, 1685, 1686, 989, 2957, 989, 2956, 1210, 2955,
	2173, 780, 2913, 2685, 2412, 1046, 1211, 1046, 2100, 2096,
	2684, 2680, 2671, 2152, 1046, 1408, 2102, 1895, 1895, 1237,
	2663, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1594, 1046, 2174, 1046,
	1046, 1046, 1046, 2662, 2661, 2245, 725, 1513, 1928, 1513,
	2137, 987, 2138, 728, 1455, 1196, 2099, 2232, 2099, 2660,
	2639, 1046, 1986, 1220, 1046, 1046, 1554, 2626, 2554, 2315,
	1651, 2155, 1046, 2273, 2765, 1612, 1046, 935, 1046, 1046,
	3361, 781, 2063, 1220, 2590, 2243, 1237, 2225, 1164, 2226,
	1164, 1595, 1046, 1046, 1046, 1046, 4371, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1468, 2160, 1682, 1683, 1685,
	1686, 3196, 2189, 1403, 1416, 1944, 1943, 2330, 2625, 1952,
	1954, 1219, 3814, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 1046, 1553, 2330, 925, 2207, 1046, 986, 3992, 2546,
	1202, 1219, 1175, 2241, 1212, 3024, 3025, 2256, 1168, 1596,
	2141, 2346, 2347, 3933, 1457, 1237, 1549, 2370, 982, 2269,
	2270, 1445, 1624, 1444, 1168, 2346, 2362, 1443, 2217, 1442,
	2886, 1686, 1611, 1213, 2231, 4283, 1362, 2230, 2237, 2244,
	1046, 1237, 1173, 2229, 3028, 3029, 3031, 3032, 2243, 2081,
	2637, 2408, 2224, 969, 4398, 2260, 969, 969, 2261, 2262,
	989, 2871, 1889, 1889, 3032, 1566, 2361, 2656, 1570, 989,
	2454, 2454, 2468, 989, 2346, 3831, 2557, 2488, 2490, 2611,
	2239, 2649, 2650, 2494, 2180, 1983, 2901, 2624, 3560, 2649,
	2650, 2222, 2649, 2650, 1947, 647, 1644, 1656, 2338, 3368,
	2101, 2371, 1194, 2365, 988, 2336, 2241, 926, 4374, 2518,
	3367, 1342, 3994, 2865, 3608, 2342, 3419, 3211, 1979, 1628,
	1607, 642, 2374, 2578, 3800, 1213, 925, 2543, 2177, 3204,
	2410, 1550, 1374, 2510, 1381, 2411, 1387, 2242, 2414, 2359,
	2415, 2416, 1237, 1984, 1985, 2532, 1209, 1176, 4345, 1844,
	982, 2171, 2712, 3607, 3851, 3549, 3210, 3796, 1578, 3024,
	3025, 989, 3422, 1207, 2509, 2517, 2874, 2522, 3203, 3030,
	2528, 2529, 4356, 1980, 1895, 1429, 2450, 3812, 166, 2463,
	1892, 1892, 2372, 2559, 2369, 1977, 2492, 2614, 2479, 2181,
	3586, 2711, 2500, 2501, 1578, 2677, 3147, 3420, 4375, 2515,
	2516, 2511, 1237, 3572, 1949, 4284, 2240, 2580, 2900, 3797,
	2600, 1842, 1508, 4362, 1134, 1005, 1357, 1797, 2005, 1427,
	1855, 783, 782, 2567, 1214, 2674, 2603, 2676, 1166, 1526,
	2017, 1531, 1046, 1046, 778, 1046, 777, 3584, 1209, 926,
	2242, 1540, 1948, 1545, 1166, 3573, 3245, 696, 3215, 848,
	2521, 1163, 2581, 2016, 1883, 1883, 4361, 2004, 1357, 732,
	2574, 1989, 3932, 2679, 1555, 2659, 2672, 1163, 939, 985,
	2638, 1610, 3040, 939, 2736, 1789, 1790, 2212, 2326, 939,
	2657, 1210, 2577, 940, 939, 2641, 2012, 2210, 2579, 1211,
	2602, 2552, 927, 4401, 2753, 2584, 2873, 4282, 2779, 2636,
	1988, 2223, 4334, 1599, 2374, 1162, 2324, 4377, 3706, 2240,
	3705, 1984, 1985, 3298, 1357, 1357, 1214, 1357, 2628, 3299,
	1467, 1162, 3813, 3030, 2374, 2870, 2051, 2050, 1402, 1357,
	2640, 1357, 2743, 2616, 2619, 2797, 2642, 2606, 1405, 2374,
	2221, 2013, 2825, 2658, 2031, 1357, 2651, 2653, 2654, 2655,
	2893, 2894, 694, 841, 1977, 4427, 4138, 1625, 4152, 2834,
	2835, 1429, 3993, 2795, 3149, 2799, 2749, 1622, 1986, 725,
	2841, 2842, 2843, 1210, 4195, 2114, 728, 2008, 1784, 1889,
	815, 1211, 2613, 1829, 3182, 1046, 3561, 2852, 2794, 2853,
	2854, 3298, 3871, 2030, 2924, 2715, 1174, 3129, 4383, 3224,
	2717, 2829, 4333, 2915, 3792, 4312, 936, 1366, 2718, 3793,
	3041, 2312, 1967, 1977, 4313, 2872, 3702, 1968, 3945, 2329,
	1736, 829, 2922, 2730, 927, 928, 3040, 2850, 4355, 1046,
	1832, 2740, 4240, 2368, 2601, 1046, 1046, 166, 2179, 3181,
	2810, 2849, 2800, 2963, 2320, 2512, 4231, 1212, 2763, 2617,
	2514, 2786, 2857, 643, 2859, 2789, 2861, 2790, 2774, 2782,
	3795, 1825, 2321, 1830, 2847, 1993, 2830, 2322, 2876, 3837,
	2878, 2327, 2119, 929, 3798, 2121, 2856, 1623, 2858, 2356,
	2860, 2126, 2796, 4376, 2128, 1551, 2879, 1997, 2131, 2801,
	1046, 1046, 1626, 997, 1345, 2812, 1046, 1892, 733, 734,
	2869, 1565, 1567, 4402, 2527, 2781, 988, 3435, 2832, 1046,
	1046, 4390, 2836, 2612, 2837, 1046, 1046, 3881, 3696, 3526,
	1188, 1046, 2337, 644, 1956, 1957, 1969, 1513, 3929, 3707,
	1046, 1046, 1046, 1655, 3024, 3025, 1046, 1829, 1193, 1212,
	2855, 1345, 1994, 1973, 3379, 2884, 1046, 3026, 3027, 3028,
	3029, 3031, 3032, 695, 2916, 1851, 4193, 928, 4159, 2946,
	2919, 2586, 1582, 1046, 3041, 2176, 2892, 645, 2881, 646,
	4281, 1883, 2310, 4344, 1627, 2313, 2588, 2883, 4342, 4174,
	2882, 4058, 3649, 2920, 1832, 3285, 2937, 2925, 2170, 2256,
	4194, 3794, 842, 843, 2902, 2887, 4332, 2071, 697, 1827,
	1822, 693, 1186, 3872, 980, 929, 925, 849, 3039, 2589,
	1181, 1831, 1970, 1975, 634, 3629, 3185, 1830, 2941, 2942,
	1666, 3703, 1164, 2945, 3615, 1330, 2309, 2006, 3801, 2587,
	982, 2259, 4084, 3613, 1987, 2227, 736, 735, 1164, 4067,
	2323, 4381, 1342, 1940, 1998, 4407, 3751, 1665, 4001, 4311,
	2325, 4000, 989, 1046, 1046, 1046, 3120, 2914, 3928, 1828,
	830, 831, 1046, 1046, 1046, 3187, 3979, 1046, 4122, 3473,
	2470, 3650, 3354, 3595, 2249, 981, 2009, 1046, 1168, 1237,
	4160, 3347, 3545, 1046, 4076, 1046, 3078, 3079, 3286, 3086,
	737, 738, 3278, 1168, 1971, 4428, 2952, 4077, 3030, 3162,
	3034, 3026, 3027, 3028, 3029, 3031, 3032, 3617, 3354, 1999,
	2000, 1237, 3158, 1825, 2754, 2115, 2748, 3347, 2734, 926,
	2095, 2084, 2076, 1168, 2057, 3418, 1237, 3186, 4078, 1459,
	3817, 2618, 3539, 1995, 1396, 3100, 1976, 3816, 4382, 3488,
	1977, 670, 3616, 1895, 3113, 2506, 4209, 1237, 1664, 3380,
	3615, 1345, 1345, 4175, 3061, 3896, 2921, 3125, 1665, 3613,
	2218, 1933, 1046, 3652, 2022, 1831, 2923, 2731, 1470, 2029,
	3080, 4384, 844, 845, 1996, 3349, 1046, 2643, 4040, 3139,
	4038, 1937, 3114, 3090, 3980, 3189, 1736, 4080, 1895, 1829,
	3348, 3708, 2161, 3930, 3173, 3154, 3155, 3169, 3168, 3109,
	3145, 3040, 2907, 1342, 2311, 2885, 1046, 1357, 2250, 4079,
	1345, 3349, 1666, 3171, 3151, 1207, 3175, 3089, 3088, 1597,
	2508, 3501, 3098, 3106, 3190, 2507, 3348, 4081, 3101, 3102,
	3056, 3057, 3058, 3617, 3083, 3072, 1832, 1665, 3118, 3752,
	832, 833, 1357, 3082, 1342, 4406, 1342, 2551, 2550, 3087,
	1660, 1827, 1237, 3474, 3172, 1451, 1935, 3177, 2549, 1664,
	3179, 1357, 3475, 3104, 3159, 3105, 1357, 2548, 3616, 1830,
	4161, 3085, 3227, 3709, 3094, 3230, 1437, 3345, 2028, 3235,
	3237, 2743, 2001, 3199, 3621, 3122, 3123, 3124, 986, 1357,
	1438, 2738, 4129, 1583, 1449, 1357, 1936, 1357, 1166, 3614,
	4035, 1237, 3863, 847, 927, 3130, 1972, 3988, 719, 2622,
	3337, 1828, 2093, 1166, 3136, 3137, 2743, 3138, 3253, 1357,
	3146, 1163, 3540, 3202, 3216, 3184, 3913, 3099, 3152, 3262,
	4352, 1974, 3815, 1357, 4156, 2743, 1163, 3213, 1664, 3041,
	2743, 2833, 3271, 1166, 2644, 2645, 3222, 2716, 1889, 1168,
	3163, 2714, 1235, 3294, 2002, 3611, 1336, 3188, 3277, 2150,
	3214, 1559, 1974, 3195, 3225, 3095, 1163, 3248, 2825, 3251,
	4217, 4206, 4212, 3206, 3121, 1162, 3758, 2825, 4130, 3232,
	3490, 2381, 3157, 3209, 3239, 3350, 3351, 3352, 3353, 3217,
	1162, 1357, 1357, 1889, 3912, 4235, 3223, 3977, 2019, 1642,
	3207, 3233, 1666, 3244, 3208, 3240, 2019, 3989, 4354, 3324,
	1640, 1619, 1617, 3093, 1357, 1593, 3303, 1831, 3201, 669,
	1162, 3350, 3351, 3352, 3353, 3614, 1591, 3293, 4301, 4145,
	2380, 3951, 1426, 4276, 3750, 979, 3620, 928, 3317, 3212,
	3978, 2641, 3053, 3395, 3097, 3362, 3287, 1867, 3358, 3255,
	725, 1237, 1589, 3247, 1237, 4213, 3295, 728, 3275, 3231,
	4082, 4131, 1587, 3140, 3238, 4083, 1892, 3018, 2926, 1585,
	1575, 2735, 3054, 3035, 3033, 3034, 3026, 3027, 3028, 3029,
	3031, 3032, 1573, 1447, 1046, 929, 2670, 1450, 2025, 989,
	1046, 1046, 2634, 2576, 1046, 1046, 1046, 3356, 1046, 1862,
	1858, 1643, 3335, 1537, 166, 166, 2787, 1046, 1895, 3322,
	3323, 1892, 2791, 3339, 3318, 3300, 1046, 3376, 2209, 1046,
	3374, 3274, 3375, 3314, 3309, 1237, 1448, 1660, 2867, 2866,
	2839, 2238, 3371, 2220, 1046, 846, 3838, 2023, 1606, 3373,
	1883, 2184, 1237, 3364, 2056, 3365, 1922, 3366, 1768, 3357,
	3096, 1548, 1895, 1895, 1046, 1046, 1420, 1046, 1046, 1046,
	3826, 3381, 3415, 3398, 4205, 3226, 3894, 3843, 3785, 1166,
	3648, 3640, 3600, 937, 3567, 3302, 2024, 1641, 3565, 3407,
	3408, 3370, 3544, 3281, 3276, 1883, 3355, 3267, 1639, 1618,
	1616, 2793, 1163, 1592, 2788, 2766, 2752, 2741, 2728, 1046,
	3447, 3378, 2713, 1046, 1590, 1895, 1895, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 3448, 1046, 2134, 1669,
	1588, 2132, 2130, 2127, 1046, 1046, 1895, 2122, 2120, 2116,
	1586, 1046, 2107, 2055, 2053, 1748, 1162, 1584, 1574, 1753,
	3403, 2035, 1046, 2020, 2003, 1990, 1978, 4330, 3414, 1342,
	1572, 1446, 3290, 1168, 1168, 4322, 1869, 1046, 3430, 3421,
	3423, 3424, 3234, 3523, 1143, 4346, 1941, 2029, 4245, 2905,
	3918, 3437, 2081, 3911, 3910, 3850, 3781, 2826, 1960, 1401,
	2601, 3445, 1164, 2208, 2601, 3446, 1237, 4069, 2623, 4062,
	1144, 3425, 3660, 3519, 1986, 2599, 2175, 1164, 3506, 2620,
	1637, 1638, 2092, 1889, 2269, 3438, 709, 1490, 942, 944,
	946, 1491, 2204, 2203, 3444, 4244, 2182, 3819, 3485, 3524,
	3525, 1046, 3477, 3450, 3452, 1670, 3845, 1164, 1571, 4104,
	3759, 3800, 3737, 3536, 3537, 3538, 2646, 1046, 1168, 1676,
	1677, 2627, 3522, 1673, 1676, 1677, 4348, 1889, 1889, 4340,
	3594, 4306, 2727, 648, 3478, 2206, 166, 2269, 3453, 3553,
	2906, 3486, 236, 3637, 3796, 1046, 1046, 2675, 3789, 2632,
	2077, 3593, 3494, 3495, 1679, 1199, 2028, 2683, 3497, 3498,
	2682, 2665, 2629, 3508, 2667, 3787, 1491, 768, 3481, 4200,
	4169, 1491, 1046, 812, 3791, 3509, 1145, 2666, 4166, 2631,
	1889, 1889, 2668, 1678, 1342, 1342, 659, 631, 1678, 4378,
	4128, 1861, 2630, 4054, 1357, 4033, 3797, 3639, 3628, 3492,
	3516, 1892, 3280, 2773, 2493, 1926, 1876, 3986, 3128, 4237,
	4405, 1889, 4168, 1895, 4238, 1368, 3024, 3025, 2721, 1676,
	1677, 2724, 4237, 2726, 3580, 3582, 3729, 4238, 3579, 3548,
	2376, 3596, 3575, 3528, 4358, 2593, 3790, 1054, 2593, 2594,
	2591, 2592, 1357, 2591, 1962, 1892, 1892, 3532, 2409, 1046,
	1558, 4055, 1621, 1166, 1166, 1620, 1557, 1168, 1046, 3590,
	3662, 4019, 3846, 3842, 3841, 2770, 1342, 3725, 2770, 3646,
	3635, 3527, 2779, 2641, 3426, 1883, 1163, 1163, 1357, 1357,
	1357, 243, 243, 243, 3671, 637, 638, 3228, 653, 637,
	653, 663, 668, 3653, 1357, 1762, 686, 1761, 1892, 1892,
	3606, 692, 4392, 3656, 3636, 3675, 4363, 243, 2825, 3657,
	4204, 3622, 4203, 4202, 1237, 4119, 3654, 4036, 3619, 1883,
	1883, 4014, 3971, 3638, 3968, 3874, 826, 3777, 3686, 1892,
	1162, 1162, 243, 1164, 3666, 3643, 1237, 3623, 1166, 1046,
	1046, 3563, 3641, 3558, 3687, 1046, 1046, 1895, 3312, 3284,
	1046, 1046, 3283, 1046, 3178, 3655, 3014, 1046, 3013, 3012,
	3011, 1163, 3010, 3009, 3664, 3663, 3008, 3007, 1046, 3658,
	3006, 2862, 1883, 1883, 3609, 3163, 3005, 3618, 3004, 3003,
	3002, 3001, 3670, 3000, 1046, 2999, 2998, 2997, 3678, 3681,
	3693, 3792, 2048, 3685, 2996, 3605, 3793, 2995, 3682, 3676,
	3677, 2994, 3719, 1883, 2993, 2992, 3710, 2991, 3684, 2864,
	2846, 2845, 2844, 2784, 2758, 1162, 2729, 2621, 1889, 2569,
	2568, 2341, 2205, 2202, 3704, 3699, 2201, 2200, 2199, 2198,
	3711, 2110, 2109, 2108, 2106, 2090, 2066, 2062, 2061, 2060,
	3723, 2059, 2058, 1636, 1168, 637, 637, 3795, 1635, 1580,
	1579, 1477, 1168, 243, 1476, 1475, 1237, 1474, 1237, 1473,
	1472, 3798, 1471, 1469, 1464, 1168, 1463, 1462, 1461, 1460,
	1415, 1414, 3764, 1413, 1412, 1126, 1411, 1166, 1410, 1409,
	1404, 1400, 1237, 3694, 1398, 1397, 3113, 1228, 1227, 1226,
	1225, 1224, 1192, 1191, 1931, 948, 934, 1967, 3991, 3799,
	1163, 3749, 1968, 1630, 85, 1046, 1406, 1168, 755, 3782,
	3783, 79, 2026, 3562, 908, 4234, 1390, 4151, 763, 4219,
	3180, 2686, 2183, 1581, 2185, 3108, 2534, 4192, 3553, 3733,
	3811, 2962, 3820, 3810, 1237, 4111, 1892, 3944, 2379, 1766,
	3065, 81, 1237, 3822, 3823, 3313, 3770, 3763, 3315, 3316,
	3767, 3766, 1889, 3319, 1162, 3320, 3321, 3771, 1030, 166,
	3774, 3761, 3762, 3809, 3756, 3847, 1076, 3848, 3870, 3760,
	3869, 1357, 1357, 3784, 3821, 3786, 3547, 3765, 3794, 2815,
	3867, 3866, 1880, 1882, 996, 1240, 1942, 1036, 1357, 1958,
	1951, 2570, 2453, 3864, 1053, 1050, 1884, 1886, 1052, 1237,
	1051, 3861, 1885, 1785, 1357, 3849, 1049, 1879, 3645, 3644,
	1883, 1969, 2737, 2777, 3310, 3801, 1456, 1454, 910, 1345,
	1946, 3859, 3887, 2335, 2363, 2951, 1759, 1011, 1973, 1032,
	2360, 1168, 1184, 1021, 3836, 1010, 3840, 3091, 3070, 3834,
	3297, 1357, 1357, 1357, 3860, 3515, 2248, 1164, 1164, 772,
	3021, 2366, 3553, 1237, 1177, 3897, 3917, 3914, 2476, 2469,
	2465, 3143, 2743, 3865, 1166, 1046, 1046, 1046, 2081, 3901,
	1892, 3906, 1166, 2767, 3880, 3853, 1646, 3884, 3898, 3958,
	1738, 2778, 1222, 1237, 3858, 1166, 1014, 1163, 1046, 2333,
	1750, 1046, 1046, 3892, 3886, 1163, 3899, 1970, 1975, 2272,
	2931, 1046, 2258, 3304, 1895, 3111, 3883, 2563, 1163, 1046,
	1046, 4241, 3434, 2070, 3923, 1142, 1141, 1140, 4225, 3921,
	4222, 3920, 2339, 3825, 1237, 3679, 1357, 1166, 3260, 3925,
	1934, 2585, 1164, 3936, 3833, 3941, 3835, 1748, 3931, 1728,
	1237, 1162, 3268, 1026, 1883, 1341, 3076, 3338, 1046, 1162,
	1163, 1417, 691, 3806, 1038, 1168, 1727, 2707, 2706, 3953,
	4125, 1208, 1162, 1206, 1205, 3947, 1204, 1046, 3161, 1895,
	4426, 3559, 212, 2899, 1667, 1659, 3553, 1046, 209, 1971,
	1046, 211, 210, 3875, 3520, 3117, 2377, 4304, 3577, 1046,
	3252, 2475, 21, 20, 3973, 19, 1237, 3191, 3192, 106,
	40, 3193, 3967, 18, 1162, 3964, 3965, 1357, 1357, 121,
	138, 137, 114, 3974, 3972, 136, 135, 134, 4013, 133,
	140, 1976, 132, 131, 126, 1977, 130, 129, 3996, 128,
	127, 3995, 125, 3218, 3219, 124, 123, 3220, 122, 4048,
	120, 119, 118, 117, 116, 1237, 3262, 115, 1357, 4024,
	113, 1166, 112, 4039, 111, 110, 109, 108, 4015, 107,
	4011, 682, 679, 57, 56, 4053, 1168, 1168, 4016, 4021,
	3153, 1164, 105, 4028, 1163, 4029, 4068, 1179, 104, 4037,
	4031, 2544, 17, 4052, 4072, 1046, 1046, 3553, 3553, 38,
	14, 61, 4087, 4088, 4091, 62, 16, 4047, 13, 4063,
	33, 84, 1046, 1895, 96, 1189, 4027, 95, 34, 1889,
	93, 92, 4066, 32, 686, 15, 4065, 90, 4071, 3901,
	4070, 89, 4064, 4085, 31, 29, 4032, 11, 1162, 9,
	2253, 4003, 1046, 8, 3566, 1046, 3568, 35, 243, 4060,
	243, 243, 1333, 4132, 243, 243, 1348, 1846, 12, 4099,
	5, 171, 170, 4103, 173, 1168, 169, 172, 4109, 4121,
	243, 83, 1370, 168, 167, 82, 27, 10, 163, 4049,
	3633, 76, 4100, 4101, 1889, 1166, 3553, 165, 4120, 2081,
	164, 4140, 2596, 1394, 162, 161, 160, 77, 74, 159,
	78, 1972, 158, 1345, 3599, 4134, 1046, 1046, 1163, 75,
	157, 4026, 1419, 4139, 1425, 4135, 25, 1168, 243, 243,
	1168, 1333, 6, 60, 1357, 7, 3926, 4147, 3359, 99,
	100, 36, 72, 71, 1357, 1357, 70, 1892, 3553, 4149,
	1466, 3553, 24, 4171, 4163, 4164, 4173, 2043, 4183, 59,
	4162, 1357, 243, 23, 243, 243, 4167, 1333, 243, 1370,
	200, 4052, 1162, 199, 198, 1046, 1046, 197, 1164, 686,
	4177, 243, 243, 196, 195, 1046, 1164, 190, 4188, 2471,
	4189, 189, 194, 3668, 4181, 4182, 4179, 3669, 192, 1164,
	191, 193, 4180, 4187, 826, 188, 1166, 1166, 4176, 4216,
	203, 4186, 1892, 202, 1046, 1046, 204, 1046, 201, 4197,
	206, 1883, 187, 4224, 4227, 185, 4215, 4201, 1889, 1163,
	1163, 181, 180, 4239, 184, 4214, 186, 183, 182, 179,
	4236, 1164, 205, 155, 4243, 156, 67, 154, 153, 152,
	151, 150, 149, 4229, 4255, 148, 4259, 66, 22, 2,
	1, 0, 4196, 0, 1046, 1046, 1046, 4258, 4260, 4233,
	0, 0, 4246, 0, 0, 0, 243, 0, 4250, 0,
	0, 0, 0, 1162, 1162, 4254, 1883, 0, 0, 4288,
	0, 1046, 243, 4293, 0, 1166, 0, 0, 4253, 0,
	0, 4228, 0, 4274, 4232, 4275, 4272, 4273, 0, 0,
	0, 0, 0, 0, 0, 0, 4307, 4291, 1163, 4314,
	0, 4316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4325, 0, 0, 0, 4318, 4327, 0, 0, 1046,
	0, 0, 0, 4326, 0, 4315, 1892, 1166, 4331, 0,
	1166, 4323, 4324, 4320, 2475, 4321, 0, 4328, 0, 0,
	0, 0, 0, 0, 4347, 1164, 4350, 0, 0, 699,
	1163, 0, 1162, 1163, 4343, 4341, 0, 4224, 4339, 0,
	4227, 0, 4349, 4337, 4338, 4351, 0, 4353, 1168, 0,
	1168, 4368, 4365, 0, 4357, 0, 4360, 4243, 0, 4373,
	4366, 0, 0, 0, 0, 0, 0, 0, 0, 3553,
	0, 3553, 0, 0, 4367, 0, 4369, 4364, 0, 0,
	1883, 0, 0, 0, 1162, 0, 0, 1162, 4372, 0,
	4387, 4385, 0, 0, 2475, 2475, 0, 0, 0, 4394,
	0, 0, 1967, 4393, 0, 1342, 0, 1968, 0, 1046,
	1046, 0, 4391, 0, 0, 4399, 0, 1046, 4403, 1046,
	1046, 0, 4409, 0, 0, 0, 0, 4417, 4412, 0,
	4415, 4396, 4420, 0, 0, 4421, 4400, 0, 0, 4418,
	0, 4419, 0, 4422, 704, 2779, 0, 0, 0, 1164,
	637, 4425, 4432, 0, 4431, 0, 4433, 4416, 4434, 4429,
	0, 4430, 0, 4439, 0, 4438, 1676, 1677, 0, 0,
	0, 243, 1046, 243, 0, 0, 0, 243, 0, 4446,
	0, 4448, 0, 4443, 0, 4445, 4435, 0, 0, 1707,
	1370, 1333, 243, 0, 243, 4440, 1679, 1345, 0, 243,
	1370, 653, 4442, 0, 243, 1370, 4410, 4411, 0, 0,
	4449, 686, 0, 1676, 1677, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 3642, 0,
	1678, 0, 0, 1973, 1676, 1677, 1707, 0, 2475, 2475,
	2475, 0, 0, 1679, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 4444,
	1164, 1164, 0, 0, 1679, 0, 0, 245, 1166, 0,
	1166, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 2889, 1163, 0, 0, 0, 0, 1678, 3077,
	0, 0, 1970, 1975, 0, 0, 3695, 710, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 3103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 3116, 1162, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4005,
	4006, 0, 0, 0, 0, 0, 0, 3134, 3389, 0,
	0, 0, 2471, 2471, 0, 1706, 1708, 1684, 243, 701,
	0, 243, 0, 4020, 1971, 0, 4022, 4023, 1701, 1702,
	1703, 1704, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 1164, 0, 0, 1164, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 1706, 1708, 0, 0, 1976, 0, 0, 0,
	1977, 69, 0, 1699, 243, 0, 0, 711, 243, 0,
	0, 0, 0, 1706, 1708, 243, 1009, 73, 1676, 1677,
	708, 243, 0, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 243, 1693,
	1694, 1707, 637, 0, 243, 1964, 0, 0, 1679, 0,
	1699, 0, 0, 0, 0, 0, 0, 80, 2111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 700, 0,
	243, 1699, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 1678, 0, 1965, 0, 2471, 2471, 2471, 0,
	0, 3116, 0, 0, 86, 0, 707, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 101, 0,
	713, 826, 0, 87, 98, 0, 0, 0, 0, 2928,
	2929, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1392, 0, 4148, 0, 0, 243, 0, 1333, 243,
	0, 1700, 0, 0, 0, 0, 3873, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 1430, 3885, 0, 0,
	243, 0, 0, 0, 0, 0, 1972, 0, 88, 0,
	0, 243, 243, 0, 243, 0, 243, 0, 243, 3905,
	243, 0, 1684, 0, 0, 0, 0, 0, 1700, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 2214, 0, 0, 2215, 0, 2216, 0, 0, 1700,
	1521, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 1534, 0, 0, 1706, 1708, 0,
	0, 0, 1164, 0, 1164, 0, 0, 0, 0, 668,
	0, 1336, 0, 686, 1235, 0, 0, 0, 0, 0,
	2475, 2475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3047, 3048, 3049, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1560, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 0, 1699, 0, 0, 0, 0,
	0, 2560, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 3411, 0, 0, 0, 0,
	0, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 0, 3427, 0, 0, 0, 0, 0, 0, 0,
	1696, 1692, 4303, 1689, 1687, 1688, 1680, 1681, 1682, 1683,
	1685, 1686, 0, 0, 0, 0, 0, 174, 94, 0,
	97, 0, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475,
	2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475,
	2475, 0, 2475, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 0, 0, 0, 139, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 1700, 637, 0, 0, 215, 0, 0,
	0, 243, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 0, 0, 0, 1676, 1677,
	243, 1370, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 995, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 1707, 0, 0, 0, 0, 3518, 207, 1679, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1370, 0,
	653, 243, 0, 0, 0, 0, 0, 0, 177, 1009,
	0, 0, 1678, 1009, 0, 0, 0, 0, 2471, 2471,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 1321,
	0, 1695, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 4153, 0, 0, 0, 2610, 0, 0, 1687, 1688,
	1680, 1681, 1682, 1683, 1685, 1686, 243, 0, 0, 0,
	0, 0, 4170, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 3388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 1701, 1702, 1703, 1704, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 2719, 0, 0, 0, 0,
	2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
	2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 1370,
	2471, 0, 243, 0, 0, 0, 0, 1706, 1708, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 2762,
	0, 0, 0, 0, 4247, 0, 0, 4248, 0, 2610,
	0, 637, 0, 1693, 1694, 2783, 0, 0, 0, 0,
	0, 243, 0, 0, 243, 3391, 3392, 0, 243, 0,
	243, 0, 0, 0, 0, 1333, 0, 243, 243, 0,
	1370, 0, 0, 0, 0, 1699, 0, 0, 0, 2808,
	826, 0, 2610, 2610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1333, 243,
	0, 0, 1370, 0, 1370, 1370, 243, 0, 0, 1333,
	0, 1333, 0, 1333, 0, 0, 0, 2446, 2447, 2448,
	2449, 2442, 2443, 2444, 2445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	243, 243, 243, 1333, 243, 0, 243, 3454, 3455, 3456,
	3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466,
	3467, 3468, 3469, 3470, 3471, 3472, 0, 3476, 0, 0,
	0, 0, 0, 1705, 0, 3024, 3025, 243, 3042, 3043,
	3044, 0, 0, 0, 0, 243, 0, 1676, 1677, 0,
	0, 0, 0, 1700, 0, 0, 0, 3715, 2422, 2423,
	2424, 2425, 0, 0, 0, 0, 0, 0, 3769, 0,
	1707, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	2434, 2435, 2436, 2437, 2430, 2431, 2432, 2433, 2438, 2439,
	2440, 2441, 3779, 0, 0, 0, 0, 0, 2139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3039,
	0, 1678, 0, 0, 1505, 2153, 0, 0, 0, 0,
	0, 1698, 0, 3024, 3025, 2154, 3042, 3043, 3044, 0,
	1695, 0, 0, 0, 1370, 0, 0, 2162, 0, 2165,
	2166, 2167, 0, 0, 0, 3400, 0, 0, 0, 0,
	0, 0, 0, 2418, 2419, 2420, 2421, 2426, 2427, 2428,
	2429, 0, 0, 0, 995, 0, 0, 0, 995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2917, 0, 0, 1696, 1692, 0, 1689, 1687, 1688,
	1680, 1681, 1682, 1683, 1685, 1686, 0, 3039, 1321, 3030,
	0, 1701, 1702, 1703, 1704, 0, 0, 0, 0, 817,
	0, 1684, 0, 0, 0, 0, 1372, 0, 1378, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 820, 819,
	0, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	0, 1321, 69, 0, 0, 0, 1706, 1708, 0, 0,
	0, 3045, 0, 1235, 0, 0, 0, 0, 73, 3024,
	3025, 0, 3042, 3043, 3044, 243, 2475, 0, 0, 0,
	0, 0, 1693, 1694, 0, 0, 0, 3030, 0, 0,
	243, 3399, 0, 3942, 0, 637, 1506, 0, 0, 0,
	637, 0, 3040, 637, 0, 0, 637, 637, 80, 0,
	0, 0, 637, 1524, 1699, 1529, 0, 0, 0, 0,
	243, 0, 0, 2475, 0, 1538, 0, 1543, 0, 0,
	0, 0, 1370, 0, 3942, 0, 0, 0, 0, 0,
	0, 0, 0, 3039, 0, 86, 0, 0, 0, 3045,
	2272, 0, 0, 0, 1370, 0, 0, 0, 0, 101,
	0, 0, 0, 0, 87, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2610, 2610, 243, 0,
	1348, 0, 0, 2610, 0, 0, 3165, 0, 0, 1602,
	3040, 0, 1608, 0, 2610, 3165, 0, 2610, 3165, 1321,
	0, 3165, 0, 0, 0, 0, 2272, 0, 0, 0,
	0, 0, 0, 0, 243, 243, 1348, 243, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 3030, 0, 0, 0, 1348, 243, 0,
	3041, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 2610, 0, 3229, 2610, 1348, 0, 0,
	2610, 2610, 1348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1676, 1677, 0, 0, 2475, 0, 0,
	0, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 0, 0,
	0, 243, 0, 0, 0, 3045, 1707, 0, 0, 0,
	0, 0, 0, 1679, 0, 243, 3256, 0, 0, 3258,
	2610, 0, 1747, 243, 0, 0, 0, 243, 1760, 1425,
	0, 0, 0, 0, 0, 0, 0, 0, 3041, 0,
	0, 0, 0, 0, 0, 0, 3040, 1678, 0, 0,
	0, 2762, 0, 0, 1333, 0, 243, 1698, 0, 2610,
	0, 637, 0, 0, 2471, 0, 1695, 0, 2610, 0,
	0, 0, 91, 0, 0, 0, 243, 3036, 3037, 3038,
	243, 243, 0, 0, 3035, 3033, 3034, 3026, 3027, 3028,
	3029, 3031, 3032, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 243, 2762, 0, 0,
	2762, 2471, 0, 0, 0, 0, 0, 2910, 174, 94,
	0, 97, 0, 2710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1818, 1818, 1818, 0, 1701, 1702, 1703,
	1704, 0, 0, 0, 0, 213, 0, 1684, 0, 0,
	0, 0, 0, 821, 0, 0, 3369, 0, 139, 1333,
	243, 0, 243, 0, 0, 3036, 3037, 3038, 0, 0,
	0, 0, 3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031,
	3032, 0, 0, 0, 3041, 0, 0, 0, 215, 0,
	0, 0, 1706, 1708, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	995, 0, 0, 0, 141, 0, 1321, 0, 1693, 1694,
	0, 2798, 1505, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 3950, 0, 0, 0, 0, 0, 1042, 207, 0,
	1699, 3432, 2840, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 2471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 3982, 0,
	0, 242, 242, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 3036, 3037, 3038, 0, 0, 0, 726, 3035, 3033,
	3034, 3026, 3027, 3028, 3029, 3031, 3032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	243, 243, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 637, 637, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1370, 1370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1370, 1370,
	1370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4108, 3024, 3025, 0, 3042, 3043, 3044, 0,
	0, 0, 0, 0, 0, 3555, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 3039, 0, 1696,
	1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 0, 0, 1348, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 1321,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 243,
	2702, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2610, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 2694, 2692, 0, 0, 3030, 0, 0,
	2696, 2698, 2688, 2808, 2808, 0, 0, 0, 0, 826,
	826, 2610, 0, 0, 2762, 2762, 0, 0, 826, 2610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3046, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 2247, 0, 2251,
	0, 0, 0, 0, 0, 0, 2265, 0, 0, 3045,
	0, 0, 0, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 0, 2314,
	3040, 2316, 2317, 2318, 2319, 0, 0, 0, 0, 3734,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 0, 2343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2388, 2391, 2394, 2397, 0, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 0, 0, 0, 0,
	0, 243, 0, 2690, 0, 0, 0, 1370, 0, 243,
	0, 0, 0, 0, 2704, 0, 3241, 2467, 0, 2478,
	2480, 2485, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2703, 2695, 2693, 2697, 2699,
	2689, 2691, 2705, 0, 0, 0, 3272, 0, 0, 2701,
	2610, 2610, 2610, 0, 0, 0, 0, 0, 0, 0,
	3279, 3807, 0, 3807, 3555, 1370, 0, 0, 3041, 0,
	0, 0, 0, 2610, 0, 3165, 0, 0, 1370, 1370,
	243, 1348, 2708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1348, 243, 1348, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2610, 0, 2610, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 3330, 3331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2610, 0, 0, 0, 0, 3877,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 1169, 0, 0, 0, 0, 0, 242, 0,
	242, 242, 0, 0, 242, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3555, 0,
	726, 1370, 0, 0, 0, 3036, 3037, 3038, 0, 0,
	0, 0, 3035, 3033, 3034, 3026, 3027, 3028, 3029, 3031,
	3032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 242,
	0, 0, 0, 0, 0, 2709, 0, 0, 0, 0,
	0, 0, 0, 0, 2700, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 2722, 2723, 0, 2725, 0, 0,
	0, 0, 242, 0, 242, 242, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 242, 242, 2610, 0, 3165, 0, 0, 3976, 0,
	0, 0, 0, 1321, 0, 0, 243, 0, 0, 0,
	0, 0, 3555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 1009,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 1009, 0, 0, 0, 0, 0, 1348,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 68, 3976,
	44, 43, 0, 0, 0, 0, 242, 2610, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 142, 0, 4057,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	73, 1370, 0, 0, 0, 0, 0, 2863, 0, 0,
	0, 63, 0, 3555, 3555, 0, 0, 0, 46, 1321,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 243, 0, 0, 0, 0, 0, 0, 45, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3432, 0, 0, 1729, 1730, 0,
	0, 0, 0, 0, 48, 64, 0, 0, 1321, 0,
	0, 0, 49, 0, 0, 3976, 0, 86, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 47,
	0, 101, 0, 0, 0, 3807, 87, 98, 0, 0,
	0, 0, 3555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2911, 2912, 0, 0, 0, 0, 2918, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 2932, 2933, 0,
	0, 3603, 3877, 2358, 0, 0, 0, 0, 0, 0,
	0, 88, 2940, 0, 3555, 0, 243, 3555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3165, 2954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2966, 0, 0, 0, 0,
	0, 0, 0, 1370, 0, 1370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 1165, 0, 0, 0, 242, 1321, 0,
	0, 1321, 0, 0, 4210, 3672, 3673, 3674, 0, 0,
	0, 1370, 242, 1840, 242, 0, 243, 0, 1169, 726,
	0, 1505, 1169, 0, 726, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 2610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 2485, 2485, 2485, 0, 0, 0,
	0, 0, 1321, 0, 91, 0, 0, 3432, 0, 1818,
	0, 0, 0, 0, 0, 1169, 0, 3081, 0, 1321,
	0, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 243, 54,
	174, 94, 0, 97, 0, 0, 0, 52, 0, 1169,
	0, 146, 0, 0, 0, 1169, 0, 0, 53, 1169,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 68, 0, 1169, 3976, 58, 0, 0, 0, 0,
	139, 0, 1676, 1677, 995, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 995, 0,
	0, 0, 0, 73, 0, 1707, 0, 0, 2610, 0,
	215, 0, 1679, 0, 0, 3555, 0, 3555, 242, 0,
	0, 726, 0, 0, 0, 1169, 0, 0, 3183, 0,
	0, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 1678, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 1698, 1370, 0, 214,
	0, 0, 0, 1321, 0, 1695, 0, 0, 0, 0,
	207, 0, 0, 0, 242, 0, 0, 0, 242, 208,
	86, 0, 0, 0, 0, 242, 0, 0, 2808, 0,
	0, 242, 0, 68, 101, 0, 2610, 0, 0, 87,
	98, 177, 0, 0, 3, 0, 242, 0, 242, 69,
	0, 2808, 0, 0, 242, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1702, 1703, 1704,
	242, 0, 0, 0, 0, 0, 1684, 242, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3922, 0,
	3924, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 242, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 101, 1693, 1694, 0,
	0, 87, 98, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 242, 0, 242, 0, 242, 0, 242, 1699,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3969, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	1169, 0, 1169, 0, 0, 0, 0, 91, 0, 0,
	0, 0, 0, 0, 0, 0, 2265, 1169, 0, 0,
	0, 1321, 3386, 3387, 0, 0, 3390, 0, 0, 0,
	3393, 0, 1896, 0, 0, 0, 0, 0, 0, 3397,
	0, 0, 0, 1321, 0, 0, 1169, 0, 3404, 0,
	0, 3081, 0, 174, 94, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 4030, 0, 3416, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	213, 0, 0, 0, 0, 0, 3439, 3440, 821, 3441,
	3442, 3443, 0, 139, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 91,
	0, 3449, 0, 0, 0, 3451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 178, 1321, 3479, 3480, 0, 0,
	0, 0, 214, 0, 0, 174, 94, 0, 97, 0,
	0, 0, 0, 207, 3491, 0, 0, 0, 0, 1321,
	0, 0, 208, 0, 0, 1165, 0, 0, 0, 3500,
	0, 0, 213, 0, 0, 0, 0, 0, 1169, 1169,
	821, 1165, 0, 0, 177, 139, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	242, 1321, 0, 0, 0, 215, 0, 0, 0, 1321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3541, 0, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 3550,
	0, 1505, 1505, 0, 0, 0, 178, 242, 0, 0,
	0, 242, 0, 0, 214, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 207, 1321, 0, 3576, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 242, 0,
	1321, 0, 0, 1169, 0, 1169, 0, 1169, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 1169, 0, 0, 0, 242, 0,
	1321, 0, 0, 0, 1169, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 1169, 1169,
	1169, 1818, 0, 0, 726, 0, 0, 0, 0, 0,
	3665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 101, 1321, 0, 0,
	242, 87, 98, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 242, 0, 0, 1009, 242, 0,
	242, 0, 0, 0, 0, 0, 0, 242, 242, 0,
	0, 3712, 3713, 1321, 0, 0, 88, 3717, 3718, 0,
	0, 0, 3721, 3722, 0, 0, 0, 0, 0, 3726,
	0, 0, 0, 1896, 1896, 1169, 0, 0, 242, 0,
	3730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3735, 242, 0, 242,
	0, 0, 1321, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 1677, 0,
	1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0, 242,
	242, 242, 242, 0, 242, 0, 242, 0, 0, 1712,
	1707, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 1169, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 3808, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 174, 94, 0, 97, 0,
	0, 0, 0, 1009, 1009, 0, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	821, 1701, 1702, 1703, 1704, 139, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 1676, 1677, 1726,
	1709, 1710, 1711, 1719, 1720, 1721, 1706, 1708, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1009, 1722, 0, 1723, 178, 1679, 1169, 0,
	0, 0, 1693, 1694, 214, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 3937, 3938, 3939,
	1714, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	1896, 1678, 0, 0, 1699, 0, 0, 0, 0, 0,
	2265, 1698, 0, 3948, 3949, 0, 1516, 0, 0, 0,
	1695, 0, 0, 0, 0, 1165, 0, 0, 1169, 0,
	0, 3957, 3960, 0, 0, 744, 0, 0, 0, 0,
	1165, 0, 1169, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	747, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 4002,
	0, 1701, 1702, 1703, 1704, 0, 0, 0, 748, 4009,
	765, 1684, 995, 0, 0, 0, 0, 0, 0, 0,
	0, 4017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 749, 0, 0, 242, 0,
	750, 1158, 0, 0, 0, 0, 1716, 0, 0, 1726,
	1169, 1169, 1700, 1169, 0, 0, 1706, 1708, 0, 0,
	773, 0, 0, 0, 0, 1169, 751, 1169, 0, 0,
	0, 0, 0, 0, 242, 242, 0, 242, 1717, 771,
	0, 1169, 1693, 1694, 1840, 238, 238, 633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	1714, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 0, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4124, 726, 0, 4127, 0, 0,
	0, 0, 0, 242, 1715, 0, 0, 242, 0, 1690,
	1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 0, 0, 0, 2975,
	0, 0, 0, 2976, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 774, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 242, 0, 995, 995,
	242, 242, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 754, 0, 0, 0, 0, 0, 0, 2265, 0,
	0, 0, 756, 0, 0, 0, 0, 3960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 1715, 758, 4271, 4271, 4271, 1690,
	1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 0, 0, 0, 764,
	0, 0, 0, 4292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 1169, 1169, 760, 778, 0, 777,
	0, 0, 0, 761, 0, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 0, 770, 0, 0, 0, 0, 1169, 779, 0,
	776, 4271, 0, 0, 0, 0, 713, 0, 0, 1169,
	0, 0, 1169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 1169, 1055, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 1165, 0, 0, 1896, 0, 0, 0, 244, 244,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 0, 0, 0, 0, 0, 788,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	789, 4271, 4404, 0, 0, 0, 0, 0, 0, 4408,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 244,
	0, 790, 0, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	0, 809, 1169, 0, 0, 1840, 1676, 1677, 0, 1709,
	1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 0, 1169, 0, 0, 1712, 1707,
	0, 1169, 0, 1169, 0, 0, 1679, 1169, 0, 0,
	0, 0, 0, 792, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1169, 0, 0, 0, 0,
	0, 0, 0, 793, 0, 242, 794, 0, 0, 1169,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 712, 0, 0, 242, 1169, 0, 0, 0, 1695,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 808, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 0, 0, 0, 1169, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1232, 0, 1165, 0, 0, 0, 1340, 0,
	1169, 0, 1031, 103, 0, 0, 0, 0, 0, 0,
	1701, 1702, 1703, 1704, 805, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 1716, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 1706, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 796, 1723, 0, 0, 0, 0, 0,
	103, 1693, 1694, 0, 1896, 0, 1481, 0, 1481, 1481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	815, 1169, 797, 0, 0, 1522, 1523, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1896, 1896,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 798, 0, 0, 0, 813, 814, 811, 0, 0,
	0, 0, 0, 806, 0, 1724, 799, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 1165, 0, 1713, 0, 0, 0, 0, 0, 1165,
	0, 1896, 1896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 800, 807, 0, 0, 0, 0,
	1629, 0, 0, 0, 801, 0, 0, 0, 1152, 0,
	0, 0, 1896, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 1840, 0, 0, 713, 0, 1169,
	1169, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	242, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 242, 0, 0, 0, 0,
	0, 0, 1169, 0, 0, 0, 0, 1717, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 1169, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1690, 1691,
	1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 0, 0, 0, 0, 2354, 0,
	1169, 0, 2355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 244, 1241, 244, 244, 0,
	1241, 244, 244, 0, 1241, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 244, 1169, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 1340, 0,
	0, 0, 0, 1169, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 1840, 0, 1169, 1169, 1169, 0, 0, 0,
	0, 0, 0, 1241, 0, 244, 244, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	242, 244, 244, 0, 0, 244, 0, 1241, 0, 0,
	0, 0, 1169, 1241, 0, 0, 0, 1241, 244, 244,
	0, 0, 0, 1896, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 242, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 1169, 244,
	0, 0, 1169, 0, 1169, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 2075, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1169, 0, 2087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 103,
	2098, 103, 2098, 0, 1840, 0, 242, 1840, 2105, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 1169, 1169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1169, 0, 103, 0, 0,
	1169, 990, 103, 103, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 103, 0, 0, 0,
	2075, 0, 0, 2158, 0, 0, 103, 1169, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1169, 1169, 1169,
	0, 0, 242, 0, 2178, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 0, 2190, 0, 2192, 0,
	2194, 0, 2196, 0, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 1169,
	0, 0, 0, 0, 0, 1241, 0, 0, 103, 244,
	244, 244, 0, 0, 0, 0, 244, 0, 0, 0,
	1896, 244, 2219, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	1169, 0, 1169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 0, 1840, 0, 0,
	0, 0, 1169, 0, 0, 1741, 0, 0, 0, 0,
	0, 0, 0, 1169, 1169, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1169, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1169, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1241, 1241, 244, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2541,
	0, 244, 0, 0, 0, 244, 1838, 0, 1841, 0,
	103, 0, 244, 0, 0, 0, 0, 0, 244, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 244, 0, 244, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2087, 0, 244, 0, 0,
	0, 0, 0, 1169, 244, 0, 1169, 0, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 1169, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 1241, 0, 1241, 0, 1241, 0, 1169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 1241, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 244, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 1241, 1241, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 1340, 0, 0, 0, 0, 0, 244, 244,
	0, 244, 0, 244, 0, 244, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 2075, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2785, 0, 0, 1481, 0,
	0, 0, 1481, 1241, 1481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2848, 0, 2851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2875, 1340, 2877, 1340, 0, 2880, 990,
	0, 990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 2908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 970, 0, 0, 970, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 2332,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 244, 1241, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 1241, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 244, 0,
	0, 244, 0, 0, 0, 244, 0, 244, 0, 0,
	0, 0, 0, 0, 244, 244, 0, 0, 1241, 1241,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 103,
	1238, 0, 0, 1241, 1238, 1241, 0, 0, 1358, 0,
	0, 0, 3156, 0, 0, 244, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 244, 0, 0, 0,
	0, 0, 1358, 244, 0, 0, 0, 0, 3198, 3200,
	0, 2087, 0, 0, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 244, 244, 244,
	0, 244, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 244, 0, 0, 1358, 0, 0,
	0, 1358, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3269, 0, 0,
	0, 3273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 103, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 0, 0, 0, 1340, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	3334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3372, 0, 1340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3384,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 1241, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 244, 244, 0, 244, 0, 0, 0, 1358, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1241, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 244, 1241,
	0, 1241, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 1241, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 244, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	1358, 1358, 0, 0, 0, 1241, 1241, 0, 0, 2087,
	1238, 0, 0, 244, 0, 0, 0, 0, 0, 3632,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 2087, 0, 0, 0, 3647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 244, 1241, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 103, 0, 0, 103, 0, 0, 0,
	1239, 0, 244, 0, 1239, 0, 0, 0, 1359, 0,
	0, 0, 0, 3697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 103,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1241, 1358, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	1358, 1358, 1358, 0, 0, 0, 0, 0, 0, 0,
	882, 1359, 925, 0, 0, 0, 0, 1359, 0, 0,
	0, 1359, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 0, 990, 1359, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 904, 888, 887, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 0, 0, 892, 1359, 0, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 0, 0,
	901, 902, 0, 0, 0, 0, 0, 0, 0, 918,
	1241, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 3824, 926, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 895, 0, 0, 0, 0, 0, 0, 0,
	0, 924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 3893, 0, 897, 1238, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	898, 899, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 906,
	905, 0, 244, 0, 0, 0, 0, 900, 0, 0,
	0, 915, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 1238, 0, 0, 244, 0, 0, 930,
	244, 0, 0, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	927, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 1241, 1241, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 1152, 1152, 0, 0, 0,
	3983, 0, 0, 0, 0, 0, 244, 0, 1241, 0,
	0, 893, 0, 0, 932, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 891, 0, 0, 0, 922,
	923, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	1238, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 920,
	0, 0, 1239, 0, 0, 0, 931, 916, 0, 909,
	907, 0, 912, 0, 0, 0, 0, 0, 913, 0,
	0, 884, 0, 928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 914, 0, 0, 0, 0,
	911, 0, 0, 0, 4098, 1340, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 917,
	1241, 0, 1241, 0, 0, 0, 0, 0, 896, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 919, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1359, 1359, 0, 0, 0, 0, 0, 244, 0, 1152,
	1239, 0, 1358, 1358, 0, 1358, 0, 0, 1241, 0,
	244, 0, 244, 0, 0, 0, 1241, 1358, 0, 1358,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	4172, 0, 0, 0, 0, 1241, 1241, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 1241, 244, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 1241, 1241, 0, 0,
	4218, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 0, 1359, 0, 1359,
	0, 0, 0, 0, 0, 0, 4252, 1241, 0, 0,
	0, 0, 0, 0, 0, 1359, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 1152, 0, 1359, 0,
	1359, 1359, 1359, 0, 1152, 0, 0, 0, 1241, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 4308, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 1241, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 103, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 244, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 0, 0, 0, 1238,
	0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 1238, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1239, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 244, 0, 1695, 0, 0, 1241, 1239,
	0, 0, 0, 0, 0, 1358, 0, 0, 1241, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1358, 0, 1701, 1702, 1703, 1704,
	0, 0, 0, 244, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 1358, 0, 1358, 0, 0, 0, 1238,
	1239, 0, 0, 0, 0, 0, 718, 0, 0, 244,
	2332, 1716, 0, 0, 1726, 0, 0, 1358, 0, 0,
	0, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 0, 0, 0, 1693, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 244, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 1359, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 1238, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 1359, 1359, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 1359, 0, 1359,
	0, 0, 1679, 0, 0, 0, 0, 1705, 0, 0,
	1725, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 1238, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	1238, 0, 0, 1717, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1702, 1703, 1704,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	0, 1716, 0, 0, 1726, 0, 0, 0, 3740, 0,
	0, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 1238, 0, 0, 1693, 1694, 0,
	0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 0, 0, 1699,
	0, 0, 1679, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 0, 0, 0,
	0, 1724, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1702, 1703, 1704,
	0, 0, 0, 0, 0, 0, 1684, 1700, 0, 1239,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 1726, 1239, 1358, 1358, 1358, 0,
	0, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 0, 0, 0, 1693, 1694, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 1238, 1359, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692,
	1359, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	1239, 1724, 0, 0, 0, 0, 0, 0, 3402, 1359,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 1359, 0, 1359, 0, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 0, 1238, 0, 1238, 1705, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 1239, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 1715,
	0, 0, 1358, 0, 1690, 1691, 1697, 1718, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	0, 0, 0, 0, 0, 0, 1676, 1677, 2978, 1709,
	1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0, 1358,
	1358, 1358, 0, 0, 0, 0, 0, 0, 1712, 1707,
	0, 1238, 0, 1239, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1702, 1703, 1704, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 1716, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 1706, 1708, 0, 0, 0,
	0, 0, 0, 1238, 0, 0, 1358, 0, 0, 0,
	0, 0, 1722, 0, 1723, 0, 0, 0, 0, 0,
	0, 1693, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 1707, 1724, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 1359, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 1358, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 1359, 1359, 1359, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 1676, 1677, 1717, 1709, 1710,
	1711, 1719, 1720, 1721, 0, 1701, 1702, 1703, 1704, 0,
	0, 0, 1239, 0, 0, 1684, 0, 1712, 1707, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 1725, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 1726, 0, 0, 0, 0, 0, 1678,
	1706, 1708, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 1722, 1695, 1723,
	0, 0, 0, 0, 0, 0, 1693, 1694, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1690, 1691,
	1697, 1718, 1696, 1692, 1714, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 0, 0, 0, 0, 1699, 0,
	0, 0, 2977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	1702, 1703, 1704, 0, 1239, 0, 1239, 0, 0, 1684,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 1706, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 1723, 0, 0, 0, 0, 0, 0,
	1693, 1694, 1239, 0, 0, 0, 1705, 0, 0, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 1714, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 1359,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 1359, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	1359, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	1705, 1239, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 0,
	1700, 0, 0, 0, 0, 0, 0, 2974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1239, 0, 1359, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 1690, 1691, 1697,
	1718, 1696, 1692, 0, 1689, 1687, 1688, 1680, 1681, 1682,
	1683, 1685, 1686, 1239, 0, 0, 1359, 0, 0, 0,
	0, 2973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1359, 1359, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 1242, 259, 260, 1243, 1244, 1245, 1359,
	1246, 579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 1251, 584, 270, 271, 272, 273, 274, 275, 1252,
	1253, 0, 276, 585, 586, 587, 1254, 277, 278, 588,
	1255, 1322, 1256, 279, 280, 281, 282, 283, 284, 285,
	0, 1257, 287, 288, 289, 286, 290, 1258, 291, 0,
	292, 293, 294, 295, 296, 297, 1259, 298, 299, 300,
	1110, 301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266,
	303, 304, 305, 306, 0, 307, 589, 590, 1267, 311,
	308, 309, 1268, 312, 310, 1269, 313, 314, 315, 1270,
	1271, 316, 317, 318, 1272, 319, 320, 1273, 321, 322,
	323, 1274, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 1275, 249, 1276,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 1277, 341, 1278, 1279, 1111, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 1280,
	352, 597, 1281, 598, 353, 1282, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 1113, 359, 360, 1283, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 1284, 1112, 369, 602, 603, 1285, 604, 1286,
	371, 372, 1114, 605, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 1287,
	383, 385, 384, 1288, 386, 606, 1117, 387, 388, 1118,
	1289, 389, 0, 0, 0, 390, 391, 1290, 1291, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1292, 251, 1121, 432, 433, 1293, 607,
	434, 608, 436, 437, 1294, 0, 438, 0, 1295, 1296,
	440, 441, 442, 1297, 1298, 443, 444, 609, 1122, 445,
	1123, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 1299, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 1300,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 1301, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	1302, 488, 489, 490, 1124, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 1303, 511, 512, 510, 513, 514, 515,
	1304, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 1305, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 1306, 538, 539, 0, 537, 1307, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 1308, 548, 620, 621,
	622, 623, 1309, 557, 1310, 549, 550, 551, 624, 552,
	625, 1311, 553, 554, 555, 556, 0, 558, 559, 1312,
	1313, 560, 561, 562, 564, 565, 563, 566, 1314, 567,
	1315, 0, 568, 569, 570, 626, 627, 628, 1316, 572,
	571, 573, 629, 1317, 1318, 1319, 1320, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1236, 0, 0,
	0, 0, 0, 0, 0, 2519, 0, 0, 0, 0,
	0, 0, 0, 2520, 252, 254, 253, 255, 256, 257,
	258, 1242, 259, 260, 1243, 1244, 1245, 0, 1246, 579,
	1247, 1248, 1249, 1250, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 1251,
	584, 270, 271, 272, 273, 274, 275, 1252, 1253, 0,
	276, 585, 586, 587, 1254, 277, 278, 588, 1255, 1322,
	1256, 279, 280, 281, 282, 283, 284, 285, 0, 1257,
	287, 288, 289, 286, 290, 1258, 291, 0, 292, 293,
	294, 295, 296, 297, 1259, 298, 299, 300, 1110, 301,
	302, 1260, 1261, 1263, 1262, 1264, 1265, 1266, 303, 304,
	305, 306, 0, 307, 589, 590, 1267, 311, 308, 309,
	1268, 312, 310, 1269, 313, 314, 315, 1270, 1271, 316,
	317, 318, 1272, 319, 320, 1273, 321, 322, 323, 1274,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 1275, 249, 1276, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	1277, 341, 1278, 1279, 1111, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 1280, 352, 597,
	1281, 598, 353, 1282, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 1113, 359, 360, 1283, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	1284, 1112, 369, 602, 603, 1285, 604, 1286, 371, 372,
	1114, 605, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 1287, 383, 385,
	384, 1288, 386, 606, 1117, 387, 388, 1118, 1289, 389,
	0, 0, 0, 390, 391, 1290, 1291, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1292, 251, 1121, 432, 433, 1293, 607, 434, 608,
	436, 437, 1294, 0, 438, 0, 1295, 1296, 440, 441,
	442, 1297, 1298, 443, 444, 609, 1122, 445, 1123, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 1299, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 1300, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 1301, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 1302, 488,
	489, 490, 1124, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 1303, 511, 512, 510, 513, 514, 515, 1304, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 1305, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 1306,
	538, 539, 0, 537, 1307, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 1308, 548, 620, 621, 622, 623,
	1309, 557, 1310, 549, 550, 551, 624, 552, 625, 1311,
	553, 554, 555, 556, 0, 558, 559, 1312, 1313, 560,
	561, 562, 564, 565, 563, 566, 1314, 567, 1315, 0,
	568, 569, 570, 626, 627, 628, 1316, 572, 571, 573,
	629, 1317, 1318, 1319, 1320, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 0, 0, 0, 0, 3410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3412,
	252, 254, 253, 255, 256, 257, 258, 1242, 259, 260,
	1243, 1244, 1245, 0, 1246, 579, 1247, 1248, 1249, 1250,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 1251, 584, 270, 271, 272,
	273, 274, 275, 1252, 1253, 0, 276, 585, 586, 587,
	1254, 277, 278, 588, 1255, 1322, 1256, 279, 280, 281,
	282, 283, 284, 285, 0, 1257, 287, 288, 289, 286,
	290, 1258, 291, 0, 292, 293, 294, 295, 296, 297,
	1259, 298, 299, 300, 1110, 301, 302, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 303, 304, 305, 306, 0, 307,
	589, 590, 1267, 311, 308, 309, 1268, 312, 310, 1269,
	313, 314, 315, 1270, 1271, 316, 317, 318, 1272, 319,
	320, 1273, 321, 322, 323, 1274, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 1275, 249, 1276, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 1277, 341, 1278, 1279,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 1280, 352, 597, 1281, 598, 353, 1282,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 1283, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 1284, 1112, 369, 602,
	603, 1285, 604, 1286, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 606,
	1117, 387, 388, 1118, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1292, 251, 1121,
	432, 433, 1293, 607, 434, 608, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 1301, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 1302, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 1303, 511, 512,
	510, 513, 514, 515, 1304, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 1305, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	1308, 548, 620, 621, 622, 623, 1309, 557, 1310, 549,
	550, 551, 624, 552, 625, 1311, 553, 554, 555, 556,
	0, 558, 559, 1312, 1313, 560, 561, 562, 564, 565,
	563, 566, 1314, 567, 1315, 0, 568, 569, 570, 626,
	627, 628, 1316, 572, 571, 573, 629, 1317, 1318, 1319,
	1320, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3768,
	252, 254, 253, 255, 256, 257, 258, 1242, 259, 260,
	1243, 1244, 1245, 0, 1246, 579, 1247, 1248, 1249, 1250,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 1251, 584, 270, 271, 272,
	273, 274, 275, 1252, 1253, 0, 276, 585, 586, 587,
	1254, 277, 278, 588, 1255, 1322, 1256, 279, 280, 281,
	282, 283, 284, 285, 0, 1257, 287, 288, 289, 286,
	290, 1258, 291, 0, 292, 293, 294, 295, 296, 297,
	1259, 298, 299, 300, 1110, 301, 302, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 303, 304, 305, 306, 0, 307,
	589, 590, 1267, 311, 308, 309, 1268, 312, 310, 1269,
	313, 314, 315, 1270, 1271, 316, 317, 318, 1272, 319,
	320, 1273, 321, 322, 323, 1274, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 1275, 249, 1276, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 1277, 341, 1278, 1279,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 1280, 352, 597, 1281, 598, 353, 1282,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 1283, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 1284, 1112, 369, 602,
	603, 1285, 604, 1286, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 606,
	1117, 387, 388, 1118, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1292, 251, 1121,
	432, 433, 1293, 607, 434, 608, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 1301, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 1302, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 1303, 511, 512,
	510, 513, 514, 515, 1304, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 1305, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	1308, 548, 620, 621, 622, 623, 1309, 557, 1310, 549,
	550, 551, 624, 552, 625, 1311, 553, 554, 555, 556,
	0, 558, 559, 1312, 1313, 560, 561, 562, 564, 565,
	563, 566, 1314, 567, 1315, 0, 568, 569, 570, 626,
	627, 628, 1316, 572, 571, 573, 629, 1317, 1318, 1319,
	1320, 574, 575, 630, 576, 577, 578, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3943, 252, 254, 253, 255, 256,
	257, 258, 1242, 259, 260, 1243, 1244, 1245, 0, 1246,
	579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	1251, 584, 270, 271, 272, 273, 274, 275, 1252, 1253,
	0, 276, 585, 586, 587, 1254, 277, 278, 588, 1255,
	1322, 1256, 279, 280, 281, 282, 283, 284, 285, 0,
	1257, 287, 288, 289, 286, 290, 1258, 291, 0, 292,
	293, 294, 295, 296, 297, 1259, 298, 299, 300, 1110,
	301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266, 303,
	304, 305, 306, 0, 307, 589, 590, 1267, 311, 308,
	309, 1268, 312, 310, 1269, 313, 314, 315, 1270, 1271,
	316, 317, 318, 1272, 319, 320, 1273, 321, 322, 323,
	1274, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 1275, 249, 1276, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 1277, 341, 1278, 1279, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 1280, 352,
	597, 1281, 598, 353, 1282, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 1283, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 1284, 1112, 369, 602, 603, 1285, 604, 1286, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1287, 383,
	385, 384, 1288, 386, 606, 1117, 387, 388, 1118, 1289,
	389, 0, 0, 0, 390, 391, 1290, 1291, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1292, 251, 1121, 432, 433, 1293, 607, 434,
	608, 436, 437, 1294, 0, 438, 0, 1295, 1296, 440,
	441, 442, 1297, 1298, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 1299, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 1300, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 1301, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 1302,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 1303, 511, 512, 510, 513, 514, 515, 1304,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 1305, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	1306, 538, 539, 0, 537, 1307, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 1308, 548, 620, 621, 622,
	623, 1309, 557, 1310, 549, 550, 551, 624, 552, 625,
	1311, 553, 554, 555, 556, 0, 558, 559, 1312, 1313,
	560, 561, 562, 564, 565, 563, 566, 1314, 567, 1315,
	0, 568, 569, 570, 626, 627, 628, 1316, 572, 571,
	573, 629, 1317, 1318, 1319, 1320, 574, 575, 630, 576,
	577, 578, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3832,
	252, 254, 253, 255, 256, 257, 258, 1242, 259, 260,
	1243, 1244, 1245, 0, 1246, 579, 1247, 1248, 1249, 1250,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 1251, 584, 270, 271, 272,
	273, 274, 275, 1252, 1253, 0, 276, 585, 586, 587,
	1254, 277, 278, 588, 1255, 1322, 1256, 279, 280, 281,
	282, 283, 284, 285, 0, 1257, 287, 288, 289, 286,
	290, 1258, 291, 0, 292, 293, 294, 295, 296, 297,
	1259, 298, 299, 300, 1110, 301, 302, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 303, 304, 305, 306, 0, 307,
	589, 590, 1267, 311, 308, 309, 1268, 312, 310, 1269,
	313, 314, 315, 1270, 1271, 316, 317, 318, 1272, 319,
	320, 1273, 321, 322, 323, 1274, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 1275, 249, 1276, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 1277, 341, 1278, 1279,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 1280, 352, 597, 1281, 598, 353, 1282,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 1283, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 1284, 1112, 369, 602,
	603, 1285, 604, 1286, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 606,
	1117, 387, 388, 1118, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1292, 251, 1121,
	432, 433, 1293, 607, 434, 608, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 1301, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 1302, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 1303, 511, 512,
	510, 513, 514, 515, 1304, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 1305, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	1308, 548, 620, 621, 622, 623, 1309, 557, 1310, 549,
	550, 551, 624, 552, 625, 1311, 553, 554, 555, 556,
	0, 558, 559, 1312, 1313, 560, 561, 562, 564, 565,
	563, 566, 1314, 567, 1315, 0, 568, 569, 570, 626,
	627, 628, 1316, 572, 571, 573, 629, 1317, 1318, 1319,
	1320, 574, 575, 630, 576, 577, 578, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3698, 252, 254, 253, 255, 256,
	257, 258, 1242, 259, 260, 1243, 1244, 1245, 0, 1246,
	579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	1251, 584, 270, 271, 272, 273, 274, 275, 1252, 1253,
	0, 276, 585, 586, 587, 1254, 277, 278, 588, 1255,
	1322, 1256, 279, 280, 281, 282, 283, 284, 285, 0,
	1257, 287, 288, 289, 286, 290, 1258, 291, 0, 292,
	293, 294, 295, 296, 297, 1259, 298, 299, 300, 1110,
	301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266, 303,
	304, 305, 306, 0, 307, 589, 590, 1267, 311, 308,
	309, 1268, 312, 310, 1269, 313, 314, 315, 1270, 1271,
	316, 317, 318, 1272, 319, 320, 1273, 321, 322, 323,
	1274, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 1275, 249, 1276, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 1277, 341, 1278, 1279, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 1280, 352,
	597, 1281, 598, 353, 1282, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 1283, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 1284, 1112, 369, 602, 603, 1285, 604, 1286, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1287, 383,
	385, 384, 1288, 386, 606, 1117, 387, 388, 1118, 1289,
	389, 0, 0, 0, 390, 391, 1290, 1291, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1292, 251, 1121, 432, 433, 1293, 607, 434,
	608, 436, 437, 1294, 0, 438, 0, 1295, 1296, 440,
	441, 442, 1297, 1298, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 1299, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 1300, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 1301, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 1302,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 1303, 511, 512, 510, 513, 514, 515, 1304,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 1305, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	1306, 538, 539, 0, 537, 1307, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 1308, 548, 620, 621, 622,
	623, 1309, 557, 1310, 549, 550, 551, 624, 552, 625,
	1311, 553, 554, 555, 556, 0, 558, 559, 1312, 1313,
	560, 561, 562, 564, 565, 563, 566, 1314, 567, 1315,
	0, 568, 569, 570, 626, 627, 628, 1316, 572, 571,
	573, 629, 1317, 1318, 1319, 1320, 574, 575, 630, 576,
	577, 578, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3428,
	252, 254, 253, 255, 256, 257, 258, 1242, 259, 260,
	1243, 1244, 1245, 0, 1246, 579, 1247, 1248, 1249, 1250,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 1251, 584, 270, 271, 272,
	273, 274, 275, 1252, 1253, 0, 276, 585, 586, 587,
	1254, 277, 278, 588, 1255, 1322, 1256, 279, 280, 281,
	282, 283, 284, 285, 0, 1257, 287, 288, 289, 286,
	290, 1258, 291, 0, 292, 293, 294, 295, 296, 297,
	1259, 298, 299, 300, 1110, 301, 302, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 303, 304, 305, 306, 0, 307,
	589, 590, 1267, 311, 308, 309, 1268, 312, 310, 1269,
	313, 314, 315, 1270, 1271, 316, 317, 318, 1272, 319,
	320, 1273, 321, 322, 323, 1274, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 1275, 249, 1276, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 1277, 341, 1278, 1279,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 1280, 352, 597, 1281, 598, 353, 1282,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 1283, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 1284, 1112, 369, 602,
	603, 1285, 604, 1286, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 606,
	1117, 387, 388, 1118, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1292, 251, 1121,
	432, 433, 1293, 607, 434, 608, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 1301, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 1302, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 1303, 511, 512,
	510, 513, 514, 515, 1304, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 1305, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	1308, 548, 620, 621, 622, 623, 1309, 557, 1310, 549,
	550, 551, 624, 552, 625, 1311, 553, 554, 555, 556,
	0, 558, 559, 1312, 1313, 560, 561, 562, 564, 565,
	563, 566, 1314, 567, 1315, 0, 568, 569, 570, 626,
	627, 628, 1316, 572, 571, 573, 629, 1317, 1318, 1319,
	1320, 574, 575, 630, 576, 577, 578, 0, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3254, 252, 254, 253, 255, 256,
	257, 258, 1242, 259, 260, 1243, 1244, 1245, 0, 1246,
	579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	1251, 584, 270, 271, 272, 273, 274, 275, 1252, 1253,
	0, 276, 585, 586, 587, 1254, 277, 278, 588, 1255,
	1322, 1256, 279, 280, 281, 282, 283, 284, 285, 0,
	1257, 287, 288, 289, 286, 290, 1258, 291, 0, 292,
	293, 294, 295, 296, 297, 1259, 298, 299, 300, 1110,
	301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266, 303,
	304, 305, 306, 0, 307, 589, 590, 1267, 311, 308,
	309, 1268, 312, 310, 1269, 313, 314, 315, 1270, 1271,
	316, 317, 318, 1272, 319, 320, 1273, 321, 322, 323,
	1274, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 1275, 249, 1276, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 1277, 341, 1278, 1279, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 1280, 352,
	597, 1281, 598, 353, 1282, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 1283, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 1284, 1112, 369, 602, 603, 1285, 604, 1286, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1287, 383,
	385, 384, 1288, 386, 606, 1117, 387, 388, 1118, 1289,
	389, 0, 0, 0, 390, 391, 1290, 1291, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1292, 251, 1121, 432, 433, 1293, 607, 434,
	608, 436, 437, 1294, 0, 438, 0, 1295, 1296, 440,
	441, 442, 1297, 1298, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 1299, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 1300, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 1301, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 1302,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 1303, 511, 512, 510, 513, 514, 515, 1304,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 1305, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	1306, 538, 539, 0, 537, 1307, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 1308, 548, 620, 621, 622,
	623, 1309, 557, 1310, 549, 550, 551, 624, 552, 625,
	1311, 553, 554, 555, 556, 0, 558, 559, 1312, 1313,
	560, 561, 562, 564, 565, 563, 566, 1314, 567, 1315,
	0, 568, 569, 570, 626, 627, 628, 1316, 572, 571,
	573, 629, 1317, 1318, 1319, 1320, 574, 575, 630, 576,
	577, 578, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2378,
	252, 254, 253, 255, 256, 257, 258, 1242, 259, 260,
	1243, 1244, 1245, 0, 1246, 579, 1247, 1248, 1249, 1250,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 1251, 584, 270, 271, 272,
	273, 274, 275, 1252, 1253, 0, 276, 585, 586, 587,
	1254, 277, 278, 588, 1255, 1322, 1256, 279, 280, 281,
	282, 283, 284, 285, 0, 1257, 287, 288, 289, 286,
	290, 1258, 291, 0, 292, 293, 294, 295, 296, 297,
	1259, 298, 299, 300, 1110, 301, 302, 1260, 1261, 1263,
	1262, 1264, 1265, 1266, 303, 304, 305, 306, 0, 307,
	589, 590, 1267, 311, 308, 309, 1268, 312, 310, 1269,
	313, 314, 315, 1270, 1271, 316, 317, 318, 1272, 319,
	320, 1273, 321, 322, 323, 1274, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 1275, 249, 1276, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 1277, 341, 1278, 1279,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 1280, 352, 597, 1281, 598, 353, 1282,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 1283, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 1284, 1112, 369, 602,
	603, 1285, 604, 1286, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1287, 383, 385, 384, 1288, 386, 606,
	1117, 387, 388, 1118, 1289, 389, 0, 0, 0, 390,
	391, 1290, 1291, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1292, 251, 1121,
	432, 433, 1293, 607, 434, 608, 436, 437, 1294, 0,
	438, 0, 1295, 1296, 440, 441, 442, 1297, 1298, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 1299, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 1300, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 1301, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 1302, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 1303, 511, 512,
	510, 513, 514, 515, 1304, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 1305, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 1306, 538, 539, 0, 537,
	1307, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	1308, 548, 620, 621, 622, 623, 1309, 557, 1310, 549,
	550, 551, 624, 552, 625, 1311, 553, 554, 555, 556,
	0, 558, 559, 1312, 1313, 560, 561, 562, 564, 565,
	563, 566, 1314, 567, 1315, 0, 568, 569, 570, 626,
	627, 628, 1316, 572, 571, 573, 629, 1317, 1318, 1319,
	1320, 574, 575, 630, 576, 577, 578, 1334, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 252, 254, 253, 255,
	256, 257, 258, 1242, 259, 260, 1243, 1244, 1245, 0,
	1246, 579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 1251, 584, 270, 271, 272, 273, 274, 275, 1252,
	1253, 0, 276, 585, 586, 587, 1254, 277, 278, 588,
	1255, 1322, 1256, 279, 280, 281, 282, 283, 284, 285,
	0, 1257, 287, 288, 289, 286, 290, 1258, 291, 0,
	292, 293, 294, 295, 296, 297, 1259, 298, 299, 300,
	1110, 301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266,
	303, 304, 305, 306, 0, 307, 589, 590, 1267, 311,
	308, 309, 1268, 312, 310, 1269, 313, 314, 315, 1270,
	1271, 316, 317, 318, 1272, 319, 320, 1273, 321, 322,
	323, 1274, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 1275, 249, 1276,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 1277, 341, 1278, 1279, 1111, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 1280,
	352, 597, 1281, 598, 353, 1282, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 1113, 359, 360, 1283, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 1284, 1112, 369, 602, 603, 1285, 604, 1286,
	371, 372, 1114, 605, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 1287,
	383, 385, 384, 1288, 386, 606, 1117, 387, 388, 1118,
	1289, 389, 0, 0, 0, 390, 391, 1290, 1291, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1292, 251, 1121, 432, 433, 1293, 607,
	434, 608, 436, 437, 1294, 0, 438, 0, 1295, 1296,
	440, 441, 442, 1297, 1298, 443, 444, 609, 1122, 445,
	1123, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 1299, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 1300,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 1301, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	1302, 488, 489, 490, 1124, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 1303, 511, 512, 510, 513, 514, 515,
	1304, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 1305, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 1306, 538, 539, 0, 537, 1307, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 1308, 548, 620, 621,
	622, 623, 1309, 557, 1310, 549, 550, 551, 624, 552,
	625, 1311, 553, 554, 555, 556, 0, 558, 559, 1312,
	1313, 560, 561, 562, 564, 565, 563, 566, 1314, 567,
	1315, 0, 568, 569, 570, 626, 627, 628, 1316, 572,
	571, 573, 629, 1317, 1318, 1319, 1320, 574, 575, 630,
	576, 577, 578, 1233, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 1242,
	259, 260, 1243, 1244, 1245, 0, 1246, 579, 1247, 1248,
	1249, 1250, 261, 262, 1109, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 1251, 584, 270,
	271, 272, 273, 274, 275, 1252, 1253, 0, 276, 585,
	586, 587, 1254, 277, 278, 588, 1255, 1322, 1256, 279,
	280, 281, 282, 283, 284, 285, 0, 1257, 287, 288,
	289, 286, 290, 1258, 291, 0, 292, 293, 294, 295,
	296, 297, 1259, 298, 299, 300, 1110, 301, 302, 1260,
	1261, 1263, 1262, 1264, 1265, 1266, 303, 304, 305, 306,
	0, 307, 589, 590, 1267, 311, 308, 309, 1268, 312,
	310, 1269, 313, 314, 315, 1270, 1271, 316, 317, 318,
	1272, 319, 320, 1273, 321, 322, 323, 1274, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 1275, 249, 1276, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 1277, 341,
	1278, 1279, 1111, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 1280, 352, 597, 1281, 598,
	353, 1282, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 1113, 359, 360, 1283, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 1284, 1112,
	369, 602, 603, 1285, 604, 1286, 371, 372, 1114, 605,
	1115, 373, 374, 375, 1116, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 1287, 383, 385, 384, 1288,
	386, 606, 1117, 387, 388, 1118, 1289, 389, 0, 0,
	0, 390, 391, 1290, 1291, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1119, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1120, 422, 1292,
	251, 1121, 432, 433, 1293, 607, 434, 608, 436, 437,
	1294, 0, 438, 0, 1295, 1296, 440, 441, 442, 1297,
	1298, 443, 444, 609, 1122, 445, 1123, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 1299,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 1300, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 1301,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 1302, 488, 489, 490,
	1124, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 1303,
	511, 512, 510, 513, 514, 515, 1304, 516, 517, 500,
	501, 518, 519, 1125, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 1305, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 1306, 538, 539,
	0, 537, 1307, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 1308, 548, 620, 621, 622, 623, 1309, 557,
	1310, 549, 550, 551, 624, 552, 625, 1311, 553, 554,
	555, 556, 0, 558, 559, 1312, 1313, 560, 561, 562,
	564, 565, 563, 566, 1314, 567, 1315, 0, 568, 569,
	570, 626, 627, 628, 1316, 572, 571, 573, 629, 1317,
	1318, 1319, 1320, 574, 575, 630, 576, 577, 578, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 1242, 259, 260, 1243, 1244, 1245, 0,
	1246, 579, 1247, 1248, 1249, 1250, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 1251, 584, 270, 271, 272, 273, 274, 275, 1252,
	1253, 0, 276, 585, 586, 587, 1254, 277, 278, 588,
	1255, 1322, 1256, 279, 280, 281, 282, 283, 284, 285,
	0, 1257, 287, 288, 289, 286, 290, 1258, 291, 0,
	292, 293, 294, 295, 296, 297, 1259, 298, 299, 300,
	1110, 301, 302, 1260, 1261, 1263, 1262, 1264, 1265, 1266,
	303, 304, 305, 306, 0, 307, 589, 590, 1267, 311,
	308, 309, 1268, 312, 310, 1269, 313, 314, 315, 1270,
	1271, 316, 317, 318, 1272, 319, 320, 1273, 321, 322,
	323, 1274, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 1275, 249, 1276,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 1277, 341, 1278, 1279, 1111, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 1280,
	352, 597, 1281, 598, 353, 1282, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 1113, 359, 360, 1283, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 1284, 1112, 369, 602, 603, 1285, 604, 1286,
	371, 372, 1114, 605, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 1287,
	383, 385, 384, 1288, 386, 606, 1117, 387, 388, 1118,
	1289, 389, 0, 0, 0, 390, 391, 1290, 1291, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1292, 251, 1121, 432, 433, 1293, 607,
	434, 608, 436, 437, 1294, 0, 438, 0, 1295, 1296,
	440, 441, 442, 1297, 1298, 443, 444, 609, 1122, 445,
	1123, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 1299, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 1300,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 1301, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	1302, 488, 489, 490, 1124, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 1303, 511, 512, 510, 513, 514, 515,
	1304, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 1305, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 1306, 538, 539, 0, 537, 1307, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 1308, 548, 620, 621,
	622, 623, 1309, 557, 1310, 549, 550, 551, 624, 552,
	625, 1311, 553, 554, 555, 556, 0, 558, 559, 1312,
	1313, 560, 561, 562, 564, 565, 563, 566, 1314, 567,
	1315, 0, 568, 569, 570, 626, 627, 628, 1316, 572,
	571, 573, 629, 1317, 1318, 1319, 1320, 574, 575, 630,
	576, 577, 578, 2353, 0, 1045, 1017, 1018, 1019, 1015,
	1016, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 2350,
	259, 260, 0, 0, 0, 0, 0, 1069, 1033, 0,
	0, 0, 261, 262, 1109, 263, 264, 265, 266, 267,
	580, 1082, 0, 268, 1089, 269, 1088, 0, 1099, 270,
	271, 272, 273, 274, 275, 1035, 1068, 1002, 276, 1129,
	1130, 587, 0, 277, 278, 1075, 0, 1056, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1110, 301, 302, 1059,
	1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306,
	1092, 307, 1086, 1085, 1006, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 2351, 0, 316, 1077, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1012, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1100, 1101, 1024, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1084, 0, 0, 0, 340, 0, 341,
	0, 0, 1111, 342, 343, 1097, 1098, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1107, 0, 1034,
	353, 0, 354, 355, 356, 357, 358, 1070, 1071, 1074,
	435, 1113, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 1112,
	369, 1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072,
	1115, 373, 374, 375, 1116, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1108, 1117, 387, 388, 1118, 0, 389, 0, 0,
	0, 390, 391, 1063, 1062, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1119, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1120, 422, 1003,
	251, 1121, 432, 433, 1025, 1073, 434, 1087, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 1122, 445, 1123, 1102, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	1103, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1083, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	1124, 491, 492, 493, 494, 1013, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 1066, 516, 517, 500,
	501, 518, 519, 1125, 520, 521, 522, 523, 524, 525,
	1081, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 1128, 532, 533, 534, 535, 1104, 0, 538, 539,
	1001, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 1093, 1094, 1095, 1096, 0, 557,
	0, 549, 550, 551, 1105, 552, 1106, 1023, 553, 554,
	555, 556, 0, 558, 559, 0, 1007, 560, 561, 562,
	564, 565, 563, 566, 1067, 567, 0, 0, 568, 569,
	570, 626, 1090, 1127, 2349, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1004,
	0, 0, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 998, 999, 2352, 0, 0, 0,
	0, 0, 0, 1029, 2348, 0, 991, 1027, 1045, 1017,
	1018, 1019, 1015, 1016, 1028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1069, 1033, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 1082, 0, 268, 1089, 269, 1088,
	0, 1099, 270, 271, 272, 273, 274, 275, 1035, 1068,
	1002, 276, 1129, 1130, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 1092, 307, 1086, 1085, 1006, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1077, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1012, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 1024, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1084, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 1097, 1098,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 1034, 353, 0, 354, 355, 356, 357, 358,
	1070, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 1079, 1080, 0, 1040, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073, 434,
	1087, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1083, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 1013, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 213, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 1081, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 1128, 532, 533, 534, 535, 1104,
	0, 538, 539, 1001, 537, 215, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 1093, 1094, 1095,
	1096, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	1023, 553, 554, 555, 556, 0, 558, 559, 0, 1007,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 1514, 1090, 1127, 0, 572, 571,
	573, 629, 0, 0, 0, 207, 574, 575, 630, 576,
	577, 578, 1004, 0, 208, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 998, 999, 1045,
	1017, 1018, 1019, 1015, 1016, 1028, 1751, 1749, 0, 0,
	1027, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1069, 1033, 0, 0, 0, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 1082, 0, 268, 1089, 269,
	1088, 0, 1099, 270, 271, 272, 273, 274, 275, 1035,
	1068, 1002, 276, 1129, 1130, 587, 0, 277, 278, 1075,
	0, 1056, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064,
	303, 304, 305, 306, 1092, 307, 1086, 1085, 1006, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1077, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1012, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1100, 1101, 1024, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1084, 0, 0,
	0, 340, 0, 341, 0, 0, 1111, 342, 343, 1097,
	1098, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1107, 0, 1034, 353, 0, 354, 355, 356, 357,
	358, 1070, 1071, 1074, 435, 1113, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 1112, 369, 1079, 1080, 0, 1040, 0,
	371, 372, 1114, 1072, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1108, 1117, 387, 388, 1118,
	0, 389, 0, 0, 0, 390, 391, 1063, 1062, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073,
	434, 1087, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 1122, 445,
	1123, 1102, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 1103, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1083,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 1124, 491, 492, 493, 494, 1013,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 213, 511, 512, 510, 513, 514, 515,
	1066, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 1081, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 1128, 532, 533, 534, 535,
	1104, 0, 538, 539, 1001, 537, 215, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 1093, 1094,
	1095, 1096, 0, 557, 0, 549, 550, 551, 1105, 552,
	1106, 1023, 553, 554, 555, 556, 0, 558, 559, 0,
	1007, 560, 561, 562, 564, 565, 563, 566, 1067, 567,
	0, 0, 568, 569, 570, 1514, 1090, 1127, 0, 572,
	571, 573, 629, 0, 0, 0, 207, 574, 575, 630,
	576, 577, 578, 1004, 0, 208, 0, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 0, 0, 998, 999,
	1045, 1017, 1018, 1019, 1015, 1016, 1028, 1751, 2930, 0,
	0, 1027, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 1033, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 1082, 0, 268, 1089,
	269, 1088, 0, 1099, 270, 271, 272, 273, 274, 275,
	1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 1092, 307, 1086, 1085, 1006,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1077, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1012, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 1024, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1084, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	1097, 1098, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 1034, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 1079, 1080, 0, 1040,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 1003, 251, 1121, 432, 433, 1025,
	1073, 434, 1087, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1083, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	1013, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 213, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 1081, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 1128, 532, 533, 534,
	535, 1104, 0, 538, 539, 1001, 537, 215, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 1093,
	1094, 1095, 1096, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 1023, 553, 554, 555, 556, 0, 558, 559,
	0, 1007, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 1514, 1090, 1127, 0,
	572, 571, 573, 629, 0, 0, 0, 207, 574, 575,
	630, 576, 577, 578, 1004, 0, 208, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 998,
	999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1751, 1749,
	0, 0, 1027, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 2481, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 2486, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 2482, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 2483, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 0, 0, 0, 0, 0, 0, 0, 1029,
	0, 0, 2398, 1027, 1045, 1017, 1018, 1019, 1015, 1016,
	1028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1069, 1033, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	1082, 0, 268, 1089, 269, 1088, 0, 1099, 270, 271,
	272, 273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130,
	587, 0, 277, 278, 1075, 0, 1056, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 1059, 1057,
	1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092,
	307, 1086, 1085, 1006, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1012,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1100, 1101, 1024, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1084, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1097, 1098, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1107, 0, 1034, 353,
	0, 354, 355, 356, 357, 358, 1070, 1071, 1074, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 1112, 369,
	1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1108, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 1063, 1062, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 1003, 251,
	1121, 432, 433, 1025, 1073, 434, 1087, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 1102, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 1103,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1083, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 1013, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 1066, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1081,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1128, 532, 533, 534, 535, 1104, 0, 538, 539, 1001,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1093, 1094, 1095, 1096, 0, 557, 0,
	549, 550, 551, 1105, 552, 1106, 1023, 553, 554, 555,
	556, 0, 558, 559, 0, 1007, 560, 561, 562, 564,
	565, 563, 566, 1067, 567, 0, 0, 568, 569, 570,
	626, 1090, 1127, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1004, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 998, 999, 0, 0, 0, 0, 0,
	0, 0, 1029, 2396, 0, 2395, 1027, 1045, 1017, 1018,
	1019, 1015, 1016, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 307, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 558, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1004, 0, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 998, 999, 0, 0,
	0, 0, 0, 0, 0, 1029, 2393, 0, 2392, 1027,
	1045, 1017, 1018, 1019, 1015, 1016, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 1033, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 1082, 0, 268, 1089,
	269, 1088, 0, 1099, 270, 271, 272, 273, 274, 275,
	1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 1092, 307, 1086, 1085, 1006,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1077, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1012, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 1024, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1084, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	1097, 1098, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 1034, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 1079, 1080, 0, 1040,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 1003, 251, 1121, 432, 433, 1025,
	1073, 434, 1087, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1083, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	1013, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 1081, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 1128, 532, 533, 534,
	535, 1104, 0, 538, 539, 1001, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 1093,
	1094, 1095, 1096, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 1023, 553, 554, 555, 556, 0, 558, 559,
	0, 1007, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 1090, 1127, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1004, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 998,
	999, 0, 0, 0, 0, 0, 0, 0, 1029, 2390,
	0, 2389, 1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1069, 1033, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 1082,
	0, 268, 1089, 269, 1088, 0, 1099, 270, 271, 272,
	273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 302, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092, 307,
	1086, 1085, 1006, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1077, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1012, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 1024, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1084, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 1097, 1098, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 1034, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 1079,
	1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1003, 251, 1121,
	432, 433, 1025, 1073, 434, 1087, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1083, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 1013, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 1081, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 1128,
	532, 533, 534, 535, 1104, 0, 538, 539, 1001, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 1093, 1094, 1095, 1096, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 1023, 553, 554, 555, 556,
	0, 558, 559, 0, 1007, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 626,
	1090, 1127, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1004, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	0, 0, 998, 999, 0, 0, 0, 0, 0, 0,
	0, 1029, 2387, 0, 1604, 1027, 1045, 1017, 1018, 1019,
	1015, 1016, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1069, 1033,
	0, 0, 0, 261, 262, 1109, 263, 264, 265, 266,
	267, 580, 1082, 0, 268, 1089, 269, 1088, 0, 1099,
	270, 271, 272, 273, 274, 275, 1035, 1068, 1002, 276,
	1129, 1130, 587, 0, 277, 278, 1075, 0, 1056, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1110, 301, 302,
	1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305,
	306, 1092, 307, 1086, 1085, 1006, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1077,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1012, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1100, 1101, 1024, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1084, 0, 0, 0, 340, 0,
	341, 0, 0, 1111, 342, 343, 1097, 1098, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1107, 0,
	1034, 353, 0, 354, 355, 356, 357, 358, 1070, 1071,
	1074, 435, 1113, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 250, 366, 367, 368, 370, 0,
	1112, 369, 1079, 1080, 0, 1040, 0, 371, 372, 1114,
	1072, 1115, 373, 374, 375, 1116, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1108, 1117, 387, 388, 1118, 0, 389, 0,
	0, 0, 390, 391, 1063, 1062, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1119, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1120, 422,
	1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 1122, 445, 1123, 1102, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 1103, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1083, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 1124, 491, 492, 493, 494, 1013, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 1066, 516, 517,
	500, 501, 518, 519, 1125, 520, 521, 522, 523, 524,
	525, 1081, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 1128, 532, 533, 534, 535, 1104, 0, 538,
	539, 1001, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 1093, 1094, 1095, 1096, 0,
	557, 0, 549, 550, 551, 1105, 552, 1106, 1023, 553,
	554, 555, 556, 0, 558, 559, 0, 1007, 560, 561,
	562, 564, 565, 563, 566, 1067, 567, 0, 0, 568,
	569, 570, 626, 1090, 1127, 0, 572, 571, 573, 629,
	1603, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1004, 0, 0, 0, 0, 0, 0, 0, 1000, 0,
	0, 0, 0, 0, 0, 998, 999, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 994, 1027, 1045,
	1017, 1018, 1019, 1015, 1016, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1069, 1033, 0, 0, 0, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 1082, 0, 268, 1089, 269,
	1088, 0, 1099, 270, 271, 272, 273, 274, 275, 1035,
	1068, 1002, 276, 1129, 1130, 587, 0, 277, 278, 1075,
	0, 1056, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064,
	303, 304, 305, 306, 1092, 307, 1086, 1085, 1006, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1077, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1012, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1100, 1101, 1024, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1084, 0, 0,
	0, 340, 0, 341, 0, 0, 1111, 342, 343, 1097,
	1098, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1107, 0, 1034, 353, 0, 354, 355, 356, 357,
	358, 1070, 1071, 1074, 435, 1113, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 1112, 369, 1079, 1080, 0, 1040, 0,
	371, 372, 1114, 1072, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1108, 1117, 387, 388, 1118,
	0, 389, 0, 0, 0, 390, 391, 1063, 1062, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073,
	434, 1087, 436, 437, 0, 0, 438, 0, 1008, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 1122, 445,
	1123, 1102, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 1103, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1083,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 1124, 491, 492, 493, 494, 1013,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	1066, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 1081, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 1128, 532, 533, 534, 535,
	1104, 0, 538, 539, 1001, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 1093, 1094,
	1095, 1096, 0, 557, 0, 549, 550, 551, 1105, 552,
	1106, 1023, 553, 554, 555, 556, 0, 558, 559, 0,
	1007, 560, 561, 562, 564, 565, 563, 566, 1067, 567,
	0, 0, 568, 569, 570, 626, 1090, 1127, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1004, 0, 0, 0, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 0, 0, 998, 999,
	1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029, 0, 0,
	0, 1027, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 1033, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 1082, 0, 268, 1089,
	269, 1088, 0, 1099, 270, 271, 272, 273, 274, 275,
	1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 4230, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 1092, 307, 1086, 1085, 1006,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1077, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1012, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 1024, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1084, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	1097, 1098, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 1034, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 1079, 1080, 0, 1040,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 1003, 251, 1121, 432, 433, 1025,
	1073, 434, 1087, 436, 437, 0, 0, 438, 0, 1008,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1083, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	1013, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 1081, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 1128, 532, 533, 534,
	535, 1104, 0, 538, 539, 1001, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 1093,
	1094, 1095, 1096, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 1023, 553, 554, 555, 556, 0, 558, 559,
	0, 1007, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 1090, 1127, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1004, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 998,
	999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 0, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 2267,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 2266, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1069, 1033, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 1082, 0,
	268, 1089, 269, 1088, 0, 1099, 270, 271, 272, 273,
	274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0,
	277, 278, 1075, 0, 1056, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065,
	1061, 1060, 1064, 303, 304, 305, 306, 1092, 307, 1086,
	1085, 1006, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1077, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1012, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1100, 1101,
	1024, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1084, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 1097, 1098, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1107, 0, 1034, 353, 0, 354,
	355, 356, 357, 358, 1070, 1071, 1074, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 1112, 369, 1079, 1080,
	0, 1040, 0, 371, 372, 1114, 1072, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1108, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	1063, 1062, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 1003, 251, 1121, 432,
	433, 1025, 1073, 434, 1087, 436, 437, 0, 0, 438,
	0, 1008, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 1102, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 1103, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1083, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 1013, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 1066, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 1081, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 1128, 532,
	533, 534, 535, 1104, 0, 538, 539, 1001, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 1093, 1094, 1095, 1096, 0, 557, 0, 549, 550,
	551, 1105, 552, 1106, 1023, 553, 554, 555, 556, 0,
	558, 559, 0, 1007, 560, 561, 562, 564, 565, 563,
	566, 1067, 567, 0, 0, 568, 569, 570, 626, 1090,
	1127, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1004, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 998, 999, 1045, 1017, 1018, 1019, 1015, 1016, 1028,
	1029, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1069, 1033, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 1082,
	0, 268, 1089, 269, 1088, 0, 1099, 270, 271, 272,
	273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 4012, 297,
	0, 298, 299, 300, 1110, 301, 302, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092, 307,
	1086, 1085, 1006, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1077, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1012, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 1024, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1084, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 1097, 1098, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 1034, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 1079,
	1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1003, 251, 1121,
	432, 433, 1025, 1073, 434, 1087, 436, 437, 0, 0,
	438, 0, 1008, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1083, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 1013, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 1081, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 1128,
	532, 533, 534, 535, 1104, 0, 538, 539, 1001, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 1093, 1094, 1095, 1096, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 1023, 553, 554, 555, 556,
	0, 558, 559, 0, 1007, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 626,
	1090, 1127, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1004, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	0, 0, 998, 999, 1045, 1017, 1018, 1019, 1015, 1016,
	1028, 1029, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1069, 1033, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	1082, 0, 268, 1089, 269, 1088, 0, 1099, 270, 271,
	272, 273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130,
	587, 0, 277, 278, 1075, 0, 1056, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 1059, 1057,
	1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092,
	307, 1086, 1085, 1006, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1012,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1100, 1101, 1024, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1084, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1097, 1098, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1107, 0, 1034, 353,
	0, 354, 355, 356, 357, 358, 1070, 1071, 1074, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 1112, 369,
	1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1108, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 1063, 1062, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 1003, 3659,
	1121, 432, 433, 1025, 1073, 434, 1087, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 1102, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 1103,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1083, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 1013, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 1066, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1081,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1128, 532, 533, 534, 535, 1104, 0, 538, 539, 1001,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1093, 1094, 1095, 1096, 0, 557, 0,
	549, 550, 551, 1105, 552, 1106, 1023, 553, 554, 555,
	556, 0, 558, 559, 0, 1007, 560, 561, 562, 564,
	565, 563, 566, 1067, 567, 0, 0, 568, 569, 570,
	626, 1090, 1127, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1004, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 998, 999, 1819, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 1027, 1045, 1017, 1018,
	1019, 1015, 1016, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 307, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 558, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 3406, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1004, 0, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 998, 999, 1045, 1017,
	1018, 1019, 1015, 1016, 1028, 1029, 0, 0, 0, 1027,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1069, 1033, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 1082, 0, 268, 1089, 269, 1088,
	0, 1099, 270, 271, 272, 273, 274, 275, 1035, 1068,
	1002, 276, 1129, 1130, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 1092, 307, 1086, 1085, 1006, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1077, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1012, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 1024, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1084, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 1097, 1098,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 1034, 353, 0, 354, 355, 356, 357, 358,
	1070, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 1079, 1080, 0, 1040, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073, 434,
	1087, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1083, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 1013, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 1081, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 1128, 532, 533, 534, 535, 1104,
	0, 538, 539, 1001, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 1093, 1094, 1095,
	1096, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	1023, 553, 554, 555, 556, 0, 558, 559, 0, 1007,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 626, 1090, 1127, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1004, 0, 0, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 998, 999, 1819,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 0,
	1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 0, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 2486, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1069, 1033, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 1082, 0,
	268, 1089, 269, 1088, 0, 1099, 270, 271, 272, 273,
	274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0,
	277, 278, 1075, 0, 1056, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065,
	1061, 1060, 1064, 303, 304, 305, 306, 1092, 307, 1086,
	1085, 1006, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1077, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1012, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1100, 1101,
	1024, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1084, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 1097, 1098, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1107, 0, 1034, 353, 0, 354,
	355, 356, 357, 358, 1070, 1071, 1074, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 1112, 369, 1079, 1080,
	0, 1040, 0, 371, 372, 1114, 1072, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1108, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	1063, 1062, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 1003, 251, 1121, 432,
	433, 1025, 1073, 434, 1087, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 1102, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 1103, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1083, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 1013, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 1066, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 1081, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 1128, 532,
	533, 534, 535, 1104, 0, 538, 539, 1001, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 1093, 1094, 1095, 1096, 0, 557, 0, 549, 550,
	551, 1105, 552, 1106, 1023, 553, 554, 555, 556, 0,
	558, 559, 0, 1007, 560, 561, 562, 564, 565, 563,
	566, 1067, 567, 0, 0, 568, 569, 570, 626, 1090,
	1127, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1004, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 998, 999, 0, 0, 0, 0, 0, 0, 0,
	1029, 1749, 0, 2491, 1027, 1045, 1017, 1018, 1019, 1015,
	1016, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1069, 1033, 0,
	0, 0, 261, 262, 1109, 263, 264, 265, 266, 267,
	580, 1082, 0, 268, 1089, 269, 1088, 0, 1099, 270,
	271, 272, 273, 274, 275, 1035, 1068, 1002, 276, 1129,
	1130, 587, 0, 277, 278, 1075, 0, 1056, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1110, 301, 302, 1059,
	1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306,
	1092, 307, 1086, 1085, 1006, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1077, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1012, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1100, 1101, 1024, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1084, 0, 0, 0, 340, 0, 341,
	0, 0, 1111, 342, 343, 1097, 1098, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1107, 0, 1034,
	353, 0, 354, 355, 356, 357, 358, 1070, 1071, 1074,
	435, 1113, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 1112,
	369, 1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072,
	1115, 373, 374, 375, 1116, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1108, 1117, 387, 388, 1118, 0, 389, 0, 0,
	0, 390, 391, 1063, 1062, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1119, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1120, 422, 1003,
	251, 1121, 432, 433, 1025, 1073, 434, 1087, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 1122, 445, 1123, 1102, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	1103, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1083, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	1124, 491, 492, 493, 494, 1013, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 1066, 516, 517, 500,
	501, 518, 519, 1125, 520, 521, 522, 523, 524, 525,
	1081, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 1128, 532, 533, 534, 535, 1104, 0, 538, 539,
	1001, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 1093, 1094, 1095, 1096, 0, 557,
	0, 549, 550, 551, 1105, 552, 1106, 1023, 553, 554,
	555, 556, 0, 558, 559, 0, 1007, 560, 561, 562,
	564, 565, 563, 566, 1067, 567, 0, 0, 568, 569,
	570, 626, 1090, 1127, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1004,
	0, 0, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 998, 999, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 2489, 1027, 1045, 1017,
	1018, 1019, 1015, 1016, 1028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1069, 1033, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 1082, 0, 268, 1089, 269, 1088,
	0, 1099, 270, 271, 272, 273, 274, 275, 1035, 1068,
	1002, 276, 1129, 1130, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 1092, 307, 1086, 1085, 1006, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1077, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1012, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 1024, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1084, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 1097, 1098,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 1034, 353, 0, 354, 355, 356, 357, 358,
	1070, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 1079, 1080, 0, 1040, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073, 434,
	1087, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1083, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 1013, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 1081, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 1128, 532, 533, 534, 535, 1104,
	0, 538, 539, 1001, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 1093, 1094, 1095,
	1096, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	1023, 553, 554, 555, 556, 0, 558, 559, 0, 1007,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 626, 1090, 1127, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1004, 0, 0, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 998, 999, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 2477,
	1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 0, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 0, 0, 0, 0, 0, 0, 0, 1029,
	0, 0, 2466, 1027, 1045, 1017, 1018, 1019, 1015, 1016,
	1028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1069, 1033, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	1082, 0, 268, 1089, 269, 1088, 0, 1099, 270, 271,
	272, 273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130,
	587, 0, 277, 278, 1075, 0, 1056, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 1059, 1057,
	1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092,
	307, 1086, 1085, 1006, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1012,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1100, 1101, 1024, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1084, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1097, 1098, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1107, 0, 1034, 353,
	0, 354, 355, 356, 357, 358, 1070, 1071, 1074, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 1112, 369,
	1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1108, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 1063, 1062, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 1003, 251,
	1121, 432, 433, 1025, 1073, 434, 1087, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 1102, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 1103,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1083, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 1013, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 1066, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1081,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1128, 532, 533, 534, 535, 1104, 0, 538, 539, 1001,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1093, 1094, 1095, 1096, 0, 557, 0,
	549, 550, 551, 1105, 552, 1106, 1023, 553, 554, 555,
	556, 0, 558, 559, 0, 1007, 560, 561, 562, 564,
	565, 563, 566, 1067, 567, 0, 0, 568, 569, 570,
	626, 1090, 1127, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1004, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 998, 999, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 2464, 1027, 2455, 2462, 1018,
	1019, 1015, 1016, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 2458, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 2459, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 2460, 403,
	2457, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	2461, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 558, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 2456,
	578, 1004, 0, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 998, 999, 0, 0,
	0, 0, 0, 0, 0, 1029, 0, 0, 2452, 1027,
	2455, 2462, 1018, 1019, 1015, 1016, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 1033, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 1082, 0, 268, 1089,
	269, 1088, 0, 1099, 270, 271, 272, 273, 274, 275,
	1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 1092, 2458, 1086, 1085, 1006,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1077, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1012, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 1024, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1084, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	1097, 1098, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 1034, 353, 0, 354, 355, 356,
	2459, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 1079, 1080, 0, 1040,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 2460, 403, 2457, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 1003, 251, 1121, 432, 433, 1025,
	1073, 434, 1087, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1083, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	1013, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 2461, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 1081, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 1128, 532, 533, 534,
	535, 1104, 0, 538, 539, 1001, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 1093,
	1094, 1095, 1096, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 1023, 553, 554, 555, 556, 0, 558, 559,
	0, 1007, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 1090, 1127, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 2456, 578, 1004, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 998,
	999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 0, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 0, 0, 0, 0, 0, 1757, 0, 1029,
	0, 0, 0, 1027, 1045, 1017, 1018, 1019, 1015, 1016,
	1028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 2246, 259,
	260, 0, 0, 0, 0, 0, 1069, 1033, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	1082, 0, 268, 1089, 269, 1088, 0, 1099, 270, 271,
	272, 273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130,
	587, 0, 277, 278, 1075, 0, 1056, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 1059, 1057,
	1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092,
	307, 1086, 1085, 1006, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1012,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1100, 1101, 1024, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1084, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1097, 1098, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1107, 0, 1034, 353,
	0, 354, 355, 356, 357, 358, 1070, 1071, 1074, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 1112, 369,
	1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1108, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 1063, 1062, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 1003, 251,
	1121, 432, 433, 1025, 1073, 434, 1087, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 1102, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 1103,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1083, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 1013, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 1066, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1081,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1128, 532, 533, 534, 535, 1104, 0, 538, 539, 1001,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1093, 1094, 1095, 1096, 0, 557, 0,
	549, 550, 551, 1105, 552, 1106, 1023, 553, 554, 555,
	556, 0, 558, 559, 0, 1007, 560, 561, 562, 564,
	565, 563, 566, 1067, 567, 0, 0, 568, 569, 570,
	626, 1090, 1127, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1004, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 998, 999, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 1609, 1027, 1045, 1017, 1018,
	1019, 1015, 1016, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 307, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 558, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1004, 0, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 998, 999, 0, 0,
	0, 0, 0, 0, 0, 1029, 0, 0, 1544, 1027,
	1045, 1017, 1018, 1019, 1015, 1016, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 1033, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 1082, 0, 268, 1089,
	269, 1088, 0, 1099, 270, 271, 272, 273, 274, 275,
	1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 1092, 307, 1086, 1085, 1006,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 1077, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 1012, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 1024, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 1084, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	1097, 1098, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 1034, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 1079, 1080, 0, 1040,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 1003, 251, 1121, 432, 433, 1025,
	1073, 434, 1087, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	1083, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	1013, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 1081, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 1128, 532, 533, 534,
	535, 1104, 0, 538, 539, 1001, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 1093,
	1094, 1095, 1096, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 1023, 553, 554, 555, 556, 0, 558, 559,
	0, 1007, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 1090, 1127, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1004, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 0, 0, 0, 0, 0, 998,
	999, 0, 0, 0, 0, 0, 0, 0, 1029, 0,
	0, 1539, 1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1069, 1033, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 1082,
	0, 268, 1089, 269, 1088, 0, 1099, 270, 271, 272,
	273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 302, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092, 307,
	1086, 1085, 1006, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1077, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1012, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 1024, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1084, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 1097, 1098, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 1034, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 1079,
	1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1003, 251, 1121,
	432, 433, 1025, 1073, 434, 1087, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1083, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 1013, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 1081, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 1128,
	532, 533, 534, 535, 1104, 0, 538, 539, 1001, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 1093, 1094, 1095, 1096, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 1023, 553, 554, 555, 556,
	0, 558, 559, 0, 1007, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 626,
	1090, 1127, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1004, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	0, 0, 998, 999, 0, 0, 0, 0, 0, 0,
	0, 1029, 0, 0, 1530, 1027, 1045, 1017, 1018, 1019,
	1015, 1016, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1069, 1033,
	0, 0, 0, 261, 262, 1109, 263, 264, 265, 266,
	267, 580, 1082, 0, 268, 1089, 269, 1088, 0, 1099,
	270, 271, 272, 273, 274, 275, 1035, 1068, 1002, 276,
	1129, 1130, 587, 0, 277, 278, 1075, 0, 1056, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1110, 301, 302,
	1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305,
	306, 1092, 307, 1086, 1085, 1006, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1077,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1012, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1100, 1101, 1024, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1084, 0, 0, 0, 340, 0,
	341, 0, 0, 1111, 342, 343, 1097, 1098, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1107, 0,
	1034, 353, 0, 354, 355, 356, 357, 358, 1070, 1071,
	1074, 435, 1113, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 250, 366, 367, 368, 370, 0,
	1112, 369, 1079, 1080, 0, 1040, 0, 371, 372, 1114,
	1072, 1115, 373, 374, 375, 1116, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1108, 1117, 387, 388, 1118, 0, 389, 0,
	0, 0, 390, 391, 1063, 1062, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1119, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1120, 422,
	1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 1122, 445, 1123, 1102, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 1103, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1083, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 1124, 491, 492, 493, 494, 1013, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 1066, 516, 517,
	500, 501, 518, 519, 1125, 520, 521, 522, 523, 524,
	525, 1081, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 1128, 532, 533, 534, 535, 1104, 0, 538,
	539, 1001, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 1093, 1094, 1095, 1096, 0,
	557, 0, 549, 550, 551, 1105, 552, 1106, 1023, 553,
	554, 555, 556, 0, 558, 559, 0, 1007, 560, 561,
	562, 564, 565, 563, 566, 1067, 567, 0, 0, 568,
	569, 570, 626, 1090, 1127, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1004, 0, 0, 0, 0, 0, 0, 0, 1000, 0,
	0, 0, 0, 0, 0, 998, 999, 0, 0, 0,
	0, 0, 0, 0, 1029, 0, 0, 1525, 1027, 1045,
	1017, 1018, 1019, 1015, 1016, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1069, 1033, 0, 0, 0, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 1082, 0, 268, 1089, 269,
	1088, 0, 1099, 270, 271, 272, 273, 274, 275, 1035,
	1068, 1002, 276, 1129, 1130, 587, 0, 277, 278, 1075,
	0, 1056, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064,
	303, 304, 305, 306, 1092, 307, 1086, 1085, 1006, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1077, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1012, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1100, 1101, 1024, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1084, 0, 0,
	0, 340, 0, 341, 0, 0, 1111, 342, 343, 1097,
	1098, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1107, 0, 1034, 353, 0, 354, 355, 356, 357,
	358, 1070, 1071, 1074, 435, 1113, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 1112, 369, 1079, 1080, 0, 1040, 0,
	371, 372, 1114, 1072, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1108, 1117, 387, 388, 1118,
	0, 389, 0, 0, 0, 390, 391, 1063, 1062, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073,
	434, 1087, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 1122, 445,
	1123, 1102, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 1103, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1083,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 1124, 491, 492, 493, 494, 1013,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	1066, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 1081, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 1128, 532, 533, 534, 535,
	1104, 0, 538, 539, 1001, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 1093, 1094,
	1095, 1096, 0, 557, 0, 549, 550, 551, 1105, 552,
	1106, 1023, 553, 554, 555, 556, 0, 558, 559, 0,
	1007, 560, 561, 562, 564, 565, 563, 566, 1067, 567,
	0, 0, 568, 569, 570, 626, 1090, 1127, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1004, 0, 0, 0, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 0, 0, 998, 999,
	0, 0, 0, 0, 0, 0, 0, 1029, 0, 0,
	1507, 1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1069, 1033, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 1082, 0,
	268, 1089, 269, 1088, 0, 1099, 270, 271, 272, 273,
	274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0,
	277, 278, 1075, 0, 1056, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065,
	1061, 1060, 1064, 303, 304, 305, 306, 1092, 307, 1086,
	1085, 1006, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1077, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1012, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1100, 1101,
	1024, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1084, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 1097, 1098, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1107, 0, 1034, 353, 0, 354,
	355, 356, 357, 358, 1070, 1071, 1074, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 1112, 369, 1079, 1080,
	0, 1040, 0, 371, 372, 1114, 1072, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1108, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	1063, 1062, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 1003, 251, 1121, 432,
	433, 1025, 1073, 434, 1087, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 1102, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 1103, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1083, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 1013, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 1066, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 1081, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 1128, 532,
	533, 534, 535, 1104, 0, 538, 539, 1001, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 1093, 1094, 1095, 1096, 0, 557, 0, 549, 550,
	551, 1105, 552, 1106, 1023, 553, 554, 555, 556, 0,
	558, 559, 0, 1007, 560, 561, 562, 564, 565, 563,
	566, 1067, 567, 0, 0, 568, 569, 570, 626, 1090,
	1127, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1004, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 998, 999, 0, 0, 0, 0, 0, 0, 0,
	1029, 0, 0, 1386, 1027, 1045, 1017, 1018, 1019, 1015,
	1016, 1028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1069, 1033, 0,
	0, 0, 261, 262, 1109, 263, 264, 265, 266, 267,
	580, 1082, 0, 268, 1089, 269, 1088, 0, 1099, 270,
	271, 272, 273, 274, 275, 1035, 1068, 1002, 276, 1129,
	1130, 587, 0, 277, 278, 1075, 0, 1056, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1110, 301, 302, 1059,
	1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306,
	1092, 307, 1086, 1085, 1006, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1077, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1012, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1100, 1101, 1024, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1084, 0, 0, 0, 340, 0, 341,
	0, 0, 1111, 342, 343, 1097, 1098, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1107, 0, 1034,
	353, 0, 354, 355, 356, 357, 358, 1385, 1071, 1074,
	435, 1113, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 1112,
	369, 1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072,
	1115, 373, 374, 375, 1116, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1108, 1117, 387, 388, 1118, 0, 389, 0, 0,
	0, 390, 391, 1063, 1062, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1119, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1120, 422, 1003,
	251, 1121, 432, 433, 1025, 1073, 434, 1087, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 1122, 445, 1123, 1102, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	1103, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1083, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	1124, 491, 492, 493, 494, 1013, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 1066, 516, 517, 500,
	501, 518, 519, 1125, 520, 521, 522, 523, 524, 525,
	1081, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 1128, 532, 533, 534, 535, 1104, 0, 538, 539,
	1001, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 1093, 1094, 1095, 1096, 0, 557,
	0, 549, 550, 551, 1105, 552, 1106, 1023, 553, 554,
	555, 556, 0, 558, 559, 0, 1007, 560, 561, 562,
	564, 565, 563, 566, 1067, 567, 0, 0, 568, 569,
	570, 626, 1090, 1127, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1004,
	0, 0, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 998, 999, 0, 0, 0, 0,
	0, 0, 0, 1029, 0, 0, 1380, 1027, 1045, 1017,
	1018, 1019, 1015, 1016, 1028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1069, 1033, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 1082, 0, 268, 1089, 269, 1088,
	0, 1099, 270, 271, 272, 273, 274, 275, 1035, 1068,
	1002, 276, 1129, 1130, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 1092, 307, 1086, 1085, 1006, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1077, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1012, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 1024, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1084, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 1097, 1098,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 1034, 353, 0, 354, 355, 356, 357, 358,
	1379, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 1079, 1080, 0, 1040, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073, 434,
	1087, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1083, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 1013, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 1081, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 1128, 532, 533, 534, 535, 1104,
	0, 538, 539, 1001, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 1093, 1094, 1095,
	1096, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	1023, 553, 554, 555, 556, 0, 558, 559, 0, 1007,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 626, 1090, 1127, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1004, 0, 0, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 998, 999, 0,
	0, 0, 0, 0, 0, 0, 1029, 0, 0, 1373,
	1027, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 1033, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 1082, 0, 268,
	1089, 269, 1088, 0, 1099, 270, 271, 272, 273, 274,
	275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 1092, 307, 1086, 1085,
	1006, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 1077, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 1012, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 1024,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 1084,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 1097, 1098, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 1034, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 1079, 1080, 0,
	1040, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 1003, 251, 1121, 432, 433,
	1025, 1073, 434, 1087, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 1083, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 1013, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 1081, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 1128, 532, 533,
	534, 535, 1104, 0, 538, 539, 1001, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	1093, 1094, 1095, 1096, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 1023, 553, 554, 555, 556, 0, 558,
	559, 0, 1007, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 1090, 1127,
	0, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 1004, 0, 0, 0, 0,
	0, 0, 0, 1000, 0, 0, 0, 0, 0, 0,
	998, 999, 1045, 1017, 1018, 1019, 1015, 1016, 1028, 1029,
	0, 0, 0, 1027, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 1069, 1033, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 1082, 0,
	268, 1089, 269, 1088, 0, 1099, 270, 271, 272, 273,
	274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587, 0,
	277, 278, 1075, 0, 1056, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065,
	1061, 1060, 1064, 303, 304, 305, 306, 1092, 307, 1086,
	1085, 1006, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 1077, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 1012, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1100, 1101,
	1024, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	1084, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 1097, 1098, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1107, 0, 1034, 353, 0, 354,
	355, 356, 357, 358, 1070, 1071, 1074, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 1112, 369, 1079, 1080,
	0, 1040, 0, 371, 372, 1114, 1072, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 1108, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	1063, 1062, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 1003, 251, 1121, 432,
	433, 1025, 1073, 434, 1087, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 1102, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 1103, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 1083, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 1013, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 1066, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 1081, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 1128, 532,
	533, 534, 535, 1104, 0, 538, 539, 1001, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 1093, 1094, 1095, 1096, 0, 557, 0, 549, 550,
	551, 1105, 552, 1106, 1023, 553, 554, 555, 556, 0,
	558, 559, 0, 1007, 560, 561, 562, 564, 565, 563,
	566, 1067, 567, 0, 0, 568, 569, 570, 626, 1090,
	1127, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1004, 0, 0, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	0, 998, 999, 1045, 1017, 1018, 1019, 1015, 1016, 1028,
	1029, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1069, 1033, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 1082,
	0, 268, 1089, 269, 1088, 0, 1099, 270, 271, 272,
	273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 4270, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092, 307,
	1086, 1085, 1006, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1077, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1012, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 1024, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1084, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 1097, 1098, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 1034, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 1079,
	1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 1003, 251, 1121,
	432, 433, 1025, 1073, 434, 1087, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1083, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 1013, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 1081, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 1128,
	532, 533, 534, 535, 1104, 0, 538, 539, 1001, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 1093, 1094, 1095, 1096, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 1023, 553, 554, 555, 556,
	0, 4269, 559, 0, 1007, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 626,
	1090, 1127, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1004, 0, 0,
	0, 0, 0, 0, 0, 1000, 0, 0, 0, 0,
	0, 0, 998, 999, 1045, 1017, 1018, 1019, 1015, 1016,
	1028, 1029, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 1069, 1033, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 4268,
	1082, 0, 268, 1089, 269, 1088, 0, 1099, 270, 271,
	272, 273, 274, 275, 1035, 1068, 1002, 276, 1129, 1130,
	587, 0, 277, 278, 1075, 0, 1056, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 4270, 1059, 1057,
	1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092,
	307, 1086, 1085, 1006, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 1012,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	1100, 1101, 1024, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 1084, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1097, 1098, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 1107, 0, 1034, 353,
	0, 354, 355, 356, 357, 358, 1070, 1071, 1074, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 1112, 369,
	1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	1108, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 1063, 1062, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 1003, 251,
	1121, 432, 433, 1025, 1073, 434, 1087, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 1102, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 1103,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1083, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 1013, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 1066, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1081,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1128, 532, 533, 534, 535, 1104, 0, 538, 539, 1001,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1093, 1094, 1095, 1096, 0, 557, 0,
	549, 550, 551, 1105, 552, 1106, 1023, 553, 554, 555,
	556, 0, 4269, 559, 0, 1007, 560, 561, 562, 564,
	565, 563, 566, 1067, 567, 0, 0, 568, 569, 570,
	626, 1090, 1127, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1004, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 998, 999, 1045, 1017, 1018, 1019, 1015,
	1016, 1028, 1029, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 1069, 1033, 0,
	0, 0, 261, 262, 1109, 263, 264, 265, 266, 267,
	580, 1082, 0, 268, 1089, 269, 1088, 0, 1099, 270,
	271, 272, 273, 274, 275, 1035, 1068, 1002, 276, 1129,
	1130, 587, 0, 277, 278, 1075, 0, 1056, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 1110, 3962, 302, 1059,
	1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305, 306,
	1092, 307, 1086, 1085, 1006, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 1077, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	1012, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 1100, 1101, 1024, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 1084, 0, 0, 0, 340, 0, 341,
	0, 0, 1111, 342, 343, 1097, 1098, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 1107, 0, 3963,
	353, 0, 354, 355, 356, 357, 358, 1070, 1071, 1074,
	435, 1113, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 1112,
	369, 1079, 1080, 0, 1040, 0, 371, 372, 1114, 1072,
	1115, 373, 374, 375, 1116, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 1108, 1117, 387, 388, 1118, 0, 389, 0, 0,
	0, 390, 391, 1063, 1062, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 1119, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 1120, 422, 1003,
	251, 1121, 432, 433, 1025, 1073, 434, 1087, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 1122, 445, 1123, 1102, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	1103, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 1083, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	1124, 491, 492, 493, 3961, 1013, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 1066, 516, 517, 500,
	501, 518, 519, 1125, 520, 521, 522, 523, 524, 525,
	1081, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 1128, 532, 533, 534, 535, 1104, 0, 538, 539,
	1001, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 1093, 1094, 1095, 1096, 0, 557,
	0, 549, 550, 551, 1105, 552, 1106, 1023, 553, 554,
	555, 556, 0, 558, 559, 0, 1007, 560, 561, 562,
	564, 565, 563, 566, 1067, 567, 0, 0, 568, 569,
	570, 626, 1090, 1127, 0, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 1004,
	0, 0, 0, 0, 0, 0, 0, 1000, 0, 0,
	0, 0, 0, 0, 998, 999, 1045, 1017, 1018, 1019,
	2897, 2898, 1028, 1029, 0, 0, 0, 1027, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 1069, 1033,
	0, 0, 0, 261, 262, 1109, 263, 264, 265, 266,
	267, 580, 1082, 0, 268, 1089, 269, 1088, 0, 1099,
	270, 271, 272, 273, 274, 275, 1035, 1068, 1002, 276,
	1129, 1130, 587, 0, 277, 278, 1075, 0, 1056, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1110, 301, 302,
	1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304, 305,
	306, 1092, 307, 1086, 1085, 1006, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 1077,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 1012, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 1100, 1101, 1024, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 1084, 0, 0, 0, 340, 0,
	341, 0, 0, 1111, 342, 343, 1097, 1098, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 1107, 0,
	1034, 353, 0, 354, 355, 356, 357, 358, 1070, 1071,
	1074, 435, 1113, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 250, 366, 367, 368, 370, 0,
	1112, 369, 1079, 1080, 0, 1040, 0, 371, 372, 1114,
	1072, 1115, 373, 374, 375, 1116, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 1108, 1117, 387, 388, 1118, 0, 389, 0,
	0, 0, 390, 391, 1063, 1062, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1119, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1120, 422,
	1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 1122, 445, 1123, 1102, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 1103, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 1083, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 1124, 491, 492, 493, 494, 1013, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 1066, 516, 517,
	500, 501, 518, 519, 1125, 520, 521, 522, 523, 524,
	525, 1081, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 1128, 532, 533, 534, 535, 1104, 0, 538,
	539, 1001, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 1093, 1094, 1095, 1096, 0,
	557, 0, 549, 550, 551, 1105, 552, 1106, 1023, 553,
	554, 555, 556, 0, 558, 559, 0, 1007, 560, 561,
	562, 564, 565, 563, 566, 1067, 567, 0, 0, 568,
	569, 570, 626, 1090, 1127, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1004, 0, 0, 0, 0, 0, 0, 0, 1000, 0,
	0, 0, 0, 0, 0, 998, 999, 1045, 1017, 1018,
	1019, 2895, 2896, 1028, 1029, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 307, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 1121, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 558, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1004, 0, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 998, 999, 1045, 1017,
	1018, 1019, 1015, 1016, 1028, 1029, 0, 0, 0, 1027,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	1069, 1033, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 1082, 0, 268, 1089, 269, 1088,
	0, 1099, 270, 271, 272, 273, 274, 275, 1035, 1068,
	1002, 276, 1129, 1130, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 1092, 307, 1086, 1085, 1006, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 1077, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 1012, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 1024, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 1084, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 1097, 1098,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 1034, 353, 0, 354, 355, 356, 357, 358,
	1070, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 1079, 1080, 0, 1040, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 1003, 251, 1121, 432, 433, 1025, 1073, 434,
	1087, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 1083, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 1013, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 1081, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 1128, 532, 533, 534, 535, 1104,
	0, 538, 539, 1001, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 1093, 1094, 1095,
	1096, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	1023, 553, 554, 555, 556, 0, 558, 559, 0, 1007,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 626, 1090, 1127, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1004, 0, 0, 0, 0, 0, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 2254, 2255, 1045,
	1017, 1018, 1019, 1015, 1016, 1028, 1029, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 1069, 1033, 0, 0, 0, 261, 262, 1109, 263,
	264, 265, 266, 267, 580, 1082, 0, 268, 1089, 269,
	1088, 0, 1099, 270, 271, 272, 273, 274, 275, 1035,
	1068, 0, 276, 1129, 1130, 587, 0, 277, 278, 1075,
	0, 1056, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064,
	303, 304, 305, 306, 1092, 307, 1086, 1085, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 1077, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 1012, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 1100, 1101, 1024, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 1084, 0, 0,
	0, 340, 0, 341, 0, 0, 1111, 342, 343, 1097,
	1098, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 1107, 0, 1034, 353, 0, 354, 355, 356, 357,
	358, 1070, 1071, 1074, 435, 1113, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 1112, 369, 1079, 1080, 0, 1040, 0,
	371, 372, 1114, 1072, 1115, 373, 374, 375, 1116, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 1108, 1117, 387, 388, 1118,
	0, 389, 0, 0, 0, 390, 391, 1063, 1062, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 1119, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 1120, 422, 0, 251, 1121, 432, 433, 1025, 1073,
	434, 1087, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 1122, 445,
	1123, 1102, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 1103, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 1083,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 1124, 491, 492, 493, 494, 1013,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	1066, 516, 517, 500, 501, 518, 519, 1125, 520, 521,
	522, 523, 524, 525, 1081, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 1128, 532, 533, 534, 535,
	1104, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 1093, 1094,
	1095, 1096, 0, 557, 0, 549, 550, 551, 1105, 552,
	1106, 1023, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 1067, 567,
	0, 0, 568, 569, 570, 626, 1090, 1127, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1045, 1017, 1018, 1019, 1015, 1016, 1028,
	0, 2474, 0, 0, 0, 0, 0, 0, 2472, 2473,
	252, 254, 253, 255, 256, 257, 258, 1029, 259, 260,
	0, 1027, 0, 0, 0, 1069, 1033, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 1082,
	0, 268, 1089, 269, 1088, 0, 1099, 270, 271, 272,
	273, 274, 275, 1035, 1068, 0, 276, 1129, 1130, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 302, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 1092, 307,
	1086, 1085, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 1077, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 1012, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 1024, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 1084, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 1097, 1098, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 1034, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 1079,
	1080, 0, 1040, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 0, 251, 1121,
	432, 433, 1025, 1073, 434, 1087, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 1083, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 2890, 2891, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 1081, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 1128,
	532, 533, 534, 535, 1104, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 1093, 1094, 1095, 1096, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 1023, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 626,
	1090, 1127, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1045, 1017, 1018,
	1019, 1015, 1016, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 1957, 252, 254, 253, 255, 256, 257,
	258, 1029, 259, 260, 0, 1027, 0, 0, 0, 1069,
	1033, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 0, 1082, 0, 268, 1089, 269, 1088, 0,
	1099, 270, 271, 272, 273, 274, 275, 1035, 1068, 1002,
	276, 1129, 1130, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	4270, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 1092, 307, 1086, 1085, 1006, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	1077, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 1012, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 1024, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 1084, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 1097, 1098, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 1034, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 1079, 1080, 0, 1040, 0, 371, 372,
	0, 1072, 0, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 1003, 251, 0, 432, 433, 1025, 1073, 434, 1087,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 1083, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 1013, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 1081, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 1128, 532, 533, 534, 535, 1104, 0,
	538, 539, 1001, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 1093, 1094, 1095, 1096,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 1023,
	553, 554, 555, 556, 0, 4269, 559, 0, 1007, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 1090, 1127, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 1167, 0, 0, 998, 999, 0, 0,
	0, 0, 0, 0, 0, 1029, 0, 0, 0, 1027,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 1069, 0, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 1068, 0, 276, 585, 586, 587,
	0, 277, 278, 1075, 0, 1056, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 302, 1059, 1057, 1058,
	1065, 1061, 1060, 1064, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 1100,
	1101, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 1107, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 1070, 1071, 1074, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 1112, 369, 602,
	603, 0, 604, 0, 371, 372, 1114, 1072, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 1153, 383, 385, 384, 0, 386, 1108,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 1063, 1062, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 0, 251, 1121,
	432, 433, 0, 1073, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 1159, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 1102, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 1103, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 1161, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 213, 511, 512,
	510, 513, 514, 515, 1066, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 1104, 0, 538, 539, 0, 537,
	215, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 1105, 552, 1106, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 1067, 567, 0, 0, 568, 569, 570, 1514,
	627, 628, 0, 572, 571, 573, 629, 0, 1167, 0,
	207, 574, 575, 630, 576, 577, 578, 0, 0, 208,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 1157,
	1069, 1843, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 1068,
	0, 276, 585, 586, 587, 0, 277, 278, 1075, 0,
	1056, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 1100, 1101, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	1107, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	1070, 1071, 1074, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 1112, 369, 602, 603, 0, 604, 0, 371,
	372, 1114, 1072, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 1153, 383,
	385, 384, 0, 386, 1108, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 1063, 1062, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 0, 251, 1121, 432, 433, 0, 1073, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 1159, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	1102, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 1103, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 1161,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 213, 511, 512, 510, 513, 514, 515, 1066,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 1104,
	0, 538, 539, 0, 537, 215, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 1105, 552, 1106,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 1067, 567, 0,
	0, 568, 569, 570, 1514, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 207, 574, 575, 630, 576,
	577, 578, 0, 0, 208, 0, 0, 0, 3074, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 1843, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 0, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 1068, 0, 276, 585, 586, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 602, 603, 0, 604,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	1153, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 0, 251, 1121, 432, 433, 0,
	1073, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	1159, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	616, 1161, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 1104, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 0, 1149, 0, 1167, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 1157, 0, 1155, 1069,
	0, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 1068, 0,
	276, 585, 586, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 602, 603, 0, 604, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 1153, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 0, 251, 1121, 432, 433, 0, 1073, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 1159, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 616, 1161, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 1104, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 0, 1167, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 1157, 1069, 1155, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 1068, 0, 276, 585, 586, 587, 0,
	277, 278, 1075, 0, 1056, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065,
	1061, 1060, 1064, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 1100, 1101,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 1107, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 1070, 1071, 1074, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 1112, 369, 602, 603,
	0, 604, 0, 371, 372, 1114, 1072, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 1153, 383, 385, 384, 0, 386, 1108, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	1063, 1062, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 0, 251, 1121, 432,
	433, 0, 1073, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 1159, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 1102, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 1103, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 616, 1161, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 1066, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 1104, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 1105, 552, 1106, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 1067, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 0, 1167, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 1157, 1069,
	1155, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 1068, 0,
	276, 585, 586, 587, 0, 277, 278, 1075, 0, 1056,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 1059, 1057, 1058, 1065, 1061, 1060, 1064, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 1100, 1101, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 1107,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1070,
	1071, 1074, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 1112, 369, 602, 603, 0, 604, 0, 371, 372,
	1114, 1072, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 1108, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 1063, 1062, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 0, 251, 1121, 432, 433, 0, 1073, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 1102,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 1103, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 1066, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 1104, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 1105, 552, 1106, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 1067, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1167, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 1069, 0, 3554, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 1068, 0, 276, 585, 586, 587, 0, 277,
	278, 1075, 0, 1056, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061,
	1060, 1064, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 1100, 1101, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 1107, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1070, 1071, 1074, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 1112, 369, 602, 603, 0,
	604, 0, 371, 372, 1114, 1072, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 1108, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 1063,
	1062, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 0, 251, 1121, 432, 433,
	0, 1073, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 1102, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 1103, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 616, 1161, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 1066, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 1104, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	1105, 552, 1106, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	1067, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 0, 991, 0, 1356, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 1742,
	579, 0, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	1322, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 1112, 369, 602, 603, 0, 604, 0, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 0, 0, 1121, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 213, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 215, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 1514, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 207, 574, 575, 630, 576,
	577, 578, 0, 0, 208, 0, 0, 0, 1511, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 1322, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 368, 370, 0, 1112, 369, 602, 603, 0, 604,
	0, 371, 372, 1114, 605, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 0, 0, 1121, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 213, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 215, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 1514, 627, 628, 0,
	572, 571, 573, 629, 0, 0, 0, 207, 574, 575,
	630, 576, 577, 578, 1356, 1355, 208, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 177, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 1322, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 1112, 369,
	602, 603, 0, 604, 0, 371, 372, 1114, 605, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 0, 0,
	1121, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1356, 1355,
	0, 0, 0, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 1536, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	1322, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 1112, 369, 602, 603, 0, 604, 0, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 0, 0, 1121, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1356, 2041, 0, 0, 0, 0, 2042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 3329, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 1322, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 1112, 369, 602, 603,
	0, 604, 0, 371, 372, 1114, 605, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 2040, 385, 384, 0, 386, 606, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 0, 0, 1121, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1356, 1355, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	1536, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 1109, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 1322, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1110, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 1111, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 599, 600,
	601, 435, 1113, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 368, 370, 0,
	1112, 369, 602, 603, 0, 604, 0, 371, 372, 1114,
	605, 1115, 373, 374, 375, 1116, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 1117, 387, 388, 1118, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1119, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1120, 422,
	0, 0, 1121, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 1122, 445, 1123, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 1124, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 1125, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	1167, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 1069, 0, 1520, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 1068, 0, 276, 585, 586, 587, 0, 277, 278,
	1075, 0, 1056, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 1059, 1057, 1058, 1065, 1061, 1060,
	1064, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 1100, 1101, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 1107, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 1070, 1071, 1074, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 1112, 369, 602, 603, 0, 604,
	0, 371, 372, 1114, 1072, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 1108, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 1063, 1062,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 0, 251, 1121, 432, 433, 0,
	1073, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 1102, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 1103, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 1066, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 1104, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 1105,
	552, 1106, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 1067,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 991, 0, 246, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 599, 600,
	601, 435, 0, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 368, 370, 0,
	0, 369, 602, 603, 0, 604, 0, 371, 372, 0,
	605, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 0, 445, 0, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 0, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	213, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 215, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 1514, 627, 628, 0, 572, 571, 573, 629,
	246, 0, 0, 207, 574, 575, 630, 576, 577, 578,
	0, 0, 208, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 177, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 251, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 246, 2809, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 1857, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 246, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 4413, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 0, 246, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 3270,
	579, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 251, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 246, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 1457, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 246, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 2780, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 246, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	3431, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 0, 838, 0, 717, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 2145,
	579, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 724, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 836, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 251, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 722, 540, 541, 542, 543,
	544, 723, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 715, 0, 717, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 727,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 724, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 722, 540, 541, 542, 543, 544, 723, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 1894, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 727, 0, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 0,
	1900, 0, 268, 1890, 269, 1906, 0, 1913, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 1916, 1917,
	0, 0, 277, 278, 0, 0, 1322, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 1092,
	307, 1904, 1903, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 1077, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 0,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 1902, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 1911, 1912, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 0, 0, 0, 353,
	0, 354, 355, 356, 357, 358, 0, 0, 0, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 1112, 369,
	1897, 1898, 0, 1893, 0, 371, 372, 1114, 0, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	0, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 0, 0,
	1121, 432, 433, 0, 0, 434, 1905, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 0, 1122, 445, 1123, 0, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 1887, 458, 459, 460, 1888, 461, 462, 463, 0,
	464, 0, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 1901, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 0, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 1899,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	1915, 532, 533, 534, 535, 0, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 1907, 1908, 1909, 1910, 0, 557, 0,
	549, 550, 551, 0, 552, 0, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	0, 1891, 1914, 0, 572, 571, 573, 717, 0, 0,
	0, 0, 574, 575, 0, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 1881, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	724, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 251, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 722, 540, 541, 542, 543, 544,
	723, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 717, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 727, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 724, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 251, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 2186, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	2187, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 722, 540,
	541, 542, 543, 544, 723, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 2188, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 717, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 727, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 724, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 1920, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 722, 540, 541, 542, 543, 544, 723, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	1919, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 717,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 727, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 724, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 251, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 1873, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 722, 540, 541, 542,
	543, 544, 723, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 1872, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1356, 1355, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	727, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 1109, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 1322, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 1110, 301, 302, 0, 0, 0,
	0, 0, 0, 2744, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	1111, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 1113,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 1112, 369, 602,
	603, 0, 604, 0, 371, 372, 1114, 605, 1115, 373,
	374, 375, 1116, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	1117, 387, 388, 1118, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 1119, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 1120, 422, 0, 0, 1121,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 1122, 445, 1123, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 1124, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 2745, 516, 517, 500, 501, 518,
	519, 1125, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 1356, 1355, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 1109, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 1322,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 1110, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 1111, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 1113, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 1112, 369, 602, 603, 0, 604, 0, 371, 372,
	1114, 605, 1115, 373, 374, 375, 1116, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 1117, 387, 388, 1118, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 1119, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 1120,
	422, 0, 0, 1121, 432, 433, 3604, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 1122, 445, 1123, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 1124, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 1125, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 1356, 1355, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 1322, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 1112, 369, 602, 603, 0,
	604, 0, 371, 372, 1114, 605, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 0, 0, 1121, 432, 433,
	3242, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	246, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 251, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1564, 0, 1356, 1355, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 1109, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 1322, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 1110, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 249, 0, 0, 0, 0,
	0, 1563, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 1111, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 599, 600,
	601, 435, 1113, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 368, 370, 0,
	1112, 369, 602, 603, 0, 604, 0, 371, 372, 1114,
	605, 1115, 373, 374, 375, 1116, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 1117, 387, 388, 1118, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 1119, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 1120, 422,
	0, 0, 1121, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 1122, 445, 1123, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 1562, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 1124, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 1561, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 1125, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	1504, 0, 1356, 1355, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 1322, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 1503, 600, 601, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 1112, 369, 602, 603,
	0, 604, 0, 371, 372, 1114, 605, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 0, 0, 1121, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 1432, 0, 1356, 1355,
	0, 0, 0, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	1322, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	1431, 600, 601, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 1112, 369, 602, 603, 0, 604, 0, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 0, 0, 1121, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 1391, 0, 1356, 1355, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 1322, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 1112, 369,
	602, 603, 0, 604, 0, 371, 372, 1114, 605, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 0, 0,
	1121, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 1351, 0,
	1356, 1355, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 1109,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 1322, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 1110, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 1111, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 1350, 600, 601, 435, 1113, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 368, 370, 0, 1112, 369, 602, 603, 0, 604,
	0, 371, 372, 1114, 605, 1115, 373, 374, 375, 1116,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 1117, 387, 388,
	1118, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 1119,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 1120, 422, 0, 0, 1121, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 1122,
	445, 1123, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 1124, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 1125, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 1356, 1355, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 1109, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 1322, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 1110, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 1111, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	1113, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 1112, 369,
	602, 603, 0, 604, 0, 371, 372, 1114, 605, 1115,
	373, 374, 375, 1116, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 1117, 387, 388, 1118, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 1119, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 1120, 422, 0, 0,
	1121, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 1122, 445, 1123, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 1124,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 1125, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 1356, 1355,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 1109, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	1322, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 1110,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 1929, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 1111, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 1113, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 1112, 369, 602, 603, 0, 604, 0, 371,
	372, 1114, 605, 1115, 373, 374, 375, 1116, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 1117, 387, 388, 1118, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 1119, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	1120, 422, 0, 0, 1121, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 1122, 445, 1123,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 1124, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 1125, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 1356, 1355, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 1109, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 1322, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 1110, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 1111,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 1113, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 1112, 369, 602, 603,
	0, 604, 0, 371, 372, 1114, 605, 1115, 373, 374,
	375, 1116, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 1117,
	387, 388, 1118, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 1119, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 1120, 422, 0, 0, 1121, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 1122, 445, 1123, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 1124, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	1125, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 1356, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	1109, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 1322, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 1110, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 1111, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 1113, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 1112, 369, 602, 603, 0,
	604, 0, 371, 372, 1114, 605, 1115, 373, 374, 375,
	1116, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 1117, 387,
	388, 1118, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	1119, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 1120, 422, 0, 0, 1121, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	1122, 445, 1123, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 1124, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 1125,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	246, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 2611, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 2608, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 2615, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 2822,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 2614, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 2819, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 2821, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	2818, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	2613, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 2820, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 246,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 2611, 277, 278, 588,
	0, 0, 2605, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 2608, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 2615, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 2614, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 2604, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 2613,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	2612, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1631, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	1634, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 1632, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 1633, 571, 573, 629, 1326,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1328, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 251, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 1159, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1323, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1325,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 251, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 1159, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1229, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 1231, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 1159, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 662, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	661, 257, 258, 651, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 654, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 655,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 656, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 650, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 651,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 654, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 655, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 656,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 246, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 251,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 1159, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 246, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 3205, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 2751, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 2750, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 251, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 2159, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 246, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 251,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 2074, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 2080, 0,
	246, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 249,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 2079, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 250, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 251, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 2067, 0, 246, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 2069, 600,
	601, 435, 0, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 250, 366, 367, 368, 370, 0,
	0, 369, 602, 603, 0, 604, 0, 371, 372, 0,
	605, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 251, 0, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 0, 445, 0, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 0, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 246, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 2037, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 1159, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 1497,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1496, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 251, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1488, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1487,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 251, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1485, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 1484, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 1480, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 1479, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 251, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1435, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 1344,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 251, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1337, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 249, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1339,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 250, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 251, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 632, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 237, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 249, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 250, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 251, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 246, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 249, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 250, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 251, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 246, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 654, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 655, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 656, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 246, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 2195,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 249, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 599, 600,
	601, 435, 0, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 250, 366, 367, 368, 370, 0,
	0, 369, 602, 603, 0, 604, 0, 371, 372, 0,
	605, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 251, 0, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 0, 445, 0, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 0, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 246, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 2193, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 249, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 250, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	251, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 246, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 2191, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 249, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 250, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 251,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 246, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 249, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 2124, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 250, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 251, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 246, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 249, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 2118, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	250, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 251, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 246, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	249, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 2086, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 250,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 251, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 825, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 824, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 823, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 246, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 2822, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 599, 600,
	601, 435, 0, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 368, 370, 0,
	0, 369, 602, 603, 0, 604, 0, 371, 372, 0,
	605, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 0, 445, 0, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 3868, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 0, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 0, 572, 571, 573, 629,
	684, 0, 246, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 1199, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 1197, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	685, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 681, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 1200, 515, 0, 516, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 680, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 0, 572, 571, 573, 629, 684, 0, 246, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 1199, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 1197, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 685, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 681, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 1200, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 680, 621, 622,
	623, 0, 557, 0, 549, 1198, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 641, 0, 246, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 640, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 639, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 0, 572, 571, 573, 629, 246, 2809,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	599, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 0, 572, 571,
	573, 629, 246, 3878, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 0, 0, 0, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 246, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	3578, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	246, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 2525, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 0,
	572, 571, 573, 629, 246, 2809, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 0, 0, 0, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 599, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 2806, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 246, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 2169, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 2157, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 684, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 674, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 685, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 681, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 1519, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 680, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 1501,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1500, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1494, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 1493,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1441, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 1440, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 1424, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 1422, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 1418, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 1395,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1393, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 1347, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 1331, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 503, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 246, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 1180, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 516, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 246, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 690, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	0, 572, 571, 573, 629, 684, 0, 246, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 674, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 672, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 599,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 673, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 685, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 675, 495, 0,
	496, 497, 503, 504, 498, 499, 681, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 676, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 680, 621, 622, 623,
	0, 557, 0, 549, 678, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 0, 572, 571, 573,
	629, 666, 0, 246, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 667, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 0, 572, 571, 573, 629, 664, 0, 246,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 658, 0, 246, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 599, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 0, 572, 571, 573, 629, 636,
	0, 246, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 599, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	246, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 476, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 246,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 353, 0, 354, 355, 356, 357,
	358, 3288, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 450, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 472, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	495, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 246, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 0, 0, 252, 254, 253, 255, 256,
	257, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 261, 262, 0, 263, 264,
	265, 266, 267, 580, 581, 0, 268, 582, 269, 583,
	0, 584, 270, 271, 272, 273, 274, 275, 0, 0,
	0, 276, 585, 586, 587, 0, 277, 278, 588, 0,
	0, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	0, 287, 288, 289, 286, 290, 0, 291, 0, 292,
	293, 294, 295, 296, 297, 0, 298, 299, 300, 0,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 303,
	304, 305, 306, 0, 307, 589, 590, 0, 311, 308,
	309, 0, 312, 310, 0, 313, 314, 315, 0, 0,
	316, 317, 318, 0, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 591, 326, 327, 328, 330, 332, 329,
	333, 334, 335, 336, 592, 593, 0, 0, 0, 0,
	0, 0, 0, 337, 338, 339, 594, 0, 0, 0,
	340, 0, 341, 0, 0, 0, 342, 343, 595, 596,
	344, 345, 346, 347, 348, 349, 350, 351, 0, 352,
	597, 0, 598, 353, 0, 354, 355, 356, 357, 358,
	3236, 600, 601, 435, 0, 359, 360, 0, 361, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 368,
	370, 0, 0, 369, 602, 603, 0, 604, 0, 371,
	372, 0, 605, 0, 373, 374, 375, 0, 376, 0,
	0, 0, 377, 378, 379, 380, 381, 382, 0, 383,
	385, 384, 0, 386, 606, 0, 387, 388, 0, 0,
	389, 0, 0, 0, 390, 391, 0, 0, 392, 393,
	394, 395, 0, 396, 397, 399, 402, 398, 400, 401,
	403, 416, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 418, 0, 417, 0, 419, 420,
	421, 426, 428, 429, 424, 425, 427, 430, 431, 423,
	0, 422, 0, 0, 0, 432, 433, 0, 607, 434,
	608, 436, 437, 0, 0, 438, 0, 0, 0, 440,
	441, 442, 0, 0, 443, 444, 609, 0, 445, 0,
	610, 446, 447, 439, 448, 449, 450, 451, 452, 453,
	454, 455, 0, 456, 457, 611, 458, 459, 460, 612,
	461, 462, 463, 613, 464, 614, 465, 466, 0, 467,
	0, 468, 469, 470, 471, 472, 473, 474, 615, 476,
	475, 477, 0, 478, 0, 0, 0, 0, 0, 479,
	0, 481, 482, 483, 480, 484, 485, 486, 487, 0,
	488, 489, 490, 0, 491, 492, 493, 494, 616, 495,
	0, 496, 497, 503, 504, 498, 499, 505, 506, 507,
	508, 509, 0, 511, 512, 510, 513, 514, 515, 0,
	516, 517, 500, 501, 518, 519, 0, 520, 521, 522,
	523, 524, 525, 617, 0, 526, 0, 527, 528, 529,
	530, 502, 531, 536, 618, 532, 533, 534, 535, 619,
	0, 538, 539, 0, 537, 0, 540, 541, 542, 543,
	544, 545, 546, 331, 547, 0, 548, 620, 621, 622,
	623, 0, 557, 0, 549, 550, 551, 624, 552, 625,
	0, 553, 554, 555, 556, 0, 558, 559, 0, 0,
	560, 561, 562, 564, 565, 563, 566, 0, 567, 0,
	0, 568, 569, 570, 626, 627, 628, 246, 572, 571,
	573, 629, 0, 0, 0, 0, 574, 575, 630, 576,
	577, 578, 0, 0, 252, 254, 253, 255, 256, 257,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 261, 262, 0, 263, 264, 265,
	266, 267, 580, 581, 0, 268, 582, 269, 583, 0,
	584, 270, 271, 272, 273, 274, 275, 0, 0, 0,
	276, 585, 586, 587, 0, 277, 278, 588, 0, 0,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 0,
	287, 288, 289, 286, 290, 0, 291, 0, 292, 293,
	294, 295, 296, 297, 0, 298, 299, 300, 0, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 303, 304,
	305, 306, 0, 307, 589, 590, 0, 311, 308, 309,
	0, 312, 310, 0, 313, 314, 315, 0, 0, 316,
	317, 318, 0, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 591, 326, 327, 328, 330, 332, 329, 333,
	334, 335, 336, 592, 593, 0, 0, 0, 0, 0,
	0, 0, 337, 338, 339, 594, 0, 0, 0, 340,
	0, 341, 0, 0, 0, 342, 343, 595, 596, 344,
	345, 346, 347, 348, 349, 350, 351, 0, 352, 597,
	0, 598, 353, 0, 354, 355, 356, 357, 358, 3176,
	600, 601, 435, 0, 359, 360, 0, 361, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 368, 370,
	0, 0, 369, 602, 603, 0, 604, 0, 371, 372,
	0, 605, 0, 373, 374, 375, 0, 376, 0, 0,
	0, 377, 378, 379, 380, 381, 382, 0, 383, 385,
	384, 0, 386, 606, 0, 387, 388, 0, 0, 389,
	0, 0, 0, 390, 391, 0, 0, 392, 393, 394,
	395, 0, 396, 397, 399, 402, 398, 400, 401, 403,
	416, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 418, 0, 417, 0, 419, 420, 421,
	426, 428, 429, 424, 425, 427, 430, 431, 423, 0,
	422, 0, 0, 0, 432, 433, 0, 607, 434, 608,
	436, 437, 0, 0, 438, 0, 0, 0, 440, 441,
	442, 0, 0, 443, 444, 609, 0, 445, 0, 610,
	446, 447, 439, 448, 449, 450, 451, 452, 453, 454,
	455, 0, 456, 457, 611, 458, 459, 460, 612, 461,
	462, 463, 613, 464, 614, 465, 466, 0, 467, 0,
	468, 469, 470, 471, 472, 473, 474, 615, 476, 475,
	477, 0, 478, 0, 0, 0, 0, 0, 479, 0,
	481, 482, 483, 480, 484, 485, 486, 487, 0, 488,
	489, 490, 0, 491, 492, 493, 494, 616, 495, 0,
	496, 497, 503, 504, 498, 499, 505, 506, 507, 508,
	509, 0, 511, 512, 510, 513, 514, 515, 0, 516,
	517, 500, 501, 518, 519, 0, 520, 521, 522, 523,
	524, 525, 617, 0, 526, 0, 527, 528, 529, 530,
	502, 531, 536, 618, 532, 533, 534, 535, 619, 0,
	538, 539, 0, 537, 0, 540, 541, 542, 543, 544,
	545, 546, 331, 547, 0, 548, 620, 621, 622, 623,
	0, 557, 0, 549, 550, 551, 624, 552, 625, 0,
	553, 554, 555, 556, 0, 558, 559, 0, 0, 560,
	561, 562, 564, 565, 563, 566, 0, 567, 0, 0,
	568, 569, 570, 626, 627, 628, 246, 572, 571, 573,
	629, 0, 0, 0, 0, 574, 575, 630, 576, 577,
	578, 0, 0, 252, 254, 253, 255, 256, 257, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 261, 262, 0, 263, 264, 265, 266,
	267, 580, 581, 0, 268, 582, 269, 583, 0, 584,
	270, 271, 272, 273, 274, 275, 0, 0, 0, 276,
	585, 586, 587, 0, 277, 278, 588, 0, 0, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 0, 287,
	288, 289, 286, 290, 0, 291, 0, 292, 293, 294,
	295, 296, 297, 0, 298, 299, 300, 0, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 303, 304, 305,
	306, 0, 307, 589, 590, 0, 311, 308, 309, 0,
	312, 310, 0, 313, 314, 315, 0, 0, 316, 317,
	318, 0, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 591, 326, 327, 328, 330, 332, 329, 333, 334,
	335, 336, 592, 593, 0, 0, 0, 0, 0, 0,
	0, 337, 338, 339, 594, 0, 0, 0, 340, 0,
	341, 0, 0, 0, 342, 343, 595, 596, 344, 345,
	346, 347, 348, 349, 350, 351, 0, 352, 597, 0,
	598, 353, 0, 354, 355, 356, 357, 358, 3174, 600,
	601, 435, 0, 359, 360, 0, 361, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 368, 370, 0,
	0, 369, 602, 603, 0, 604, 0, 371, 372, 0,
	605, 0, 373, 374, 375, 0, 376, 0, 0, 0,
	377, 378, 379, 380, 381, 382, 0, 383, 385, 384,
	0, 386, 606, 0, 387, 388, 0, 0, 389, 0,
	0, 0, 390, 391, 0, 0, 392, 393, 394, 395,
	0, 396, 397, 399, 402, 398, 400, 401, 403, 416,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 418, 0, 417, 0, 419, 420, 421, 426,
	428, 429, 424, 425, 427, 430, 431, 423, 0, 422,
	0, 0, 0, 432, 433, 0, 607, 434, 608, 436,
	437, 0, 0, 438, 0, 0, 0, 440, 441, 442,
	0, 0, 443, 444, 609, 0, 445, 0, 610, 446,
	447, 439, 448, 449, 450, 451, 452, 453, 454, 455,
	0, 456, 457, 611, 458, 459, 460, 612, 461, 462,
	463, 613, 464, 614, 465, 466, 0, 467, 0, 468,
	469, 470, 471, 472, 473, 474, 615, 476, 475, 477,
	0, 478, 0, 0, 0, 0, 0, 479, 0, 481,
	482, 483, 480, 484, 485, 486, 487, 0, 488, 489,
	490, 0, 491, 492, 493, 494, 616, 495, 0, 496,
	497, 503, 504, 498, 499, 505, 506, 507, 508, 509,
	0, 511, 512, 510, 513, 514, 515, 0, 516, 517,
	500, 501, 518, 519, 0, 520, 521, 522, 523, 524,
	525, 617, 0, 526, 0, 527, 528, 529, 530, 502,
	531, 536, 618, 532, 533, 534, 535, 619, 0, 538,
	539, 0, 537, 0, 540, 541, 542, 543, 544, 545,
	546, 331, 547, 0, 548, 620, 621, 622, 623, 0,
	557, 0, 549, 550, 551, 624, 552, 625, 0, 553,
	554, 555, 556, 0, 558, 559, 0, 0, 560, 561,
	562, 564, 565, 563, 566, 0, 567, 0, 0, 568,
	569, 570, 626, 627, 628, 246, 572, 571, 573, 629,
	0, 0, 0, 0, 574, 575, 630, 576, 577, 578,
	0, 0, 252, 254, 253, 255, 256, 257, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 261, 262, 0, 263, 264, 265, 266, 267,
	580, 581, 0, 268, 582, 269, 583, 0, 584, 270,
	271, 272, 273, 274, 275, 0, 0, 0, 276, 585,
	586, 587, 0, 277, 278, 588, 0, 0, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 0, 287, 288,
	289, 286, 290, 0, 291, 0, 292, 293, 294, 295,
	296, 297, 0, 298, 299, 300, 0, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 303, 304, 305, 306,
	0, 307, 589, 590, 0, 311, 308, 309, 0, 312,
	310, 0, 313, 314, 315, 0, 0, 316, 317, 318,
	0, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	591, 326, 327, 328, 330, 332, 329, 333, 334, 335,
	336, 592, 593, 0, 0, 0, 0, 0, 0, 0,
	337, 338, 339, 594, 0, 0, 0, 340, 0, 341,
	0, 0, 0, 342, 343, 595, 596, 344, 345, 346,
	347, 348, 349, 350, 351, 0, 352, 597, 0, 598,
	353, 0, 354, 355, 356, 357, 358, 3160, 600, 601,
	435, 0, 359, 360, 0, 361, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 368, 370, 0, 0,
	369, 602, 603, 0, 604, 0, 371, 372, 0, 605,
	0, 373, 374, 375, 0, 376, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 0, 383, 385, 384, 0,
	386, 606, 0, 387, 388, 0, 0, 389, 0, 0,
	0, 390, 391, 0, 0, 392, 393, 394, 395, 0,
	396, 397, 399, 402, 398, 400, 401, 403, 416, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 418, 0, 417, 0, 419, 420, 421, 426, 428,
	429, 424, 425, 427, 430, 431, 423, 0, 422, 0,
	0, 0, 432, 433, 0, 607, 434, 608, 436, 437,
	0, 0, 438, 0, 0, 0, 440, 441, 442, 0,
	0, 443, 444, 609, 0, 445, 0, 610, 446, 447,
	439, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	456, 457, 611, 458, 459, 460, 612, 461, 462, 463,
	613, 464, 614, 465, 466, 0, 467, 0, 468, 469,
	470, 471, 472, 473, 474, 615, 476, 475, 477, 0,
	478, 0, 0, 0, 0, 0, 479, 0, 481, 482,
	483, 480, 484, 485, 486, 487, 0, 488, 489, 490,
	0, 491, 492, 493, 494, 616, 495, 0, 496, 497,
	503, 504, 498, 499, 505, 506, 507, 508, 509, 0,
	511, 512, 510, 513, 514, 515, 0, 516, 517, 500,
	501, 518, 519, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 526, 0, 527, 528, 529, 530, 502, 531,
	536, 618, 532, 533, 534, 535, 619, 0, 538, 539,
	0, 537, 0, 540, 541, 542, 543, 544, 545, 546,
	331, 547, 0, 548, 620, 621, 622, 623, 0, 557,
	0, 549, 550, 551, 624, 552, 625, 0, 553, 554,
	555, 556, 0, 558, 559, 0, 0, 560, 561, 562,
	564, 565, 563, 566, 0, 567, 0, 0, 568, 569,
	570, 626, 627, 628, 246, 572, 571, 573, 629, 0,
	0, 0, 0, 574, 575, 630, 576, 577, 578, 0,
	0, 252, 254, 253, 255, 256, 257, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 261, 262, 0, 263, 264, 265, 266, 267, 580,
	581, 0, 268, 582, 269, 583, 0, 584, 270, 271,
	272, 273, 274, 275, 0, 0, 0, 276, 585, 586,
	587, 0, 277, 278, 588, 0, 0, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 0, 287, 288, 289,
	286, 290, 0, 291, 0, 292, 293, 294, 295, 296,
	297, 0, 298, 299, 300, 0, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 303, 304, 305, 306, 0,
	307, 589, 590, 0, 311, 308, 309, 0, 312, 310,
	0, 313, 314, 315, 0, 0, 316, 317, 318, 0,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 591,
	326, 327, 328, 330, 332, 329, 333, 334, 335, 336,
	592, 593, 0, 0, 0, 0, 0, 0, 0, 337,
	338, 339, 594, 0, 0, 0, 340, 0, 341, 0,
	0, 0, 342, 343, 595, 596, 344, 345, 346, 347,
	348, 349, 350, 351, 0, 352, 597, 0, 598, 353,
	0, 354, 355, 356, 357, 358, 2760, 600, 601, 435,
	0, 359, 360, 0, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 368, 370, 0, 0, 369,
	602, 603, 0, 604, 0, 371, 372, 0, 605, 0,
	373, 374, 375, 0, 376, 0, 0, 0, 377, 378,
	379, 380, 381, 382, 0, 383, 385, 384, 0, 386,
	606, 0, 387, 388, 0, 0, 389, 0, 0, 0,
	390, 391, 0, 0, 392, 393, 394, 395, 0, 396,
	397, 399, 402, 398, 400, 401, 403, 416, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	418, 0, 417, 0, 419, 420, 421, 426, 428, 429,
	424, 425, 427, 430, 431, 423, 0, 422, 0, 0,
	0, 432, 433, 0, 607, 434, 608, 436, 437, 0,
	0, 438, 0, 0, 0, 440, 441, 442, 0, 0,
	443, 444, 609, 0, 445, 0, 610, 446, 447, 439,
	448, 449, 450, 451, 452, 453, 454, 455, 0, 456,
	457, 611, 458, 459, 460, 612, 461, 462, 463, 613,
	464, 614, 465, 466, 0, 467, 0, 468, 469, 470,
	471, 472, 473, 474, 615, 476, 475, 477, 0, 478,
	0, 0, 0, 0, 0, 479, 0, 481, 482, 483,
	480, 484, 485, 486, 487, 0, 488, 489, 490, 0,
	491, 492, 493, 494, 616, 495, 0, 496, 497, 503,
	504, 498, 499, 505, 506, 507, 508, 509, 0, 511,
	512, 510, 513, 514, 515, 0, 516, 517, 500, 501,
	518, 519, 0, 520, 521, 522, 523, 524, 525, 617,
	0, 526, 0, 527, 528, 529, 530, 502, 531, 536,
	618, 532, 533, 534, 535, 619, 0, 538, 539, 0,
	537, 0, 540, 541, 542, 543, 544, 545, 546, 331,
	547, 0, 548, 620, 621, 622, 623, 0, 557, 0,
	549, 550, 551, 624, 552, 625, 0, 553, 554, 555,
	556, 0, 558, 559, 0, 0, 560, 561, 562, 564,
	565, 563, 566, 0, 567, 0, 0, 568, 569, 570,
	626, 627, 628, 246, 572, 571, 573, 629, 0, 0,
	0, 0, 574, 575, 630, 576, 577, 578, 0, 0,
	252, 254, 253, 255, 256, 257, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	261, 262, 0, 263, 264, 265, 266, 267, 580, 581,
	0, 268, 582, 269, 583, 0, 584, 270, 271, 272,
	273, 274, 275, 0, 0, 0, 276, 585, 586, 587,
	0, 277, 278, 588, 0, 0, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 0, 287, 288, 289, 286,
	290, 0, 291, 0, 292, 293, 294, 295, 296, 297,
	0, 298, 299, 300, 0, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 303, 304, 305, 306, 0, 307,
	589, 590, 0, 311, 308, 309, 0, 312, 310, 0,
	313, 314, 315, 0, 0, 316, 317, 318, 0, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 591, 326,
	327, 328, 330, 332, 329, 333, 334, 335, 336, 592,
	593, 0, 0, 0, 0, 0, 0, 0, 337, 338,
	339, 594, 0, 0, 0, 340, 0, 341, 0, 0,
	0, 342, 343, 595, 596, 344, 345, 346, 347, 348,
	349, 350, 351, 0, 352, 597, 0, 598, 353, 0,
	354, 355, 356, 357, 358, 599, 600, 601, 435, 0,
	359, 360, 0, 361, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 368, 370, 0, 0, 369, 602,
	603, 0, 604, 0, 371, 372, 0, 605, 0, 373,
	374, 375, 0, 376, 0, 0, 0, 377, 378, 379,
	380, 381, 382, 0, 383, 385, 384, 0, 386, 606,
	0, 387, 388, 0, 0, 389, 0, 0, 0, 390,
	391, 0, 0, 392, 393, 394, 395, 0, 396, 397,
	399, 402, 398, 400, 401, 403, 416, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 418,
	0, 417, 0, 419, 420, 421, 426, 428, 429, 424,
	425, 427, 430, 431, 423, 0, 422, 0, 0, 0,
	432, 433, 0, 607, 434, 608, 436, 437, 0, 0,
	438, 0, 0, 0, 440, 441, 442, 0, 0, 443,
	444, 609, 0, 445, 0, 610, 446, 447, 439, 448,
	449, 450, 451, 452, 453, 454, 455, 0, 456, 457,
	611, 458, 459, 460, 612, 461, 462, 463, 613, 464,
	614, 465, 466, 0, 467, 0, 468, 469, 470, 471,
	472, 473, 474, 615, 476, 475, 477, 0, 478, 0,
	0, 0, 0, 0, 479, 0, 481, 482, 483, 480,
	484, 485, 486, 487, 0, 488, 489, 490, 0, 491,
	492, 493, 494, 616, 495, 0, 496, 497, 667, 504,
	498, 499, 505, 506, 507, 508, 509, 0, 511, 512,
	510, 513, 514, 515, 0, 516, 517, 500, 501, 518,
	519, 0, 520, 521, 522, 523, 524, 525, 617, 0,
	526, 0, 527, 528, 529, 530, 502, 531, 536, 618,
	532, 533, 534, 535, 619, 0, 538, 539, 0, 537,
	0, 540, 541, 542, 543, 544, 545, 546, 331, 547,
	0, 548, 620, 621, 622, 623, 0, 557, 0, 549,
	550, 551, 624, 552, 625, 0, 553, 554, 555, 556,
	0, 558, 559, 0, 0, 560, 561, 562, 564, 565,
	563, 566, 0, 567, 0, 0, 568, 569, 570, 626,
	627, 628, 246, 572, 571, 573, 629, 0, 0, 0,
	0, 574, 575, 630, 576, 577, 578, 0, 0, 252,
	254, 253, 255, 256, 257, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 579, 0, 2103, 0, 0, 261,
	262, 0, 263, 264, 265, 266, 267, 580, 581, 0,
	268, 582, 269, 583, 0, 584, 270, 271, 272, 273,
	274, 275, 0, 0, 0, 276, 585, 586, 587, 0,
	277, 278, 588, 0, 0, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 0, 287, 288, 289, 286, 290,
	0, 291, 0, 292, 293, 294, 295, 296, 297, 0,
	298, 299, 300, 0, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 303, 304, 305, 306, 0, 307, 589,
	590, 0, 311, 308, 309, 0, 312, 310, 0, 313,
	314, 315, 0, 0, 316, 317, 318, 0, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 591, 326, 327,
	328, 330, 332, 329, 333, 334, 335, 336, 592, 593,
	0, 0, 0, 0, 0, 0, 0, 337, 338, 339,
	594, 0, 0, 0, 340, 0, 341, 0, 0, 0,
	342, 343, 595, 596, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, 597, 0, 598, 353, 0, 354,
	355, 356, 357, 358, 599, 600, 601, 435, 0, 359,
	360, 0, 361, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 368, 370, 0, 0, 369, 602, 603,
	0, 604, 0, 371, 372, 0, 605, 0, 373, 374,
	375, 0, 376, 0, 0, 0, 377, 378, 379, 380,
	381, 382, 0, 383, 385, 384, 0, 386, 606, 0,
	387, 388, 0, 0, 389, 0, 0, 0, 390, 391,
	0, 0, 392, 393, 394, 395, 0, 396, 397, 399,
	402, 398, 400, 401, 403, 416, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 418, 0,
	417, 0, 419, 420, 421, 426, 428, 429, 424, 425,
	427, 430, 431, 423, 0, 422, 0, 0, 0, 432,
	433, 0, 607, 434, 608, 436, 437, 0, 0, 438,
	0, 0, 0, 440, 441, 442, 0, 0, 443, 444,
	609, 0, 445, 0, 610, 446, 447, 439, 448, 449,
	450, 451, 452, 453, 454, 455, 0, 456, 457, 611,
	458, 459, 460, 612, 461, 462, 463, 613, 464, 614,
	465, 466, 0, 467, 0, 468, 469, 470, 471, 472,
	473, 474, 615, 476, 475, 477, 0, 478, 0, 0,
	0, 0, 0, 479, 0, 481, 482, 483, 480, 484,
	485, 486, 487, 0, 488, 489, 490, 0, 491, 492,
	493, 494, 616, 495, 0, 496, 497, 503, 504, 498,
	499, 505, 506, 507, 508, 509, 0, 511, 512, 510,
	513, 514, 515, 0, 0, 517, 500, 501, 518, 519,
	0, 520, 521, 522, 523, 524, 525, 617, 0, 526,
	0, 527, 528, 529, 530, 502, 531, 536, 618, 532,
	533, 534, 535, 619, 0, 538, 539, 0, 537, 0,
	540, 541, 542, 543, 544, 545, 546, 331, 547, 0,
	548, 620, 621, 622, 623, 0, 557, 0, 549, 550,
	551, 624, 552, 625, 0, 553, 554, 555, 556, 0,
	558, 559, 0, 0, 560, 561, 562, 564, 565, 563,
	566, 0, 567, 0, 0, 568, 569, 570, 626, 627,
	628, 246, 572, 571, 573, 629, 0, 0, 0, 0,
	574, 575, 630, 576, 577, 578, 0, 0, 252, 254,
	253, 255, 256, 257, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 261, 262,
	0, 263, 264, 265, 266, 267, 580, 581, 0, 268,
	582, 269, 583, 0, 584, 270, 271, 272, 273, 274,
	275, 0, 0, 0, 276, 585, 586, 587, 0, 277,
	278, 588, 0, 0, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 0, 287, 288, 289, 286, 290, 0,
	291, 0, 292, 293, 294, 295, 296, 297, 0, 298,
	299, 300, 0, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 303, 304, 305, 306, 0, 307, 589, 590,
	0, 311, 308, 309, 0, 312, 310, 0, 313, 314,
	315, 0, 0, 316, 317, 318, 0, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 591, 326, 327, 328,
	330, 332, 329, 333, 334, 335, 336, 592, 593, 0,
	0, 0, 0, 0, 0, 0, 337, 338, 339, 594,
	0, 0, 0, 340, 0, 341, 0, 0, 0, 342,
	343, 595, 596, 344, 345, 346, 347, 348, 349, 350,
	351, 0, 352, 597, 0, 598, 353, 0, 354, 355,
	356, 357, 358, 1465, 600, 601, 435, 0, 359, 360,
	0, 361, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 368, 370, 0, 0, 369, 602, 603, 0,
	604, 0, 371, 372, 0, 605, 0, 373, 374, 375,
	0, 376, 0, 0, 0, 377, 378, 379, 380, 381,
	382, 0, 383, 385, 384, 0, 386, 606, 0, 387,
	388, 0, 0, 389, 0, 0, 0, 390, 391, 0,
	0, 392, 393, 394, 395, 0, 396, 397, 399, 402,
	398, 400, 401, 403, 416, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 418, 0, 417,
	0, 419, 420, 421, 426, 428, 429, 424, 425, 427,
	430, 431, 423, 0, 422, 0, 0, 0, 432, 433,
	0, 607, 434, 608, 436, 437, 0, 0, 438, 0,
	0, 0, 440, 441, 442, 0, 0, 443, 444, 609,
	0, 445, 0, 610, 446, 447, 439, 448, 449, 450,
	451, 452, 453, 454, 455, 0, 456, 457, 611, 458,
	459, 460, 612, 461, 462, 463, 613, 464, 614, 465,
	466, 0, 467, 0, 468, 469, 470, 471, 472, 473,
	474, 615, 476, 475, 477, 0, 478, 0, 0, 0,
	0, 0, 479, 0, 481, 482, 483, 480, 484, 485,
	486, 487, 0, 488, 489, 490, 0, 491, 492, 493,
	494, 616, 495, 0, 496, 497, 503, 504, 498, 499,
	505, 506, 507, 508, 509, 0, 511, 512, 510, 513,
	514, 515, 0, 516, 517, 500, 501, 518, 519, 0,
	520, 521, 522, 523, 524, 525, 617, 0, 526, 0,
	527, 528, 529, 530, 502, 531, 536, 618, 532, 533,
	534, 535, 619, 0, 538, 539, 0, 537, 0, 540,
	541, 542, 543, 544, 545, 546, 331, 547, 0, 548,
	620, 621, 622, 623, 0, 557, 0, 549, 550, 551,
	624, 552, 625, 0, 553, 554, 555, 556, 0, 558,
	559, 0, 0, 560, 561, 562, 564, 565, 563, 566,
	0, 567, 0, 0, 568, 569, 570, 626, 627, 628,
	246, 572, 571, 573, 629, 0, 0, 0, 0, 574,
	575, 630, 576, 577, 578, 0, 0, 252, 254, 253,
	255, 256, 257, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 0, 261, 262, 0,
	263, 264, 265, 266, 267, 580, 581, 0, 268, 582,
	269, 583, 0, 584, 270, 271, 272, 273, 274, 275,
	0, 0, 0, 276, 585, 586, 587, 0, 277, 278,
	588, 0, 0, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 0, 287, 288, 289, 286, 290, 0, 291,
	0, 292, 293, 294, 295, 296, 297, 0, 298, 299,
	300, 0, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 305, 306, 0, 307, 589, 590, 0,
	311, 308, 309, 0, 312, 310, 0, 313, 314, 315,
	0, 0, 316, 317, 318, 0, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 591, 326, 327, 328, 330,
	332, 329, 333, 334, 335, 336, 592, 593, 0, 0,
	0, 0, 0, 0, 0, 337, 338, 339, 594, 0,
	0, 0, 340, 0, 341, 0, 0, 0, 342, 343,
	595, 596, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 352, 597, 0, 598, 353, 0, 354, 355, 356,
	357, 358, 599, 600, 601, 435, 0, 359, 360, 0,
	361, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 368, 370, 0, 0, 369, 602, 603, 0, 604,
	0, 371, 372, 0, 605, 0, 373, 374, 375, 0,
	376, 0, 0, 0, 377, 378, 379, 380, 381, 382,
	0, 383, 385, 384, 0, 386, 606, 0, 387, 388,
	0, 0, 389, 0, 0, 0, 390, 391, 0, 0,
	392, 393, 394, 395, 0, 396, 397, 399, 402, 398,
	400, 401, 403, 416, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 418, 0, 417, 0,
	419, 420, 421, 426, 428, 429, 424, 425, 427, 430,
	431, 423, 0, 422, 0, 0, 0, 432, 433, 0,
	607, 434, 608, 436, 437, 0, 0, 438, 0, 0,
	0, 440, 441, 442, 0, 0, 443, 444, 609, 0,
	445, 0, 610, 446, 447, 439, 448, 449, 450, 451,
	452, 453, 454, 455, 0, 456, 457, 611, 458, 459,
	460, 612, 461, 462, 463, 613, 464, 614, 465, 466,
	0, 467, 0, 468, 469, 470, 471, 472, 473, 474,
	615, 1132, 475, 477, 0, 478, 0, 0, 0, 0,
	0, 479, 0, 481, 482, 483, 480, 484, 485, 486,
	487, 0, 488, 489, 490, 0, 491, 492, 493, 494,
	616, 495, 0, 496, 497, 503, 504, 498, 499, 505,
	506, 507, 508, 509, 0, 511, 512, 510, 513, 514,
	515, 0, 516, 517, 500, 501, 518, 519, 0, 520,
	521, 522, 523, 524, 525, 617, 0, 526, 0, 527,
	528, 529, 530, 502, 531, 536, 618, 532, 533, 534,
	535, 619, 0, 538, 539, 0, 537, 0, 540, 541,
	542, 543, 544, 545, 546, 331, 547, 0, 548, 620,
	621, 622, 623, 0, 557, 0, 549, 550, 551, 624,
	552, 625, 0, 553, 554, 555, 556, 0, 558, 559,
	0, 0, 560, 561, 562, 564, 565, 563, 566, 0,
	567, 0, 0, 568, 569, 570, 626, 627, 628, 246,
	572, 571, 573, 629, 0, 0, 0, 0, 574, 575,
	630, 576, 577, 578, 0, 0, 252, 254, 253, 255,
	256, 257, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 261, 262, 0, 263,
	264, 265, 266, 267, 580, 581, 0, 268, 582, 269,
	583, 0, 584, 270, 271, 272, 273, 274, 275, 0,
	0, 0, 276, 585, 586, 587, 0, 277, 278, 588,
	0, 0, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 0, 287, 288, 289, 286, 290, 0, 291, 0,
	292, 293, 294, 295, 296, 297, 0, 298, 299, 300,
	0, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	303, 304, 305, 306, 0, 307, 589, 590, 0, 311,
	308, 309, 0, 312, 310, 0, 313, 314, 315, 0,
	0, 316, 317, 318, 0, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 591, 326, 327, 328, 330, 332,
	329, 333, 334, 335, 336, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 594, 0, 0,
	0, 340, 0, 341, 0, 0, 0, 342, 343, 595,
	596, 344, 345, 346, 347, 348, 349, 350, 351, 0,
	352, 597, 0, 598, 0, 0, 354, 355, 356, 357,
	358, 599, 600, 601, 435, 0, 359, 360, 0, 361,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	368, 370, 0, 0, 369, 602, 603, 0, 604, 0,
	371, 372, 0, 605, 0, 373, 374, 375, 0, 376,
	0, 0, 0, 377, 378, 379, 380, 381, 382, 0,
	383, 385, 384, 0, 386, 606, 0, 387, 388, 0,
	0, 389, 0, 0, 0, 390, 391, 0, 0, 392,
	393, 394, 395, 0, 396, 397, 399, 402, 398, 400,
	401, 403, 416, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 418, 0, 417, 0, 419,
	420, 421, 426, 428, 429, 424, 425, 427, 430, 431,
	423, 0, 422, 0, 0, 0, 432, 433, 0, 607,
	434, 608, 436, 437, 0, 0, 438, 0, 0, 0,
	440, 441, 442, 0, 0, 443, 444, 609, 0, 445,
	0, 610, 446, 447, 439, 448, 449, 0, 451, 452,
	453, 454, 455, 0, 456, 457, 611, 458, 459, 460,
	612, 461, 462, 463, 613, 464, 614, 465, 466, 0,
	467, 0, 468, 469, 470, 471, 0, 473, 474, 615,
	476, 475, 477, 0, 478, 0, 0, 0, 0, 0,
	479, 0, 481, 482, 483, 480, 484, 485, 486, 487,
	0, 488, 489, 490, 0, 491, 492, 493, 494, 616,
	0, 0, 496, 497, 503, 504, 498, 499, 505, 506,
	507, 508, 509, 0, 511, 512, 510, 513, 514, 515,
	0, 516, 517, 500, 501, 518, 519, 0, 520, 521,
	522, 523, 524, 525, 617, 0, 526, 0, 527, 528,
	529, 530, 502, 531, 536, 618, 532, 533, 534, 535,
	619, 0, 538, 539, 0, 537, 0, 540, 541, 542,
	543, 544, 545, 546, 331, 547, 0, 548, 620, 621,
	622, 623, 0, 557, 0, 549, 550, 551, 624, 552,
	625, 0, 553, 554, 555, 556, 0, 558, 559, 0,
	0, 560, 561, 562, 564, 565, 563, 566, 0, 567,
	0, 0, 568, 569, 570, 626, 627, 628, 0, 572,
	571, 573, 629, 0, 0, 0, 0, 574, 575, 630,
	576, 577, 578, 1676, 1677, 0, 1709, 1710, 1711, 1719,
	1720, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 1707, 0, 0, 0,
	0, 1676, 1677, 1679, 1709, 1710, 1711, 1719, 1720, 1721,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 1707, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 1678, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 1677, 0, 1709,
	1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 1707,
	0, 0, 0, 0, 0, 0, 1679, 1701, 1702, 1703,
	1704, 0, 0, 0, 1725, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 1702, 1703, 1704, 0,
	1678, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	1698, 0, 1716, 0, 0, 1726, 0, 0, 0, 1695,
	0, 0, 1706, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1716, 1723, 0, 1726, 0, 0, 0, 0, 1693, 1694,
	1706, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 1722, 0, 1723,
	0, 0, 0, 0, 0, 0, 1693, 1694, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 1702, 1703, 1704, 1714, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 1726, 0,
	1713, 0, 0, 0, 0, 1706, 1708, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 1723, 0, 0, 0, 1713, 0,
	0, 1693, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 1724, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 1677, 0,
	1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	1707, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 1705, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1700, 0, 0, 0, 1690, 1691, 1697, 1718, 1696,
	1692, 1678, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 1698, 0, 0, 0, 0, 0, 1717, 1715, 2972,
	1695, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 2355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1712, 1707, 0, 0, 0, 0, 0, 0,
	1679, 1701, 1702, 1703, 1704, 0, 0, 0, 1725, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1690, 1691,
	1697, 1718, 1696, 1692, 1678, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 1698, 0, 1716, 0, 4211, 1726,
	0, 0, 0, 1695, 0, 0, 1706, 1708, 1676, 1677,
	0, 1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0,
	0, 0, 0, 1722, 0, 1723, 0, 0, 0, 0,
	1712, 1707, 1693, 1694, 0, 0, 0, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 1678, 0, 1701, 1702, 1703, 1704, 0, 0,
	0, 0, 1698, 0, 1684, 0, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 1726, 0, 1713, 0, 0, 0, 0, 1706,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1723, 0,
	0, 0, 0, 0, 0, 1693, 1694, 0, 0, 0,
	0, 0, 1701, 1702, 1703, 1704, 0, 0, 0, 0,
	0, 0, 1684, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 1716, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 1706, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1724,
	0, 0, 0, 0, 1722, 0, 1723, 0, 0, 0,
	0, 0, 0, 1693, 1694, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 1715, 1700, 0, 0, 0, 1690,
	1691, 1697, 1718, 1696, 1692, 1713, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 0, 0, 0, 4207,
	0, 1717, 0, 0, 0, 0, 0, 1676, 1677, 0,
	1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	1707, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 1705, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 1678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 1717,
	1695, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689,
	1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 0, 0,
	0, 0, 4107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721,
	0, 1701, 1702, 1703, 1704, 0, 0, 0, 0, 0,
	0, 1684, 0, 1712, 1707, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 1715, 0, 0, 0, 1725,
	1690, 1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688,
	1680, 1681, 1682, 1683, 1685, 1686, 1716, 0, 0, 1726,
	4106, 0, 0, 0, 0, 1678, 1706, 1708, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 1722, 1695, 1723, 0, 0, 0, 0,
	0, 0, 1693, 1694, 0, 0, 1676, 1677, 0, 1709,
	1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 0, 0, 0, 1712, 1707,
	0, 0, 0, 0, 1699, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 1702, 1703, 1704, 0,
	1678, 0, 0, 0, 0, 1684, 1724, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	1706, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 1723,
	0, 0, 0, 0, 0, 0, 1693, 1694, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	1701, 1702, 1703, 1704, 1714, 0, 0, 0, 0, 0,
	1684, 0, 1700, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 1706, 1708, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 1723, 0, 0, 0, 1713, 0,
	0, 1693, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1714,
	1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 1712, 1707, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 1715, 0, 1705, 0, 1725, 1690,
	1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 1724, 1700, 0, 0, 3997,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 1698, 0, 0, 0, 0, 0,
	0, 0, 1717, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 1701, 1702, 1703, 1704, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1717, 1715, 0,
	0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 1716,
	0, 0, 1726, 3946, 0, 0, 0, 0, 0, 1706,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1723, 0,
	0, 0, 0, 0, 0, 1693, 1694, 0, 0, 1676,
	1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 1712, 1707, 0, 0, 0, 0, 1699, 0, 1679,
	0, 0, 0, 1715, 0, 0, 0, 1725, 1690, 1691,
	1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 0, 0, 0, 0, 3802, 0,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 1713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 1707, 0, 0, 1705, 0, 0, 0, 1679,
	0, 0, 0, 1701, 1702, 1703, 1704, 1725, 0, 0,
	0, 0, 0, 1684, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 1698, 0, 0, 0, 0, 1716, 0,
	0, 1726, 1695, 0, 0, 0, 0, 0, 1706, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 1723, 0, 0,
	0, 0, 0, 0, 1693, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 1701, 1702, 1703, 1704, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 0, 1715, 0, 0,
	0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689,
	1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 1724, 0,
	0, 0, 3745, 0, 0, 0, 0, 0, 1716, 0,
	0, 1726, 0, 0, 0, 0, 1713, 0, 1706, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 1723, 0, 0,
	0, 0, 0, 0, 1693, 1694, 0, 0, 1676, 1677,
	0, 1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	1712, 1707, 0, 0, 1705, 0, 1699, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1678, 0, 0, 0, 0, 0, 1724, 0,
	1717, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 1701, 1702, 1703, 1704, 0, 0, 0, 0,
	0, 0, 1684, 0, 1700, 0, 1715, 0, 0, 0,
	0, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689, 1687,
	1688, 1680, 1681, 1682, 1683, 1685, 1686, 0, 0, 0,
	1717, 3744, 0, 0, 0, 0, 0, 1716, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 1706, 1708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 1723, 0, 0, 0,
	0, 0, 0, 1693, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1714, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 1715, 0, 0, 0,
	1725, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689, 1687,
	1688, 1680, 1681, 1682, 1683, 1685, 1686, 1724, 0, 0,
	0, 3743, 0, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 1713, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 1677, 0,
	1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	1707, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 1705, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 1701, 1702, 1703, 1704,
	0, 1678, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 1717,
	1695, 0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719,
	1720, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 1726, 1712, 1707, 0, 0, 0,
	0, 1706, 1708, 1679, 0, 0, 0, 0, 0, 0,
	0, 1725, 0, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 0, 0, 0, 1693, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 1701, 1702, 1703, 1704, 1714, 0, 1698, 0, 0,
	0, 1684, 0, 0, 0, 0, 1695, 0, 0, 1699,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	1690, 1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688,
	1680, 1681, 1682, 1683, 1685, 1686, 1716, 0, 0, 1726,
	3436, 0, 0, 0, 0, 0, 1706, 1708, 0, 0,
	0, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 1723, 0, 0, 0, 1713,
	0, 0, 1693, 1694, 0, 0, 0, 1701, 1702, 1703,
	1704, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	1714, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 1707, 0, 0, 0, 0, 0,
	0, 1679, 1716, 0, 0, 1726, 0, 1705, 0, 1725,
	0, 0, 1706, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 1700, 0, 1722,
	0, 1723, 0, 0, 0, 1678, 0, 0, 1693, 1694,
	0, 0, 0, 0, 1713, 1698, 0, 0, 0, 0,
	0, 0, 0, 1717, 1695, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 1701, 1702, 1703, 1704, 0,
	1713, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 1715,
	0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	1716, 0, 0, 1726, 2970, 0, 0, 0, 0, 0,
	1706, 1708, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 1723,
	0, 0, 0, 0, 0, 0, 1693, 1694, 1700, 0,
	1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 1712, 1707, 1717, 0, 0, 0, 1699, 0,
	1679, 0, 0, 0, 1715, 0, 0, 0, 1725, 1690,
	1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 0, 0, 0, 2969,
	0, 0, 0, 0, 1678, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 1713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696,
	1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 0, 0, 0, 0, 2968, 1705, 0, 0, 0,
	0, 0, 0, 0, 1701, 1702, 1703, 1704, 0, 0,
	0, 0, 0, 0, 1684, 0, 1700, 1676, 1677, 0,
	1709, 1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	1707, 0, 1717, 0, 0, 0, 0, 1679, 0, 1716,
	0, 0, 1726, 0, 0, 1725, 0, 0, 0, 1706,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1723, 0,
	0, 1678, 0, 0, 0, 1693, 1694, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 1714, 1676, 1677, 0, 1709, 1710, 1711,
	1719, 1720, 1721, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 1707, 0, 0,
	0, 0, 2905, 0, 1679, 0, 0, 0, 1715, 0,
	0, 0, 1725, 1690, 1691, 1697, 1718, 1696, 1692, 0,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 1724,
	0, 0, 0, 2967, 0, 0, 0, 0, 1678, 0,
	0, 1701, 1702, 1703, 1704, 0, 0, 1713, 1698, 0,
	0, 1684, 4336, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 1726,
	0, 1712, 1707, 2906, 0, 0, 1706, 1708, 0, 1679,
	0, 0, 0, 0, 0, 1705, 0, 1725, 0, 0,
	0, 0, 0, 1722, 0, 1723, 0, 0, 0, 0,
	0, 0, 1693, 1694, 0, 1700, 0, 0, 1701, 1702,
	1703, 1704, 0, 1678, 0, 0, 0, 0, 1684, 0,
	1714, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 1717, 1695, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 1706, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	1722, 0, 1723, 0, 0, 0, 0, 0, 0, 1693,
	1694, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 1702, 1703, 1704, 1714, 0, 0,
	0, 0, 0, 1684, 0, 3054, 0, 0, 3053, 0,
	0, 1699, 0, 0, 0, 0, 4335, 1715, 0, 0,
	0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689,
	1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 1716, 0,
	2934, 1726, 1705, 0, 0, 0, 0, 0, 1706, 1708,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 1722, 0, 1723, 0, 0,
	0, 1713, 0, 0, 1693, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2499, 0, 1717, 0,
	0, 0, 1714, 1676, 1677, 0, 1709, 1710, 1711, 1719,
	1720, 1721, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 1707, 0, 0, 0,
	2498, 0, 0, 1679, 0, 0, 0, 0, 0, 1705,
	0, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 1700,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 1713, 1698, 0, 0,
	0, 0, 0, 0, 0, 1717, 1695, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 1690,
	1691, 1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680,
	1681, 1682, 1683, 1685, 1686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 1701, 1702, 1703,
	1704, 0, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 1715, 0, 0, 0, 0, 1690, 1691, 1697, 1718,
	1696, 1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683,
	1685, 1686, 1716, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 1706, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 1723, 0, 0, 0, 0, 0, 0, 1693, 1694,
	0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 0, 0, 0,
	1699, 0, 1679, 0, 0, 0, 1715, 0, 0, 0,
	1725, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689, 1687,
	1688, 1680, 1681, 1682, 1683, 1685, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 1707, 0, 0, 1705, 0,
	0, 0, 1679, 0, 0, 0, 1701, 1702, 1703, 1704,
	1725, 0, 0, 0, 0, 0, 1684, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 1698, 0, 0, 0,
	0, 1716, 0, 0, 1726, 1695, 0, 0, 0, 0,
	0, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 0, 0, 0, 1693, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 1701, 1702, 1703, 1704,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	1715, 0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696,
	1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 1726, 0, 0, 0, 0, 1713,
	988, 1706, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	1723, 0, 0, 0, 0, 0, 0, 1693, 1694, 0,
	0, 1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 1712, 1707, 0, 0, 1705, 0, 1699,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 1724, 0, 1717, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 1701, 1702, 1703, 1704, 0,
	0, 0, 0, 0, 0, 1684, 0, 1700, 0, 1715,
	3060, 0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	1706, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 1723,
	0, 0, 3417, 0, 0, 0, 1693, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 1676, 1677, 0, 1709, 1710,
	1711, 1719, 1720, 1721, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 1707, 0,
	0, 0, 3055, 0, 0, 1679, 0, 0, 0, 1715,
	0, 0, 0, 1725, 1690, 1691, 1697, 1718, 1696, 1692,
	0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 1678,
	0, 0, 0, 0, 0, 0, 0, 0, 1713, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1712, 1707, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 1705, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 1701,
	1702, 1703, 1704, 0, 1678, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 1717, 1695, 0, 0, 1676, 1677, 0, 1709,
	1710, 1711, 1719, 1720, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 1726, 1712, 1707,
	0, 0, 0, 2971, 1706, 1708, 1679, 0, 0, 0,
	0, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 1722, 0, 1723, 0, 0, 0, 0, 0, 0,
	1693, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	1678, 0, 0, 0, 1701, 1702, 1703, 1704, 1714, 0,
	1698, 0, 0, 0, 1684, 0, 0, 0, 0, 1695,
	0, 0, 1699, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0,
	1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 1716,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 1706,
	1708, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1723, 0,
	0, 0, 1713, 0, 0, 1693, 1694, 0, 0, 0,
	1701, 1702, 1703, 1704, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 1714, 1676, 1677, 0, 1709, 1710, 1711,
	1719, 1720, 1721, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 1707, 0, 0,
	0, 0, 0, 0, 1679, 1716, 0, 0, 1726, 0,
	1705, 0, 1725, 0, 0, 1706, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	1700, 0, 1722, 0, 1723, 0, 0, 0, 1678, 0,
	0, 1693, 1694, 0, 0, 0, 0, 1713, 1698, 0,
	0, 0, 0, 0, 0, 0, 1717, 1695, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 3022, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 1701, 1702,
	1703, 1704, 0, 1713, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 1715, 0, 0, 0, 0, 1690, 1691, 1697,
	1718, 1696, 1692, 0, 1689, 1687, 1688, 1680, 1681, 1682,
	1683, 1685, 1686, 1716, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 1706, 1708, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 1723, 0, 0, 0, 0, 0, 0, 1693,
	1694, 1700, 0, 1676, 1677, 0, 1709, 1710, 1711, 1719,
	1720, 1721, 0, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 1712, 1707, 1717, 0, 0,
	0, 1699, 0, 1679, 0, 0, 0, 1715, 0, 0,
	0, 1725, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689,
	1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1690, 1691,
	1697, 1718, 1696, 1692, 0, 1689, 1687, 1688, 1680, 1681,
	1682, 1683, 1685, 1686, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1701, 1702, 1703,
	1704, 0, 0, 0, 0, 0, 0, 1684, 0, 1700,
	1676, 1677, 0, 1709, 1710, 1711, 1719, 1720, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 1717, 0, 0, 0, 0,
	1679, 0, 1716, 0, 0, 1726, 0, 0, 1725, 0,
	0, 0, 1706, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 1723, 0, 0, 1678, 0, 0, 0, 1693, 1694,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 1690, 1691, 1697, 1718,
	1696, 1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683,
	1685, 1686, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 1702, 1703, 1704, 0, 0,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 1726, 0, 0, 0, 0, 0, 0, 1706,
	1708, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1723, 0,
	0, 0, 0, 0, 0, 1693, 1694, 0, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 1690, 1691, 1697, 1718, 1696,
	1692, 0, 1689, 1687, 1688, 1680, 1681, 1682, 1683, 1685,
	1686, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 1690, 1691, 1697, 1718, 1696, 1692, 0, 1689,
	1687, 1688, 1680, 1681, 1682, 1683, 1685, 1686,
}
var sqlPact = [...]int{

	7129, -1000, -1000, -1000, -1000, 160, -1000, -1000, 152, 150,
	149, 146, 144, 143, 142, 140, 138, -1000, -1000, -1000,
	-1000, -1000, -1000, 135, -1000, -1000, 134, -1000, 132, 130,
	127, -1000, -1000, 126, -1000, 125, -1000, -1000, -1000, -1000,
	124, 123, 120, 83445, 82919, 83964, 2101, 102277, 90220, 1913,
	74531, 101751, 74005, 101225, 100699, 2559, 118, -1000, 100173, 115,
	114, 110, -1000, 99647, -1000, 1950, -1000, 105, 4297, 60831,
	104, 103, 100, 2077, 99, -1000, 98, 97, 96, -1000,
	8753, 1532, -1000, 95, 92, -1000, 9294, 5717, 88123, 91,
	89, 2239, 88, 87, 60304, 86, 85, 2171, 2721, -1000,
	-1000, 2002, -1000, -1000, 84, 83, 82, 81, 80, 79,
	77, 74, 72, 71, 70, -1000, 69, 68, 66, 65,
	64, 63, 61, 56, -1000, 55, 54, 53, 52, 51,
	50, 48, 47, 46, 44, 43, 41, 36, -1000, 12308,
	-1000, 1755, 1613, 1612, 1608, 1602, 1597, 968, 33, 32,
	31, 29, 28, 24, 18, 17, 14, -1000, 13, 12,
	11, 10, 9, 7, 1, -1, 139, -2, -5, -9,
	-12, -14, -16, -17, 2422, -1000, 1585, 1076, 28135, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 107986, 102796, -19,
	-154, -20, -1000, 3092, 839, 50293, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 219, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 469, 1745, 724, -1000, -1000, -1000, 99128,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2097, -60,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 723, -1000, 2089,
	302, 2004, -1000, -1000, -1000, -1000, -1000, 102796, -1000, 1033,
	-1000, -1000, 3541, 3540, 1920, 718, 89694, -1000, 1818, -1000,
	913, 29788, -1000, 1256, -1000, 29788, 218, -1000, -1000, -1000,
	-1000, -1000, -1000, 3539, 3538, 3537, 3536, 3535, -1000, -1000,
	73479, 21471, 72953, 72427, 98609, 20935, 82393, 81867, 98083, 68236,
	1032, -1000, -1000, -1000, 1369, -1000, -1000, -1000, -1000, -1000,
	-1000, -39, 65556, 3257, 102796, -1000, 217, -1000, -1000, -1000,
	-1000, -1000, -1000, 42677, 597, 42114, 653, 41551, 641, -1000,
	-1000, -1000, -1000, 67700, -1000, 97557, 2270, 3533, 3532, 1103,
	3529, 3012, 1677, 3528, 1759, 1177, 3527, 3526, 3524, 3522,
	3521, 3519, 3518, 1323, 97031, 2799, 96505, 1610, 67164, 1031,
	81341, 83964, 2474, 95979, 1373, 1367, -1000, -1000, -1000, -1000,
	2901, 2712, 2673, 1274, -1000, -1000, 2265, 3517, 3516, 3515,
	3514, 3512, 107467, 1669, 3511, 2336, 3510, 3508, 3507, 3505,
	3503, 3502, 3499, -1000, 80815, 1030, 80289, 79763, 3135, 95453,
	79237, 94927, 66628, 40988, 1019, -1000, -1000, -1000, 52936, 8174,
	7654, 94401, 55072, 83964, 83964, -1000, -1000, -1000, -1000, -1000,
	40425, 535, 39862, 840, -1000, -1000, 53470, 2743, -1000, -1000,
	-1000, -1000, 39299, 375, 38736, 813, 102796, -1000, 2794, 1834,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1810, 1569, 3298, 2568, 66092, 1883,
	1351, 3085, 2900, 2888, 1483, 3498, 3497, 2380, 2887, 2880,
	2870, 2844, 2833, 1337, 2397, 552, 27572, 2781, 1518, 38173,
	1601, 1447, 2830, 2829, 3300, 1807, 1840, 1937, 71901, 3496,
	3491, 3043, 2828, 2817, 2741, -1000, -1000, -1000, -1000, 1379,
	-1000, -1000, -1000, -1000, 75050, -1000, -1000, 1283, -1000, -1000,
	1283, -1000, -1000, -1000, -1000, -1000, 1263, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1585, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1942,
	-1000, 1915, -1000, -1000, 2493, 3021, 3021, 3021, 3114, 430,
	427, -1000, 139, -1000, -1000, 113803, -1000, -1000, 43228, 43228,
	43228, 43228, 43228, 43228, 43228, 1895, -1000, 710, -1000, -1000,
	779, -1000, 707, 569, -1000, -1000, -1000, -1000, -1000, -1000,
	705, -1000, -1000, -1000, -1000, -1000, -1000, 3257, -1000, 24206,
	-1000, -1000, -1000, 351, 703, 43228, -1000, -1000, 3342, 3340,
	909, -1000, 215, 928, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2791, 702, 698, -1000,
	693, 691, 689, 687, 686, -1000, -1000, -1000, 685, 671,
	670, 669, 668, 667, 666, 663, -1000, 1827, -1000, -1000,
	-1000, -1000, -1000, -1000, 613, 612, 612, 612, -1000, 1017,
	-1000, -1000, -1000, 287, 607, 278, 606, 604, 603, -1000,
	660, 657, 654, 647, 646, 645, 644, 642, 639, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1016, -1000, -1000, -1000,
	-1000, -40, 102796, -1000, 469, -40, -1000, -1000, 636, -1000,
	32004, 32004, 32004, -1000, -1000, 2087, 43228, -1000, 2428, -1000,
	-33, -33, 821, 51867, -1000, 49224, 821, 335, 791, 56646,
	-1000, 2740, -1000, -1000, 632, 214, -1000, -1000, -1000, -1000,
	22005, 2739, 102796, 102796, 83964, 83964, 83964, 2953, 43228, -1000,
	-1000, 63445, 102796, 84483, 3218, 61350, 62921, 102796, 2789, -1000,
	3055, -1000, -1000, 102796, -1000, 43228, -1000, 3217, 1726, 69294,
	3162, -55, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2318,
	2399, 1107, 2136, -1000, 2969, 1791, -1000, 29788, 3001, -1000,
	-1000, -1000, 211, 22005, -1000, -1000, -1000, -1000, -1000, -1000,
	4348, 2927, 1485, -1000, 2127, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1684, 2926, -1000, 2247, 2925, 1641,
	-1000, -1000, 2099, -1000, -1000, 3035, -1000, -1000, 1653, 2924,
	-32, -1000, -1000, 2560, -1000, -1000, 1816, -1000, -1000, 991,
	2922, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	78711, 54538, 53470, 65556, -46, -1000, -1000, -1000, -1000, -64,
	-1000, 20399, 113803, -1000, -1000, -1000, -1000, 1725, 113803, 842,
	-1000, -1000, 2915, -1000, 113803, 789, -1000, -1000, 2914, -1000,
	2787, -1000, -1000, 2226, -1000, -1000, 3490, -1000, -1000, 3489,
	-1000, 3487, 3486, 3485, -1000, 1580, 1824, 3484, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 78192, 2084, -1000, -1000,
	77140, -1000, 2224, 3157, -1000, -1000, -1000, 77666, 1028, -1000,
	991, 2223, -1000, 87597, 946, -1000, 3483, 3130, 2510, 991,
	2222, -1000, -1000, -1000, -1000, -1000, 993, -1000, 58214, -1000,
	58214, -1000, 1484, -1000, 106948, -33, 83964, 3257, -1000, 3482,
	-1000, -1000, -1000, -1000, -1000, 2913, 3481, 3480, 3479, -1000,
	102796, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 199, 2910,
	-1000, -1000, 87078, 199, 2909, -1000, 199, 2908, -1000, 86559,
	-1000, -1000, 2132, 2904, -1000, 201, 2903, -1000, -1000, 200,
	2902, -1000, -81, 2899, -1000, -1000, 113803, -1000, -1000, -1000,
	-83, -1000, -1000, -1000, 839, -1000, 52394, -1000, 52394, 89168,
	68770, 952, 720, 59777, 113803, -1000, -1000, -1000, -1000, 113803,
	-1000, -1000, -1000, -248, 2566, -1000, 68770, 53470, 113803, -1000,
	-1000, -1000, -1000, 113803, -1000, -1000, -1000, 68770, 77140, -1000,
	93875, 76621, -1000, -1000, 1315, 2368, -1000, -1000, -1000, 68770,
	1299, 68770, 68770, 68770, -1000, 93349, -1000, -1000, 1969, 1226,
	3038, 1946, 83964, -1000, 1787, -1000, -1000, -1000, 3067, -1000,
	-1000, 2784, -1000, 62397, 86040, -1000, 85521, -1000, 85002, -1000,
	83964, -1000, 83964, -1000, 3477, 3476, 3475, 3474, -1000, 3471,
	3059, -1000, 113803, 3058, -1000, 3470, 3140, 2781, 113803, -1000,
	2936, 1617, 1607, 102796, -1000, -1000, 102796, -1000, 102796, -1000,
	-1000, -1000, 1392, -1000, -1000, 2317, -1000, -1000, -1000, -1000,
	83964, -1000, -1000, -1000, -1000, -1000, -1000, 2776, -1000, 1689,
	-1000, 1650, -1000, 1298, -1000, -1000, 204, -1000, -1000, -55,
	-1000, 106429, -1000, 2493, -1000, 102796, -1000, 2303, 2770, 2774,
	1517, 2111, 2414, -1000, 37610, 2323, 46534, 2124, 139, -1000,
	-1000, 139, 139, 29237, -1000, -1000, 61350, 61350, 22005, 1270,
	43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228,
	43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228,
	43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228, 43228,
	43228, 43228, 43228, 43228, 43228, 2182, 43228, 1262, 43228, 43228,
	43228, 43228, 1964, -1000, -1000, 1773, 508, 1890, -1000, 3258,
	3258, 3258, 682, 682, 114209, 114209, 436, 3469, 779, -1000,
	43228, -1000, 30, 43228, 22541, -1000, 427, 9405, 2261, -1000,
	425, 23104, -1000, -1000, -1000, 24206, 569, 37047, 43228, 1007,
	113803, -1000, -1000, 1717, 3272, 19864, 2680, 2604, 630, 760,
	749, 27009, 26446, 25883, 25320, 747, 43228, 43228, 43228, 43228,
	43228, 43228, 43228, 43228, -1000, -1000, 3290, -1000, 3272, -1000,
	-1000, -1000, -1000, 3272, 1181, 1150, 3272, -1000, 3272, 3272,
	5302, 5302, 36496, 35933, 35370, 47085, 34807, 43228, 24757, 34244,
	33681, -1000, 102796, -40, 3216, 43228, 285, -1000, 112602, -1000,
	285, 285, 629, -89, 113803, 2364, 2364, 50818, 2022, 1927,
	1927, 1927, -1000, 821, 15555, 821, 92306, 1984, 821, 821,
	184, 210, 423, 48699, 2428, 92306, 753, 621, -21, -22,
	-24, -1000, -1000, -26, -29, -1000, -1000, 83964, 616, 22541,
	22005, 183, 1361, -90, 2450, 2441, 2431, -1000, 2430, 1696,
	-91, 1261, 83964, 102796, -103, -1000, 4656, -96, -1000, 1072,
	182, 3272, -1000, -1000, -1000, -1000, -1000, 3468, 3467, -1000,
	1015, 615, 614, 286, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 613, 612, 612, 612, -1000, 287, 607, 278,
	606, 604, 603, -1000, -1000, -1000, -1000, -1000, 2733, 83964,
	102796, -64, 84483, 83964, 860, -97, 1111, -55, -1000, -1000,
	-1000, 1283, -1000, 1998, -1000, -1000, -1000, -1000, -1000, -1000,
	1296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 909,
	-1000, -1000, -1000, -1000, -1000, -1000, 3282, 3280, -41, -1000,
	-1000, 22005, -1000, -56, 1543, 1687, -1000, 71375, 2177, 3037,
	3465, 2505, 3026, 1471, -1000, 1342, 1260, 3112, 75050, 3171,
	3201, 987, -1000, 2732, -1000, -1000, 908, 1648, 1667, 1253,
	75050, 2247, -1000, 61350, -1000, 2482, 3107, 1348, 1359, 1348,
	1348, 1356, -1000, 75050, 1662, 1252, 1237, -1000, 1236, 1193,
	-1000, -58, 3170, 3186, 786, -1000, 2726, 1185, -1000, -1000,
	83964, 22005, 1526, 1528, 1660, 1184, -45, -1000, 3168, 3165,
	1183, 1176, -1000, 6508, -1000, 68770, 1575, 2873, 2558, 817,
	2554, -1000, -1000, -1000, 817, -46, 65556, 102796, 178, -1000,
	30, 43228, 43228, 30, 43228, 30, 3137, 2869, -1000, -1000,
	-1000, -1000, -1000, 3464, 1796, 2335, -1000, -1000, 600, 2220,
	2711, 102796, 2477, -48, 83964, -1000, 2868, 63969, 2247, 2218,
	-1000, -1000, 76095, -1000, 2867, 469, 2216, -1000, 602, 3462,
	-1000, 105910, -1000, 3055, 1279, 2866, 1064, 156, 3215, -1000,
	156, 58739, -1000, 102796, -1000, -33, -1000, 102796, -1000, -1000,
	-1000, 3461, -1000, 83964, -1000, -1000, 83964, 199, 2865, -1000,
	83964, -1000, 83964, 187, 2862, -1000, -1000, 102796, -1000, 83964,
	83964, -1000, 102796, 68770, 68770, 7532, 70337, -107, -110, 422,
	-1000, 92830, 102796, 1063, 70856, 102796, 2991, 984, 53470, -1000,
	53470, -117, -248, 2548, 952, 952, 817, -1000, 817, -1000,
	83964, 2773, -1000, -1000, 68770, 952, 952, 952, -1000, -1000,
	-1000, -1000, 3460, 3459, 3458, -1000, -1000, -1000, 985, 83964,
	102796, 83964, -1000, -1000, 102796, -1000, 102796, 102796, 83964, -1000,
	985, 102796, 985, 102796, 985, 102796, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30, 43228, -1000, -1000, 3457, 1500, -1000,
	2772, -1000, 2771, -1000, 4, -1000, -1000, -1000, -1000, -1000,
	1764, 83964, 83964, 83964, 83964, 102796, 83964, -1000, 75050, -1000,
	2303, 2770, -1000, -1000, -1000, -1000, -1000, -1000, 1620, 2031,
	-1000, 2377, -1000, 1410, -1000, -1000, -1000, 113803, 47619, -1000,
	-1000, 113803, 1756, -1000, 45983, 45432, -1000, -1000, 1584, 83964,
	2476, -1000, 2476, -149, -1000, 112253, 2374, 83964, -1000, -1000,
	-1000, -1000, -1000, 905, 1232, 1232, 1293, 1293, 1293, 1293,
	3163, 4425, 1095, 4707, 506, 506, 457, 457, 457, 457,
	457, 506, 4472, 682, 682, 4472, 4472, 4472, 4472, 4472,
	682, 682, 682, 506, 506, 506, 114209, 114042, 5972, 43228,
	43228, 1175, 1757, 508, 5546, 43228, 7561, 7561, 7561, 7561,
	-1000, 2080, -1000, -1000, -1000, -1000, 2708, 595, 47085, 47085,
	-1000, -1000, -1000, -1000, 23655, 43228, -1000, -1000, -1000, -1000,
	33118, -1000, -1000, 111999, -324, 416, -141, -68, -1000, 43228,
	43228, 43228, 402, -1000, 177, 43228, 102796, -1000, 109060, 752,
	-116, -1000, -120, 1395, -1000, 43228, -1000, -1000, 1172, -1000,
	1170, 1168, 1159, -1000, 593, 390, -1000, 176, -1000, 1919,
	590, 588, 43228, -1000, -1000, -1000, -1000, -1000, 111760, -1000,
	-1000, 111592, -1000, -1000, 111506, -1000, -1000, 111411, -1000, -1000,
	-1000, 113635, 109032, 14834, 14690, 8446, 14405, 13851, -123, 386,
	-128, 382, 903, 884, 381, 380, 377, -129, -1000, 3455,
	3453, 3452, -1000, 3449, 3445, 3442, -1000, 3435, 3434, 3433,
	-1000, 3431, 3429, 3428, -1000, 3427, 3426, 3424, -1000, 3418,
	3415, 3414, -1000, 3411, 3410, 3408, -1000, 3407, 3406, 3404,
	-130, 376, -1000, 2707, -141, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 371, -1000, 370, -1000, 113549, -141, 369,
	6432, -1000, 47085, 47085, 47085, -1000, 368, -1000, 112348, -1000,
	113454, 32567, 32567, 32567, 367, 113200, 43228, -141, -142, -1000,
	-143, -1000, -1000, 484, -151, 1003, 32004, 49766, 22005, -1000,
	1003, 1003, 43228, -1000, 43228, 2420, -1000, -1000, -1000, 2411,
	2176, 2364, 50818, -1000, -1000, -1000, -1000, 92306, -1000, 3257,
	2655, -1000, 92306, -1000, -1000, 102796, 469, -1000, 92306, 92306,
	22005, 821, -1000, 821, 92306, 696, -1000, -1000, -1000, -1000,
	-1000, 362, 55596, -68, 175, 22005, 991, -1000, 2471, 2471,
	2471, 2471, -1000, -1000, 102796, 1157, -51, -118, 3233, -1000,
	1858, -1000, 61350, -1000, 775, 944, 22005, -1000, -1000, -1000,
	584, -1000, 3272, 3272, -1000, 3272, 102796, 2703, 243, 234,
	999, 29788, -1000, 1283, -1000, -1000, 1513, -1000, 1801, -1000,
	1115, -1000, -1000, -1000, -1000, 29788, -1000, 3523, 102796, 102796,
	83964, -1000, 102796, -1000, 2214, 105391, 2201, 61350, 102796, -1000,
	-1000, 582, 578, 2370, 2369, 1061, 102796, 102796, 2366, 104872,
	104353, -1000, 3402, 102796, 1876, 43228, 63969, 2166, 2208, 30,
	30, -1000, -1000, 30, 577, 1276, 83964, 83964, 102796, 83964,
	1552, -1000, -1000, -1000, -1000, -1000, 75569, -1000, -1000, 3285,
	3277, -1000, 1348, -1000, -1000, -1000, 1348, 2247, 1540, 102796,
	83964, 63969, 1645, 102796, 1881, 30, 30, -1000, -1000, 30,
	576, 22005, 1822, -1000, 2779, 102796, 3332, 102796, 102796, 102796,
	63969, 3068, 103834, 102796, 102796, 63969, 6508, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 65037, 1069,
	991, 1643, 1156, 75050, 53470, 983, 53470, 2520, -1000, -1000,
	19329, -1000, 113803, 113803, -1000, 113803, -1000, 61873, 102796, -1000,
	1022, 102796, 70856, 921, 2858, 57689, -64, 952, 68770, 83964,
	-48, 102796, -1000, -1000, -1000, -1000, -1000, 2247, 2855, 469,
	2194, -1000, 68770, 3214, 2854, 573, 3400, 3397, -1000, 2072,
	2190, -1000, -1000, 103315, 2942, 805, 102796, 1003, 50818, 1806,
	-1000, 56122, 1046, 102796, 1728, 154, -1000, -1000, -1000, -7,
	102796, -1000, 790, 3396, -1000, -1000, 199, -1000, 83964, 199,
	199, -1000, 83964, 83964, 2132, -1000, 201, 200, -1000, -81,
	-1000, -1000, 7532, 7532, 952, -230, 572, -1000, 872, 871,
	54004, 68770, -162, -1000, -1000, -1000, -1000, -1000, 83964, 102796,
	699, 2508, 102796, -163, -1000, 173, 571, -1000, 2360, -1000,
	-248, -1000, 984, 53470, 2688, -1000, -1000, 998, -1000, 1289,
	952, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -35, -64, -64, -64, -51, -1000, 985, -1000, 985,
	-1000, 985, -1000, 113803, -1000, -1000, 1497, 1486, 102796, -1000,
	22005, 102796, 83964, 22005, 83964, 2765, 2760, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1082, -1000, 1756, 2030, -1000,
	569, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2295, -1000, -52, 29237, 881, -1000, -1000, 83964, -36, 43228,
	43228, 5147, 4493, 43228, 47085, 47085, -1000, 43228, 875, -1000,
	-1000, -1000, -1000, -1000, 2683, 568, 43228, 61350, 5768, 5622,
	-1000, 357, 13611, 4472, -1000, 43228, -1000, 355, 31453, -1000,
	112841, -74, -164, -1000, 16103, -141, -165, -1000, -1000, 772,
	-1000, 2840, -1000, 43228, 112961, 2258, 1732, 1697, 1515, 3272,
	3319, 18794, -1000, 59258, 1004, 1988, 111157, -1000, -1000, -1000,
	-1000, 61350, 61350, 43228, 43228, -1000, 43228, 43228, 43228, -1000,
	-1000, -1000, 3272, 904, -1000, -1000, -1000, 904, -1000, -1000,
	1348, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1348, -1000, 43228, -1000,
	-1000, 2682, 43228, -1000, 61350, 61350, 47085, 47085, 47085, 47085,
	47085, 47085, 47085, 47085, 47085, 47085, 47085, 47085, 47085, 47085,
	47085, 47085, 47085, 47085, 47085, 2355, 47085, 3255, 3255, 3255,
	-1000, 2715, 2682, 43228, 43228, 61350, 354, 349, 345, -1000,
	43228, -141, -1000, -1000, 7532, 564, -1000, 2279, -1000, 2603,
	-1000, 43228, -1000, -145, -1000, 2428, -1000, -1000, 2603, 2603,
	-172, 113803, 50818, 50818, -1000, 561, 43228, 2398, -1000, -1000,
	748, -320, -1000, 868, -1000, -1000, -1000, -1000, -1000, 469,
	-1000, -1000, -1000, 169, 92306, 92306, 742, -1000, -173, -1000,
	-1000, -174, -1000, 3212, 342, 22005, -1000, 1003, 3041, -1000,
	-1000, -1000, -1000, -1000, -1000, -64, 102796, 102796, 2003, 3316,
	-1000, 3275, 770, 731, 168, 3272, 338, 336, 331, -64,
	102796, 102796, 102796, -1000, 2436, -1000, -55, -1000, -1000, -1000,
	43228, -1000, -1000, 3033, 1153, 1152, -1000, -1000, 2853, -1000,
	2184, -1000, 1050, -1000, 1828, -1000, 43228, 51343, 558, 557,
	3391, 1770, 3389, 1062, 2849, 2132, 2845, 2132, -1000, -1000,
	-1000, 911, -1000, 113803, -1000, 554, 553, -1000, -56, 1536,
	1642, 997, -1000, -1000, 43228, 43228, 91787, -1000, 421, 3035,
	-37, -1000, -1000, 1634, 1149, -1000, -1000, -1000, -1000, 2247,
	1587, 1147, -1000, -1000, -1000, 995, -1000, -1000, 994, -1000,
	-1000, 43228, -1000, -58, 1139, 3154, 2175, 83964, 1137, -1000,
	1136, -1000, -1000, -1000, 3155, 2132, 2843, 1146, -1000, -1000,
	-1000, -1000, -1000, 64503, -1000, 102796, 83964, 1537, 817, -1000,
	2438, 817, 983, 2676, -1000, 2470, -1000, 83964, 3385, 330,
	-175, -59, 61350, 3210, -1000, 2104, 565, 83964, 907, -1000,
	3257, -1000, -1000, -1000, -1000, 3150, 83964, 3209, 2842, 991,
	30, 83964, 3314, -1000, -1000, 83964, 2841, 2069, 2173, 2326,
	805, 69818, -1000, 991, 1987, -80, -1000, 1728, 30890, 3032,
	-180, -1000, -1000, -1000, 1003, 58739, 50818, 43228, 3382, -181,
	-1000, -1000, -1000, -1000, 199, -1000, -1000, -1000, 187, -1000,
	-1000, -1000, -1000, -1000, -1000, 90744, 90744, 68770, 68770, 68770,
	952, 102796, 102796, 70856, -1000, 551, 102796, 102796, 548, -1000,
	102796, 102796, 3376, 68770, -63, 546, -1000, 861, 858, 855,
	-1000, -1000, -1000, -1000, -1000, 984, -1000, -248, 30, -1000,
	2001, 83964, -1000, 18259, -1000, -1000, -1000, -1000, -1000, 985,
	-1000, -1000, 1884, 2114, 1884, 1716, 1714, -1000, 2015, -1000,
	-1000, -1000, -1000, 2440, 3060, 22005, 3158, 7561, 43228, 43228,
	420, 5534, 744, 7561, 43228, 43228, 61350, 8646, -182, 43228,
	43228, -1000, 43228, 729, 113803, 3312, 43228, 328, 325, -1000,
	-1000, -1000, 3268, -1000, -1000, -1000, 113803, 43228, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 313, -1000, 164, -1000, -1000,
	-1000, 108505, -1000, 43228, 311, 3103, -1000, 308, 307, 13261,
	242, 110918, 110798, 110559, 305, -1000, -1000, 304, 301, 113803,
	2715, 113803, -1000, -1000, 1309, 1309, 1326, 1326, 1326, 1326,
	3255, 1968, 1814, 327, 2343, 2343, 2343, 924, 547, 547,
	2343, 2343, 2343, 2674, 2332, 536, 943, -1000, -1000, 113803,
	113803, 298, -1000, -1000, -1000, -141, 295, 7532, -1000, 2596,
	3101, 113803, -1000, 50818, 2596, 2596, -1000, -1000, 2176, 102796,
	113803, 50818, -1000, 2655, -1000, 16649, -1000, 22005, -1000, -1000,
	-1000, -1000, 3257, -1000, 55596, -1000, 531, -1000, 5, -1000,
	3041, -1000, 838, -1000, -64, -64, -1000, -1000, 697, 3375,
	759, 22005, 293, -1000, -1000, -1000, -64, -64, -64, -1000,
	2990, 113803, 102796, 102796, 102796, 2839, -1000, 3123, -1000, 1061,
	110305, -183, -1000, 102796, 43228, 102796, 51343, 102796, -1000, -1000,
	1679, 2434, 1094, -1000, 3069, 102796, -1000, 102796, -1000, -1000,
	102796, 102796, 83964, 102796, 2824, -188, 113803, -67, -1000, 837,
	-1000, 1340, -1000, 17724, 102796, 83964, 102796, 83964, 1939, 2800,
	-189, 22005, -1000, 3309, 3308, 2838, 3081, 3307, 102796, -1000,
	102796, 83964, 2989, -1000, -1000, -1000, -1000, 1551, 1134, 983,
	-70, 529, -1000, 834, -1000, -1000, 832, -1000, 983, -1000,
	68770, 53470, 469, -1000, 2498, -1000, 88642, 2049, 30, -1000,
	3373, 91268, 528, -1000, 2000, -1000, 458, 63969, 2247, 30,
	83964, -1000, -1000, 469, 276, -71, -1000, 1057, 22005, 83964,
	2837, 2319, 805, 69818, -1000, 1279, 2414, -1000, -73, -1000,
	596, 30, 1987, -1000, -80, 113803, -1000, 825, -1000, -1000,
	-1000, -191, -1000, -1000, 269, -1000, 2988, 2987, -1000, 2598,
	51343, 526, 524, 102796, 2984, -1000, -1000, -197, 2396, 2396,
	68770, 53470, 68770, -1000, 984, -1000, 2256, -1000, -1000, -1000,
	-1000, -1000, 22005, 1611, -1000, 523, 522, -1000, -1000, -1000,
	-1000, 3060, 7561, 7561, 43228, 43228, 43228, 7561, 8646, -199,
	-1000, 7561, 7561, -141, -1000, -1000, 112841, -1000, -1000, -1000,
	113803, -1000, 17189, 1886, -1000, 110210, -1000, 29237, -1000, -1000,
	43228, 43228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47085, 2671, 520, 61350, -1000, -1000, 265, 1001, 43228, 44881,
	2428, 1001, 1001, -1000, -200, -1000, -1000, -1000, 3257, 5,
	-1000, -1000, 3372, 22005, -1000, 68770, 758, -1000, 3370, -1000,
	-1000, -1000, -1000, -1000, -1000, 102796, -1000, 102796, -1000, 22005,
	102796, 2654, 2163, -1000, -1000, 2356, 517, 47085, 83964, 836,
	-1000, 3227, 2600, 1718, 51343, -1000, 3060, -1000, 110066, -1000,
	-202, -205, 2148, -1000, -1000, 2145, 43228, -1000, 61350, 514,
	2132, 2132, -207, -208, -1000, -1000, 43228, 1130, 102796, 30339,
	-1000, 3369, 3035, -1000, -1000, -1000, -1000, 102796, 43228, 1124,
	-1000, -1000, -1000, 3306, 2132, 22005, -1000, 2132, 2132, 3081,
	1093, 102796, 83964, -1000, 2312, 2312, 68770, 53470, -1000, -81,
	983, 3207, 2494, 3365, -1000, -1000, -1000, -1000, 2352, -1000,
	-1000, 102796, 2350, 958, -1000, -210, -1000, 824, 812, 70856,
	921, 931, -1000, -1000, -1000, -1000, 469, 3205, -1000, 3296,
	512, 102796, 2068, 511, 22005, 3028, 805, 69818, -1000, 2942,
	1728, -1000, 2140, 102796, 3025, -1000, 2414, 508, -1000, 952,
	505, 503, 2424, 2424, -213, 51343, 51343, -215, 489, 952,
	-1000, -216, -1000, -1000, -1000, -1000, -82, -1000, 823, 816,
	-1000, -1000, 83964, 83964, 43228, 43228, -1000, 7561, 7561, 7561,
	-1000, 254, -1000, -1000, 1987, 3100, -1000, -84, 109717, 109629,
	912, 47085, 61350, -218, -1000, -1000, 102796, 113803, -92, -1000,
	113803, 487, 486, 389, -1000, -1000, -1000, 337, -1000, -1000,
	3363, -1000, -1000, 1906, -1000, -1000, -1000, 102796, 2170, -1000,
	1060, 43228, 943, 485, 43228, -1000, 3202, -1000, 2485, 2670,
	2494, 477, -1000, -1000, -1000, -1000, 881, 102796, 1054, 1788,
	-1000, -1000, 113803, 3081, 51343, -1000, -1000, 476, 475, 113803,
	473, 807, 2669, -1000, -1000, -1000, -1000, 113803, 472, 3154,
	-1000, -1000, -1000, -1000, 2132, 83964, -1000, -1000, -1000, -221,
	-1000, -1000, 1792, 30, 1881, 2541, -1000, 2049, 471, -1000,
	-1000, 2045, 2384, -1000, 91268, 29788, 29788, 249, 3190, 931,
	-1000, 3253, -1000, 3182, 30, -1000, 51343, -1000, 83964, 51343,
	2066, -1000, 2308, 69818, -1000, 2326, -1000, -1000, -223, 102796,
	1728, -1000, -1000, 68770, 68770, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1054, -232, -234, -1000,
	68770, -1000, -1000, 2256, -1000, 102796, -1000, 102796, -1000, -1000,
	-235, -237, -1000, 1995, 43228, 29237, -1000, -1000, 912, -242,
	-1000, -119, -1000, 3181, 44881, 3361, 3360, 3358, -1000, -1000,
	-1000, -1000, 2835, 2590, 109506, 2287, 102796, 109155, -1000, 2664,
	-1000, -1000, 1881, 102796, -1000, -1000, 2494, 2589, 83964, 1058,
	-243, 1884, 1884, 43228, 28686, 1916, 43228, -1000, -1000, 3081,
	-1000, 2634, 3267, -1000, 921, -1000, 1902, 102796, -1000, 3064,
	-1000, 2982, -1000, -1000, -1000, 2498, 30, -1000, -1000, 30,
	-1000, -245, 1057, -251, 83964, 805, -1000, 2319, 1003, -1000,
	-1000, -253, -254, 1718, 1054, 930, -256, -1000, -259, -261,
	-1000, -1000, 241, 44330, 44330, 44330, -141, -149, -1000, 102796,
	470, -1000, -1000, -1000, -1000, 2690, 979, -1000, 2057, 1674,
	228, 1073, -1000, -1000, 2600, -262, -1000, 972, 469, -1000,
	43228, 1054, -267, -1000, 1041, -268, -1000, 1038, -269, -1000,
	2668, -1000, -275, 2132, 960, 3136, -1000, -1000, -1000, 2045,
	83964, -278, -1000, -1000, 2096, -1000, 2494, 958, -1000, 1054,
	464, 1718, 462, 1348, 3028, 2950, 952, 952, 2494, 1718,
	1003, 456, 952, -1000, -1000, -1000, 2930, -1000, 48153, 2046,
	1708, 112166, 2930, 2930, -1000, -1000, 102796, 3125, -1000, 2065,
	2060, 1459, -1000, -1000, -1000, -1000, -1000, -1000, 1003, -1000,
	3122, 2287, 113803, 2494, -1000, 1884, 2537, -1000, 1884, 2648,
	-1000, 1898, -1000, -1000, -1000, 1571, 3254, -1000, 454, -1000,
	102796, 1661, 1618, 3354, 1881, 2045, 1718, 51343, 2494, 51343,
	-1000, -1000, 1267, -1000, -1000, 1881, 2494, -1000, -1000, -1000,
	1821, 3206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	804, -1000, 2966, -1000, 1081, 2155, 2155, -1000, 796, 2057,
	-1000, -1000, 434, -1000, 433, -1000, 1994, -1000, -1000, 102796,
	-1000, -1000, 3350, -1000, 921, -1000, 2494, -281, 1881, -283,
	-1000, 1438, 930, 1881, 1699, -1000, -1000, 1982, 43779, 43228,
	-1000, 3237, -1000, -1000, 2342, -1000, 43228, 2600, 43228, 43228,
	57170, -286, -1000, 2045, 1881, 1054, 930, 1718, 58739, 1003,
	930, -1000, -1000, -1000, 113803, -1000, -1000, -1000, 113803, -1000,
	-289, -295, -230, 90744, 2112, -1000, 930, 1718, 1003, 2494,
	-277, -1000, 1003, 1881, 1119, -297, -1000, -1000, -1000, 1003,
	2494, -1000, 1881, -1000, -1000, -1000, 432, -1000, -1000, 1881,
	930, 43228, 930, 1003, -312, 1003, -1000, 1881, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4190, 4189, 4188, 4187, 4185, 4182, 4181, 4180, 4179,
	4178, 4177, 4176, 4175, 4173, 4172, 4169, 4168, 4167, 4166,
	4164, 4162, 4161, 4155, 4152, 4150, 4148, 4146, 4143, 4140,
	4135, 4131, 4130, 4128, 4122, 4121, 4117, 4114, 4113, 4107,
	4104, 4103, 4100, 4093, 4089, 4082, 4076, 4073, 4072, 4071,
	4070, 4069, 4068, 4066, 39, 4065, 4063, 4062, 4056, 4050,
	4049, 4042, 4040, 4039, 4038, 4037, 4036, 4035, 4034, 4030,
	4027, 4021, 4020, 4019, 46, 4018, 236, 4017, 4016, 4015,
	4014, 4013, 4011, 4007, 4006, 4004, 4002, 4001, 4000, 235,
	3998, 126, 3997, 3987, 3983, 3979, 3977, 234, 3975, 3974,
	3971, 3967, 245, 3965, 3963, 3961, 3960, 3958, 3957, 3954,
	3951, 3950, 72, 135, 3948, 3946, 1217, 3945, 3941, 3940,
	3939, 3932, 3928, 3922, 3914, 3913, 3912, 215, 3911, 231,
	3909, 3907, 3906, 3905, 3904, 3902, 3900, 3897, 3894, 3893,
	3892, 3891, 3890, 3888, 3886, 3885, 3882, 3880, 3879, 3877,
	3876, 3874, 3873, 3872, 3870, 3869, 3867, 3866, 3865, 3862,
	3861, 3860, 3859, 240, 155, 3853, 3850, 230, 229, 3849,
	3845, 3843, 3842, 3840, 106, 7, 24, 3838, 3837, 115,
	68, 69, 84, 82, 79, 3835, 89, 3834, 117, 45,
	3833, 8, 12, 137, 206, 9562, 204, 3832, 3831, 3828,
	203, 165, 3825, 198, 3824, 3823, 3822, 3821, 71, 48,
	150, 148, 144, 143, 808, 3820, 3818, 90, 66, 44,
	37, 30, 3816, 3814, 3813, 3811, 3287, 110, 3810, 228,
	211, 138, 3808, 3807, 3806, 614, 3804, 3803, 49, 3802,
	80, 94, 102, 16, 101, 3801, 124, 31, 3797, 221,
	56, 3796, 130, 85, 73, 6247, 8851, 3795, 96, 53,
	103, 441, 149, 142, 171, 199, 136, 181, 180, 146,
	220, 3793, 217, 3792, 3192, 65, 140, 3789, 3781, 3780,
	67, 170, 91, 3778, 3775, 59, 6, 2, 32, 153,
	11, 99, 36, 19, 3770, 18, 3768, 3767, 3766, 3765,
	28, 163, 3763, 242, 3762, 58, 43, 26, 3761, 22,
	185, 3757, 191, 107, 3755, 3753, 225, 176, 154, 3752,
	87, 201, 3750, 3740, 3739, 3736, 3732, 120, 3, 109,
	3731, 3730, 123, 3729, 42, 200, 169, 3726, 61, 3723,
	3711, 145, 88, 113, 239, 105, 188, 98, 192, 157,
	195, 3710, 3709, 3708, 168, 3704, 3701, 186, 132, 3700,
	3699, 174, 241, 35, 62, 197, 63, 166, 133, 3696,
	177, 3695, 3690, 248, 156, 183, 1, 13, 78, 104,
	3688, 5, 196, 134, 173, 97, 3687, 4992, 2490, 2313,
	3685, 3683, 131, 100, 60, 116, 128, 227, 55, 3682,
	3680, 2035, 3679, 3677, 3676, 3675, 152, 3674, 3673, 3670,
	108, 119, 151, 3668, 77, 76, 57, 15, 125, 287,
	232, 92, 187, 159, 222, 3667, 3666, 3664, 158, 3663,
	51, 175, 3662, 172, 213, 3659, 3658, 162, 3657, 129,
	397, 47, 127, 3656, 190, 3653, 3652, 3650, 3648, 3647,
	3646, 3645, 323, 194, 3644, 3642, 3641, 29, 160, 3640,
	223, 161, 167, 83, 38, 3639, 81, 2070, 3637, 205,
	210, 74, 118, 3636, 4087, 50, 0, 11498, 6726, 9294,
	10738, 3635, 4537, 3634, 3633, 3632, 189, 114, 3631, 3630,
	3629, 86, 3626, 64, 3625, 3620, 54, 3618, 20, 10,
	14, 25, 23, 297, 243, 3616, 3608, 21, 111, 121,
	3591, 233, 193, 3590, 3589, 3588, 3587, 93, 3585, 33,
	3581, 34, 3579, 3577, 41, 9, 40, 3576, 3575, 208,
	3574, 182, 202, 3573, 141, 3572, 3183, 112, 3571, 3570,
	226, 75, 3569, 224, 3568, 3136, 3567, 3566, 17, 3565,
	3564, 207, 147, 184, 3563, 3562, 139, 3561, 3558, 3556,
	218, 3554, 3553, 27, 3549, 4, 3548, 3546, 178, 2993,
	3545, 3544, 52, 3525, 164,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 540, 540, 21, 35, 22, 36,
	15, 541, 541, 541, 541, 28, 23, 37, 25, 25,
	25, 25, 25, 177, 177, 177, 177, 20, 20, 31,
	31, 211, 211, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 539, 539,
	213, 213, 212, 207, 207, 542, 542, 214, 214, 214,
	216, 216, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 441, 441, 441, 472, 472, 472, 555, 555, 556,
	556, 556, 556, 556, 115, 115, 340, 340, 340, 43,
	43, 43, 43, 43, 534, 534, 179, 179, 179, 181,
	181, 180, 180, 180, 180, 180, 65, 65, 547, 547,
	548, 548, 546, 549, 549, 549, 178, 178, 178, 111,
	111, 111, 111, 111, 112, 112, 113, 113, 182, 182,
	182, 184, 184, 183, 183, 183, 183, 183, 183, 183,
	183, 188, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 93, 93, 474, 474, 475, 475, 173, 173, 174,
	174, 174, 174, 175, 175, 176, 176, 176, 57, 185,
	185, 187, 187, 186, 186, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 164, 164, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 62, 62, 62, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 558, 558,
	559, 559, 560, 560, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 71, 71, 302, 302, 273, 273, 72, 72, 72,
	73, 73, 74, 74, 59, 59, 532, 532, 317, 317,
	432, 432, 76, 76, 339, 339, 77, 77, 77, 77,
	77, 77, 78, 78, 78, 78, 78, 78, 78, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 86, 86, 86, 86, 86, 87, 87,
	87, 84, 84, 84, 81, 81, 81, 80, 80, 80,
	85, 85, 85, 531, 264, 264, 83, 83, 83, 82,
	82, 82, 318, 318, 88, 88, 88, 88, 274, 89,
	89, 89, 89, 89, 89, 89, 89, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	434, 434, 90, 90, 90, 399, 399, 94, 94, 94,
	355, 355, 95, 95, 95, 95, 95, 96, 96, 96,
	96, 96, 96, 114, 114, 114, 114, 114, 114, 536,
	536, 310, 310, 229, 229, 229, 229, 104, 104, 104,
	104, 105, 105, 105, 106, 106, 169, 169, 121, 121,
	121, 121, 121, 120, 120, 120, 120, 120, 120, 49,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	54, 54, 54, 54, 54, 123, 123, 552, 552, 125,
	122, 122, 122, 124, 124, 124, 124, 126, 127, 127,
	127, 127, 127, 127, 127, 127, 128, 128, 466, 466,
	326, 326, 464, 464, 483, 483, 465, 465, 278, 278,
	278, 278, 278, 279, 279, 279, 473, 473, 473, 473,
	473, 473, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 170, 170, 171, 172, 172,
	172, 172, 172, 149, 149, 149, 163, 163, 163, 163,
	163, 163, 163, 152, 152, 152, 139, 139, 130, 130,
	130, 130, 130, 130, 130, 134, 134, 134, 134, 134,
	134, 134, 134, 131, 131, 141, 141, 141, 141, 141,
	135, 135, 136, 136, 159, 159, 138, 138, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 132, 132, 132,
	132, 143, 143, 143, 143, 362, 362, 362, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 162,
	162, 162, 162, 162, 162, 550, 550, 551, 551, 156,
	156, 156, 156, 156, 156, 413, 413, 150, 150, 150,
	150, 155, 155, 155, 155, 158, 158, 158, 158, 345,
	345, 147, 147, 147, 148, 148, 148, 153, 153, 154,
	151, 151, 157, 157, 157, 157, 133, 133, 133, 562,
	562, 562, 160, 160, 146, 146, 161, 161, 161, 161,
	161, 161, 161, 161, 145, 145, 145, 144, 144, 144,
	144, 137, 533, 533, 529, 529, 529, 529, 529, 529,
	529, 529, 530, 530, 530, 530, 535, 535, 99, 99,
	99, 99, 99, 107, 107, 107, 107, 107, 100, 100,
	100, 100, 100, 102, 102, 101, 101, 101, 101, 66,
	66, 66, 66, 66, 14, 14, 14, 67, 67, 191,
	191, 191, 292, 292, 192, 192, 286, 286, 286, 286,
	189, 189, 190, 190, 68, 68, 563, 563, 563, 543,
	543, 543, 544, 544, 544, 544, 544, 544, 280, 280,
	281, 281, 379, 379, 379, 379, 379, 284, 284, 284,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 287,
	287, 215, 215, 215, 290, 291, 291, 288, 288, 289,
	289, 289, 294, 294, 293, 296, 296, 295, 378, 492,
	492, 494, 494, 494, 494, 494, 494, 494, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 564,
	564, 490, 490, 490, 491, 486, 486, 487, 487, 487,
	487, 487, 282, 282, 283, 283, 283, 283, 488, 489,
	308, 308, 417, 493, 493, 495, 495, 497, 565, 565,
	565, 565, 565, 565, 566, 566, 566, 377, 377, 376,
	376, 300, 300, 498, 498, 498, 498, 499, 499, 499,
	499, 499, 502, 501, 500, 500, 500, 500, 500, 70,
	70, 70, 342, 342, 341, 341, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 166, 166, 232, 232, 64, 64, 64, 12, 12,
	12, 545, 545, 545, 69, 69, 69, 69, 69, 69,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	538, 538, 537, 537, 233, 233, 568, 568, 75, 75,
	75, 75, 75, 75, 75, 435, 435, 436, 436, 63,
	63, 63, 63, 63, 363, 363, 361, 361, 360, 360,
	307, 307, 415, 415, 415, 416, 237, 237, 238, 238,
	208, 208, 208, 27, 26, 19, 19, 24, 24, 39,
	39, 39, 39, 42, 42, 38, 38, 38, 38, 40,
	40, 34, 34, 553, 553, 554, 554, 103, 103, 108,
	108, 108, 108, 108, 109, 109, 109, 109, 110, 110,
	110, 110, 119, 119, 165, 165, 165, 165, 165, 165,
	165, 44, 44, 44, 44, 56, 56, 56, 56, 117,
	570, 570, 570, 118, 118, 118, 569, 569, 230, 230,
	373, 373, 374, 374, 571, 571, 375, 375, 375, 375,
	375, 223, 222, 224, 224, 225, 225, 61, 61, 61,
	217, 217, 218, 218, 219, 219, 220, 220, 221, 221,
	572, 572, 97, 97, 97, 168, 168, 272, 272, 272,
	370, 370, 370, 301, 301, 244, 244, 372, 372, 372,
	372, 338, 338, 338, 167, 167, 315, 315, 328, 328,
	329, 329, 429, 429, 330, 116, 116, 195, 195, 193,
	193, 193, 193, 193, 193, 193, 193, 200, 200, 201,
	201, 202, 202, 203, 204, 204, 204, 204, 319, 319,
	205, 205, 205, 194, 194, 194, 196, 196, 196, 196,
	196, 196, 196, 199, 199, 199, 199, 206, 206, 206,
	198, 198, 509, 509, 509, 511, 511, 513, 513, 512,
	512, 508, 508, 510, 510, 567, 567, 344, 344, 344,
	298, 299, 297, 297, 305, 305, 303, 304, 304, 306,
	306, 414, 414, 414, 209, 209, 209, 335, 335, 335,
	335, 336, 336, 366, 366, 364, 364, 364, 364, 365,
	365, 367, 367, 367, 368, 368, 369, 369, 332, 332,
	333, 333, 334, 334, 334, 334, 395, 395, 197, 197,
	197, 312, 312, 312, 313, 313, 385, 385, 385, 385,
	385, 385, 386, 386, 384, 384, 384, 384, 418, 418,
	418, 418, 418, 418, 418, 418, 418, 419, 420, 420,
	314, 314, 421, 371, 371, 527, 527, 527, 528, 528,
	412, 412, 422, 422, 422, 422, 422, 422, 410, 410,
	411, 411, 430, 431, 431, 348, 348, 348, 348, 346,
	346, 349, 349, 349, 349, 347, 347, 423, 423, 423,
	423, 337, 337, 424, 424, 424, 424, 425, 426, 426,
	427, 427, 380, 381, 381, 437, 437, 437, 437, 439,
	311, 311, 311, 311, 311, 485, 484, 484, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 454,
	454, 454, 454, 454, 454, 454, 440, 440, 440, 440,
	440, 444, 444, 444, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 445, 445, 450, 450, 451,
	451, 451, 446, 447, 452, 452, 452, 452, 573, 573,
	456, 456, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 442, 442, 442, 449, 449, 449, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	356, 356, 358, 358, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 389, 389, 389, 389, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	503, 503, 503, 503, 503, 503, 503, 503, 391, 391,
	506, 506, 507, 507, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 514, 514, 515, 515, 517, 517, 518,
	518, 519, 520, 520, 520, 521, 522, 522, 516, 516,
	523, 523, 523, 523, 524, 524, 525, 525, 525, 525,
	525, 526, 526, 526, 526, 526, 401, 401, 402, 402,
	408, 408, 408, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 234,
	234, 234, 234, 234, 324, 324, 322, 322, 322, 325,
	325, 323, 323, 321, 321, 320, 320, 398, 398, 396,
	396, 400, 400, 350, 350, 455, 455, 455, 455, 455,
	455, 455, 455, 351, 351, 351, 359, 352, 352, 353,
	353, 353, 353, 353, 392, 393, 354, 354, 354, 394,
	394, 403, 407, 407, 406, 405, 405, 404, 404, 382,
	382, 383, 383, 331, 331, 574, 574, 327, 327, 428,
	428, 428, 428, 276, 276, 316, 316, 275, 275, 267,
	267, 268, 268, 268, 268, 309, 309, 409, 409, 457,
	457, 458, 458, 459, 459, 460, 460, 461, 462, 463,
	397, 397, 254, 253, 241, 242, 252, 251, 250, 240,
	243, 247, 248, 249, 245, 246, 260, 259, 258, 265,
	266, 256, 257, 433, 239, 269, 269, 270, 270, 270,
	271, 271, 271, 271, 235, 235, 236, 236, 261, 261,
	262, 263, 263, 255, 255, 255, 226, 226, 226, 227,
	227, 228, 228, 471, 471, 468, 468, 468, 469, 469,
	469, 470, 470, 470, 470, 467, 467, 467, 467, 467,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 477,
	477, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 479,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	482, 482,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 1, 1, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 0,
	1, 1, 2, 3, 3, 0, 4, 6, 0, 5,
	7, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 2, 6, 4, 7, 7, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 2, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 3, 4, 3, 5, 3, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 1, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 9,
	9, 3, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	1, 2, 8, 4, 2, 5, 5, 5, 2, 1,
	3, 11, 12, 8, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	3, 1, 1, 1, 8, 10, 11, 7, 10, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 7, 8, 9, 6,
	8, 6, 8, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 0, 2, 4, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 9, 12, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 565, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -114, -119, -103, -115, -121, -165, -170,
	-171, -172, -3, -43, -45, -58, -76, -78, -89, -98,
	-97, -99, -104, -111, -107, -93, -49, -116, -120, -129,
	-166, -167, -168, 32, 31, 99, 79, 150, 125, 133,
	194, 372, 408, 419, 400, 389, -124, -125, 436, -44,
	-56, -118, -117, 72, 126, 395, -4, -12, 29, 45,
	-46, -47, -48, 61, -64, -60, -71, -65, -62, -557,
	101, -510, -79, -82, -110, -561, 138, 157, 212, -100,
	-101, 355, -105, -106, 402, -108, -109, 404, 158, -51,
	-50, 152, -193, -195, -122, -123, -169, -130, -131, -132,
	-133, -134, -135, -136, -159, -137, -138, -139, -140, -141,
	-142, -162, -143, -144, -145, -146, -151, -147, -148, -149,
	-150, -152, -153, -155, -156, -157, -158, -160, -161, 441,
	-154, 497, 48, 455, 81, 142, 412, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -59, -61, -63,
	-66, -67, -68, -75, -69, -70, -509, -80, -81, -84,
	-86, -87, -83, -85, 401, -196, -194, 562, 512, -16,
	-21, -22, -17, -18, -20, -23, -19, -24, -30, -35,
	-36, -32, -33, -31, -34, -37, -38, -39, -40, -41,
	-42, -26, -28, -29, -27, -15, -25, 531, 540, -199,
	-197, -198, -206, 428, 520, 471, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, -274, 2, -256, -261,
	-262, -263, -255, -226, -479, -482, 4, -476, -480, 163,
	222, 319, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 52, 54,
	58, 59, 60, 61, 62, 63, 67, 72, 73, 78,
	79, 80, 81, 82, 83, 84, 90, 87, 88, 89,
	91, 93, 95, 96, 97, 98, 99, 100, 102, 103,
	104, 106, 107, 115, 116, 117, 118, 120, 125, 126,
	129, 124, 128, 131, 132, 133, 136, 137, 138, 140,
	141, 143, 144, 145, 147, 148, 150, 151, 152, 155,
	153, 479, 154, 156, 157, 158, 159, 169, 170, 171,
	176, 178, 182, 183, 186, 187, 188, 189, 190, 191,
	192, 193, 195, 199, 201, 202, 203, 204, 205, 211,
	212, 214, 215, 216, 217, 218, 223, 224, 225, 229,
	226, 235, 236, 240, 241, 242, 244, 248, 249, 250,
	251, 252, 253, 255, 257, 256, 259, 262, 263, 266,
	270, 271, 274, 275, 276, 277, 279, 280, 283, 281,
	284, 285, 282, 286, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 299, 287, 302, 300, 304,
	305, 306, 317, 315, 310, 311, 307, 312, 308, 309,
	313, 314, 321, 322, 325, 209, 327, 328, 331, 349,
	335, 336, 337, 340, 341, 344, 347, 348, 350, 351,
	352, 353, 354, 355, 356, 357, 359, 360, 362, 363,
	364, 366, 367, 368, 370, 372, 373, 375, 377, 378,
	379, 380, 381, 382, 383, 386, 385, 387, 389, 395,
	400, 397, 398, 399, 401, 402, 403, 404, 406, 407,
	408, 410, 411, 412, 413, 415, 417, 418, 421, 422,
	438, 439, 457, 419, 420, 423, 424, 425, 426, 427,
	431, 429, 430, 432, 433, 434, 436, 437, 440, 441,
	443, 444, 445, 446, 447, 448, 451, 453, 454, 455,
	456, 458, 461, 462, 463, 464, 459, 470, 467, 468,
	472, 473, 474, 475, 476, 477, 478, 480, 482, 490,
	491, 492, 494, 497, 498, 499, 500, 488, 502, 503,
	506, 507, 508, 511, 509, 510, 512, 514, 517, 518,
	519, 525, 524, 526, 532, 533, 535, 536, 537, 36,
	49, 50, 53, 55, 57, 68, 69, 70, 74, 121,
	122, 149, 160, 161, 172, 184, 185, 196, 198, 206,
	207, 208, 230, 231, 233, 238, 260, 324, 326, 342,
	346, 361, 365, 369, 371, 384, 414, 449, 460, 465,
	483, 484, 485, 486, 493, 495, 520, 521, 522, 527,
	534, -274, 2, -256, 333, -249, 2, -226, -226, 372,
	28, 2, 28, 360, 430, 474, 476, 2, -536, -310,
	2, 28, -229, -226, 101, 194, 428, -249, 2, -536,
	-310, 25, 2, -226, 2, -230, 2, 419, -226, 280,
	2, 565, 93, 271, 73, 414, 433, -127, 491, -126,
	483, 423, -128, -466, 2, 302, -226, 565, 565, 565,
	28, -239, -226, 471, 222, 423, 117, 468, 565, 2,
	471, 352, 524, 429, 117, 381, 222, 499, 423, -545,
	280, 410, 197, 513, -534, 2, -529, 4, -480, -476,
	-268, -267, 471, 477, 117, -263, -255, 555, -262, 565,
	565, 565, 2, 241, 242, 380, 379, 433, 434, 565,
	565, 565, 565, 421, 2, 159, 22, 27, 65, 92,
	97, 123, 179, 182, 338, -558, 349, 378, 432, 470,
	473, 480, 494, -544, 456, 67, 423, -543, -545, 280,
	499, 136, -360, 117, 271, 193, 507, 476, 474, 505,
	129, 229, 510, 509, 565, 565, 22, 27, 65, 76,
	97, 136, 159, 179, 182, -560, 349, 378, 417, 432,
	470, 480, 494, 2, 524, 280, 429, 471, 222, 117,
	499, 423, -545, 421, 422, 376, -91, 2, 562, 32,
	31, 436, -188, 471, 234, 2, -226, 565, 565, 2,
	241, 242, 421, 422, 565, 565, 180, -529, 2, 565,
	565, 2, 241, 242, 421, 422, 234, 2, 67, 425,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 2, -163, 433, 456, 203, 46, 45, 73,
	28, 377, 78, 353, 118, 144, 500, 195, 222, 223,
	249, 92, 93, -362, 44, 242, 241, 422, -550, 421,
	-413, 472, 424, 430, 467, 253, 419, 491, 101, 514,
	411, 537, 381, 382, 153, 4, 117, 302, 435, 483,
	271, 418, 356, 83, -567, 2, 471, -569, 2, 491,
	491, 2, -569, 2, -569, 2, -569, 2, -570, 491,
	534, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, -194, -196,
	-195, 565, 565, 565, 565, 565, 565, 565, -163, 433,
	2, 73, 28, -303, -305, 504, 232, 146, 339, -193,
	-195, 2, -509, -464, 2, -387, -483, -389, 553, 554,
	546, 469, 66, 318, 538, -401, 123, 505, 333, -482,
	-390, -403, 149, 414, -325, 8, 9, 5, 6, 7,
	-235, -391, -397, 496, 162, 323, -271, 566, 10, 562,
	-506, -195, -402, 37, 198, 64, -468, -270, -236, -440,
	233, -269, -255, -503, -504, 4, -476, -477, -469, -443,
	-451, -447, -448, -454, -226, -479, 76, 109, 110, 108,
	113, 112, 273, 272, 114, 111, 435, 513, 65, 36,
	206, 207, 238, 324, 208, 74, -505, 137, -478, 230,
	231, 449, 50, 384, 172, 122, 121, 326, 55, 53,
	521, -452, 119, 483, 484, 485, 486, 184, 185, 57,
	160, 161, 346, 369, 465, 493, 495, 196, 260, 43,
	105, 181, 228, 210, 237, 239, 243, 261, 264, 303,
	316, 320, 343, 345, 409, 442, -573, 522, 460, 68,
	69, -511, 385, -512, -249, -511, 565, 565, 567, 565,
	-297, -298, -299, 2, 28, 134, 562, 2, -418, 2,
	-419, -423, -195, 254, -422, 562, -420, 560, -256, 334,
	-507, 415, -503, -504, -235, -255, -270, 4, -476, -478,
	564, -300, 562, 117, 471, 77, 222, -355, 562, -226,
	28, 333, 487, 567, -399, 562, 333, 180, 336, -226,
	524, 2, 2, 438, 2, 562, -127, 70, 491, 43,
	433, -374, 2, -375, -222, -223, -224, -430, -225, 240,
	375, 383, 541, 127, 318, 537, -464, -552, 180, 545,
	487, -464, -326, 564, 2, 2, 2, 2, 2, 2,
	-423, 206, -256, 2, -253, -467, 4, -476, -480, -477,
	-481, -479, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 56, 64, 65, 71, 75, 77, 86, 92, 101,
	108, 109, 111, 110, 112, 113, 114, 123, 127, 130,
	134, 135, 139, 142, 146, 162, 164, 177, 179, 180,
	194, 197, 200, 213, 227, 232, 234, 254, 258, 265,
	272, 273, 318, 323, 329, 333, 334, 338, 339, 358,
	374, 388, 405, 428, 435, 452, 466, 471, 481, 487,
	489, 496, 504, 505, 513, 515, 523, 528, 529, 530,
	531, -482, 76, 2, -423, 206, 2, -258, 206, -423,
	-261, 2, -240, -226, 2, -252, -467, 2, -275, 206,
	-256, -257, -261, -259, 2, -261, -265, 2, -226, -474,
	206, 2, -471, 10, -470, 5, 4, -476, -480, -477,
	524, 234, 487, 567, -316, -267, -268, -463, 8, -309,
	-226, 564, -387, 2, -116, -102, 2, 177, -387, 206,
	2, -116, 206, 2, -387, 206, 2, -116, 206, 2,
	-547, 2, -474, 206, -226, 2, 284, 2, 2, 494,
	2, 97, 471, 116, 2, 399, -559, 417, 498, 2,
	2, 2, 2, 2, 2, 2, 471, -245, 2, -226,
	177, -265, 206, -266, 2, -226, -227, 429, -568, 385,
	-474, 206, 2, 524, -259, 2, -259, 222, 236, -240,
	206, 2, 476, 474, 476, 474, 180, 2, 234, 2,
	234, 2, -424, 2, -425, -419, -426, 560, 334, 284,
	2, 2, 2, 2, 2, 206, -226, 471, 116, 2,
	252, 2, 2, 2, 2, 2, 2, 2, -318, 206,
	2, -256, 524, -318, 206, 2, -318, 206, 2, -361,
	2, 86, -240, 206, 2, -264, 206, 2, -259, -309,
	206, 2, -475, 206, 2, -474, -387, 2, -116, 2,
	-434, 2, -433, -470, 520, -91, 562, -91, 562, 433,
	562, -474, -256, -256, -387, 2, -116, -102, 2, -387,
	2, -116, 2, -113, -474, -112, 562, 180, -387, 2,
	-116, -102, 2, -387, 2, -116, 2, -188, 177, 2,
	117, 471, -163, 2, 177, 515, 2, 8, 2, 213,
	-474, 424, 382, 169, 2, 438, 2, 439, 73, -362,
	537, 73, 180, 2, 180, 2, -345, 2, 531, 2,
	2, -533, 2, 333, 180, 2, 180, 2, 180, 2,
	180, 2, 180, 2, 379, 434, 492, 242, 2, -116,
	528, -102, -387, 528, 2, -551, 177, 422, -387, 2,
	490, 251, 154, 180, -345, 2, 180, 2, 180, 2,
	5, 2, 380, 457, 2, 240, 375, 457, 2, -256,
	-562, 2, 471, 524, 429, 2, 2, 87, 88, 180,
	2, 180, 2, 180, 537, 2, -337, -423, -373, -374,
	-373, 487, -303, -305, -163, 438, 2, -200, -335, -202,
	177, -364, -365, -203, 265, 164, 329, -204, -344, 28,
	134, -344, -344, 59, 563, 563, 11, 12, 75, 41,
	553, 554, 555, 556, 175, 557, 558, 551, 552, 550,
	543, 544, 548, 246, 247, 94, 547, 545, 85, 278,
	416, 165, 166, 167, 168, 396, 220, 34, 221, 14,
	15, 16, 33, 338, 264, 538, 210, 442, 546, 17,
	18, 19, 237, 239, 320, 49, 213, -234, -277, -387,
	-387, -387, -387, -387, -387, -387, 345, 562, -331, -382,
	560, -195, 562, 562, 562, -463, -195, -387, -401, 563,
	-323, 562, -195, -401, -396, 562, 414, 560, 562, -404,
	-387, 5, 5, 5, 562, 564, -514, 532, 177, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 371, -445, 562, -444, 562, -444,
	-444, 525, -442, 562, 540, 533, 562, -442, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 525, 567, -511, -300, 562, -327, -428, -387, 555,
	-327, -327, 333, -320, -387, 105, -348, 243, 303, 181,
	261, 409, 228, -384, 566, -384, -412, 540, -195, -420,
	-255, -195, -422, 562, -418, -412, -92, -463, -76, -89,
	-97, -116, -129, -167, -168, 555, -256, 562, 180, 562,
	564, -467, 180, -309, -240, -256, -269, -270, -275, 133,
	-320, -529, 499, 423, -309, -229, 38, -398, -437, -438,
	-485, 566, -484, -440, -450, -446, -449, 361, 365, -469,
	53, 521, -452, 233, 4, -476, -478, 230, 231, 449,
	50, 384, 172, 122, 121, 326, 55, 483, 484, 485,
	486, 184, 185, 57, 522, 460, 68, 69, -529, 499,
	423, -309, 177, -361, -466, -320, 38, -374, 2, 123,
	-471, -571, 567, 263, -279, 277, 317, 202, 334, 535,
	327, 127, -473, 5, 4, -397, -409, 123, 271, 233,
	-457, -459, 8, -458, 9, -460, 553, 554, -465, -464,
	107, 564, -467, -211, 397, 436, -210, 24, 29, 138,
	224, 306, 518, 155, -289, 225, 348, 352, 149, 453,
	508, -540, -541, 420, 478, 479, 89, 327, 436, 397,
	149, -341, -343, 38, 115, 306, 347, 60, 217, 282,
	283, 455, 527, 149, 436, 397, 348, -541, 98, 397,
	-541, -213, 453, 508, -540, -541, 420, 397, -212, -289,
	149, 566, 24, 397, 436, 348, -555, -556, 138, 29,
	397, 348, -537, -508, 531, 149, -423, 206, -548, -112,
	255, 5, 10, -474, -112, -316, 567, 567, -467, 555,
	422, 421, 149, 149, 149, 149, 177, 318, 2, 2,
	2, 2, 2, 182, -543, -560, 2, 2, -256, 206,
	-302, 333, -532, -317, 471, -256, 318, 43, -258, 206,
	2, -261, 524, -537, 318, -260, 206, -256, 38, 562,
	2, -361, 2, 222, -508, 318, -424, -272, -256, -419,
	-272, 436, -249, 38, -384, -256, 2, 149, 2, 2,
	2, -226, -214, 567, 63, 403, 149, -318, 206, -214,
	149, -214, 149, -276, 206, -275, -214, 149, -214, 567,
	149, -214, 149, 567, 149, 563, 567, -434, -434, -474,
	-176, 531, 180, 101, 562, 562, -188, -431, 567, -430,
	213, -475, -113, -474, -474, -532, -240, 2, -256, 2,
	471, 244, -474, -176, 213, -474, -474, -474, -466, 28,
	439, 2, 379, 434, 492, 88, 439, 2, -256, 471,
	117, 222, 79, -535, 177, -530, 410, 423, 499, -529,
	-256, 117, -256, 117, -256, 117, -256, -256, 2, 2,
	2, 2, 2, 84, 84, 2, 45, -551, 177, 2,
	490, 2, 490, 2, -226, -226, -226, 456, 263, -256,
	177, 471, 222, 471, 222, 117, 471, -214, 567, -230,
	-200, -335, -466, -336, -335, -201, -200, -203, 177, 383,
	509, 306, 440, 248, -365, -364, 28, -387, -369, 171,
	305, -387, -367, -389, 553, 554, -458, -460, -319, 327,
	-194, -194, -194, -306, -414, -387, 374, 222, -439, -437,
	-437, -254, -467, 483, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, -387,
	-387, -387, -387, -387, -387, -387, -387, -387, -387, 264,
	210, 442, 49, 213, -387, 487, -387, -387, -387, -387,
	300, 318, 323, 496, 162, 506, 134, 327, -574, 466,
	40, -394, -195, -324, 562, -408, 35, 452, 28, -401,
	562, 2, -382, -387, -383, -321, -320, -320, 563, 523,
	28, 134, 555, 2, 563, 567, 38, 563, -387, -321,
	-400, -396, -320, -407, -406, 528, -356, -357, 536, 287,
	120, 204, 285, -358, 427, -461, 8, -467, 555, -515,
	170, 197, 562, 563, 2, 563, 2, 563, -387, 2,
	563, -387, 2, 563, -387, 2, 563, -387, 2, 563,
	2, -387, -387, -387, -387, -387, -387, -387, -320, 8,
	-461, -461, 483, 483, -461, -461, -461, -453, 361, 362,
	363, 364, 266, 267, 268, 269, 365, 366, 367, 368,
	292, 293, 294, 295, 288, 289, 290, 291, 296, 297,
	298, 299, 189, 190, 191, 192, 185, 186, 187, 188,
	-453, -350, 2, -455, -320, 4, 536, 287, 120, 204,
	285, 427, 5, -350, 2, -351, 2, -387, -320, -352,
	-388, -389, 553, 554, 546, -401, -353, 2, -387, -321,
	-387, 56, 258, 489, -354, -387, 180, -320, -320, 2,
	-320, 2, -512, 38, -320, -312, 567, 180, 38, 4,
	-312, -312, 562, 563, 567, -349, 201, 281, 276, -349,
	-418, -348, 243, -346, 343, -346, -346, -412, -241, 560,
	568, -467, -412, -411, -410, 38, -249, 340, -412, -412,
	564, 563, -411, 561, -527, 562, 565, 565, 565, 565,
	565, -256, 562, -320, -467, 564, 458, 563, 237, 237,
	237, 237, 415, 563, 487, -531, -264, -309, 531, -91,
	335, 563, 567, -311, 37, 560, 564, -461, 2, 2,
	-456, 525, 562, 562, -357, 562, 180, -531, -309, -310,
	-260, -552, 563, 491, -375, -278, 383, 451, 398, 431,
	468, 8, 9, 8, 9, 567, -467, 567, -553, 92,
	487, 77, 423, -378, 206, 77, -486, -243, 92, -487,
	-226, 71, 505, 374, 179, 147, -553, 92, 374, -553,
	92, 2, 224, 92, 436, 456, 487, 59, -423, 41,
	41, 28, -116, 259, 180, 537, 471, 222, 423, 487,
	-423, -343, -437, 115, 282, 283, 59, -462, -457, 553,
	554, -462, 59, -462, -462, -462, 531, -258, -423, 423,
	487, 487, 487, 487, 567, 41, 41, 28, -116, 259,
	180, 487, -275, -241, 519, 42, 519, 487, 42, 423,
	487, 567, 42, 42, 487, 487, -538, -231, 104, 312,
	275, 313, 96, 309, 95, 308, 102, 310, 103, 311,
	526, 321, 62, 307, 286, 314, -232, -233, 354, 517,
	-474, 436, 397, 149, 213, -431, 213, -431, -267, -226,
	564, -116, -387, -387, -116, -387, -116, 45, 149, 2,
	-568, 252, 562, -282, 318, 180, -309, -432, 234, 567,
	-317, 149, -472, -471, 114, 435, -342, -341, 318, -260,
	206, 2, 149, -300, 318, 143, 562, 381, 2, -242,
	206, -227, -226, -361, -217, 475, 149, -339, 515, -370,
	-116, 562, 123, 38, -370, -328, -329, -429, -330, -243,
	562, -249, -384, -226, 2, -256, -318, -214, 149, -318,
	-318, -214, 567, 149, -240, -259, -264, -309, -474, -475,
	-91, -433, 563, 563, 563, -175, 337, -174, -226, 5,
	-188, 515, -281, -379, -378, -490, -491, -486, 264, 222,
	505, 236, 163, -301, -244, -243, 116, -182, 531, -112,
	-113, 563, -431, 213, -176, -176, -431, -431, -256, 177,
	-474, -176, -176, -176, 2, 2, 2, -345, -256, -240,
	-275, -256, -309, -309, -309, -264, -345, -240, -345, -240,
	-345, -240, -116, -387, 2, 433, 177, 177, 564, -345,
	381, 117, 471, 352, 222, -256, -275, -256, -275, -240,
	-256, -423, -336, -201, 334, 248, 440, -367, -368, -389,
	414, 415, -368, 414, 415, 8, 9, 8, 9, -205,
	444, 322, -318, 567, -208, 39, 130, 248, -256, 537,
	145, -387, -387, 487, -574, 466, -394, 145, -387, 300,
	323, 496, 162, 506, 134, 327, 180, 562, -388, -388,
	563, -322, -387, -387, 561, 570, 563, -305, 567, -303,
	-387, -320, -320, 563, 564, -320, -309, 561, 561, 567,
	563, -405, -406, 139, -387, 487, 487, 487, 487, 562,
	563, 564, -520, 344, 562, 562, -387, 563, 563, 563,
	563, 38, 567, 567, 567, 563, 567, 567, 567, 563,
	563, 563, 567, 563, 537, 537, 563, 563, 563, 563,
	567, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 563, 567, 563, 180, 563,
	563, -359, 358, 563, 11, 12, 553, 554, 555, 556,
	175, 557, 558, 551, 552, 550, 543, 544, 545, 85,
	278, 416, 14, 15, 16, 237, 213, -388, -388, -388,
	563, -392, -393, 180, 177, 38, -354, -354, -354, 563,
	180, -320, 563, 563, 562, -513, 280, 318, 563, -381,
	-380, 529, -428, -313, 2, -418, -251, -467, -381, -381,
	-320, -387, 243, 243, -347, 515, 333, -349, -418, -411,
	-463, -386, -385, 178, 39, 130, 315, 209, -411, -249,
	-300, -411, -411, -467, -412, -412, -410, 563, -528, -463,
	563, -314, -421, -507, -305, 564, -467, -185, -508, -164,
	5, 323, -164, -164, -164, -309, 487, 487, 25, 359,
	-437, 560, 561, 8, -467, 562, -461, -461, -461, -309,
	180, 180, 180, -340, 531, -464, -374, 503, 82, 383,
	483, -464, -210, 397, -243, -243, -256, -265, 318, -378,
	206, -216, 318, -437, -250, -226, 562, 562, 248, 248,
	515, -243, -250, 248, 206, -243, 206, -250, 2, -250,
	-539, 383, 328, -387, -472, 270, 381, 319, -211, 397,
	436, -116, -116, -116, 562, -552, 515, 133, -256, -275,
	-256, -265, -260, 436, 397, 316, -269, -462, -462, -341,
	436, 397, -265, -258, -472, 423, -240, -212, -116, -116,
	-116, 562, -241, -213, 397, 5, 206, -243, 5, -226,
	-243, -265, -472, -556, 24, -243, 206, -243, -265, -472,
	-231, -474, 323, 511, -537, 423, 487, -423, -112, -179,
	531, -112, -173, 218, 555, -534, -226, 524, -226, -280,
	-283, -281, -243, -191, -192, 533, 531, 149, -273, -256,
	560, -176, -474, -256, -265, -266, 149, -300, 318, -474,
	38, 149, 562, 2, 2, 333, 318, -242, 206, -218,
	140, -572, 545, -240, -381, -313, -338, -372, 405, 333,
	-301, 520, -249, -338, -315, 567, 180, 545, 564, -301,
	-427, 555, 2, -214, -318, -214, -214, -275, -276, -214,
	-214, -214, -91, -91, -176, 567, 562, 545, 545, 562,
	-474, -474, 563, 567, -256, -242, 222, 222, -248, -227,
	563, 567, 564, 562, -184, 337, -183, 141, 250, 235,
	445, 446, 447, 448, 132, -431, -182, -113, 180, -52,
	531, 471, -176, 566, -345, -345, -345, 433, 433, -226,
	-252, -240, -256, -253, -275, 177, 177, 509, -368, 334,
	274, -414, -209, 539, -256, 566, -387, -387, 145, 145,
	-387, -388, -388, -387, 145, 180, 562, -387, -398, 33,
	33, 563, 567, -383, -387, 563, 523, -305, -305, 563,
	555, -467, 566, 563, -396, 142, -387, 481, 287, 204,
	285, -358, 285, -358, -358, -461, 5, -467, 555, -521,
	-246, 562, -226, 529, -304, 339, 563, -439, -437, -387,
	-387, -387, -387, -387, -461, -442, -442, -457, -457, -387,
	-392, -387, -439, -437, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, 134, 318, 327, -388, -393, -392, -387,
	-387, -437, 563, 563, 563, -320, -91, 562, 280, -332,
	197, -387, -431, 567, -332, -332, 563, -418, -418, 562,
	-387, 243, 561, 567, 569, 545, -300, 564, -410, -411,
	561, 563, 567, 563, 567, -371, 38, 563, -467, -381,
	-187, -186, 131, 52, -309, -309, 336, 5, 8, 560,
	561, 564, -461, 563, 563, 563, -309, -309, -309, 116,
	306, -387, 487, 487, 149, 318, 517, -492, -487, 147,
	-387, -307, -415, -507, 562, -226, 562, 562, 2, -207,
	138, 436, -554, 2, 515, 149, -214, 149, -214, 535,
	562, 562, 487, 423, 531, -320, -387, -177, 123, -466,
	-541, 566, -541, 566, 423, 487, 423, 487, 531, 531,
	-320, 487, -441, 47, 26, 318, -259, 487, 487, -214,
	149, 499, 436, -474, 323, -265, -260, 436, 397, -431,
	-181, 337, -180, 141, 407, 132, 250, 215, -431, -179,
	180, 234, -260, 2, 563, 563, 567, -493, 38, 331,
	331, 562, -256, -72, 531, -430, -463, 43, -258, 38,
	149, -537, -116, -260, -435, -436, 5, -256, 149, 333,
	318, -219, 257, -572, -471, -508, -305, -338, -327, 319,
	90, 563, -381, -329, -313, -387, 2, 563, -214, -214,
	-174, -175, -474, -474, -474, -176, -188, -188, -379, -284,
	562, -242, -227, 562, -188, -244, 2, -475, 567, 562,
	545, 545, 545, -182, -431, -116, 337, -256, 555, -345,
	-291, -290, 352, 327, -291, 414, 414, 334, 171, 253,
	-208, -241, -387, -387, 145, 33, 33, -387, -387, -398,
	563, -387, -387, -320, 561, 5, -387, 563, 563, 8,
	-387, 563, 564, -522, -226, -387, 563, 59, 563, 563,
	567, 567, 563, 563, 563, 563, 563, 563, 563, -393,
	180, 134, 327, 562, 563, 563, -91, -395, 200, 59,
	-418, -395, -395, -347, -309, -418, -385, -241, 560, -467,
	-463, -421, 562, 564, -186, 545, 561, 2, 560, -467,
	563, 116, -243, -243, -378, 149, -494, 92, -496, 75,
	163, 101, 318, 323, 505, 374, 71, 123, 388, -564,
	38, 542, 563, 563, 567, -416, -237, -226, -387, -416,
	-307, -309, 318, 463, 123, 318, 123, 116, 499, 78,
	-243, -250, -309, -309, -256, -265, 156, 563, 567, 545,
	2, 555, 555, -265, -260, -265, -258, 350, 156, 563,
	-241, 5, 5, 149, -238, 75, 5, -243, -243, -259,
	116, 423, 487, -179, 567, 562, 545, 545, -179, -475,
	-112, -300, -292, 224, -243, -491, -488, -489, 374, -495,
	-497, 163, 374, -116, 2, -190, -189, -226, 5, 562,
	-282, 337, 561, -472, -342, -116, -260, -300, 563, 567,
	-363, 515, -241, -256, 149, -220, 256, -572, -471, -217,
	-366, -364, 135, 562, 333, -116, -305, 545, 563, 563,
	116, 116, 216, 148, -307, 562, 562, -309, 116, 563,
	-183, -184, -474, -112, -474, -182, -53, -54, 222, 92,
	357, -253, 471, 222, 562, 562, -208, -387, -387, -387,
	563, -305, -467, 555, -516, 352, 563, -414, -387, -387,
	-388, 180, 562, -398, 563, -517, 530, -387, -333, -334,
	-387, 413, 106, 198, -517, -517, 563, -463, 2, -474,
	560, 2, -378, -250, -254, -247, -226, 163, 206, 323,
	248, 562, -388, -256, 562, 2, 30, -565, 127, 227,
	-377, -566, 100, 464, 214, -415, -208, 563, 563, 563,
	323, 323, -387, -437, 562, -214, -214, 563, 563, -387,
	487, -466, 99, -464, 2, -541, -240, -387, 487, 5,
	-214, -254, -214, -214, -238, 499, -265, -260, -180, -181,
	-474, -112, -179, 38, -287, 226, 2, -493, 248, -247,
	248, -563, 531, 563, 567, 545, 545, -280, -191, -73,
	-74, 488, -430, -300, 38, 5, 562, -226, 333, 562,
	-241, -221, 91, -572, -471, -218, -338, 319, -309, 92,
	-366, -394, -176, 562, 562, -285, 80, 93, 124, 205,
	183, 223, 456, 461, 28, -285, 563, -307, -307, 563,
	562, -176, 563, 567, 28, 562, 28, 562, -256, -275,
	-320, -320, 563, -305, 59, 567, 563, 563, -388, -398,
	563, -518, -519, -246, 567, 562, 562, 437, 561, 2,
	-496, -247, 318, 515, -387, -228, 562, -387, 38, 227,
	128, 211, -287, 562, -209, -416, -376, 515, 388, -238,
	-307, 562, 562, 562, 545, 180, 562, -441, -214, -259,
	563, -546, 386, -116, -288, -289, 213, 562, -286, 333,
	116, 306, -189, -464, -464, 563, 38, -74, 9, 38,
	-116, -307, -256, -307, 333, 265, -471, -219, 563, -250,
	-338, -475, -475, -376, 563, 563, -475, -54, -309, -309,
	563, 563, -523, 381, 415, 199, -320, -306, 563, 567,
	38, -334, 2, 2, 2, 149, 201, 563, -498, 279,
	-226, 563, 128, 211, -288, -309, -287, 201, -256, -542,
	515, 563, -294, -293, -290, -296, -295, -290, -320, -464,
	99, 350, -320, -238, -549, 181, -548, 5, 10, -191,
	350, -308, -417, -243, 81, 116, -292, -116, -116, 563,
	-363, 563, -256, -572, -220, -381, 563, 563, -377, -376,
	-192, 531, 563, 563, 563, 563, -524, -525, 49, 502,
	107, -387, -524, -524, -519, -521, 163, 531, -499, -502,
	-501, 333, 443, 181, 351, 563, 463, 527, -565, 563,
	531, -300, -387, -376, 563, 567, 520, 563, 567, 520,
	563, 180, 563, -214, -178, 531, 45, -286, -256, 563,
	567, 373, 129, 138, -287, -563, -376, 562, -377, 562,
	-457, -221, 135, -176, -176, -287, -377, -381, -176, -526,
	147, -525, 370, 176, 414, 370, 176, -526, -526, -247,
	54, -501, 333, -502, 333, 509, 129, -381, 54, -498,
	-287, -293, 213, -295, 180, 350, 421, -548, 30, 562,
	-417, 415, 415, 2, -288, -286, -377, -307, -287, -307,
	319, 509, -288, -287, 107, 197, 482, 306, 33, 545,
	-500, 306, 403, 63, 436, -500, 545, -499, 562, 562,
	337, -309, 2, -191, -287, 563, -288, 563, 436, -192,
	-288, 414, 341, -525, -387, 23, 323, 123, -387, -565,
	-320, -320, -175, 562, 563, -286, -288, -376, -192, -377,
	-328, -381, -192, 563, 563, -175, -215, 63, 403, -192,
	-377, -381, -287, -381, -381, -288, 487, 563, -381, -287,
	-288, 562, -288, -192, -320, -192, -381, 563, -381, -288,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 487, 488, 490, 491, 492, 494, 495, 497,
	499, 501, 502, 503, 505, 506, 508, 509, 510, 511,
	512, 514, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 580, 0, 1214,
	1216, 1218, 1220, 0, 717, 0, 32, 33, 0, -2,
	285, 287, 289, 0, 315, 317, 318, 320, 322, 324,
	-2, 0, 422, 423, 425, 427, -2, -2, 0, 888,
	890, 0, 567, 569, 0, 893, 895, 0, 0, 589,
	590, 0, 1305, -2, 583, 585, 587, 652, 654, 656,
	658, 660, 662, 664, 666, 668, 669, 671, 673, 675,
	677, 679, 681, 683, 685, 686, 688, 690, 692, 694,
	696, 698, 700, 702, 704, 706, 708, 710, 712, -2,
	714, -2, -2, 0, -2, -2, -2, 1232, 36, 38,
	40, 42, 44, 46, 48, 50, 52, 373, 374, 376,
	378, 380, 382, 385, 387, 389, 1363, 429, 431, 433,
	435, 437, 439, 441, 0, -2, 1375, 0, 0, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 83, 84,
	85, 86, 87, 88, 89, 90, 66, 67, 69, 70,
	71, 75, 76, 77, 78, 81, 64, 0, 0, 1336,
	1338, 1340, 1342, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 489, 493, 496, 498,
	500, 504, 507, 513, 515, 517, 474, 475, 478, 2031,
	2048, 2049, 2050, 2053, 2054, 2055, 2056, 2057, 2058, 2479,
	2560, 2561, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	2458, 476, 477, 1052, 0, 541, 539, 2023, 542, 2293,
	544, 546, 416, 417, 418, 419, 420, 421, 0, 560,
	552, 559, 561, 563, 564, 565, 566, 536, 534, 0,
	560, 2084, 558, 1212, 1213, 1197, 1198, 2331, 1239, 0,
	195, 579, -2, -2, -2, 2444, -2, 611, -2, 618,
	2448, 2333, 623, 0, 625, -2, 628, 1215, 1217, 1219,
	715, 716, 2034, 0, 0, 0, 0, 0, 34, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 1102, 1103, 0, 203, 205, -2, -2, -2,
	-2, 0, 0, 2373, 2133, 1991, 2050, 1994, 1989, 286,
	288, 290, 291, 0, 0, 0, 0, 0, 0, 316,
	319, 321, 323, -2, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 947, 939, 940, 1158,
	0, 0, 0, -2, 424, 426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 352, 479, 480, 0, 1364,
	1364, 0, 0, 0, 0, 260, 251, 889, 891, 892,
	0, 0, 0, 0, 568, 570, 0, 0, 233, 894,
	896, 897, 0, 0, 0, 0, 0, 262, 0, 0,
	584, 586, 588, 653, 655, 657, 659, 661, 663, 665,
	667, 670, 672, 674, 676, 678, 680, 682, 684, 687,
	689, 691, 693, 695, 697, 699, 701, 703, 705, 707,
	709, 711, 713, 723, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 807, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 726, 728, 729, 730, 0,
	787, 805, 806, 815, 0, 1092, 1365, 1241, 1222, 1236,
	1241, 1224, 1225, 1226, 1227, 1228, 1233, 1235, 1229, 1230,
	1231, 37, 39, 41, 43, 45, 47, 49, 51, 53,
	375, 377, 379, 381, 383, 386, 388, 390, -2, 1334,
	1335, 430, 432, 434, 436, 438, 440, 442, 571, 0,
	573, 0, 727, -2, 0, 1369, 1369, 1369, 0, 0,
	1335, 1333, 0, 576, 577, 632, 633, 1634, 0, 0,
	0, 0, 0, 0, 0, 1888, 1720, 0, 634, -2,
	1751, 1753, 2419, 2444, 1887, 1755, 1756, 1757, 1758, 1759,
	0, 1761, 1762, 1763, 1764, 1765, 1766, 0, 1768, 0,
	1773, 1774, 1775, 0, 2426, 1968, 2044, -2, 0, 0,
	2432, 2040, 0, 1854, 1791, -2, -2, 2067, 2046, 1566,
	1567, 1568, 1569, 1570, -2, -2, 2462, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 0, 2407,
	2427, 2428, 2433, 2435, 2429, 2416, 1816, 2145, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1593, 1602, -2, -2, -2, -2, -2, -2, -2,
	2420, 2421, 2438, 2441, 2447, 2452, 2453, 2425, 2434, 2461,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 1594, -2, -2, -2,
	-2, 1352, 2304, 1355, 1052, 1353, 1337, 1339, 0, 1341,
	0, 0, 0, 1346, 1372, 1370, 0, 1419, 1350, 1351,
	1437, 1437, 1461, 0, 1442, 0, 1461, 1364, 1487, 0,
	1448, 2323, 1792, 1793, 0, 2050, 2045, -2, -2, 2459,
	0, 0, 0, 0, 0, 0, 0, 537, 0, 543,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	1157, 581, 582, 0, 606, 0, 610, 2415, -2, 0,
	2342, -2, 614, 1242, 1246, 1247, 1248, 1249, 1250, 0,
	0, 0, 0, 1255, 0, 0, 620, 0, 0, 607,
	608, 626, 629, 0, 718, 719, 720, 721, 722, 63,
	0, 2427, 1487, 65, 0, 2013, 2075, 2076, 2077, 2078,
	2079, 2460, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2462, 68, 0, 2427, 72, 0, 2427, 0,
	-2, 79, 0, 2019, 82, 0, 2016, 91, 0, 2427,
	0, 1988, -2, 0, 180, 2027, 0, 916, 2029, -2,
	2427, 1100, 263, 264, 2063, 2064, 2071, 2072, 2073, 2074,
	0, 0, 0, 0, 879, 1985, 1990, 880, 2009, 881,
	1995, 0, 292, 293, 294, 295, 296, 0, 297, 2427,
	299, 300, 0, 302, 303, 2427, 305, 306, 0, 308,
	0, 217, 218, 2427, 327, 328, 0, 330, 331, 0,
	333, 0, 0, 0, 337, -2, 353, 0, 350, 340,
	341, 343, 344, 345, 346, 347, 0, 394, 392, 2024,
	0, 909, 2427, 0, 913, -2, 2030, 0, 0, 1137,
	-2, 2427, 1097, 0, 1143, 1139, 0, -2, 0, 1362,
	2427, 1259, 943, 944, 945, 946, 1499, 413, 0, 1274,
	0, 1276, 0, 1295, 1493, 1437, 0, 0, 1498, 0,
	355, 356, 357, 358, 359, 2427, 0, 0, 0, 364,
	0, 366, 367, 368, 369, 370, 371, 372, 169, 2427,
	447, 472, 0, 169, 2427, 450, 169, 2427, 453, 0,
	456, 1156, 169, 2427, 459, 169, 2427, 462, 464, 169,
	2427, 468, 469, 2427, 471, 265, 1208, 1209, 1210, 1211,
	0, -2, 530, 2033, -2, 482, 0, 483, 0, -2,
	0, 277, 0, 0, 898, 899, 900, 901, 902, 905,
	906, 907, 908, 1474, 234, 236, 0, 0, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 0, 0, 591,
	0, 0, 724, 725, 0, 0, 735, 736, 737, 0,
	277, 2334, 2301, 2165, 744, 0, 747, 750, -2, 0,
	0, 0, 0, 754, 0, 759, 760, 761, 0, 763,
	765, 887, 767, 0, 0, 769, 0, 773, 0, 776,
	0, 778, 0, 780, -2, -2, -2, -2, 791, -2,
	0, 794, 796, 0, 798, -2, 0, 807, 803, 804,
	0, 0, 0, 0, 823, 824, 0, 833, 0, 836,
	837, 838, 0, 840, 841, 0, 843, 844, 845, 846,
	0, 848, 849, -2, -2, 853, 855, 0, 862, 0,
	866, 0, 870, 0, 731, 732, 169, 1491, 1221, -2,
	1223, 0, -2, 0, 572, 0, 575, 1392, 1320, 1317,
	0, 1389, 1390, 1321, 0, 0, 0, 1328, 0, 1367,
	1368, 0, 0, 0, 1307, 1308, 0, 0, 0, 0,
	1893, 1894, 1895, 1896, 1897, 1898, 1901, 1902, 1899, 1900,
	1903, 1904, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1906,
	1907, 1908, 0, 0, 1910, 0, 1912, 0, 0, 0,
	0, 0, 0, 1699, 1701, 1976, 0, 0, 1909, 1639,
	1640, 1641, 1642, 1643, 1678, 1679, 0, 0, 1752, 1973,
	1972, 1754, 0, 1924, 0, 1767, -2, 0, 1888, 1919,
	0, 0, 1776, 1777, 1778, 0, 0, 1924, 0, 0,
	1967, 1788, 1789, 1631, 0, 0, 1856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 1579, 0, 1581, 0, 1582,
	1583, 1590, 1603, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 1948, -2, 0, 0, 0,
	0, 1595, 0, 1354, 0, 0, 1423, 1977, 1981, 1982,
	1423, 1423, 0, 0, 1925, 1484, 1484, 0, 0, 1480,
	1480, 1480, 1478, 1461, 0, 1461, 1471, 0, 1461, 1461,
	0, -2, 1442, 0, 0, 1471, 0, 1455, 518, 520,
	522, 524, 525, 526, 528, 1488, 1489, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 2036, 0, 0,
	0, 0, 2383, 2333, 548, 562, 1364, 0, 1927, 1514,
	1518, 0, 1520, 1521, 1522, 1523, 1524, 0, 0, 1515,
	-2, 1591, 1593, 1614, 2068, 2069, 2070, 1574, 1575, 1576,
	1577, 1578, 1586, 1573, 1573, 1573, 1584, 1613, 1605, 1613,
	1609, 1559, 1560, 1561, 1596, 1597, 1598, 1599, 0, 2383,
	2333, 554, 0, 0, 0, 0, 0, -2, 616, 621,
	622, 0, 1244, 0, 1251, 643, 644, 645, 1253, 1254,
	0, 1256, 619, 646, 647, 648, 649, 650, 651, 0,
	1997, 1998, 1999, 2000, 2003, 2004, 0, 0, 617, 636,
	624, 0, 630, 92, 1194, 0, 131, 0, 1194, 1194,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 116, 127, 104, 105, 0, 0, 0, 0,
	0, 73, 1074, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 115, 0, 0,
	110, 94, 0, 0, 0, 117, 129, 0, 160, 162,
	0, 0, 0, 0, 0, 0, 179, 187, 0, 0,
	0, 0, 1098, 0, 1361, 0, 0, 2427, 0, 1474,
	2211, -2, -2, 234, 1474, 878, 0, 0, 2051, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 332,
	334, 335, 336, 0, 1136, 0, 342, 384, 1023, 2427,
	0, 0, 411, 406, 0, 408, 0, 0, 1073, 2427,
	1071, 2028, 0, 1095, 0, 1052, 2427, 2026, 0, 0,
	1144, 2060, 1153, 1157, 1261, 0, 415, 0, 1277, 1279,
	0, 0, 1494, 0, 1496, 1437, 354, 0, 361, 362,
	363, 0, 443, 0, 167, 168, 0, 169, 2427, 448,
	0, 451, 0, 169, 2427, 1983, 457, 0, 460, 0,
	0, 466, 0, 0, 0, 1364, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 240, 0, 1473,
	0, 0, 1474, 234, 277, 277, 1474, 593, 1474, 595,
	0, 0, 738, 739, 0, 277, 277, 277, 745, 746,
	748, 749, -2, -2, -2, 863, 751, 752, 830, 0,
	0, 0, 829, 766, 0, 872, 2319, 2333, 2383, 885,
	830, 2133, 830, 2133, 830, 2133, 777, 779, 782, 818,
	826, 790, 795, 0, 0, 800, 808, -2, 0, 810,
	0, 812, 0, 814, 830, 831, 834, 839, 842, 847,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 1234,
	1392, 1320, 574, 1311, 1391, 1312, 1319, 1322, 0, 0,
	1324, 0, 1326, 0, 1387, 1388, 1395, 1396, 0, 1406,
	1407, 1399, 0, -2, 0, 0, 1402, 1403, 1330, 0,
	1347, 1348, 1349, 1376, 1379, 1172, 0, 2560, 1635, 1509,
	1636, 1637, 2012, 0, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, -2, -2, -2, -2, -2, -2,
	-2, -2, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, -2, -2, -2, 1676, 1677, -2, 1911,
	1913, 0, 1976, 0, -2, 0, -2, -2, -2, -2,
	1696, 0, 1698, 1703, 1705, 1707, 0, 0, 0, 0,
	1975, 1717, 1959, 1960, 0, 0, 1890, 1891, 1892, 1702,
	0, 1721, 1974, 1971, 0, 0, 1923, 1375, 1780, 0,
	0, 0, 0, 1787, 1772, 1921, 0, 1920, 0, 0,
	0, 1931, 0, 1966, 1962, 0, 2010, 1630, 1617, 1618,
	1619, 1620, 1621, 1622, 1632, 0, 2007, 2037, 2043, 1864,
	0, 0, 0, 1817, 1818, 1819, 1820, 1821, 0, 1823,
	1824, 0, 1826, 1827, 0, 1829, 1830, 0, 1832, 1833,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1527, 0,
	0, 0, 1531, 0, 0, 0, 1535, 0, 0, 0,
	1539, 0, 0, 0, 1543, 0, 0, 0, 1547, 0,
	0, 0, 1551, 0, 0, 0, 1555, 0, 0, 0,
	0, 0, 1836, 0, 1934, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1838, 0, 1840, 1925, 1945, 0,
	0, 1722, 0, 0, 0, 1888, 0, 1843, 1925, 1953,
	0, 0, 0, 0, 0, 1925, 0, 1958, 0, 1850,
	0, 1852, 1356, 0, 0, 1504, 0, 0, 0, 1980,
	1504, 1504, 0, 1418, 0, 0, 1481, 1482, 1483, 0,
	0, 1484, 0, 1475, 1479, 1476, 1477, 1471, 1434, 0,
	0, 2014, 1471, 1440, 1470, 0, 1052, 1460, 1471, 1471,
	0, -2, 1444, 1461, 0, 0, 519, 521, 523, 527,
	529, 0, 0, 1375, -2, 0, -2, 1051, 0, 0,
	0, 0, 538, 540, 0, 0, 463, 0, 0, 532,
	0, 535, 0, 1505, 1508, 0, 0, 1519, 1525, 1526,
	0, -2, 0, 0, 1615, 0, 0, 0, 0, 0,
	198, 0, 609, 0, 1243, 1252, 0, 640, 0, 642,
	0, 2001, 2005, 2002, 2006, 0, 631, 0, 0, 0,
	0, 1193, 0, 135, 2427, 0, 171, 0, 0, 1016,
	2020, 0, 0, 0, 0, 2152, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 1075, 1076, 1078, 1085, 1087, 0, 1081, 2008, 0,
	0, 1082, 0, 1084, 1086, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 107, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1132, 1130, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 0, 0,
	-2, 0, 0, 0, 0, 208, 0, 268, 1986, 1996,
	0, 903, 904, 298, 301, 304, 307, 204, 0, 338,
	0, 0, 949, 924, 0, 0, 393, 277, 0, 0,
	407, 2060, 911, 184, 185, 186, 1069, 1072, 0, 1052,
	2427, 1109, 0, 0, 0, 0, 0, 0, 1142, 0,
	2427, 2015, 2059, 2060, 1263, 1271, 0, 1504, 0, 1293,
	1280, 0, 0, 0, 1293, 1297, 1298, 1300, 1301, 0,
	0, 1495, 1501, 0, 365, 473, 169, 445, 0, 169,
	169, 454, 0, 0, 169, 465, 169, 169, 266, 470,
	481, 531, 1364, 1364, 277, 275, 2270, 273, 270, 272,
	0, 0, 0, 950, 952, 953, 954, 955, 0, 2060,
	0, 2200, 2060, 0, 1283, 1285, 0, 229, 0, 237,
	1474, 235, 240, 0, 0, 405, 592, 597, 733, 0,
	277, 741, 742, 743, 784, 820, 828, 753, 755, 756,
	757, 0, 886, 882, 883, 884, 768, 830, 771, 830,
	774, 830, 793, 797, 802, 809, 0, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 0, 867, 868, 869,
	871, 1492, 1315, 1316, 1318, 0, 1327, 0, 0, 1401,
	-2, -2, 1400, 1404, 1405, -2, -2, -2, -2, 1323,
	0, 1332, 1329, 0, 1386, 1170, 1171, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1718, 0, -2, 1697,
	1700, 1704, 1706, 1708, 0, 0, 0, 0, 0, 0,
	1914, 0, 1916, 1719, 1969, 1972, 1886, 0, 0, 1374,
	1375, 1375, 0, 1786, 0, 1922, 0, 1929, 1930, 0,
	1779, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 1822, 1825, 1828,
	1831, 0, 0, 0, 0, 1811, 0, 0, 0, 1815,
	1585, 1571, 0, 1613, 1611, 1612, 1606, 1613, 1610, 1563,
	0, 1528, 1529, 1530, 1532, 1533, 1534, 1536, 1537, 1538,
	1540, 1541, 1542, 1544, 1545, 1546, 1548, 1549, 1550, 1552,
	1553, 1554, 1556, 1557, 1558, 1562, 0, 1835, 0, 1837,
	1839, 0, 0, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 1726, 1727,
	1842, 1951, 1952, 0, 0, 0, 0, 0, 0, 1848,
	0, 1957, 1849, 1851, 1364, 0, 1357, 0, 1420, 1409,
	1503, 0, 1978, 1474, 1422, 1424, 1979, 2017, 1409, 1409,
	0, 1926, 0, 0, 1465, 0, 0, 0, 1467, 1438,
	0, 0, 1432, 0, 1428, 1429, 1430, 1431, 1439, 1052,
	1469, 1441, 1445, 2037, 0, 1471, 0, 1456, 0, 1458,
	1490, 0, 1450, 1453, 0, 0, 2052, 1504, 0, 309,
	313, 314, 310, 311, 312, 547, 0, 0, 0, 0,
	1928, 0, 1510, 0, 1516, 0, 0, 0, 0, 553,
	0, 0, 0, 194, 0, 605, -2, 638, 639, 641,
	0, 637, 132, 1194, 0, 0, 1175, 1177, 0, 137,
	2427, 146, 0, 990, 0, 2018, 0, 0, 0, 0,
	0, 1196, 0, 0, 2427, 169, 2427, 169, 149, 151,
	154, 0, 159, 156, 157, 0, 0, 981, 93, 1194,
	0, 96, 100, 108, 0, 0, 0, 114, 0, 0,
	0, 1179, 1185, 0, 0, 1079, 1080, 1083, 1089, 74,
	0, 0, 1183, 1189, 80, 0, 1174, 161, 98, 102,
	109, 0, 1191, 95, 0, 183, 0, 0, 0, 175,
	0, 176, 177, 188, 0, 169, 2427, 0, 914, 915,
	1131, 1093, 1094, 0, 1099, 0, 0, 0, 1474, 200,
	0, 1474, 208, 0, 1992, 0, 326, 0, 0, 0,
	0, 948, 1034, 0, 919, 0, 0, 0, 399, 395,
	0, 404, 410, 409, 910, 0, 0, 0, 0, -2,
	0, 0, 1146, 1140, 1141, 0, 0, 0, 2427, 1265,
	1271, 0, 1270, 1362, 1375, 414, 1272, 1293, 0, 0,
	0, 1282, 1278, 1275, 1504, 0, 0, 0, 0, 0,
	1497, 1500, 360, 444, 169, 449, 452, 1984, 169, 458,
	461, 467, 484, 485, 252, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 959, 0, 2060, 2060, 0, 2022,
	0, 0, 0, 0, 238, 0, 241, 0, 0, 0,
	246, 247, 248, 249, 250, 240, 231, 1474, 0, 594,
	0, 0, 740, 0, 770, 772, 775, 811, 813, 830,
	856, 857, 976, 0, 976, 0, 0, 1325, 0, 1398,
	1331, 1380, 1381, 0, 1172, 0, 1638, 1681, 0, 0,
	-2, 0, 0, 1685, 0, 0, 0, -2, 0, 0,
	0, 1915, 1917, 0, 1971, 1781, 0, 0, 0, 1785,
	1769, 1770, 0, 1889, 1932, 1961, 1965, 0, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 0, 2011, 2038, 2042, 1862,
	1863, 1867, 2025, 0, 0, 0, 1794, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 1608, 0, 0, 1933,
	1944, 1946, 1723, 1724, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, -2, -2, -2, 1741, 1742, 1743,
	-2, -2, -2, 0, 0, 0, 1947, 1949, 1950, 1954,
	1955, 0, 1845, 1846, 1847, 1956, 0, 1364, 1358, 1417,
	0, 1502, 1421, 0, 1417, 1417, 1371, 1463, 0, 0,
	1486, 0, 1435, 0, 1436, 0, 1468, 0, 1443, 1446,
	1447, 1457, 0, 1449, 0, 1452, 0, 1781, -2, 278,
	279, 281, 0, 284, 550, 551, 549, 533, 0, 0,
	1512, 0, 0, 1588, 1592, 1616, 556, 557, 555, 196,
	0, 1472, 0, 0, 0, 0, 170, 988, 1015, 0,
	0, 0, 1160, 1167, 0, -2, 0, 0, 1021, 139,
	0, 0, 0, 147, 0, 0, 144, 0, 153, 158,
	0, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	118, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 1169, 0, 0, 190,
	0, 0, 0, 1134, 1135, 1180, 1186, 0, 0, 208,
	206, 0, 209, 0, 212, 213, 0, 215, 208, 202,
	0, 0, 1052, 339, 922, 1022, 0, 1024, 0, 920,
	0, 0, 1023, 391, 0, 398, 0, 0, 1073, 0,
	0, 1096, 1107, 1052, 0, 1145, 1147, 1155, 0, 0,
	0, 1267, 1271, 0, 1260, 1261, 1394, 1273, 1291, -2,
	0, 0, 1375, 1299, 1296, 1302, 1303, 0, 446, 455,
	274, 0, 269, 271, 0, 255, 0, 0, 951, 956,
	0, 0, 0, 0, 0, 1284, 1286, 0, 0, 0,
	0, 0, 0, 230, 240, 261, 0, 734, 758, 821,
	858, 975, 0, 0, 860, 0, 0, 1397, 1384, 1385,
	1382, 1172, 1683, 1687, 0, 0, 0, 1689, -2, 0,
	1711, -2, -2, 1918, 1970, 1760, 1375, 1782, 1784, 1771,
	1964, 1633, 0, 1869, 1866, 0, 1853, 0, 1806, 1807,
	0, 0, 1810, 1812, 1813, 1814, 1572, 1565, 1564, 1943,
	0, 0, 0, 0, 1844, 1359, 0, 1858, 0, 0,
	1425, 1858, 1858, 1464, 0, 1466, 1433, 1426, 0, 2038,
	1459, 1451, 0, 0, 282, 0, 1506, 1511, 0, 1517,
	1587, 197, 133, 134, 136, 0, 989, 0, 992, 0,
	0, 0, 0, 999, 1000, 0, 0, 0, 0, 0,
	1009, 0, 1038, 1048, 0, 1162, 1172, 1166, 0, 1164,
	0, 0, 0, 141, 164, 0, 0, 1195, 0, 0,
	169, 169, 0, 0, 1176, 1178, 0, 0, 0, 0,
	121, 0, 0, 1181, 1187, 1184, 1190, 0, 0, 0,
	1192, 181, 182, 0, 169, 0, 174, 169, 169, 1169,
	0, 0, 0, 199, 0, 0, 0, 0, 201, 267,
	208, 0, 970, 0, 1034, 1026, 1027, 1028, 0, 1033,
	1035, 0, 0, 936, 921, 0, 932, 0, 0, 949,
	924, 0, 396, 912, 1070, 1104, 1052, 0, 1138, 0,
	0, 0, 0, 0, 0, 1269, 1271, 0, 1262, 1263,
	1293, 1393, 0, 0, 0, 1281, 1394, 0, 276, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	242, 0, 243, 244, 245, 232, 596, 598, 0, 0,
	604, 974, 0, 0, 0, 0, 1383, 1691, -2, -2,
	1712, 0, 2039, 2041, 1375, 0, 1855, 1377, 0, 0,
	-2, 0, 0, 0, 1360, 1343, 0, 1416, 1408, 1410,
	1412, 2322, 2129, 2426, 1344, 1345, 1485, 0, 1454, 283,
	0, 1513, 138, 0, 993, 994, 2021, 996, 0, 998,
	1001, 0, 1004, 2062, 0, 1008, 0, 1017, 1039, 0,
	970, 0, 1044, 1045, 1046, 1161, 1386, 1167, 1050, 0,
	140, 142, 163, 1169, 0, 143, 152, 0, 0, 97,
	0, 0, 2124, 124, 122, 120, 1173, 99, 0, 183,
	189, 1168, 178, 191, 169, 0, 1182, 1188, 210, 0,
	211, 214, 0, 0, 978, 0, 923, 1025, 0, 1036,
	1037, 926, 0, 925, 0, 0, 0, 0, 0, 397,
	400, 0, 403, 0, 0, 1148, 0, 1154, 0, 0,
	0, 1257, 0, 0, 1264, 1265, 412, 1287, 0, 0,
	1293, 1304, 254, 0, 0, 957, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 958, 1050, 0, 0, 1014,
	0, 259, 239, 0, 600, 0, 602, 0, 859, 861,
	0, 0, 1783, 1873, 0, 0, 1808, 1809, -2, 0,
	1749, 1857, 1859, 0, 0, 0, 0, 0, 1427, 1507,
	991, 995, 0, 0, 0, 1056, 0, 0, 1010, 0,
	1042, 1043, 978, 0, 1165, 1163, 970, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 173, 192, 1169,
	207, 225, 0, 1105, 924, 977, 0, 0, 934, 0,
	937, 0, 933, 930, 931, 922, 0, 401, 402, 0,
	1108, 0, 1155, 0, 0, 1271, 1266, 1267, 1504, 1290,
	1294, 0, 0, 1048, 1050, 924, 0, 599, 0, 0,
	864, 865, 0, 0, 0, 0, 1868, 1378, 1750, 0,
	0, 1411, 1413, 1414, 1415, 0, 0, 1003, 1061, 0,
	0, 0, 1040, 1041, 1038, 0, 1019, 0, 1052, 145,
	0, 1050, 0, 982, 0, 0, 985, 0, 0, 125,
	2124, 123, 0, 169, 228, 0, 222, 220, 221, 926,
	0, 0, 1030, 1032, 0, 938, 970, 936, 1106, 1050,
	0, 1048, 0, 0, 1269, 0, 277, 277, 970, 1048,
	1504, 0, 277, 601, 603, 1865, 1885, 1874, -2, 2386,
	2130, 0, 1885, 1885, 1860, 1861, 0, 0, 1005, 1057,
	1058, 0, 1053, 1054, 1055, 2061, 1006, 1007, 1504, 1047,
	0, 1056, 165, 970, 979, 0, 0, 980, 0, 0,
	128, 0, 130, 193, 216, 0, 0, 917, 0, 1029,
	0, 0, 0, 0, 978, 926, 1048, 0, 970, 0,
	1268, 1258, 0, 256, 257, 978, 970, 1013, 258, 1870,
	0, 0, 1876, 1877, 1878, 1879, 1880, 1871, 1872, 997,
	0, 1059, 0, 1060, 0, 0, 0, 1018, 0, 1061,
	150, 983, 0, 986, 0, 126, 0, 223, 224, 0,
	1031, 927, 0, 929, 924, 935, 970, 0, 978, 0,
	1288, 0, 924, 978, 0, 1882, 1883, 0, 0, 0,
	1062, 0, 1065, 1066, 0, 1063, 0, 1038, 0, 0,
	0, 0, 928, 926, 978, 1050, 924, 1048, 0, 1504,
	924, 1881, 1884, 1875, 1002, 1064, 1067, 1068, 1049, 1020,
	0, 0, 226, 0, 973, 918, 924, 1048, 1504, 970,
	1504, 1011, 1504, 978, 0, 0, 969, 971, 972, 1504,
	970, 1151, 978, 1289, 1012, 984, 0, 227, 1149, 978,
	924, 0, 924, 1504, 0, 1504, 1152, 978, 1150, 987,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 551, 3, 557, 552, 3,
	562, 563, 555, 553, 567, 554, 564, 556, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 570, 3,
	543, 545, 544, 548, 566, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 560, 3, 561, 558, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 568, 550, 569, 546,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 547, 57886, 549, 57887, 559, 57888, 565, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1238
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1263
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1425
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1446
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1526
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1564
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1668
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1677
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1694
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1848
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1854
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1906
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1969
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2030
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2067
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2074
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2125
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2210
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2218
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2230
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2245
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = nil
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2486
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2610
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2619
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2630
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2635
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2640
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2645
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2668
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2752
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2768
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2782
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2803
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2804
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2805
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2916
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2935
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2940
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2955
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2956
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2958
		{
			return helpWith(sqllex, "CREATE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "create access method")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplemented(sqllex, "create cast")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "create operator")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "create publication")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "create rule")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "create server")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2996
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2999
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3000
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3003
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3004
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return unimplemented(sqllex, "drop server")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3036
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3037
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3038
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3074
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3106
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3145
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3180
		{

			sqlVAL.union.val = nil
		}
	case 412:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "DELETE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3208
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3234
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3239
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3240
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3434
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3499
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3523
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "DELETE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "INSERT")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3567
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3573
		{
			return helpWith(sqllex, "DELETE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "INSERT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3608
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3616
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3641
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3649
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "GRANT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3785
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "RESET")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "RESET")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "USE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3859
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3860
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3861
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "USE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3898
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3941
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4078
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4083
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			return unimplemented(sqllex, "set from current")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4102
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.Low
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.Normal
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.High
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4275
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4279
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4284
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.str = "client_encoding"
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.str = "timezone"
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4326
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4344
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4407
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4416
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4466
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = true
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = true
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = false
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4656
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4735
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = true
		}
	case 816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = false
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = true
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = false
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4852
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4873
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4899
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4942
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4950
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4987
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5001
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5010
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5166
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "RESUME")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5450
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5465
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5483
		{

			sqlVAL.union.val = nil
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.str = ""
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5499
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = nil
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5510
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5521
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5526
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5531
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 934:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5558
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5572
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5587
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5588
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5589
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5661
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5675
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5685
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5701
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.str = ""
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 987:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5787
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5895
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5921
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6019
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6072
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6298
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6326
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6331
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6341
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{

			sqlVAL.union.val = true
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = false
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6434
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6448
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6460
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6472
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6482
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6492
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = nil
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6602
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6621
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6623
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6625
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6627
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6667
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6685
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6704
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6721
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6738
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6742
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = false
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = true
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = false
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = true
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = false
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6796
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6801
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.str = ""
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.str = ""
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6867
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6873
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6879
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6949
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6955
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6967
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6973
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6987
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6993
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7010
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7011
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7014
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7015
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7074
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7111
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7119
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7147
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7170
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7180
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7181
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7201
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7202
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7245
		{
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7330
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.str = ""
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.str = ""
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.str = ""
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.str = ""
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7374
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7388
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7435
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7501
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7524
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7528
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7598
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7742
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7748
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7783
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7785
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7906
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = true
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = false
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7959
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7960
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = nil
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7974
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = true
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = false
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = false
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = true
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8004
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8071
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8083
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8188
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8192
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8227
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8228
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8261
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8278
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8298
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8350
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8389
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8399
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8445
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8475
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8508
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = nil
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = true
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = false
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.str = tree.AstFull
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.str = tree.AstRight
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.str = tree.AstInner
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8627
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8628
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.str = tree.AstHash
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8719
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8735
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8759
		{
			sqlVAL.union.val = false
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8784
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8797
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8824
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8834
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8854
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8926
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8930
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8934
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8938
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = types.Geography
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8965
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8973
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9007
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = nil
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = types.Int2
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = types.Int
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = types.Float4
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = types.Float
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = types.Bool
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9080
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = types.Float
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9099
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9105
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = types.String
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = types.Date
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9184
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9215
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9232
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = true
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = false
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = types.Interval
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9256
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9340
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = nil
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9385
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9697
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10034
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10075
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10076
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10091
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10100
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10166
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10362
		{
			return unimplemented(sqllex, "treat")
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10388
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.str = ""
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10537
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10605
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10634
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = tree.Any
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = tree.Some
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = tree.All
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.Div
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.LT
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.GT
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = tree.LE
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = tree.GE
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = tree.NE
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = tree.Like
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10907
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10996
		{
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11068
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11126
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11149
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11174
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11194
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11214
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11394
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11407
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11414
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.str = ""
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
