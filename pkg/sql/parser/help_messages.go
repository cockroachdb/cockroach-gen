// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1333
	`ALTER`: {
		//line sql.y: 1334
		Category: hGroup,
		//line sql.y: 1335
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1353
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1354
		Category: hDDL,
		//line sql.y: 1355
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1395
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1412
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1413
		Category: hDDL,
		//line sql.y: 1414
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1433
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1438
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1439
		Category: hDDL,
		//line sql.y: 1440
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1443
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1452
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1453
		Category: hDDL,
		//line sql.y: 1454
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1480
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1481
		Category: hDDL,
		//line sql.y: 1482
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1490
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1554
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1555
		Category: hDDL,
		//line sql.y: 1556
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1568
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1573
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1574
		Category: hDDL,
		//line sql.y: 1575
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1591
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2109
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2110
		Category: hDDL,
		//line sql.y: 2111
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2127
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2278
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2279
		Category: hMisc,
		//line sql.y: 2280
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2307
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2308
		Category: hCCL,
		//line sql.y: 2309
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion

`,
		//line sql.y: 2329
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2434
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2435
		Category: hCCL,
		//line sql.y: 2436
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2505
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2583
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2584
		Category: hCCL,
		//line sql.y: 2585
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2606
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2764
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2765
		Category: hCCL,
		//line sql.y: 2766
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2794
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2838
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2839
		Category: hCCL,
		//line sql.y: 2840
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2849
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3001
	`CANCEL`: {
		//line sql.y: 3002
		Category: hGroup,
		//line sql.y: 3003
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3010
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3011
		Category: hMisc,
		//line sql.y: 3012
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3015
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3037
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3038
		Category: hMisc,
		//line sql.y: 3039
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3042
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3073
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3074
		Category: hMisc,
		//line sql.y: 3075
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3078
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3149
	`CREATE`: {
		//line sql.y: 3150
		Category: hGroup,
		//line sql.y: 3151
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3166
	`CREATE EXTENSION`: {
		//line sql.y: 3167
		Category: hCfg,
		//line sql.y: 3168
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3246
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3247
		Category: hMisc,
		//line sql.y: 3248
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3341
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3342
		Category: hCCL,
		//line sql.y: 3343
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3398
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3399
		Category: hCCL,
		//line sql.y: 3400
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3407
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3457
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3458
		Category: hDML,
		//line sql.y: 3459
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3463
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3483
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3484
		Category: hCfg,
		//line sql.y: 3485
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3497
	`DROP`: {
		//line sql.y: 3498
		Category: hGroup,
		//line sql.y: 3499
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3518
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3519
		Category: hDDL,
		//line sql.y: 3520
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3521
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3551
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3552
		Category: hDDL,
		//line sql.y: 3553
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3554
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3566
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3567
		Category: hDDL,
		//line sql.y: 3568
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3569
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3581
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3582
		Category: hDDL,
		//line sql.y: 3583
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3584
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3606
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3607
		Category: hDDL,
		//line sql.y: 3608
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3609
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3629
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3630
		Category: hDDL,
		//line sql.y: 3631
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3667
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3668
		Category: hDDL,
		//line sql.y: 3669
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3689
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3690
		Category: hPriv,
		//line sql.y: 3691
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3692
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3716
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3717
		Category: hMisc,
		//line sql.y: 3718
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3721
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3744
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3745
		Category: hMisc,
		//line sql.y: 3746
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3760
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3867
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3868
		Category: hMisc,
		//line sql.y: 3869
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3870
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3901
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3902
		Category: hMisc,
		//line sql.y: 3903
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3904
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3934
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3935
		Category: hMisc,
		//line sql.y: 3936
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3937
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3957
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3958
		Category: hPriv,
		//line sql.y: 3959
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 3974
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4012
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4013
		Category: hPriv,
		//line sql.y: 4014
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4029
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4101
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4102
		Category: hCfg,
		//line sql.y: 4103
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4104
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4116
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4117
		Category: hCfg,
		//line sql.y: 4118
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4119
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4128
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4129
		Category: hCfg,
		//line sql.y: 4130
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4133
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4154
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4155
		Category: hExperimental,
		//line sql.y: 4156
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4164
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4170
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4171
		Category: hExperimental,
		//line sql.y: 4172
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4180
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4188
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4189
		Category: hExperimental,
		//line sql.y: 4190
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4201
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4256
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4257
		Category: hCfg,
		//line sql.y: 4258
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4259
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4280
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4281
		Category: hCfg,
		//line sql.y: 4282
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4288
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4305
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4306
		Category: hTxn,
		//line sql.y: 4307
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4316
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4508
	`SHOW`: {
		//line sql.y: 4509
		Category: hGroup,
		//line sql.y: 4510
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION
`,
	},
	//line sql.y: 4593
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4594
		Category: hCfg,
		//line sql.y: 4595
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4596
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4617
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4618
		Category: hExperimental,
		//line sql.y: 4619
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4626
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4639
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4640
		Category: hExperimental,
		//line sql.y: 4641
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4645
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4658
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4659
		Category: hCCL,
		//line sql.y: 4660
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4661
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4715
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4716
		Category: hCfg,
		//line sql.y: 4717
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4720
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4746
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4747
		Category: hDDL,
		//line sql.y: 4748
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4749
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4757
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4758
		Category: hDDL,
		//line sql.y: 4759
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4760
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4780
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4781
		Category: hDDL,
		//line sql.y: 4782
		Text: `SHOW DATABASES
`,
		//line sql.y: 4783
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4791
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4792
		Category: hMisc,
		//line sql.y: 4793
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4821
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4822
		Category: hMisc,
		//line sql.y: 4823
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4831
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4832
		Category: hPriv,
		//line sql.y: 4833
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4839
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4852
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4853
		Category: hDDL,
		//line sql.y: 4854
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4855
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4885
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4886
		Category: hDDL,
		//line sql.y: 4887
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4888
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4901
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 4902
		Category: hMisc,
		//line sql.y: 4903
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 4904
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4931
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4932
		Category: hMisc,
		//line sql.y: 4933
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4937
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4981
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4982
		Category: hMisc,
		//line sql.y: 4983
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4986
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5033
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5034
		Category: hMisc,
		//line sql.y: 5035
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5037
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5060
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5061
		Category: hMisc,
		//line sql.y: 5062
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5063
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5076
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5077
		Category: hDDL,
		//line sql.y: 5078
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5079
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5107
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5108
		Category: hMisc,
		//line sql.y: 5109
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5126
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5127
		Category: hDDL,
		//line sql.y: 5128
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5140
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5141
		Category: hDDL,
		//line sql.y: 5142
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5154
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5155
		Category: hMisc,
		//line sql.y: 5156
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5172
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5173
		Category: hCfg,
		//line sql.y: 5174
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5182
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5183
		Category: hCfg,
		//line sql.y: 5184
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5185
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5204
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5205
		Category: hDDL,
		//line sql.y: 5206
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5209
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5231
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5232
		Category: hPriv,
		//line sql.y: 5233
		Text: `SHOW USERS
`,
		//line sql.y: 5234
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5242
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5243
		Category: hPriv,
		//line sql.y: 5244
		Text: `SHOW ROLES
`,
		//line sql.y: 5245
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5253
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5254
		Category: hCfg,
		//line sql.y: 5255
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5258
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5314
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5315
		Category: hMisc,
		//line sql.y: 5316
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5337
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5338
		Category: hMisc,
		//line sql.y: 5339
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5358
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5359
		Category: hDDL,
		//line sql.y: 5360
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5375
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5376
		Category: hDDL,
		//line sql.y: 5377
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5658
	`PAUSE`: {
		//line sql.y: 5659
		Category: hMisc,
		//line sql.y: 5660
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5670
	`RESUME`: {
		//line sql.y: 5671
		Category: hMisc,
		//line sql.y: 5672
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5682
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5683
		Category: hMisc,
		//line sql.y: 5684
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5687
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5722
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5723
		Category: hMisc,
		//line sql.y: 5724
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5728
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5749
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5750
		Category: hDDL,
		//line sql.y: 5751
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5784
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5785
		Category: hDDL,
		//line sql.y: 5786
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5812
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5813
		Category: hDDL,
		//line sql.y: 5814
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE [WITHOUT INDEX] ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE |UNIQUE [WITHOUT INDEX] | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5844
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6764
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6765
		Category: hDDL,
		//line sql.y: 6766
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6776
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6841
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6842
		Category: hDML,
		//line sql.y: 6843
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6844
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6862
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6863
		Category: hPriv,
		//line sql.y: 6864
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6865
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6877
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6878
		Category: hPriv,
		//line sql.y: 6879
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6880
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6909
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6910
		Category: hDDL,
		//line sql.y: 6911
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6912
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7087
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7088
		Category: hDDL,
		//line sql.y: 7089
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7141
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7142
		Category: hDDL,
		//line sql.y: 7143
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7153
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7664
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7665
		Category: hTxn,
		//line sql.y: 7666
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7667
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7675
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7676
		Category: hMisc,
		//line sql.y: 7677
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7680
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7702
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7703
		Category: hMisc,
		//line sql.y: 7704
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7710
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7731
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7732
		Category: hMisc,
		//line sql.y: 7733
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7739
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7760
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7761
		Category: hTxn,
		//line sql.y: 7762
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7763
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7778
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7779
		Category: hTxn,
		//line sql.y: 7780
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7788
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7801
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7802
		Category: hTxn,
		//line sql.y: 7803
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7806
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7830
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7831
		Category: hTxn,
		//line sql.y: 7832
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7835
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7949
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7950
		Category: hDDL,
		//line sql.y: 7951
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7952
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8095
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8096
		Category: hDML,
		//line sql.y: 8097
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8105
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8124
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8125
		Category: hDML,
		//line sql.y: 8126
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8130
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8246
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8247
		Category: hDML,
		//line sql.y: 8248
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8255
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8311
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8312
		Category: hPriv,
		//line sql.y: 8313
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8315
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8326
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8327
		Category: hPriv,
		//line sql.y: 8328
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8330
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8510
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8511
		Category: hDML,
		//line sql.y: 8512
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8523
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8524
		Category: hDML,
		//line sql.y: 8525
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8537
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8612
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8613
		Category: hDML,
		//line sql.y: 8614
		Text: `TABLE <tablename>
`,
		//line sql.y: 8615
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8989
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8990
		Category: hDML,
		//line sql.y: 8991
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8992
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9101
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9102
		Category: hDML,
		//line sql.y: 9103
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9125
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
