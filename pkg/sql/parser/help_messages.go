// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1698
	`ALTER`: {
		//line sql.y: 1699
		Category: hGroup,
		//line sql.y: 1700
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1724
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1725
		Category: hDDL,
		//line sql.y: 1726
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1769
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1785
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1786
		Category: hDDL,
		//line sql.y: 1787
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1806
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1811
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1812
		Category: hDDL,
		//line sql.y: 1813
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1816
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1825
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1826
		Category: hDDL,
		//line sql.y: 1827
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [RESTART [[WITH] <restart>]]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1856
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1857
		Category: hDDL,
		//line sql.y: 1858
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
ALTER DATABASE <name> ALTER LOCALITY { GLOBAL | REGIONAL [IN <region>] } CONFIGURE ZONE <zone config>
`,
		//line sql.y: 1871
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 2086
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 2087
		Category: hDDL,
		//line sql.y: 2088
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2104
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 2110
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 2111
		Category: hDDL,
		//line sql.y: 2112
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>
  ALTER INDEX ... [VISIBLE | NOT VISIBLE]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 2130
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2810
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2811
		Category: hDDL,
		//line sql.y: 2812
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2828
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2977
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2978
		Category: hMisc,
		//line sql.y: 2979
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 3006
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 3007
		Category: hCCL,
		//line sql.y: 3008
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 3042
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 3164
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 3165
		Category: hCCL,
		//line sql.y: 3166
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 3236
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3254
	`ALTER BACKUP SCHEDULE`: {
		ShortDescription: `alter an existing backup schedule`,
		//line sql.y: 3255
		Category: hCCL,
		//line sql.y: 3256
		Text: `
ALTER BACKUP SCHEDULE <id> <command> [, ...]

Commands:
  ALTER BACKUP SCHEDULE ... SET LABEL <label>
  ALTER BACKUP SCHEDULE ... SET INTO <destination>
  ALTER BACKUP SCHEDULE ... SET WITH <option>
  ALTER BACKUP SCHEDULE ... SET RECURRING <crontab>
  ALTER BACKUP SCHEDULE ... SET FULL BACKUP <crontab|ALWAYS>
  ALTER BACKUP SCHEDULE ... SET SCHEDULE OPTION <option>

See CREATE SCHEDULE FOR BACKUP for detailed option descriptions.
`,
		//line sql.y: 3268
		SeeAlso: `CREATE SCHEDULE FOR BACKUP
`,
	},
	//line sql.y: 3408
	`CREATE EXTERNAL CONNECTION`: {
		ShortDescription: `create a new external connection`,
		//line sql.y: 3409
		Category: hMisc,
		//line sql.y: 3410
		Text: `
CREATE EXTERNAL CONNECTION [IF NOT EXISTS] <name> AS <endpoint>

Name:
  Unique name for this external connection.

Endpoint:
  Endpoint of the resource that the external connection represents.
`,
	},
	//line sql.y: 3428
	`DROP EXTERNAL CONNECTION`: {
		ShortDescription: `drop an existing external connection`,
		//line sql.y: 3429
		Category: hMisc,
		//line sql.y: 3430
		Text: `
DROP EXTERNAL CONNECTION <name>

Name:
  Unique name for this external connection.
`,
	},
	//line sql.y: 3444
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3445
		Category: hCCL,
		//line sql.y: 3446
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3474
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3691
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3692
		Category: hCCL,
		//line sql.y: 3693
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3711
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3745
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3746
		Category: hCCL,
		//line sql.y: 3747
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3757
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3945
	`CANCEL`: {
		//line sql.y: 3946
		Category: hGroup,
		//line sql.y: 3947
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3955
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3956
		Category: hMisc,
		//line sql.y: 3957
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3960
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3982
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3983
		Category: hMisc,
		//line sql.y: 3984
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3987
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 4018
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 4019
		Category: hMisc,
		//line sql.y: 4020
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 4023
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 4054
	`CANCEL ALL JOBS`: {
		ShortDescription: `cancel all background jobs`,
		//line sql.y: 4055
		Category: hMisc,
		//line sql.y: 4056
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 4115
	`CREATE`: {
		//line sql.y: 4116
		Category: hGroup,
		//line sql.y: 4117
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 4132
	`CREATE EXTENSION`: {
		ShortDescription: `pseudo-statement for PostgreSQL compatibility`,
		//line sql.y: 4133
		Category: hCfg,
		//line sql.y: 4134
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 4596
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 4597
		Category: hMisc,
		//line sql.y: 4598
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 4691
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 4692
		Category: hCCL,
		//line sql.y: 4693
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

sink: data capture stream destination (Enterprise only)
`,
	},
	//line sql.y: 4783
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4784
		Category: hDML,
		//line sql.y: 4785
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4789
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4809
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4810
		Category: hCfg,
		//line sql.y: 4811
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4832
	`DROP`: {
		//line sql.y: 4833
		Category: hGroup,
		//line sql.y: 4834
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4855
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4856
		Category: hDDL,
		//line sql.y: 4857
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4858
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4888
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4889
		Category: hDDL,
		//line sql.y: 4890
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4891
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4903
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4904
		Category: hDDL,
		//line sql.y: 4905
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4906
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4918
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4919
		Category: hDDL,
		//line sql.y: 4920
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4921
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4943
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4944
		Category: hDDL,
		//line sql.y: 4945
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4946
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4966
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4967
		Category: hDDL,
		//line sql.y: 4968
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 5004
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 5005
		Category: hDDL,
		//line sql.y: 5006
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 5026
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 5027
		Category: hPriv,
		//line sql.y: 5028
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 5029
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 5062
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 5063
		Category: hMisc,
		//line sql.y: 5064
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 5067
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 5090
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 5091
		Category: hMisc,
		//line sql.y: 5092
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 5106
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 5217
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 5218
		Category: hCCL,
		//line sql.y: 5219
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 5270
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 5271
		Category: hCCL,
		//line sql.y: 5272
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 5326
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 5327
		Category: hMisc,
		//line sql.y: 5328
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 5329
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5360
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 5361
		Category: hMisc,
		//line sql.y: 5362
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 5363
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 5393
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 5394
		Category: hMisc,
		//line sql.y: 5395
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 5396
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 5416
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 5417
		Category: hPriv,
		//line sql.y: 5418
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5434
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 5516
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 5517
		Category: hPriv,
		//line sql.y: 5518
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 5534
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 5708
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 5709
		Category: hCfg,
		//line sql.y: 5710
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 5711
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5727
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 5728
		Category: hCfg,
		//line sql.y: 5729
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5730
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 5739
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 5740
		Category: hCfg,
		//line sql.y: 5741
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 5744
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5765
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 5766
		Category: hExperimental,
		//line sql.y: 5767
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5775
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 5781
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 5782
		Category: hExperimental,
		//line sql.y: 5783
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 5791
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 5799
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 5800
		Category: hExperimental,
		//line sql.y: 5801
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 5812
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 5867
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 5868
		Category: hCfg,
		//line sql.y: 5869
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 5870
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5879
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5880
		Category: hGroup,
		//line sql.y: 5881
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5884
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5921
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5922
		Category: hCfg,
		//line sql.y: 5923
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5929
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5960
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5961
		Category: hCfg,
		//line sql.y: 5962
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5966
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5977
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5978
		Category: hTxn,
		//line sql.y: 5979
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5988
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 6185
	`SHOW`: {
		//line sql.y: 6186
		Category: hGroup,
		//line sql.y: 6187
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW
FUNCTION, SHOW HISTOGRAM, SHOW INDEXES, SHOW PARTITIONS, SHOW JOBS, SHOW
STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS,
SHOW CREATE EXTERNAL CONNECTIONS
`,
	},
	//line sql.y: 6242
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 6243
		Category: hMisc,
		//line sql.y: 6244
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 6245
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 6261
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 6262
		Category: hMisc,
		//line sql.y: 6263
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 6264
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 6333
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 6334
		Category: hMisc,
		//line sql.y: 6335
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6336
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 6346
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 6347
		Category: hMisc,
		//line sql.y: 6348
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 6349
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 6485
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 6486
		Category: hCfg,
		//line sql.y: 6487
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 6488
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6532
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics`,
		//line sql.y: 6533
		Category: hMisc,
		//line sql.y: 6534
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 6541
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 6563
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 6564
		Category: hExperimental,
		//line sql.y: 6565
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 6569
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 6582
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 6583
		Category: hCCL,
		//line sql.y: 6584
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 6585
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 6676
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 6677
		Category: hCfg,
		//line sql.y: 6678
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 6681
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 6727
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 6728
		Category: hDDL,
		//line sql.y: 6729
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 6730
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 6738
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 6739
		Category: hDDL,
		//line sql.y: 6740
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 6741
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 6761
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 6762
		Category: hDDL,
		//line sql.y: 6763
		Text: `SHOW DATABASES
`,
		//line sql.y: 6764
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 6772
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 6773
		Category: hDDL,
		//line sql.y: 6774
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 6790
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 6791
		Category: hMisc,
		//line sql.y: 6792
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 6820
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 6821
		Category: hMisc,
		//line sql.y: 6822
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 6830
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 6831
		Category: hPriv,
		//line sql.y: 6832
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 6838
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 6858
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 6859
		Category: hDDL,
		//line sql.y: 6860
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 6861
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 6891
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 6892
		Category: hDDL,
		//line sql.y: 6893
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 6894
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 6907
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 6908
		Category: hMisc,
		//line sql.y: 6909
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 6910
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 6937
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 6938
		Category: hMisc,
		//line sql.y: 6939
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6943
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7005
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 7006
		Category: hMisc,
		//line sql.y: 7007
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 7010
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7061
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 7062
		Category: hMisc,
		//line sql.y: 7063
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 7065
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 7088
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 7089
		Category: hMisc,
		//line sql.y: 7090
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 7091
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 7104
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 7105
		Category: hDDL,
		//line sql.y: 7106
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 7107
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 7135
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 7136
		Category: hMisc,
		//line sql.y: 7137
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 7154
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 7155
		Category: hDDL,
		//line sql.y: 7156
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 7168
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 7169
		Category: hDDL,
		//line sql.y: 7170
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 7182
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 7183
		Category: hMisc,
		//line sql.y: 7184
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 7222
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 7223
		Category: hCfg,
		//line sql.y: 7224
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 7232
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 7233
		Category: hCfg,
		//line sql.y: 7234
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 7235
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 7254
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 7255
		Category: hMisc,
		//line sql.y: 7256
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 7268
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 7269
		Category: hDDL,
		//line sql.y: 7270
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 7275
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 7324
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 7325
		Category: hDDL,
		//line sql.y: 7326
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 7329
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 7342
	`SHOW CREATE EXTERNAL CONNECTIONS`: {
		ShortDescription: `list CREATE statements for external connections`,
		//line sql.y: 7343
		Category: hDDL,
		//line sql.y: 7344
		Text: `
SHOW CREATE ALL EXTERNAL CONNECTIONS
SHOW CREATE EXTERNAL CONNECTION <connection_name>
`,
	},
	//line sql.y: 7359
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 7360
		Category: hPriv,
		//line sql.y: 7361
		Text: `SHOW USERS
`,
		//line sql.y: 7362
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 7370
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 7371
		Category: hPriv,
		//line sql.y: 7372
		Text: `SHOW ROLES
`,
		//line sql.y: 7373
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 7381
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 7382
		Category: hCfg,
		//line sql.y: 7383
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 7386
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 7442
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 7443
		Category: hMisc,
		//line sql.y: 7444
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 7465
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 7466
		Category: hMisc,
		//line sql.y: 7467
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 7486
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `list survival goals`,
		//line sql.y: 7487
		Category: hDDL,
		//line sql.y: 7488
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 7503
	`SHOW REGIONS`: {
		ShortDescription: `list regions`,
		//line sql.y: 7504
		Category: hDDL,
		//line sql.y: 7505
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 7866
	`PAUSE`: {
		ShortDescription: `pause background tasks`,
		//line sql.y: 7867
		Category: hGroup,
		//line sql.y: 7868
		Text: `PAUSE JOBS, PAUSE SCHEDULES, PAUSE ALL JOBS
`,
	},
	//line sql.y: 7875
	`RESUME`: {
		ShortDescription: `resume background tasks`,
		//line sql.y: 7876
		Category: hGroup,
		//line sql.y: 7877
		Text: `RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 7884
	`RESUME ALL JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7885
		Category: hMisc,
		//line sql.y: 7886
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7895
	`PAUSE JOBS`: {
		ShortDescription: `pause selected background jobs`,
		//line sql.y: 7896
		Category: hMisc,
		//line sql.y: 7897
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 7900
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7949
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 7950
		Category: hMisc,
		//line sql.y: 7951
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 7955
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7976
	`PAUSE ALL JOBS`: {
		ShortDescription: `pause all background jobs`,
		//line sql.y: 7977
		Category: hMisc,
		//line sql.y: 7978
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 7988
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 7989
		Category: hDDL,
		//line sql.y: 7990
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 8023
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 8024
		Category: hDDL,
		//line sql.y: 8025
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 8051
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 8052
		Category: hDDL,
		//line sql.y: 8053
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 8080
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 9019
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 9020
		Category: hDDL,
		//line sql.y: 9021
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 9032
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 9115
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 9116
		Category: hDML,
		//line sql.y: 9117
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 9118
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 9142
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 9143
		Category: hPriv,
		//line sql.y: 9144
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 9145
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9157
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 9158
		Category: hPriv,
		//line sql.y: 9159
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 9163
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 9241
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 9242
		Category: hDDL,
		//line sql.y: 9243
		Text: `
CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
CREATE [TEMPORARY | TEMP] MATERIALIZED VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source> [WITH [NO] DATA]
`,
		//line sql.y: 9246
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 9460
	`CREATE TYPE`: {
		ShortDescription: `create a type`,
		//line sql.y: 9461
		Category: hDDL,
		//line sql.y: 9462
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 9514
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 9515
		Category: hDDL,
		//line sql.y: 9516
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 9523
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 10034
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 10035
		Category: hDDL,
		//line sql.y: 10036
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 10183
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 10184
		Category: hTxn,
		//line sql.y: 10185
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10186
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10194
	`RESUME JOBS`: {
		ShortDescription: `resume selected background jobs`,
		//line sql.y: 10195
		Category: hMisc,
		//line sql.y: 10196
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 10199
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 10221
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 10222
		Category: hMisc,
		//line sql.y: 10223
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 10229
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 10250
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 10251
		Category: hMisc,
		//line sql.y: 10252
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 10258
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 10279
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 10280
		Category: hTxn,
		//line sql.y: 10281
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 10282
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 10297
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 10298
		Category: hTxn,
		//line sql.y: 10299
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 10307
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 10315
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 10316
		Category: hTxn,
		//line sql.y: 10317
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 10320
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 10339
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 10340
		Category: hTxn,
		//line sql.y: 10341
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 10344
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 10480
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 10481
		Category: hDDL,
		//line sql.y: 10482
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 10483
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 10674
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 10675
		Category: hDML,
		//line sql.y: 10676
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 10684
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 10703
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 10704
		Category: hDML,
		//line sql.y: 10705
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 10709
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 10839
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 10840
		Category: hDML,
		//line sql.y: 10841
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 10848
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 10904
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 10905
		Category: hPriv,
		//line sql.y: 10906
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 10908
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 10919
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 10920
		Category: hPriv,
		//line sql.y: 10921
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 10923
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 11103
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 11104
		Category: hDML,
		//line sql.y: 11105
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 11116
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 11117
		Category: hDML,
		//line sql.y: 11118
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 11130
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 11205
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 11206
		Category: hDML,
		//line sql.y: 11207
		Text: `TABLE <tablename>
`,
		//line sql.y: 11208
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11570
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 11571
		Category: hDML,
		//line sql.y: 11572
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 11573
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 11708
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 11709
		Category: hDML,
		//line sql.y: 11710
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 11735
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
