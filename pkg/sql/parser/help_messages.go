// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1333
	`ALTER`: {
		//line sql.y: 1334
		Category: hGroup,
		//line sql.y: 1335
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1353
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1354
		Category: hDDL,
		//line sql.y: 1355
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1395
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1412
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1413
		Category: hDDL,
		//line sql.y: 1414
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1433
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1438
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1439
		Category: hDDL,
		//line sql.y: 1440
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1443
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1452
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1453
		Category: hDDL,
		//line sql.y: 1454
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1480
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1481
		Category: hDDL,
		//line sql.y: 1482
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1490
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1554
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1555
		Category: hDDL,
		//line sql.y: 1556
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1568
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1573
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1574
		Category: hDDL,
		//line sql.y: 1575
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1591
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2128
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2129
		Category: hDDL,
		//line sql.y: 2130
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2146
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2297
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2298
		Category: hMisc,
		//line sql.y: 2299
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2326
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2327
		Category: hCCL,
		//line sql.y: 2328
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2349
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2459
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2460
		Category: hCCL,
		//line sql.y: 2461
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2530
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2608
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2609
		Category: hCCL,
		//line sql.y: 2610
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2631
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2789
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2790
		Category: hCCL,
		//line sql.y: 2791
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2819
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2863
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2864
		Category: hCCL,
		//line sql.y: 2865
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2874
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3026
	`CANCEL`: {
		//line sql.y: 3027
		Category: hGroup,
		//line sql.y: 3028
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3035
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3036
		Category: hMisc,
		//line sql.y: 3037
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3040
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3062
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3063
		Category: hMisc,
		//line sql.y: 3064
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3067
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3098
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3099
		Category: hMisc,
		//line sql.y: 3100
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3103
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3174
	`CREATE`: {
		//line sql.y: 3175
		Category: hGroup,
		//line sql.y: 3176
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3191
	`CREATE EXTENSION`: {
		//line sql.y: 3192
		Category: hCfg,
		//line sql.y: 3193
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3271
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3272
		Category: hMisc,
		//line sql.y: 3273
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3366
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3367
		Category: hCCL,
		//line sql.y: 3368
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3423
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3424
		Category: hCCL,
		//line sql.y: 3425
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3432
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3482
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3483
		Category: hDML,
		//line sql.y: 3484
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3488
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3508
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3509
		Category: hCfg,
		//line sql.y: 3510
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3522
	`DROP`: {
		//line sql.y: 3523
		Category: hGroup,
		//line sql.y: 3524
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3543
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3544
		Category: hDDL,
		//line sql.y: 3545
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3546
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3576
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3577
		Category: hDDL,
		//line sql.y: 3578
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3579
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3591
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3592
		Category: hDDL,
		//line sql.y: 3593
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3594
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3606
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3607
		Category: hDDL,
		//line sql.y: 3608
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3609
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3631
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3632
		Category: hDDL,
		//line sql.y: 3633
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3634
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3654
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3655
		Category: hDDL,
		//line sql.y: 3656
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3692
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3693
		Category: hDDL,
		//line sql.y: 3694
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3714
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3715
		Category: hPriv,
		//line sql.y: 3716
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3717
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3741
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3742
		Category: hMisc,
		//line sql.y: 3743
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3746
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3769
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3770
		Category: hMisc,
		//line sql.y: 3771
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3785
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3892
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3893
		Category: hMisc,
		//line sql.y: 3894
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3895
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3926
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3927
		Category: hMisc,
		//line sql.y: 3928
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3929
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3959
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3960
		Category: hMisc,
		//line sql.y: 3961
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3962
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3982
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3983
		Category: hPriv,
		//line sql.y: 3984
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 3999
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4037
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4038
		Category: hPriv,
		//line sql.y: 4039
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4054
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4126
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4127
		Category: hCfg,
		//line sql.y: 4128
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4129
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4141
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4142
		Category: hCfg,
		//line sql.y: 4143
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4144
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4153
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4154
		Category: hCfg,
		//line sql.y: 4155
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4158
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4179
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4180
		Category: hExperimental,
		//line sql.y: 4181
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4189
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4195
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4196
		Category: hExperimental,
		//line sql.y: 4197
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4205
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4213
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4214
		Category: hExperimental,
		//line sql.y: 4215
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4226
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4281
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4282
		Category: hCfg,
		//line sql.y: 4283
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4284
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4305
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4306
		Category: hCfg,
		//line sql.y: 4307
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4313
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4330
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4331
		Category: hTxn,
		//line sql.y: 4332
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4341
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4533
	`SHOW`: {
		//line sql.y: 4534
		Category: hGroup,
		//line sql.y: 4535
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION
`,
	},
	//line sql.y: 4618
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4619
		Category: hCfg,
		//line sql.y: 4620
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4621
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4642
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4643
		Category: hExperimental,
		//line sql.y: 4644
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4651
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4664
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4665
		Category: hExperimental,
		//line sql.y: 4666
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4670
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4683
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4684
		Category: hCCL,
		//line sql.y: 4685
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4686
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4740
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4741
		Category: hCfg,
		//line sql.y: 4742
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4745
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4771
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4772
		Category: hDDL,
		//line sql.y: 4773
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4774
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4782
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4783
		Category: hDDL,
		//line sql.y: 4784
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4785
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4805
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4806
		Category: hDDL,
		//line sql.y: 4807
		Text: `SHOW DATABASES
`,
		//line sql.y: 4808
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4816
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4817
		Category: hMisc,
		//line sql.y: 4818
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4846
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4847
		Category: hMisc,
		//line sql.y: 4848
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4856
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4857
		Category: hPriv,
		//line sql.y: 4858
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4864
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4877
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4878
		Category: hDDL,
		//line sql.y: 4879
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4880
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4910
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4911
		Category: hDDL,
		//line sql.y: 4912
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4913
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4926
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 4927
		Category: hMisc,
		//line sql.y: 4928
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 4929
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4956
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4957
		Category: hMisc,
		//line sql.y: 4958
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4962
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5006
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5007
		Category: hMisc,
		//line sql.y: 5008
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5011
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5058
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5059
		Category: hMisc,
		//line sql.y: 5060
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5062
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5085
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5086
		Category: hMisc,
		//line sql.y: 5087
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5088
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5101
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5102
		Category: hDDL,
		//line sql.y: 5103
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5104
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5132
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5133
		Category: hMisc,
		//line sql.y: 5134
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5151
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5152
		Category: hDDL,
		//line sql.y: 5153
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5165
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5166
		Category: hDDL,
		//line sql.y: 5167
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5179
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5180
		Category: hMisc,
		//line sql.y: 5181
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5197
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5198
		Category: hCfg,
		//line sql.y: 5199
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5207
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5208
		Category: hCfg,
		//line sql.y: 5209
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5210
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5229
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5230
		Category: hDDL,
		//line sql.y: 5231
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5234
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5256
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5257
		Category: hPriv,
		//line sql.y: 5258
		Text: `SHOW USERS
`,
		//line sql.y: 5259
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5267
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5268
		Category: hPriv,
		//line sql.y: 5269
		Text: `SHOW ROLES
`,
		//line sql.y: 5270
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5278
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5279
		Category: hCfg,
		//line sql.y: 5280
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5283
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5339
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5340
		Category: hMisc,
		//line sql.y: 5341
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5362
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5363
		Category: hMisc,
		//line sql.y: 5364
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5383
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5384
		Category: hDDL,
		//line sql.y: 5385
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5400
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5401
		Category: hDDL,
		//line sql.y: 5402
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5683
	`PAUSE`: {
		//line sql.y: 5684
		Category: hMisc,
		//line sql.y: 5685
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5695
	`RESUME`: {
		//line sql.y: 5696
		Category: hMisc,
		//line sql.y: 5697
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5707
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5708
		Category: hMisc,
		//line sql.y: 5709
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5712
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5747
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5748
		Category: hMisc,
		//line sql.y: 5749
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5753
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5774
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5775
		Category: hDDL,
		//line sql.y: 5776
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5809
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5810
		Category: hDDL,
		//line sql.y: 5811
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5837
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5838
		Category: hDDL,
		//line sql.y: 5839
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5869
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6790
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6791
		Category: hDDL,
		//line sql.y: 6792
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6802
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6867
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6868
		Category: hDML,
		//line sql.y: 6869
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6870
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6888
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6889
		Category: hPriv,
		//line sql.y: 6890
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6891
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6903
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6904
		Category: hPriv,
		//line sql.y: 6905
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6906
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6935
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6936
		Category: hDDL,
		//line sql.y: 6937
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6938
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7113
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7114
		Category: hDDL,
		//line sql.y: 7115
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7167
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7168
		Category: hDDL,
		//line sql.y: 7169
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7179
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7690
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7691
		Category: hTxn,
		//line sql.y: 7692
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7693
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7701
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7702
		Category: hMisc,
		//line sql.y: 7703
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7706
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7728
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7729
		Category: hMisc,
		//line sql.y: 7730
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7736
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7757
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7758
		Category: hMisc,
		//line sql.y: 7759
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7765
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7786
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7787
		Category: hTxn,
		//line sql.y: 7788
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7789
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7804
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7805
		Category: hTxn,
		//line sql.y: 7806
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7814
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7827
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7828
		Category: hTxn,
		//line sql.y: 7829
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7832
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7856
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7857
		Category: hTxn,
		//line sql.y: 7858
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7861
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7975
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7976
		Category: hDDL,
		//line sql.y: 7977
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7978
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8121
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8122
		Category: hDML,
		//line sql.y: 8123
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8131
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8150
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8151
		Category: hDML,
		//line sql.y: 8152
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8156
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8272
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8273
		Category: hDML,
		//line sql.y: 8274
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8281
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8337
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8338
		Category: hPriv,
		//line sql.y: 8339
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8341
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8352
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8353
		Category: hPriv,
		//line sql.y: 8354
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8356
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8536
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8537
		Category: hDML,
		//line sql.y: 8538
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8549
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8550
		Category: hDML,
		//line sql.y: 8551
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8563
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8638
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8639
		Category: hDML,
		//line sql.y: 8640
		Text: `TABLE <tablename>
`,
		//line sql.y: 8641
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9015
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9016
		Category: hDML,
		//line sql.y: 9017
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9018
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9127
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9128
		Category: hDML,
		//line sql.y: 9129
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9151
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
