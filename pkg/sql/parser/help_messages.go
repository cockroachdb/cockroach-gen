// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1335
	`ALTER`: {
		//line sql.y: 1336
		Category: hGroup,
		//line sql.y: 1337
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1355
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1356
		Category: hDDL,
		//line sql.y: 1357
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1397
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1414
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1415
		Category: hDDL,
		//line sql.y: 1416
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1435
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1440
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1441
		Category: hDDL,
		//line sql.y: 1442
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1445
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1454
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1455
		Category: hDDL,
		//line sql.y: 1456
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1482
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1483
		Category: hDDL,
		//line sql.y: 1484
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1492
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1572
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1573
		Category: hDDL,
		//line sql.y: 1574
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1586
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1591
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1592
		Category: hDDL,
		//line sql.y: 1593
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1609
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2161
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2162
		Category: hDDL,
		//line sql.y: 2163
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2179
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2330
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2331
		Category: hMisc,
		//line sql.y: 2332
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2359
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2360
		Category: hCCL,
		//line sql.y: 2361
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2382
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2492
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2493
		Category: hCCL,
		//line sql.y: 2494
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2563
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2641
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2642
		Category: hCCL,
		//line sql.y: 2643
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2664
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2822
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2823
		Category: hCCL,
		//line sql.y: 2824
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2852
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2896
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2897
		Category: hCCL,
		//line sql.y: 2898
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2907
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3059
	`CANCEL`: {
		//line sql.y: 3060
		Category: hGroup,
		//line sql.y: 3061
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3068
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3069
		Category: hMisc,
		//line sql.y: 3070
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3073
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3095
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3096
		Category: hMisc,
		//line sql.y: 3097
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3100
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3131
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3132
		Category: hMisc,
		//line sql.y: 3133
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3136
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3207
	`CREATE`: {
		//line sql.y: 3208
		Category: hGroup,
		//line sql.y: 3209
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3224
	`CREATE EXTENSION`: {
		//line sql.y: 3225
		Category: hCfg,
		//line sql.y: 3226
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3304
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3305
		Category: hMisc,
		//line sql.y: 3306
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3399
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3400
		Category: hCCL,
		//line sql.y: 3401
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3456
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3457
		Category: hCCL,
		//line sql.y: 3458
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3465
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3515
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3516
		Category: hDML,
		//line sql.y: 3517
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3521
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3541
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3542
		Category: hCfg,
		//line sql.y: 3543
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3555
	`DROP`: {
		//line sql.y: 3556
		Category: hGroup,
		//line sql.y: 3557
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3576
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3577
		Category: hDDL,
		//line sql.y: 3578
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3579
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3609
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3610
		Category: hDDL,
		//line sql.y: 3611
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3612
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3624
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3625
		Category: hDDL,
		//line sql.y: 3626
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3627
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3639
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3640
		Category: hDDL,
		//line sql.y: 3641
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3642
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3664
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3665
		Category: hDDL,
		//line sql.y: 3666
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3667
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3687
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3688
		Category: hDDL,
		//line sql.y: 3689
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3725
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3726
		Category: hDDL,
		//line sql.y: 3727
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3747
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3748
		Category: hPriv,
		//line sql.y: 3749
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3750
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3774
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3775
		Category: hMisc,
		//line sql.y: 3776
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3779
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3802
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3803
		Category: hMisc,
		//line sql.y: 3804
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3818
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3925
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3926
		Category: hMisc,
		//line sql.y: 3927
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3928
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3959
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3960
		Category: hMisc,
		//line sql.y: 3961
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3962
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3992
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3993
		Category: hMisc,
		//line sql.y: 3994
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3995
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4015
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4016
		Category: hPriv,
		//line sql.y: 4017
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 4032
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4070
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4071
		Category: hPriv,
		//line sql.y: 4072
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4087
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4159
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4160
		Category: hCfg,
		//line sql.y: 4161
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4162
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4174
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4175
		Category: hCfg,
		//line sql.y: 4176
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4177
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4186
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4187
		Category: hCfg,
		//line sql.y: 4188
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4191
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4212
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4213
		Category: hExperimental,
		//line sql.y: 4214
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4222
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4228
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4229
		Category: hExperimental,
		//line sql.y: 4230
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4238
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4246
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4247
		Category: hExperimental,
		//line sql.y: 4248
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4259
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4314
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4315
		Category: hCfg,
		//line sql.y: 4316
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4317
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4338
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4339
		Category: hCfg,
		//line sql.y: 4340
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4346
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4363
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4364
		Category: hTxn,
		//line sql.y: 4365
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4374
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4566
	`SHOW`: {
		//line sql.y: 4567
		Category: hGroup,
		//line sql.y: 4568
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4652
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4653
		Category: hCfg,
		//line sql.y: 4654
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4655
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4676
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4677
		Category: hExperimental,
		//line sql.y: 4678
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4685
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4698
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4699
		Category: hExperimental,
		//line sql.y: 4700
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4704
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4717
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4718
		Category: hCCL,
		//line sql.y: 4719
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4720
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4774
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4775
		Category: hCfg,
		//line sql.y: 4776
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4779
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4805
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4806
		Category: hDDL,
		//line sql.y: 4807
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4808
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4816
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4817
		Category: hDDL,
		//line sql.y: 4818
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4819
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4839
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4840
		Category: hDDL,
		//line sql.y: 4841
		Text: `SHOW DATABASES
`,
		//line sql.y: 4842
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4850
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4851
		Category: hMisc,
		//line sql.y: 4852
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4880
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4881
		Category: hMisc,
		//line sql.y: 4882
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4890
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4891
		Category: hPriv,
		//line sql.y: 4892
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4898
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4911
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4912
		Category: hDDL,
		//line sql.y: 4913
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4914
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4944
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4945
		Category: hDDL,
		//line sql.y: 4946
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4947
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4960
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 4961
		Category: hMisc,
		//line sql.y: 4962
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 4963
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4990
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4991
		Category: hMisc,
		//line sql.y: 4992
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4996
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5040
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5041
		Category: hMisc,
		//line sql.y: 5042
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5045
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5092
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5093
		Category: hMisc,
		//line sql.y: 5094
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5096
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5119
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5120
		Category: hMisc,
		//line sql.y: 5121
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5122
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5135
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5136
		Category: hDDL,
		//line sql.y: 5137
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5138
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5166
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5167
		Category: hMisc,
		//line sql.y: 5168
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5185
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5186
		Category: hDDL,
		//line sql.y: 5187
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5199
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5200
		Category: hDDL,
		//line sql.y: 5201
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5213
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5214
		Category: hMisc,
		//line sql.y: 5215
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5231
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5232
		Category: hCfg,
		//line sql.y: 5233
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5241
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5242
		Category: hCfg,
		//line sql.y: 5243
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5244
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5263
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5264
		Category: hDDL,
		//line sql.y: 5265
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5268
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5290
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5291
		Category: hPriv,
		//line sql.y: 5292
		Text: `SHOW USERS
`,
		//line sql.y: 5293
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5301
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5302
		Category: hPriv,
		//line sql.y: 5303
		Text: `SHOW ROLES
`,
		//line sql.y: 5304
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5312
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5313
		Category: hCfg,
		//line sql.y: 5314
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5317
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5373
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5374
		Category: hMisc,
		//line sql.y: 5375
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5396
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5397
		Category: hMisc,
		//line sql.y: 5398
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5417
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5418
		Category: hDDL,
		//line sql.y: 5419
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5434
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5435
		Category: hDDL,
		//line sql.y: 5436
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5724
	`PAUSE`: {
		//line sql.y: 5725
		Category: hMisc,
		//line sql.y: 5726
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5736
	`RESUME`: {
		//line sql.y: 5737
		Category: hMisc,
		//line sql.y: 5738
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5748
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5749
		Category: hMisc,
		//line sql.y: 5750
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5753
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5788
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5789
		Category: hMisc,
		//line sql.y: 5790
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5794
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5815
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5816
		Category: hDDL,
		//line sql.y: 5817
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5850
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5851
		Category: hDDL,
		//line sql.y: 5852
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5878
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5879
		Category: hDDL,
		//line sql.y: 5880
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5910
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6831
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6832
		Category: hDDL,
		//line sql.y: 6833
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6843
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6908
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6909
		Category: hDML,
		//line sql.y: 6910
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6911
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6929
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6930
		Category: hPriv,
		//line sql.y: 6931
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6932
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6944
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6945
		Category: hPriv,
		//line sql.y: 6946
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6947
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6976
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6977
		Category: hDDL,
		//line sql.y: 6978
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6979
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7154
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7155
		Category: hDDL,
		//line sql.y: 7156
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7208
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7209
		Category: hDDL,
		//line sql.y: 7210
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7220
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7731
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7732
		Category: hTxn,
		//line sql.y: 7733
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7734
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7742
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7743
		Category: hMisc,
		//line sql.y: 7744
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7747
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7769
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7770
		Category: hMisc,
		//line sql.y: 7771
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7777
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7798
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7799
		Category: hMisc,
		//line sql.y: 7800
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7806
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7827
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7828
		Category: hTxn,
		//line sql.y: 7829
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7830
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7845
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7846
		Category: hTxn,
		//line sql.y: 7847
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7855
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7868
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7869
		Category: hTxn,
		//line sql.y: 7870
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7873
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7897
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7898
		Category: hTxn,
		//line sql.y: 7899
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7902
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8016
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8017
		Category: hDDL,
		//line sql.y: 8018
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8019
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8162
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8163
		Category: hDML,
		//line sql.y: 8164
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8172
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8191
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8192
		Category: hDML,
		//line sql.y: 8193
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8197
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8313
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8314
		Category: hDML,
		//line sql.y: 8315
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8322
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8378
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8379
		Category: hPriv,
		//line sql.y: 8380
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8382
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8393
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8394
		Category: hPriv,
		//line sql.y: 8395
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8397
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8577
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8578
		Category: hDML,
		//line sql.y: 8579
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8590
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8591
		Category: hDML,
		//line sql.y: 8592
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8604
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8679
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8680
		Category: hDML,
		//line sql.y: 8681
		Text: `TABLE <tablename>
`,
		//line sql.y: 8682
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9056
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9057
		Category: hDML,
		//line sql.y: 9058
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9059
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9168
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9169
		Category: hDML,
		//line sql.y: 9170
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9192
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
