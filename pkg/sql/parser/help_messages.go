// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1267
	`ALTER`: {
		//line sql.y: 1268
		Category: hGroup,
		//line sql.y: 1269
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1286
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1287
		Category: hDDL,
		//line sql.y: 1288
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1327
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1342
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1343
		Category: hDDL,
		//line sql.y: 1344
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1363
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1368
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1369
		Category: hDDL,
		//line sql.y: 1370
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1373
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1381
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1382
		Category: hDDL,
		//line sql.y: 1383
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1408
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1409
		Category: hDDL,
		//line sql.y: 1410
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
`,
		//line sql.y: 1413
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1429
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1430
		Category: hDDL,
		//line sql.y: 1431
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1443
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1448
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1449
		Category: hDDL,
		//line sql.y: 1450
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1466
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 1987
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 1988
		Category: hDDL,
		//line sql.y: 1989
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2005
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2112
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2113
		Category: hMisc,
		//line sql.y: 2114
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2141
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2142
		Category: hCCL,
		//line sql.y: 2143
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: no-op in 20.2, will allow backing up interleaved tables in 21.1,
   even if future versions (21.2 onwards) will be unable to restore.

`,
		//line sql.y: 2165
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2274
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2275
		Category: hCCL,
		//line sql.y: 2276
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2345
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2423
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2424
		Category: hCCL,
		//line sql.y: 2425
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2446
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2577
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2578
		Category: hCCL,
		//line sql.y: 2579
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2607
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2651
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2652
		Category: hCCL,
		//line sql.y: 2653
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2662
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 2798
	`CANCEL`: {
		//line sql.y: 2799
		Category: hGroup,
		//line sql.y: 2800
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 2807
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 2808
		Category: hMisc,
		//line sql.y: 2809
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 2812
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 2834
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 2835
		Category: hMisc,
		//line sql.y: 2836
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 2839
		SeeAlso: `SHOW QUERIES
`,
	},
	//line sql.y: 2870
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 2871
		Category: hMisc,
		//line sql.y: 2872
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 2875
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 2945
	`CREATE`: {
		//line sql.y: 2946
		Category: hGroup,
		//line sql.y: 2947
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 2960
	`CREATE EXTENSION`: {
		//line sql.y: 2961
		Category: hCfg,
		//line sql.y: 2962
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3040
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3041
		Category: hMisc,
		//line sql.y: 3042
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3185
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3186
		Category: hDML,
		//line sql.y: 3187
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3191
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3211
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3212
		Category: hCfg,
		//line sql.y: 3213
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3225
	`DROP`: {
		//line sql.y: 3226
		Category: hGroup,
		//line sql.y: 3227
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3246
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3247
		Category: hDDL,
		//line sql.y: 3248
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3249
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3279
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3280
		Category: hDDL,
		//line sql.y: 3281
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3282
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3294
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3295
		Category: hDDL,
		//line sql.y: 3296
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3297
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3309
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3310
		Category: hDDL,
		//line sql.y: 3311
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3312
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3334
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3335
		Category: hDDL,
		//line sql.y: 3336
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3337
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3357
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3358
		Category: hDDL,
		//line sql.y: 3359
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3395
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3396
		Category: hDDL,
		//line sql.y: 3397
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3417
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3418
		Category: hPriv,
		//line sql.y: 3419
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3420
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3444
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3445
		Category: hMisc,
		//line sql.y: 3446
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3449
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3472
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3473
		Category: hMisc,
		//line sql.y: 3474
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN [ANALYZE] (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3487
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3594
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3595
		Category: hMisc,
		//line sql.y: 3596
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3597
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3628
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3629
		Category: hMisc,
		//line sql.y: 3630
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3631
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3661
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3662
		Category: hMisc,
		//line sql.y: 3663
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3664
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 3684
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 3685
		Category: hPriv,
		//line sql.y: 3686
		Text: `
Grant privileges:
  GRANT {ALL | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3701
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 3731
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 3732
		Category: hPriv,
		//line sql.y: 3733
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA <schemaname> [, <schemaname]...

`,
		//line sql.y: 3748
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 3816
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 3817
		Category: hCfg,
		//line sql.y: 3818
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 3819
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3831
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 3832
		Category: hCfg,
		//line sql.y: 3833
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 3834
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 3843
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 3844
		Category: hCfg,
		//line sql.y: 3845
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 3848
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 3869
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 3870
		Category: hExperimental,
		//line sql.y: 3871
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3879
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 3885
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 3886
		Category: hExperimental,
		//line sql.y: 3887
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 3895
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 3903
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 3904
		Category: hExperimental,
		//line sql.y: 3905
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 3916
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 3971
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 3972
		Category: hCfg,
		//line sql.y: 3973
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 3974
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 3995
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 3996
		Category: hCfg,
		//line sql.y: 3997
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | local | kv | results } [,...]

`,
		//line sql.y: 4003
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4020
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4021
		Category: hTxn,
		//line sql.y: 4022
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4031
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4223
	`SHOW`: {
		//line sql.y: 4224
		Category: hGroup,
		//line sql.y: 4225
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW QUERIES, SHOW RANGE, SHOW RANGES,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES
`,
	},
	//line sql.y: 4304
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4305
		Category: hCfg,
		//line sql.y: 4306
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4307
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4328
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4329
		Category: hExperimental,
		//line sql.y: 4330
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4337
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4350
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4351
		Category: hExperimental,
		//line sql.y: 4352
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4356
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4369
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4370
		Category: hCCL,
		//line sql.y: 4371
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4372
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4426
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4427
		Category: hCfg,
		//line sql.y: 4428
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4431
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4457
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4458
		Category: hDDL,
		//line sql.y: 4459
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4460
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4468
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4469
		Category: hDDL,
		//line sql.y: 4470
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4471
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4491
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4492
		Category: hDDL,
		//line sql.y: 4493
		Text: `SHOW DATABASES
`,
		//line sql.y: 4494
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4502
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4503
		Category: hMisc,
		//line sql.y: 4504
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4512
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4513
		Category: hMisc,
		//line sql.y: 4514
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4522
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4523
		Category: hPriv,
		//line sql.y: 4524
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4530
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4543
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4544
		Category: hDDL,
		//line sql.y: 4545
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4546
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4576
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4577
		Category: hDDL,
		//line sql.y: 4578
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4579
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4592
	`SHOW QUERIES`: {
		ShortDescription: `list running queries`,
		//line sql.y: 4593
		Category: hMisc,
		//line sql.y: 4594
		Text: `SHOW [ALL] [CLUSTER | LOCAL] QUERIES
`,
		//line sql.y: 4595
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4616
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4617
		Category: hMisc,
		//line sql.y: 4618
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4622
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 4666
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 4667
		Category: hMisc,
		//line sql.y: 4668
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 4671
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 4718
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 4719
		Category: hMisc,
		//line sql.y: 4720
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 4722
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 4745
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 4746
		Category: hMisc,
		//line sql.y: 4747
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 4748
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 4761
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 4762
		Category: hDDL,
		//line sql.y: 4763
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 4764
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 4792
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 4793
		Category: hMisc,
		//line sql.y: 4794
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 4811
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 4812
		Category: hDDL,
		//line sql.y: 4813
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 4825
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 4826
		Category: hDDL,
		//line sql.y: 4827
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 4839
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 4840
		Category: hMisc,
		//line sql.y: 4841
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 4857
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 4858
		Category: hCfg,
		//line sql.y: 4859
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 4867
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 4868
		Category: hCfg,
		//line sql.y: 4869
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 4870
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 4889
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 4890
		Category: hDDL,
		//line sql.y: 4891
		Text: `SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
`,
		//line sql.y: 4892
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 4910
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 4911
		Category: hPriv,
		//line sql.y: 4912
		Text: `SHOW USERS
`,
		//line sql.y: 4913
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 4921
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 4922
		Category: hPriv,
		//line sql.y: 4923
		Text: `SHOW ROLES
`,
		//line sql.y: 4924
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 4980
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 4981
		Category: hMisc,
		//line sql.y: 4982
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (row, value, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (row, value, ...)
`,
	},
	//line sql.y: 5003
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5004
		Category: hMisc,
		//line sql.y: 5005
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5259
	`PAUSE`: {
		//line sql.y: 5260
		Category: hMisc,
		//line sql.y: 5261
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5271
	`RESUME`: {
		//line sql.y: 5272
		Category: hMisc,
		//line sql.y: 5273
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5283
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5284
		Category: hMisc,
		//line sql.y: 5285
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5288
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5323
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5324
		Category: hMisc,
		//line sql.y: 5325
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5329
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5350
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5351
		Category: hDDL,
		//line sql.y: 5352
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { <schemaname> | [<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5385
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5386
		Category: hDDL,
		//line sql.y: 5387
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5413
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5414
		Category: hDDL,
		//line sql.y: 5415
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5445
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6283
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6284
		Category: hDDL,
		//line sql.y: 6285
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6295
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6360
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6361
		Category: hDML,
		//line sql.y: 6362
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6363
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6381
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6382
		Category: hPriv,
		//line sql.y: 6383
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6384
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6396
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6397
		Category: hPriv,
		//line sql.y: 6398
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6399
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6428
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6429
		Category: hDDL,
		//line sql.y: 6430
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6431
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 6606
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 6607
		Category: hDDL,
		//line sql.y: 6608
		Text: `CREATE TYPE <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 6651
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 6652
		Category: hDDL,
		//line sql.y: 6653
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 6663
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7017
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7018
		Category: hTxn,
		//line sql.y: 7019
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7020
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7028
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7029
		Category: hMisc,
		//line sql.y: 7030
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7033
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7055
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7056
		Category: hMisc,
		//line sql.y: 7057
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7063
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7084
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7085
		Category: hMisc,
		//line sql.y: 7086
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7092
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7113
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7114
		Category: hTxn,
		//line sql.y: 7115
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7116
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7131
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7132
		Category: hTxn,
		//line sql.y: 7133
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7141
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7154
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7155
		Category: hTxn,
		//line sql.y: 7156
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7159
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7183
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7184
		Category: hTxn,
		//line sql.y: 7185
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7188
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 7302
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 7303
		Category: hDDL,
		//line sql.y: 7304
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 7305
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 7390
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 7391
		Category: hDML,
		//line sql.y: 7392
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 7400
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 7419
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 7420
		Category: hDML,
		//line sql.y: 7421
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 7425
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 7541
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 7542
		Category: hDML,
		//line sql.y: 7543
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 7550
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 7775
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 7776
		Category: hDML,
		//line sql.y: 7777
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 7788
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 7789
		Category: hDML,
		//line sql.y: 7790
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 7802
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 7877
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 7878
		Category: hDML,
		//line sql.y: 7879
		Text: `TABLE <tablename>
`,
		//line sql.y: 7880
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8250
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 8251
		Category: hDML,
		//line sql.y: 8252
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 8253
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 8362
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 8363
		Category: hDML,
		//line sql.y: 8364
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP } ]

`,
		//line sql.y: 8386
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
