// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1506
	`ALTER`: {
		//line sql.y: 1507
		Category: hGroup,
		//line sql.y: 1508
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 1527
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1528
		Category: hDDL,
		//line sql.y: 1529
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1569
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1586
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1587
		Category: hDDL,
		//line sql.y: 1588
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1607
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1612
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1613
		Category: hDDL,
		//line sql.y: 1614
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1617
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1626
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1627
		Category: hDDL,
		//line sql.y: 1628
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1654
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1655
		Category: hDDL,
		//line sql.y: 1656
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1666
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1770
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1771
		Category: hDDL,
		//line sql.y: 1772
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1784
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1789
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1790
		Category: hDDL,
		//line sql.y: 1791
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1807
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2374
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2375
		Category: hDDL,
		//line sql.y: 2376
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2392
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2532
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2533
		Category: hMisc,
		//line sql.y: 2534
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2561
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2562
		Category: hCCL,
		//line sql.y: 2563
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2584
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2694
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2695
		Category: hCCL,
		//line sql.y: 2696
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2766
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2859
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2860
		Category: hCCL,
		//line sql.y: 2861
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
`,
		//line sql.y: 2884
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3045
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3046
		Category: hCCL,
		//line sql.y: 3047
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 3075
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 3119
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3120
		Category: hCCL,
		//line sql.y: 3121
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3130
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3282
	`CANCEL`: {
		//line sql.y: 3283
		Category: hGroup,
		//line sql.y: 3284
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3291
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3292
		Category: hMisc,
		//line sql.y: 3293
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3296
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3318
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3319
		Category: hMisc,
		//line sql.y: 3320
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3323
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3354
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3355
		Category: hMisc,
		//line sql.y: 3356
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3359
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3434
	`CREATE`: {
		//line sql.y: 3435
		Category: hGroup,
		//line sql.y: 3436
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3451
	`CREATE EXTENSION`: {
		//line sql.y: 3452
		Category: hCfg,
		//line sql.y: 3453
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3531
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3532
		Category: hMisc,
		//line sql.y: 3533
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3626
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3627
		Category: hCCL,
		//line sql.y: 3628
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3683
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3684
		Category: hCCL,
		//line sql.y: 3685
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3692
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3742
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3743
		Category: hDML,
		//line sql.y: 3744
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3748
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3768
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3769
		Category: hCfg,
		//line sql.y: 3770
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3782
	`DROP`: {
		//line sql.y: 3783
		Category: hGroup,
		//line sql.y: 3784
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3803
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3804
		Category: hDDL,
		//line sql.y: 3805
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3806
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3836
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3837
		Category: hDDL,
		//line sql.y: 3838
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3839
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3851
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3852
		Category: hDDL,
		//line sql.y: 3853
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3854
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3866
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3867
		Category: hDDL,
		//line sql.y: 3868
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3869
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3891
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3892
		Category: hDDL,
		//line sql.y: 3893
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3894
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3914
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3915
		Category: hDDL,
		//line sql.y: 3916
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3952
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3953
		Category: hDDL,
		//line sql.y: 3954
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3974
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3975
		Category: hPriv,
		//line sql.y: 3976
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3977
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4001
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4002
		Category: hMisc,
		//line sql.y: 4003
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4006
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4029
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4030
		Category: hMisc,
		//line sql.y: 4031
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4045
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4156
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4157
		Category: hMisc,
		//line sql.y: 4158
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4159
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4190
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4191
		Category: hMisc,
		//line sql.y: 4192
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4193
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4223
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4224
		Category: hMisc,
		//line sql.y: 4225
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4226
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4246
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4247
		Category: hPriv,
		//line sql.y: 4248
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4264
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4313
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4314
		Category: hPriv,
		//line sql.y: 4315
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4331
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4414
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4415
		Category: hCfg,
		//line sql.y: 4416
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4417
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4429
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4430
		Category: hCfg,
		//line sql.y: 4431
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4432
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4441
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4442
		Category: hCfg,
		//line sql.y: 4443
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4446
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4467
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4468
		Category: hExperimental,
		//line sql.y: 4469
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4477
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4483
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4484
		Category: hExperimental,
		//line sql.y: 4485
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4493
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4501
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4502
		Category: hExperimental,
		//line sql.y: 4503
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4514
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4569
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4570
		Category: hCfg,
		//line sql.y: 4571
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4572
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4593
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4594
		Category: hCfg,
		//line sql.y: 4595
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4601
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4620
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 4621
		Category: hCfg,
		//line sql.y: 4622
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 4626
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4637
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4638
		Category: hTxn,
		//line sql.y: 4639
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4648
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4848
	`SHOW`: {
		//line sql.y: 4849
		Category: hGroup,
		//line sql.y: 4850
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4936
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4937
		Category: hCfg,
		//line sql.y: 4938
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4939
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4963
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4964
		Category: hExperimental,
		//line sql.y: 4965
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4972
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4985
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4986
		Category: hExperimental,
		//line sql.y: 4987
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4991
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 5004
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 5005
		Category: hCCL,
		//line sql.y: 5006
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 5007
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5061
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5062
		Category: hCfg,
		//line sql.y: 5063
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 5066
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5092
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5093
		Category: hDDL,
		//line sql.y: 5094
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5095
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5103
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5104
		Category: hDDL,
		//line sql.y: 5105
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5106
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5126
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5127
		Category: hDDL,
		//line sql.y: 5128
		Text: `SHOW DATABASES
`,
		//line sql.y: 5129
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5137
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5138
		Category: hDDL,
		//line sql.y: 5139
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5153
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5154
		Category: hMisc,
		//line sql.y: 5155
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5183
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5184
		Category: hMisc,
		//line sql.y: 5185
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 5193
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 5194
		Category: hPriv,
		//line sql.y: 5195
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 5201
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 5214
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 5215
		Category: hDDL,
		//line sql.y: 5216
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 5217
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 5247
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 5248
		Category: hDDL,
		//line sql.y: 5249
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5250
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5263
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5264
		Category: hMisc,
		//line sql.y: 5265
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5266
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5293
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5294
		Category: hMisc,
		//line sql.y: 5295
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 5299
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5361
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5362
		Category: hMisc,
		//line sql.y: 5363
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5366
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5417
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5418
		Category: hMisc,
		//line sql.y: 5419
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5421
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5444
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5445
		Category: hMisc,
		//line sql.y: 5446
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5447
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5460
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5461
		Category: hDDL,
		//line sql.y: 5462
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5463
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5491
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5492
		Category: hMisc,
		//line sql.y: 5493
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5510
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5511
		Category: hDDL,
		//line sql.y: 5512
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5524
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5525
		Category: hDDL,
		//line sql.y: 5526
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5538
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5539
		Category: hMisc,
		//line sql.y: 5540
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5568
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5569
		Category: hCfg,
		//line sql.y: 5570
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5578
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5579
		Category: hCfg,
		//line sql.y: 5580
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5581
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5600
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 5601
		Category: hDDL,
		//line sql.y: 5602
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5605
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 5637
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 5638
		Category: hDDL,
		//line sql.y: 5639
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 5642
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5657
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5658
		Category: hPriv,
		//line sql.y: 5659
		Text: `SHOW USERS
`,
		//line sql.y: 5660
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5668
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5669
		Category: hPriv,
		//line sql.y: 5670
		Text: `SHOW ROLES
`,
		//line sql.y: 5671
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5679
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5680
		Category: hCfg,
		//line sql.y: 5681
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5684
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5740
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5741
		Category: hMisc,
		//line sql.y: 5742
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5763
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5764
		Category: hMisc,
		//line sql.y: 5765
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5784
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5785
		Category: hDDL,
		//line sql.y: 5786
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5801
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5802
		Category: hDDL,
		//line sql.y: 5803
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6091
	`PAUSE`: {
		//line sql.y: 6092
		Category: hMisc,
		//line sql.y: 6093
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6103
	`RESUME`: {
		//line sql.y: 6104
		Category: hMisc,
		//line sql.y: 6105
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 6115
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 6116
		Category: hMisc,
		//line sql.y: 6117
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 6120
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6169
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 6170
		Category: hMisc,
		//line sql.y: 6171
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 6175
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6196
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 6197
		Category: hDDL,
		//line sql.y: 6198
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 6231
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 6232
		Category: hDDL,
		//line sql.y: 6233
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 6259
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 6260
		Category: hDDL,
		//line sql.y: 6261
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 6291
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 7240
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 7241
		Category: hDDL,
		//line sql.y: 7242
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 7252
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 7316
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 7317
		Category: hDML,
		//line sql.y: 7318
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 7319
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 7343
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 7344
		Category: hPriv,
		//line sql.y: 7345
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 7346
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7358
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 7359
		Category: hPriv,
		//line sql.y: 7360
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 7364
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7433
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 7434
		Category: hDDL,
		//line sql.y: 7435
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 7436
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7611
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7612
		Category: hDDL,
		//line sql.y: 7613
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7665
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7666
		Category: hDDL,
		//line sql.y: 7667
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7677
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 8180
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 8181
		Category: hDDL,
		//line sql.y: 8182
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 8318
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 8319
		Category: hTxn,
		//line sql.y: 8320
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8321
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8329
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8330
		Category: hMisc,
		//line sql.y: 8331
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 8334
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 8356
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 8357
		Category: hMisc,
		//line sql.y: 8358
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 8364
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8385
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 8386
		Category: hMisc,
		//line sql.y: 8387
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 8393
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8414
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 8415
		Category: hTxn,
		//line sql.y: 8416
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 8417
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8432
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 8433
		Category: hTxn,
		//line sql.y: 8434
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 8442
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 8455
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 8456
		Category: hTxn,
		//line sql.y: 8457
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 8460
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 8484
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 8485
		Category: hTxn,
		//line sql.y: 8486
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8489
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8603
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8604
		Category: hDDL,
		//line sql.y: 8605
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8606
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8770
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8771
		Category: hDML,
		//line sql.y: 8772
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8780
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8799
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8800
		Category: hDML,
		//line sql.y: 8801
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8805
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8921
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8922
		Category: hDML,
		//line sql.y: 8923
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8930
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8986
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8987
		Category: hPriv,
		//line sql.y: 8988
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8990
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 9001
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 9002
		Category: hPriv,
		//line sql.y: 9003
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 9005
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 9185
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 9186
		Category: hDML,
		//line sql.y: 9187
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 9198
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 9199
		Category: hDML,
		//line sql.y: 9200
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 9212
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 9287
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 9288
		Category: hDML,
		//line sql.y: 9289
		Text: `TABLE <tablename>
`,
		//line sql.y: 9290
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9661
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9662
		Category: hDML,
		//line sql.y: 9663
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9664
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9783
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9784
		Category: hDML,
		//line sql.y: 9785
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9809
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
