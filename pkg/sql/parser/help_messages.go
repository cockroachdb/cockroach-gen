// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1508
	`ALTER`: {
		//line sql.y: 1509
		Category: hGroup,
		//line sql.y: 1510
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 1529
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1530
		Category: hDDL,
		//line sql.y: 1531
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1571
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1588
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1589
		Category: hDDL,
		//line sql.y: 1590
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1609
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1614
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1615
		Category: hDDL,
		//line sql.y: 1616
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1619
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1628
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1629
		Category: hDDL,
		//line sql.y: 1630
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1656
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1657
		Category: hDDL,
		//line sql.y: 1658
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1670
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1774
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1775
		Category: hDDL,
		//line sql.y: 1776
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1788
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1793
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1794
		Category: hDDL,
		//line sql.y: 1795
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1811
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2378
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2379
		Category: hDDL,
		//line sql.y: 2380
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2396
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2536
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2537
		Category: hMisc,
		//line sql.y: 2538
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2565
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2566
		Category: hCCL,
		//line sql.y: 2567
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2588
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2698
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2699
		Category: hCCL,
		//line sql.y: 2700
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2770
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2863
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2864
		Category: hCCL,
		//line sql.y: 2865
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
`,
		//line sql.y: 2888
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3049
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3050
		Category: hCCL,
		//line sql.y: 3051
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 3079
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 3123
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3124
		Category: hCCL,
		//line sql.y: 3125
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3134
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3286
	`CANCEL`: {
		//line sql.y: 3287
		Category: hGroup,
		//line sql.y: 3288
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3295
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3296
		Category: hMisc,
		//line sql.y: 3297
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3300
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3322
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3323
		Category: hMisc,
		//line sql.y: 3324
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3327
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3358
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3359
		Category: hMisc,
		//line sql.y: 3360
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3363
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3438
	`CREATE`: {
		//line sql.y: 3439
		Category: hGroup,
		//line sql.y: 3440
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3455
	`CREATE EXTENSION`: {
		//line sql.y: 3456
		Category: hCfg,
		//line sql.y: 3457
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3535
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3536
		Category: hMisc,
		//line sql.y: 3537
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3630
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3631
		Category: hCCL,
		//line sql.y: 3632
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3687
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3688
		Category: hCCL,
		//line sql.y: 3689
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3696
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3746
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3747
		Category: hDML,
		//line sql.y: 3748
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3752
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3772
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3773
		Category: hCfg,
		//line sql.y: 3774
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3786
	`DROP`: {
		//line sql.y: 3787
		Category: hGroup,
		//line sql.y: 3788
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3807
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3808
		Category: hDDL,
		//line sql.y: 3809
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3810
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3840
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3841
		Category: hDDL,
		//line sql.y: 3842
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3843
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3855
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3856
		Category: hDDL,
		//line sql.y: 3857
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3858
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3870
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3871
		Category: hDDL,
		//line sql.y: 3872
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3873
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3895
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3896
		Category: hDDL,
		//line sql.y: 3897
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3898
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3918
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3919
		Category: hDDL,
		//line sql.y: 3920
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3956
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3957
		Category: hDDL,
		//line sql.y: 3958
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3978
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3979
		Category: hPriv,
		//line sql.y: 3980
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3981
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4005
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4006
		Category: hMisc,
		//line sql.y: 4007
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4010
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4033
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4034
		Category: hMisc,
		//line sql.y: 4035
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4049
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4160
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4161
		Category: hMisc,
		//line sql.y: 4162
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4163
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4194
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4195
		Category: hMisc,
		//line sql.y: 4196
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4197
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4227
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4228
		Category: hMisc,
		//line sql.y: 4229
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4230
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4250
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4251
		Category: hPriv,
		//line sql.y: 4252
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4268
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4317
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4318
		Category: hPriv,
		//line sql.y: 4319
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4335
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4418
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4419
		Category: hCfg,
		//line sql.y: 4420
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4421
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4433
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4434
		Category: hCfg,
		//line sql.y: 4435
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4436
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4445
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4446
		Category: hCfg,
		//line sql.y: 4447
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4450
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4471
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4472
		Category: hExperimental,
		//line sql.y: 4473
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4481
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4487
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4488
		Category: hExperimental,
		//line sql.y: 4489
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4497
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4505
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4506
		Category: hExperimental,
		//line sql.y: 4507
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4518
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4573
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4574
		Category: hCfg,
		//line sql.y: 4575
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4576
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4597
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4598
		Category: hCfg,
		//line sql.y: 4599
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4605
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4636
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 4637
		Category: hCfg,
		//line sql.y: 4638
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 4642
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4653
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4654
		Category: hTxn,
		//line sql.y: 4655
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4664
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4857
	`SHOW`: {
		//line sql.y: 4858
		Category: hGroup,
		//line sql.y: 4859
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4945
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4946
		Category: hCfg,
		//line sql.y: 4947
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4948
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4973
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4974
		Category: hExperimental,
		//line sql.y: 4975
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4982
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4995
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4996
		Category: hExperimental,
		//line sql.y: 4997
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 5001
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 5014
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 5015
		Category: hCCL,
		//line sql.y: 5016
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 5017
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5071
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5072
		Category: hCfg,
		//line sql.y: 5073
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 5076
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5102
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5103
		Category: hDDL,
		//line sql.y: 5104
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5105
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5113
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5114
		Category: hDDL,
		//line sql.y: 5115
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5116
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5136
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5137
		Category: hDDL,
		//line sql.y: 5138
		Text: `SHOW DATABASES
`,
		//line sql.y: 5139
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5147
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5148
		Category: hDDL,
		//line sql.y: 5149
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5163
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5164
		Category: hMisc,
		//line sql.y: 5165
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5193
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5194
		Category: hMisc,
		//line sql.y: 5195
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 5203
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 5204
		Category: hPriv,
		//line sql.y: 5205
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 5211
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 5224
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 5225
		Category: hDDL,
		//line sql.y: 5226
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 5227
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 5257
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 5258
		Category: hDDL,
		//line sql.y: 5259
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5260
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5273
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5274
		Category: hMisc,
		//line sql.y: 5275
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5276
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5303
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5304
		Category: hMisc,
		//line sql.y: 5305
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 5309
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5371
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5372
		Category: hMisc,
		//line sql.y: 5373
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5376
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5427
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5428
		Category: hMisc,
		//line sql.y: 5429
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5431
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5454
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5455
		Category: hMisc,
		//line sql.y: 5456
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5457
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5470
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5471
		Category: hDDL,
		//line sql.y: 5472
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5473
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5501
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5502
		Category: hMisc,
		//line sql.y: 5503
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5520
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5521
		Category: hDDL,
		//line sql.y: 5522
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5534
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5535
		Category: hDDL,
		//line sql.y: 5536
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5548
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5549
		Category: hMisc,
		//line sql.y: 5550
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5578
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5579
		Category: hCfg,
		//line sql.y: 5580
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5588
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5589
		Category: hCfg,
		//line sql.y: 5590
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5591
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5610
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 5611
		Category: hDDL,
		//line sql.y: 5612
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5615
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 5647
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 5648
		Category: hDDL,
		//line sql.y: 5649
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 5652
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5667
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5668
		Category: hPriv,
		//line sql.y: 5669
		Text: `SHOW USERS
`,
		//line sql.y: 5670
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5678
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5679
		Category: hPriv,
		//line sql.y: 5680
		Text: `SHOW ROLES
`,
		//line sql.y: 5681
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5689
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5690
		Category: hCfg,
		//line sql.y: 5691
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5694
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5750
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5751
		Category: hMisc,
		//line sql.y: 5752
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5773
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5774
		Category: hMisc,
		//line sql.y: 5775
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5794
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5795
		Category: hDDL,
		//line sql.y: 5796
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5811
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5812
		Category: hDDL,
		//line sql.y: 5813
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6101
	`PAUSE`: {
		//line sql.y: 6102
		Category: hMisc,
		//line sql.y: 6103
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6113
	`RESUME`: {
		//line sql.y: 6114
		Category: hMisc,
		//line sql.y: 6115
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 6125
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 6126
		Category: hMisc,
		//line sql.y: 6127
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 6130
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6179
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 6180
		Category: hMisc,
		//line sql.y: 6181
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 6185
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6206
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 6207
		Category: hDDL,
		//line sql.y: 6208
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 6241
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 6242
		Category: hDDL,
		//line sql.y: 6243
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 6269
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 6270
		Category: hDDL,
		//line sql.y: 6271
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 6301
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 7250
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 7251
		Category: hDDL,
		//line sql.y: 7252
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 7262
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 7326
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 7327
		Category: hDML,
		//line sql.y: 7328
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 7329
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 7353
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 7354
		Category: hPriv,
		//line sql.y: 7355
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 7356
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7368
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 7369
		Category: hPriv,
		//line sql.y: 7370
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 7374
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 7452
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 7453
		Category: hDDL,
		//line sql.y: 7454
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 7455
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7646
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7647
		Category: hDDL,
		//line sql.y: 7648
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7700
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7701
		Category: hDDL,
		//line sql.y: 7702
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7712
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 8215
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 8216
		Category: hDDL,
		//line sql.y: 8217
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 8353
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 8354
		Category: hTxn,
		//line sql.y: 8355
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8356
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8364
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 8365
		Category: hMisc,
		//line sql.y: 8366
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 8369
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 8391
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 8392
		Category: hMisc,
		//line sql.y: 8393
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 8399
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 8420
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 8421
		Category: hMisc,
		//line sql.y: 8422
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 8428
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 8449
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 8450
		Category: hTxn,
		//line sql.y: 8451
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 8452
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 8467
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 8468
		Category: hTxn,
		//line sql.y: 8469
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 8477
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 8490
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 8491
		Category: hTxn,
		//line sql.y: 8492
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 8495
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 8519
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 8520
		Category: hTxn,
		//line sql.y: 8521
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 8524
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8638
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8639
		Category: hDDL,
		//line sql.y: 8640
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8641
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8805
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8806
		Category: hDML,
		//line sql.y: 8807
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8815
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8834
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8835
		Category: hDML,
		//line sql.y: 8836
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8840
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8956
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8957
		Category: hDML,
		//line sql.y: 8958
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8965
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 9021
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 9022
		Category: hPriv,
		//line sql.y: 9023
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 9025
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 9036
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 9037
		Category: hPriv,
		//line sql.y: 9038
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 9040
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 9220
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 9221
		Category: hDML,
		//line sql.y: 9222
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 9233
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 9234
		Category: hDML,
		//line sql.y: 9235
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 9247
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 9322
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 9323
		Category: hDML,
		//line sql.y: 9324
		Text: `TABLE <tablename>
`,
		//line sql.y: 9325
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9696
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9697
		Category: hDML,
		//line sql.y: 9698
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9699
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9818
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9819
		Category: hDML,
		//line sql.y: 9820
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9844
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
