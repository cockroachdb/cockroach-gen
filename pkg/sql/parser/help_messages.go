// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1594
	`ALTER`: {
		//line sql.y: 1595
		Category: hGroup,
		//line sql.y: 1596
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE, ALTER DEFAULT PRIVILEGES, ALTER TENANT
`,
	},
	//line sql.y: 1618
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1619
		Category: hDDL,
		//line sql.y: 1620
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET ON UPDATE <expr> | DROP ON UPDATE}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SET (storage_param = value, ...)
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1663
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1679
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1680
		Category: hDDL,
		//line sql.y: 1681
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1700
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1705
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1706
		Category: hDDL,
		//line sql.y: 1707
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1710
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1719
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1720
		Category: hDDL,
		//line sql.y: 1721
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1748
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1749
		Category: hDDL,
		//line sql.y: 1750
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> CONFIGURE ZONE <zone config>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGION [IF NOT EXISTS] <region>
ALTER DATABASE <name> DROP REGION [IF EXISTS] <region>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
ALTER DATABASE <name> PLACEMENT { RESTRICTED | DEFAULT }
ALTER DATABASE <name> SET var { TO | = } { value | DEFAULT }
ALTER DATABASE <name> RESET { var | ALL }
`,
		//line sql.y: 1762
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1888
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1889
		Category: hDDL,
		//line sql.y: 1890
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>
  ALTER RANGE   RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE { VOTERS | NONVOTERS } FROM <store_id> TO <store_id>
  ALTER RANGE   RELOCATE LEASE                                  TO <store_id> FOR <selectclause>
  ALTER RANGE r RELOCATE LEASE                                  TO <store_id>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1906
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1912
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1913
		Category: hDDL,
		//line sql.y: 1914
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER INDEX ... RELOCATE [ LEASE | VOTERS | NONVOTERS ] <selectclause>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1931
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2574
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2575
		Category: hDDL,
		//line sql.y: 2576
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2592
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2741
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2742
		Category: hMisc,
		//line sql.y: 2743
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2770
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2771
		Category: hCCL,
		//line sql.y: 2772
		Text: `

Create a full backup
BACKUP <targets...> INTO <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Append an incremental backup to the most recent backup added to a collection
BACKUP <targets...> INTO LATEST IN <destination...>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]


Append an incremental backup in the <subdir>. This command will create an
incremental backup iff there is a full backup in <destination>
BACKUP <targets...> INTO [<subdir...> IN] <destination>
       [ AS OF SYSTEM TIME <expr> ]
			[ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Destination:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   incremental_location: specify a different path to store the incremental backup

`,
		//line sql.y: 2806
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2916
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2917
		Category: hCCL,
		//line sql.y: 2918
		Text: `
CREATE SCHEDULE [IF NOT EXISTS]
[<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2988
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 3073
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 3074
		Category: hCCL,
		//line sql.y: 3075
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]
or
RESTORE SYSTEM USERS FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
   skip_localities_check: ignore difference of zone configuration between restore cluster and backup cluster
   debug_pause_on: describes the events that the job should pause itself on for debugging purposes.
   new_db_name: renames the restored database. only applies to database restores
`,
		//line sql.y: 3103
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 3295
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 3296
		Category: hCCL,
		//line sql.y: 3297
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   MYSQLDUMP
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'

Use CREATE TABLE followed by IMPORT INTO to create and import into a table
from external files that only have table data.

`,
		//line sql.y: 3315
		SeeAlso: `CREATE TABLE, WEBDOCS/import-into.html
`,
	},
	//line sql.y: 3349
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 3350
		Category: hCCL,
		//line sql.y: 3351
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV
   Parquet

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 3361
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3513
	`CANCEL`: {
		//line sql.y: 3514
		Category: hGroup,
		//line sql.y: 3515
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3523
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3524
		Category: hMisc,
		//line sql.y: 3525
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3528
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3550
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3551
		Category: hMisc,
		//line sql.y: 3552
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3555
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3586
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3587
		Category: hMisc,
		//line sql.y: 3588
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3591
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3622
	`CANCEL ALL JOBS`: {
		//line sql.y: 3623
		Category: hMisc,
		//line sql.y: 3624
		Text: `
CANCEL ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 3683
	`CREATE`: {
		//line sql.y: 3684
		Category: hGroup,
		//line sql.y: 3685
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3700
	`CREATE EXTENSION`: {
		//line sql.y: 3701
		Category: hCfg,
		//line sql.y: 3702
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3786
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3787
		Category: hMisc,
		//line sql.y: 3788
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3881
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3882
		Category: hCCL,
		//line sql.y: 3883
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3959
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3960
		Category: hCCL,
		//line sql.y: 3961
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3968
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 4018
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 4019
		Category: hDML,
		//line sql.y: 4020
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 4024
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 4044
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 4045
		Category: hCfg,
		//line sql.y: 4046
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 4058
	`DROP`: {
		//line sql.y: 4059
		Category: hGroup,
		//line sql.y: 4060
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 4079
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 4080
		Category: hDDL,
		//line sql.y: 4081
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4082
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4112
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 4113
		Category: hDDL,
		//line sql.y: 4114
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4115
		SeeAlso: `DROP
`,
	},
	//line sql.y: 4127
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 4128
		Category: hDDL,
		//line sql.y: 4129
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4130
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 4142
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 4143
		Category: hDDL,
		//line sql.y: 4144
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 4145
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 4167
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 4168
		Category: hDDL,
		//line sql.y: 4169
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 4170
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 4190
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 4191
		Category: hDDL,
		//line sql.y: 4192
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 4228
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 4229
		Category: hDDL,
		//line sql.y: 4230
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 4250
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 4251
		Category: hPriv,
		//line sql.y: 4252
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 4253
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 4277
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 4278
		Category: hMisc,
		//line sql.y: 4279
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 4282
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 4305
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 4306
		Category: hMisc,
		//line sql.y: 4307
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 4321
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 4432
	`ALTER CHANGEFEED`: {
		ShortDescription: `alter an existing changefeed`,
		//line sql.y: 4433
		Category: hCCL,
		//line sql.y: 4434
		Text: `
ALTER CHANGEFEED <job_id> {{ADD|DROP <targets...>} | SET <options...>}...
`,
	},
	//line sql.y: 4485
	`ALTER BACKUP`: {
		ShortDescription: `alter an existing backup's encryption keys`,
		//line sql.y: 4486
		Category: hCCL,
		//line sql.y: 4487
		Text: `
ALTER BACKUP <location...>
       [ ADD NEW_KMS = <kms...> ]
       [ WITH OLD_KMS = <kms...> ]
Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

KMS:
   "[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : add new kms keys to backup
`,
	},
	//line sql.y: 4541
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 4542
		Category: hMisc,
		//line sql.y: 4543
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 4544
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4575
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 4576
		Category: hMisc,
		//line sql.y: 4577
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 4578
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 4608
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 4609
		Category: hMisc,
		//line sql.y: 4610
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 4611
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4631
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4632
		Category: hPriv,
		//line sql.y: 4633
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4649
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4700
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4701
		Category: hPriv,
		//line sql.y: 4702
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...
  ALL TABLES IN SCHEMA schema_name [, ...]

`,
		//line sql.y: 4718
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4835
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4836
		Category: hCfg,
		//line sql.y: 4837
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4838
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4854
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4855
		Category: hCfg,
		//line sql.y: 4856
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4857
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4866
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4867
		Category: hCfg,
		//line sql.y: 4868
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4871
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4892
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4893
		Category: hExperimental,
		//line sql.y: 4894
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4902
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4908
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4909
		Category: hExperimental,
		//line sql.y: 4910
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4918
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4926
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4927
		Category: hExperimental,
		//line sql.y: 4928
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4939
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4994
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4995
		Category: hCfg,
		//line sql.y: 4996
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4997
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION, SET LOCAL
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5006
	`ALTER TENANT`: {
		ShortDescription: `alter tenant configuration`,
		//line sql.y: 5007
		Category: hCfg,
		//line sql.y: 5008
		Text: `
ALTER TENANT { <tenant_id> | ALL } SET CLUSTER SETTING <var> { TO | = } <value>
ALTER TENANT { <tenant_id> | ALL } RESET CLUSTER SETTING <var>
`,
		//line sql.y: 5011
		SeeAlso: `SET CLUSTER SETTING
`,
	},
	//line sql.y: 5048
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 5049
		Category: hCfg,
		//line sql.y: 5050
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 5056
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET LOCAL
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5075
	`SET LOCAL`: {
		ShortDescription: `change a session variable scoped to the current transaction`,
		//line sql.y: 5076
		Category: hCfg,
		//line sql.y: 5077
		Text: `
SET LOCAL <var> { TO | = } <values...>
SET LOCAL TIME ZONE <tz>

`,
		//line sql.y: 5081
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION, SET SESSION
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 5092
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 5093
		Category: hTxn,
		//line sql.y: 5094
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 5103
		SeeAlso: `SHOW TRANSACTION, SET SESSION, SET LOCAL
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 5307
	`SHOW`: {
		//line sql.y: 5308
		Category: hGroup,
		//line sql.y: 5309
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW CREATE SCHEDULES, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TRANSFER, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS,
SHOW SCHEDULES, SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 5361
	`CLOSE`: {
		ShortDescription: `close SQL cursor`,
		//line sql.y: 5362
		Category: hMisc,
		//line sql.y: 5363
		Text: `CLOSE [ ALL | <name> ]
`,
		//line sql.y: 5364
		SeeAlso: `DECLARE, FETCH
`,
	},
	//line sql.y: 5380
	`DECLARE`: {
		ShortDescription: `declare SQL cursor`,
		//line sql.y: 5381
		Category: hMisc,
		//line sql.y: 5382
		Text: `DECLARE <name> [ options ] CURSOR p [ WITH | WITHOUT HOLD ] FOR <query>
`,
		//line sql.y: 5383
		SeeAlso: `CLOSE, FETCH
`,
	},
	//line sql.y: 5452
	`FETCH`: {
		ShortDescription: `fetch rows from a SQL cursor`,
		//line sql.y: 5453
		Category: hMisc,
		//line sql.y: 5454
		Text: `FETCH [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5455
		SeeAlso: `MOVE, CLOSE, DECLARE
`,
	},
	//line sql.y: 5465
	`MOVE`: {
		ShortDescription: `move a SQL cursor without fetching rows`,
		//line sql.y: 5466
		Category: hMisc,
		//line sql.y: 5467
		Text: `MOVE [ direction [ FROM | IN ] ] <name>
`,
		//line sql.y: 5468
		SeeAlso: `FETCH, CLOSE, DECLARE
`,
	},
	//line sql.y: 5604
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 5605
		Category: hCfg,
		//line sql.y: 5606
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 5607
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 5645
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 5646
		Category: hExperimental,
		//line sql.y: 5647
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 5654
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 5667
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 5668
		Category: hExperimental,
		//line sql.y: 5669
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 5673
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 5686
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 5687
		Category: hCCL,
		//line sql.y: 5688
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 5689
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 5743
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 5744
		Category: hCfg,
		//line sql.y: 5745
		Text: `
SHOW CLUSTER SETTING <var> [ FOR TENANT <tenant_id> ]
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS [ FOR TENANT <tenant_id> ]
`,
		//line sql.y: 5748
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 5794
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 5795
		Category: hDDL,
		//line sql.y: 5796
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 5797
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 5805
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 5806
		Category: hDDL,
		//line sql.y: 5807
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 5808
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 5828
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 5829
		Category: hDDL,
		//line sql.y: 5830
		Text: `SHOW DATABASES
`,
		//line sql.y: 5831
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 5839
	`SHOW DEFAULT PRIVILEGES`: {
		ShortDescription: `list default privileges`,
		//line sql.y: 5840
		Category: hDDL,
		//line sql.y: 5841
		Text: `SHOW DEFAULT PRIVILEGES
`,
	},
	//line sql.y: 5855
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 5856
		Category: hMisc,
		//line sql.y: 5857
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 5885
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 5886
		Category: hMisc,
		//line sql.y: 5887
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 5895
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 5896
		Category: hPriv,
		//line sql.y: 5897
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 5903
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 5916
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 5917
		Category: hDDL,
		//line sql.y: 5918
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 5919
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 5949
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 5950
		Category: hDDL,
		//line sql.y: 5951
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 5952
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 5965
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 5966
		Category: hMisc,
		//line sql.y: 5967
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 5968
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 5995
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 5996
		Category: hMisc,
		//line sql.y: 5997
		Text: `
SHOW [AUTOMATIC | CHANGEFEED] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW [CHANGEFEED] JOB <jobid>
`,
		//line sql.y: 6001
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6063
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 6064
		Category: hMisc,
		//line sql.y: 6065
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 6068
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6119
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 6120
		Category: hMisc,
		//line sql.y: 6121
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 6123
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 6146
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 6147
		Category: hMisc,
		//line sql.y: 6148
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 6149
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 6162
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 6163
		Category: hDDL,
		//line sql.y: 6164
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 6165
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 6193
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 6194
		Category: hMisc,
		//line sql.y: 6195
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 6212
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 6213
		Category: hDDL,
		//line sql.y: 6214
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 6226
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 6227
		Category: hDDL,
		//line sql.y: 6228
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 6240
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 6241
		Category: hMisc,
		//line sql.y: 6242
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 6280
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 6281
		Category: hCfg,
		//line sql.y: 6282
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 6290
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 6291
		Category: hCfg,
		//line sql.y: 6292
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 6293
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 6312
	`SHOW TRANSFER`: {
		ShortDescription: `display session state for connection migration`,
		//line sql.y: 6313
		Category: hMisc,
		//line sql.y: 6314
		Text: `SHOW TRANSFER STATE [ WITH '<transfer_key>' ]
`,
	},
	//line sql.y: 6326
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence, view, or database`,
		//line sql.y: 6327
		Category: hDDL,
		//line sql.y: 6328
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW | DATABASE ] <object_name>
SHOW CREATE ALL SCHEMAS
SHOW CREATE ALL TABLES
SHOW CREATE ALL TYPES
`,
		//line sql.y: 6333
		SeeAlso: `WEBDOCS/show-create.html
`,
	},
	//line sql.y: 6373
	`SHOW CREATE SCHEDULES`: {
		ShortDescription: `list CREATE statements for scheduled jobs`,
		//line sql.y: 6374
		Category: hDDL,
		//line sql.y: 6375
		Text: `
SHOW CREATE ALL SCHEDULES
SHOW CREATE SCHEDULE <schedule_id>
`,
		//line sql.y: 6378
		SeeAlso: `SHOW SCHEDULES, PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 6391
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 6392
		Category: hPriv,
		//line sql.y: 6393
		Text: `SHOW USERS
`,
		//line sql.y: 6394
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 6402
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 6403
		Category: hPriv,
		//line sql.y: 6404
		Text: `SHOW ROLES
`,
		//line sql.y: 6405
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 6413
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 6414
		Category: hCfg,
		//line sql.y: 6415
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 6418
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 6474
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 6475
		Category: hMisc,
		//line sql.y: 6476
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 6497
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 6498
		Category: hMisc,
		//line sql.y: 6499
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 6518
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 6519
		Category: hDDL,
		//line sql.y: 6520
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 6535
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 6536
		Category: hDDL,
		//line sql.y: 6537
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 6835
	`PAUSE`: {
		//line sql.y: 6836
		Category: hMisc,
		//line sql.y: 6837
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 6848
	`RESUME`: {
		//line sql.y: 6849
		Category: hMisc,
		//line sql.y: 6850
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES, RESUME ALL BACKUP JOBS
`,
	},
	//line sql.y: 6861
	`RESUME ALL JOBS`: {
		//line sql.y: 6862
		Category: hMisc,
		//line sql.y: 6863
		Text: `
RESUME ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 6872
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 6873
		Category: hMisc,
		//line sql.y: 6874
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 6877
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 6926
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 6927
		Category: hMisc,
		//line sql.y: 6928
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 6932
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 6953
	`PAUSE ALL JOBS`: {
		//line sql.y: 6954
		Category: hMisc,
		//line sql.y: 6955
		Text: `
PAUSE ALL {BACKUP|CHANGEFEED|IMPORT|RESTORE} JOBS
`,
	},
	//line sql.y: 6965
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 6966
		Category: hDDL,
		//line sql.y: 6967
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 7000
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 7001
		Category: hDDL,
		//line sql.y: 7002
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 7028
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 7029
		Category: hDDL,
		//line sql.y: 7030
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames...> ) [{STORING | INCLUDE | COVERING} ( <colnames...> )]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr> | ON UPDATE <expr> | GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY [( <opt_sequence_option_list> )]}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) { STORED | VIRTUAL }

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 7057
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 7993
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 7994
		Category: hDDL,
		//line sql.y: 7995
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [AS <typename>]
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 8006
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 8078
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 8079
		Category: hDML,
		//line sql.y: 8080
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 8081
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 8105
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 8106
		Category: hPriv,
		//line sql.y: 8107
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 8108
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8120
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 8121
		Category: hPriv,
		//line sql.y: 8122
		Text: `
ALTER ROLE <name> [WITH] <options...>
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] SET var { TO | = } { value | DEFAULT }
ALTER ROLE { name | ALL } [ IN DATABASE database_name ] RESET { var | ALL }
`,
		//line sql.y: 8126
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 8195
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 8196
		Category: hDDL,
		//line sql.y: 8197
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 8198
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 8410
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 8411
		Category: hDDL,
		//line sql.y: 8412
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 8464
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 8465
		Category: hDDL,
		//line sql.y: 8466
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

`,
		//line sql.y: 8473
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 8972
	`ALTER DEFAULT PRIVILEGES`: {
		ShortDescription: `alter default privileges on an object`,
		//line sql.y: 8973
		Category: hDDL,
		//line sql.y: 8974
		Text: `

Commands:
  ALTER DEFAULT PRIVILEGES [ FOR { ROLE | USER } target_roles... ] [ IN SCHEMA schema_name...] abbreviated_grant_or_revoke
`,
	},
	//line sql.y: 9110
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 9111
		Category: hTxn,
		//line sql.y: 9112
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9113
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9121
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 9122
		Category: hMisc,
		//line sql.y: 9123
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 9126
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 9148
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 9149
		Category: hMisc,
		//line sql.y: 9150
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 9156
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 9177
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 9178
		Category: hMisc,
		//line sql.y: 9179
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 9185
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 9206
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 9207
		Category: hTxn,
		//line sql.y: 9208
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 9209
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 9224
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 9225
		Category: hTxn,
		//line sql.y: 9226
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 9234
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 9247
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 9248
		Category: hTxn,
		//line sql.y: 9249
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 9252
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 9276
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 9277
		Category: hTxn,
		//line sql.y: 9278
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 9281
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 9395
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 9396
		Category: hDDL,
		//line sql.y: 9397
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 9398
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 9575
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 9576
		Category: hDML,
		//line sql.y: 9577
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 9585
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 9604
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 9605
		Category: hDML,
		//line sql.y: 9606
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 9610
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 9740
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 9741
		Category: hDML,
		//line sql.y: 9742
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 9749
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 9805
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 9806
		Category: hPriv,
		//line sql.y: 9807
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 9809
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 9820
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 9821
		Category: hPriv,
		//line sql.y: 9822
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 9824
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 10004
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 10005
		Category: hDML,
		//line sql.y: 10006
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 10017
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 10018
		Category: hDML,
		//line sql.y: 10019
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 10031
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 10106
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 10107
		Category: hDML,
		//line sql.y: 10108
		Text: `TABLE <tablename>
`,
		//line sql.y: 10109
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 10471
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 10472
		Category: hDML,
		//line sql.y: 10473
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 10474
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 10609
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 10610
		Category: hDML,
		//line sql.y: 10611
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' NO_ZIGZAG_JOIN [, ...] '}'
  '{' NO_FULL_SCAN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'
  '{' FORCE_ZIGZAG = <idxname> [, ...]  '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 10636
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
