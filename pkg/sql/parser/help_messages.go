// Code generated by help.awk. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT

package parser

var helpMessages = map[string]HelpMessageBody{
	//line sql.y: 1336
	`ALTER`: {
		//line sql.y: 1337
		Category: hGroup,
		//line sql.y: 1338
		Text: `ALTER TABLE, ALTER INDEX, ALTER VIEW, ALTER SEQUENCE, ALTER DATABASE, ALTER USER, ALTER ROLE
`,
	},
	//line sql.y: 1356
	`ALTER TABLE`: {
		ShortDescription: `change the definition of a table`,
		//line sql.y: 1357
		Category: hDDL,
		//line sql.y: 1358
		Text: `
ALTER TABLE [IF EXISTS] <tablename> <command> [, ...]

Commands:
  ALTER TABLE ... ADD [COLUMN] [IF NOT EXISTS] <colname> <type> [<qualifiers...>]
  ALTER TABLE ... ADD <constraint>
  ALTER TABLE ... DROP [COLUMN] [IF EXISTS] <colname> [RESTRICT | CASCADE]
  ALTER TABLE ... DROP CONSTRAINT [IF EXISTS] <constraintname> [RESTRICT | CASCADE]
  ALTER TABLE ... ALTER [COLUMN] <colname> {SET DEFAULT <expr> | DROP DEFAULT}
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP NOT NULL
  ALTER TABLE ... ALTER [COLUMN] <colname> DROP STORED
  ALTER TABLE ... ALTER [COLUMN] <colname> [SET DATA] TYPE <type> [COLLATE <collation>]
  ALTER TABLE ... ALTER PRIMARY KEY USING INDEX <name>
  ALTER TABLE ... RENAME TO <newname>
  ALTER TABLE ... RENAME [COLUMN] <colname> TO <newname>
  ALTER TABLE ... VALIDATE CONSTRAINT <constraintname>
  ALTER TABLE ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER TABLE ... UNSPLIT AT <selectclause>
  ALTER TABLE ... UNSPLIT ALL
  ALTER TABLE ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]
  ALTER TABLE ... INJECT STATISTICS ...  (experimental)
  ALTER TABLE ... PARTITION BY RANGE ( <name...> ) ( <rangespec> )
  ALTER TABLE ... PARTITION BY LIST ( <name...> ) ( <listspec> )
  ALTER TABLE ... PARTITION BY NOTHING
  ALTER TABLE ... CONFIGURE ZONE <zoneconfig>
  ALTER TABLE ... SET SCHEMA <newschemaname>
  ALTER TABLE ... SET LOCALITY [REGIONAL BY [TABLE IN <region> | ROW] | GLOBAL]

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )]
  COLLATE <collationname>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1398
		SeeAlso: `WEBDOCS/alter-table.html
`,
	},
	//line sql.y: 1415
	`ALTER PARTITION`: {
		ShortDescription: `apply zone configurations to a partition`,
		//line sql.y: 1416
		Category: hDDL,
		//line sql.y: 1417
		Text: `
ALTER PARTITION <name> <command>

Commands:
  -- Alter a single partition which exists on any of a table's indexes.
  ALTER PARTITION <partition> OF TABLE <tablename> CONFIGURE ZONE <zoneconfig>

  -- Alter a partition of a specific index.
  ALTER PARTITION <partition> OF INDEX <tablename>@<indexname> CONFIGURE ZONE <zoneconfig>

  -- Alter all partitions with the same name across a table's indexes.
  ALTER PARTITION <partition> OF INDEX <tablename>@* CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1436
		SeeAlso: `WEBDOCS/configure-zone.html
`,
	},
	//line sql.y: 1441
	`ALTER VIEW`: {
		ShortDescription: `change the definition of a view`,
		//line sql.y: 1442
		Category: hDDL,
		//line sql.y: 1443
		Text: `
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> RENAME TO <newname>
ALTER [MATERIALIZED] VIEW [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
		//line sql.y: 1446
		SeeAlso: `WEBDOCS/alter-view.html
`,
	},
	//line sql.y: 1455
	`ALTER SEQUENCE`: {
		ShortDescription: `change the definition of a sequence`,
		//line sql.y: 1456
		Category: hDDL,
		//line sql.y: 1457
		Text: `
ALTER SEQUENCE [IF EXISTS] <name>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START <start>]
  [[NO] CYCLE]
ALTER SEQUENCE [IF EXISTS] <name> RENAME TO <newname>
ALTER SEQUENCE [IF EXISTS] <name> SET SCHEMA <newschemaname>
`,
	},
	//line sql.y: 1483
	`ALTER DATABASE`: {
		ShortDescription: `change the definition of a database`,
		//line sql.y: 1484
		Category: hDDL,
		//line sql.y: 1485
		Text: `
ALTER DATABASE <name> RENAME TO <newname>
ALTER DATABASE <name> OWNER TO <newowner>
ALTER DATABASE <name> CONVERT TO SCHEMA WITH PARENT <name>
ALTER DATABASE <name> ADD REGIONS <regions>
ALTER DATABASE <name> DROP REGIONS <regions>
ALTER DATABASE <name> PRIMARY REGION <region>
ALTER DATABASE <name> SURVIVE <failure type>
`,
		//line sql.y: 1493
		SeeAlso: `WEBDOCS/alter-database.html
`,
	},
	//line sql.y: 1557
	`ALTER RANGE`: {
		ShortDescription: `change the parameters of a range`,
		//line sql.y: 1558
		Category: hDDL,
		//line sql.y: 1559
		Text: `
ALTER RANGE <zonename> <command>

Commands:
  ALTER RANGE ... CONFIGURE ZONE <zoneconfig>

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1571
		SeeAlso: `ALTER TABLE
`,
	},
	//line sql.y: 1576
	`ALTER INDEX`: {
		ShortDescription: `change the definition of an index`,
		//line sql.y: 1577
		Category: hDDL,
		//line sql.y: 1578
		Text: `
ALTER INDEX [IF EXISTS] <idxname> <command>

Commands:
  ALTER INDEX ... RENAME TO <newname>
  ALTER INDEX ... SPLIT AT <selectclause> [WITH EXPIRATION <expr>]
  ALTER INDEX ... UNSPLIT AT <selectclause>
  ALTER INDEX ... UNSPLIT ALL
  ALTER INDEX ... SCATTER [ FROM ( <exprs...> ) TO ( <exprs...> ) ]

Zone configurations:
  DISCARD
  USING <var> = <expr> [, ...]
  USING <var> = COPY FROM PARENT [, ...]
  { TO | = } <expr>

`,
		//line sql.y: 1594
		SeeAlso: `WEBDOCS/alter-index.html
`,
	},
	//line sql.y: 2146
	`ALTER TYPE`: {
		ShortDescription: `change the definition of a type.`,
		//line sql.y: 2147
		Category: hDDL,
		//line sql.y: 2148
		Text: `ALTER TYPE <typename> <command>

Commands:
  ALTER TYPE ... ADD VALUE [IF NOT EXISTS] <value> [ { BEFORE | AFTER } <value> ]
  ALTER TYPE ... RENAME VALUE <oldname> TO <newname>
  ALTER TYPE ... RENAME TO <newname>
  ALTER TYPE ... SET SCHEMA <newschemaname>
  ALTER TYPE ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
  ALTER TYPE ... RENAME ATTRIBUTE <oldname> TO <newname> [ CASCADE | RESTRICT ]
  ALTER TYPE ... <attributeaction> [, ... ]

Attribute action:
  ADD ATTRIBUTE <name> <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]
  DROP ATTRIBUTE [IF EXISTS] <name> [ CASCADE | RESTRICT ]
  ALTER ATTRIBUTE <name> [ SET DATA ] TYPE <type> [ COLLATE <collation> ] [ CASCADE | RESTRICT ]

`,
		//line sql.y: 2164
		SeeAlso: `WEBDOCS/alter-type.html
`,
	},
	//line sql.y: 2315
	`REFRESH`: {
		ShortDescription: `recalculate a materialized view`,
		//line sql.y: 2316
		Category: hMisc,
		//line sql.y: 2317
		Text: `
REFRESH MATERIALIZED VIEW [CONCURRENTLY] view_name [WITH [NO] DATA]
`,
	},
	//line sql.y: 2344
	`BACKUP`: {
		ShortDescription: `back up data to external storage`,
		//line sql.y: 2345
		Category: hCCL,
		//line sql.y: 2346
		Text: `
BACKUP <targets...> TO <location...>
       [ AS OF SYSTEM TIME <expr> ]
       [ INCREMENTAL FROM <location...> ]
       [ WITH <option> [= <value>] [, ...] ]

Targets:
   Empty targets list: backup full cluster.
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Location:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   revision_history: enable revision history
   encryption_passphrase="secret": encrypt backups
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : encrypt backups using KMS
   detached: execute backup job asynchronously, without waiting for its completion
   include_deprecated_interleaves: allow backing up interleaved tables, even if future versions will be unable to restore.

`,
		//line sql.y: 2367
		SeeAlso: `RESTORE, WEBDOCS/backup.html
`,
	},
	//line sql.y: 2477
	`CREATE SCHEDULE FOR BACKUP`: {
		ShortDescription: `backup data periodically`,
		//line sql.y: 2478
		Category: hCCL,
		//line sql.y: 2479
		Text: `
CREATE SCHEDULE [<description>]
FOR BACKUP [<targets>] INTO <location...>
[WITH <backup_option>[=<value>] [, ...]]
RECURRING [crontab|NEVER] [FULL BACKUP <crontab|ALWAYS>]
[WITH EXPERIMENTAL SCHEDULE OPTIONS <schedule_option>[= <value>] [, ...] ]

All backups run in UTC timezone.

Description:
  Optional description (or name) for this schedule

Targets:
  empty targets: Backup entire cluster
  DATABASE <pattern> [, ...]: comma separated list of databases to backup.
  TABLE <pattern> [, ...]: comma separated list of tables to backup.

Location:
  "[scheme]://[host]/[path prefix to backup]?[parameters]"
  Backup schedule will create subdirectories under this location to store
  full and periodic backups.

WITH <options>:
  Options specific to BACKUP: See BACKUP options

RECURRING <crontab>:
  The RECURRING expression specifies when we backup.  By default these are incremental
  backups that capture changes since the last backup, writing to the "current" backup.

  Schedule specified as a string in crontab format.
  All times in UTC.
    "5 0 * * *": run schedule 5 minutes past midnight.
    "@daily": run daily, at midnight
  See https://en.wikipedia.org/wiki/Cron

FULL BACKUP <crontab|ALWAYS>:
  The optional FULL BACKUP '<cron expr>' clause specifies when we'll start a new full backup,
  which becomes the "current" backup when complete.
  If FULL BACKUP ALWAYS is specified, then the backups triggered by the RECURRING clause will
  always be full backups. For free users, this is the only accepted value of FULL BACKUP.

  If the FULL BACKUP clause is omitted, we will select a reasonable default:
     * RECURRING <= 1 hour: we default to FULL BACKUP '@daily';
     * RECURRING <= 1 day:  we default to FULL BACKUP '@weekly';
     * Otherwise: we default to FULL BACKUP ALWAYS.

 SCHEDULE OPTIONS:
  The schedule can be modified by specifying the following options (which are considered
  to be experimental at this time):
  * first_run=TIMESTAMPTZ:
    execute the schedule at the specified time. If not specified, the default is to execute
    the scheduled based on it's next RECURRING time.
  * on_execution_failure='[retry|reschedule|pause]':
    If an error occurs during the execution, handle the error based as:
    * retry: retry execution right away
    * reschedule: retry execution by rescheduling it based on its RECURRING expression.
      This is the default.
    * pause: pause this schedule.  Requires manual intervention to unpause.
  * on_previous_running='[start|skip|wait]':
    If the previous backup started by this schedule still running, handle this as:
    * start: start this execution anyway, even if the previous one still running.
    * skip: skip this execution, reschedule it based on RECURRING (or change_capture_period)
      expression.
    * wait: wait for the previous execution to complete.  This is the default.
  * ignore_existing_backups
    If backups were already created in the destination in which a new schedule references,
    this flag must be passed in to acknowledge that the new schedule may be backing up different
    objects.

`,
		//line sql.y: 2548
		SeeAlso: `BACKUP
`,
	},
	//line sql.y: 2626
	`RESTORE`: {
		ShortDescription: `restore data from external storage`,
		//line sql.y: 2627
		Category: hCCL,
		//line sql.y: 2628
		Text: `
RESTORE <targets...> FROM <location...>
        [ AS OF SYSTEM TIME <expr> ]
        [ WITH <option> [= <value>] [, ...] ]

Targets:
   TABLE <pattern> [, ...]
   DATABASE <databasename> [, ...]

Locations:
   "[scheme]://[host]/[path to backup]?[parameters]"

Options:
   into_db: specify target database
   skip_missing_foreign_keys: remove foreign key constraints before restoring
   skip_missing_sequences: ignore sequence dependencies
   skip_missing_views: skip restoring views because of dependencies that cannot be restored
   skip_missing_sequence_owners: remove sequence-table ownership dependencies before restoring
   encryption_passphrase=passphrase: decrypt BACKUP with specified passphrase
   kms="[kms_provider]://[kms_host]/[master_key_identifier]?[parameters]" : decrypt backups using KMS
   detached: execute restore job asynchronously, without waiting for its completion
`,
		//line sql.y: 2649
		SeeAlso: `BACKUP, WEBDOCS/restore.html
`,
	},
	//line sql.y: 2807
	`IMPORT`: {
		ShortDescription: `load data from file in a distributed manner`,
		//line sql.y: 2808
		Category: hCCL,
		//line sql.y: 2809
		Text: `
-- Import both schema and table data:
IMPORT [ TABLE <tablename> FROM ]
       <format> <datafile>
       [ WITH <option> [= <value>] [, ...] ]

-- Import using specific schema, use only table data from external file:
IMPORT TABLE <tablename>
       { ( <elements> ) | CREATE USING <schemafile> }
       <format>
       DATA ( <datafile> [, ...] )
       [ WITH <option> [= <value>] [, ...] ]

Formats:
   CSV
   DELIMITED
   MYSQLDUMP
   PGCOPY
   PGDUMP

Options:
   distributed = '...'
   sstsize = '...'
   temp = '...'
   delimiter = '...'      [CSV, PGCOPY-specific]
   nullif = '...'         [CSV, PGCOPY-specific]
   comment = '...'        [CSV-specific]

`,
		//line sql.y: 2837
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 2881
	`EXPORT`: {
		ShortDescription: `export data to file in a distributed manner`,
		//line sql.y: 2882
		Category: hCCL,
		//line sql.y: 2883
		Text: `
EXPORT INTO <format> <datafile> [WITH <option> [= value] [,...]] FROM <query>

Formats:
   CSV

Options:
   delimiter = '...'   [CSV-specific]

`,
		//line sql.y: 2892
		SeeAlso: `SELECT
`,
	},
	//line sql.y: 3044
	`CANCEL`: {
		//line sql.y: 3045
		Category: hGroup,
		//line sql.y: 3046
		Text: `CANCEL JOBS, CANCEL QUERIES, CANCEL SESSIONS
`,
	},
	//line sql.y: 3053
	`CANCEL JOBS`: {
		ShortDescription: `cancel background jobs`,
		//line sql.y: 3054
		Category: hMisc,
		//line sql.y: 3055
		Text: `
CANCEL JOBS <selectclause>
CANCEL JOB <jobid>
`,
		//line sql.y: 3058
		SeeAlso: `SHOW JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 3080
	`CANCEL QUERIES`: {
		ShortDescription: `cancel running queries`,
		//line sql.y: 3081
		Category: hMisc,
		//line sql.y: 3082
		Text: `
CANCEL QUERIES [IF EXISTS] <selectclause>
CANCEL QUERY [IF EXISTS] <expr>
`,
		//line sql.y: 3085
		SeeAlso: `SHOW STATEMENTS
`,
	},
	//line sql.y: 3116
	`CANCEL SESSIONS`: {
		ShortDescription: `cancel open sessions`,
		//line sql.y: 3117
		Category: hMisc,
		//line sql.y: 3118
		Text: `
CANCEL SESSIONS [IF EXISTS] <selectclause>
CANCEL SESSION [IF EXISTS] <sessionid>
`,
		//line sql.y: 3121
		SeeAlso: `SHOW SESSIONS
`,
	},
	//line sql.y: 3192
	`CREATE`: {
		//line sql.y: 3193
		Category: hGroup,
		//line sql.y: 3194
		Text: `
CREATE DATABASE, CREATE TABLE, CREATE INDEX, CREATE TABLE AS,
CREATE USER, CREATE VIEW, CREATE SEQUENCE, CREATE STATISTICS,
CREATE ROLE, CREATE TYPE, CREATE EXTENSION
`,
	},
	//line sql.y: 3209
	`CREATE EXTENSION`: {
		//line sql.y: 3210
		Category: hCfg,
		//line sql.y: 3211
		Text: `CREATE EXTENSION [IF NOT EXISTS] name
`,
	},
	//line sql.y: 3289
	`CREATE STATISTICS`: {
		ShortDescription: `create a new table statistic`,
		//line sql.y: 3290
		Category: hMisc,
		//line sql.y: 3291
		Text: `
CREATE STATISTICS <statisticname>
  [ON <colname> [, ...]]
  FROM <tablename> [AS OF SYSTEM TIME <expr>]
`,
	},
	//line sql.y: 3384
	`CREATE CHANGEFEED`: {
		ShortDescription: `create change data capture`,
		//line sql.y: 3385
		Category: hCCL,
		//line sql.y: 3386
		Text: `
CREATE CHANGEFEED
FOR <targets> [INTO sink] [WITH <options>]

Sink: Data caputre stream stream destination.  Enterprise only.
`,
	},
	//line sql.y: 3441
	`CREATE REPLICATION STREAM`: {
		ShortDescription: `continuously replicate data`,
		//line sql.y: 3442
		Category: hCCL,
		//line sql.y: 3443
		Text: `
CREATE REPLICATION STREAM FOR <targets> [INTO <sink>] [WITH <options>]

Sink: Replication stream destination.
WITH <options>:
  Options specific to REPLICATION STREAM: See CHANGEFEED options

`,
		//line sql.y: 3450
		SeeAlso: `CREATE CHANGEFEED
`,
	},
	//line sql.y: 3500
	`DELETE`: {
		ShortDescription: `delete rows from a table`,
		//line sql.y: 3501
		Category: hDML,
		//line sql.y: 3502
		Text: `DELETE FROM <tablename> [WHERE <expr>]
              [ORDER BY <exprs...>]
              [LIMIT <expr>]
              [RETURNING <exprs...>]
`,
		//line sql.y: 3506
		SeeAlso: `WEBDOCS/delete.html
`,
	},
	//line sql.y: 3526
	`DISCARD`: {
		ShortDescription: `reset the session to its initial state`,
		//line sql.y: 3527
		Category: hCfg,
		//line sql.y: 3528
		Text: `DISCARD ALL
`,
	},
	//line sql.y: 3540
	`DROP`: {
		//line sql.y: 3541
		Category: hGroup,
		//line sql.y: 3542
		Text: `
DROP DATABASE, DROP INDEX, DROP TABLE, DROP VIEW, DROP SEQUENCE,
DROP USER, DROP ROLE, DROP TYPE
`,
	},
	//line sql.y: 3561
	`DROP VIEW`: {
		ShortDescription: `remove a view`,
		//line sql.y: 3562
		Category: hDDL,
		//line sql.y: 3563
		Text: `DROP [MATERIALIZED] VIEW [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3564
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3594
	`DROP SEQUENCE`: {
		ShortDescription: `remove a sequence`,
		//line sql.y: 3595
		Category: hDDL,
		//line sql.y: 3596
		Text: `DROP SEQUENCE [IF EXISTS] <sequenceName> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3597
		SeeAlso: `DROP
`,
	},
	//line sql.y: 3609
	`DROP TABLE`: {
		ShortDescription: `remove a table`,
		//line sql.y: 3610
		Category: hDDL,
		//line sql.y: 3611
		Text: `DROP TABLE [IF EXISTS] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3612
		SeeAlso: `WEBDOCS/drop-table.html
`,
	},
	//line sql.y: 3624
	`DROP INDEX`: {
		ShortDescription: `remove an index`,
		//line sql.y: 3625
		Category: hDDL,
		//line sql.y: 3626
		Text: `DROP INDEX [CONCURRENTLY] [IF EXISTS] <idxname> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 3627
		SeeAlso: `WEBDOCS/drop-index.html
`,
	},
	//line sql.y: 3649
	`DROP DATABASE`: {
		ShortDescription: `remove a database`,
		//line sql.y: 3650
		Category: hDDL,
		//line sql.y: 3651
		Text: `DROP DATABASE [IF EXISTS] <databasename> [CASCADE | RESTRICT]
`,
		//line sql.y: 3652
		SeeAlso: `WEBDOCS/drop-database.html
`,
	},
	//line sql.y: 3672
	`DROP TYPE`: {
		ShortDescription: `remove a type`,
		//line sql.y: 3673
		Category: hDDL,
		//line sql.y: 3674
		Text: `DROP TYPE [IF EXISTS] <type_name> [, ...] [CASCASE | RESTRICT]
`,
	},
	//line sql.y: 3710
	`DROP SCHEMA`: {
		ShortDescription: `remove a schema`,
		//line sql.y: 3711
		Category: hDDL,
		//line sql.y: 3712
		Text: `DROP SCHEMA [IF EXISTS] <schema_name> [, ...] [CASCADE | RESTRICT]
`,
	},
	//line sql.y: 3732
	`DROP ROLE`: {
		ShortDescription: `remove a user`,
		//line sql.y: 3733
		Category: hPriv,
		//line sql.y: 3734
		Text: `DROP ROLE [IF EXISTS] <user> [, ...]
`,
		//line sql.y: 3735
		SeeAlso: `CREATE ROLE, SHOW ROLE
`,
	},
	//line sql.y: 3759
	`ANALYZE`: {
		ShortDescription: `collect table statistics`,
		//line sql.y: 3760
		Category: hMisc,
		//line sql.y: 3761
		Text: `
ANALYZE <tablename>

`,
		//line sql.y: 3764
		SeeAlso: `CREATE STATISTICS
`,
	},
	//line sql.y: 3787
	`EXPLAIN`: {
		ShortDescription: `show the logical plan of a query`,
		//line sql.y: 3788
		Category: hMisc,
		//line sql.y: 3789
		Text: `
EXPLAIN <statement>
EXPLAIN ([PLAN ,] <planoptions...> ) <statement>
EXPLAIN (DISTSQL) <statement>
EXPLAIN ANALYZE [(DISTSQL)] <statement>
EXPLAIN ANALYZE (PLAN <planoptions...>) <statement>

Explainable statements:
    SELECT, CREATE, DROP, ALTER, INSERT, UPSERT, UPDATE, DELETE,
    SHOW, EXPLAIN

Plan options:
    TYPES, VERBOSE, OPT

`,
		//line sql.y: 3803
		SeeAlso: `WEBDOCS/explain.html
`,
	},
	//line sql.y: 3914
	`PREPARE`: {
		ShortDescription: `prepare a statement for later execution`,
		//line sql.y: 3915
		Category: hMisc,
		//line sql.y: 3916
		Text: `PREPARE <name> [ ( <types...> ) ] AS <query>
`,
		//line sql.y: 3917
		SeeAlso: `EXECUTE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3948
	`EXECUTE`: {
		ShortDescription: `execute a statement prepared previously`,
		//line sql.y: 3949
		Category: hMisc,
		//line sql.y: 3950
		Text: `EXECUTE <name> [ ( <exprs...> ) ]
`,
		//line sql.y: 3951
		SeeAlso: `PREPARE, DEALLOCATE, DISCARD
`,
	},
	//line sql.y: 3981
	`DEALLOCATE`: {
		ShortDescription: `remove a prepared statement`,
		//line sql.y: 3982
		Category: hMisc,
		//line sql.y: 3983
		Text: `DEALLOCATE [PREPARE] { <name> | ALL }
`,
		//line sql.y: 3984
		SeeAlso: `PREPARE, EXECUTE, DISCARD
`,
	},
	//line sql.y: 4004
	`GRANT`: {
		ShortDescription: `define access privileges and role memberships`,
		//line sql.y: 4005
		Category: hPriv,
		//line sql.y: 4006
		Text: `
Grant privileges:
  GRANT {ALL [PRIVILEGES] | <privileges...> } ON <targets...> TO <grantees...>
Grant role membership:
  GRANT <roles...> TO <grantees...> [WITH ADMIN OPTION]

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, ...]
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname>]...

`,
		//line sql.y: 4021
		SeeAlso: `REVOKE, WEBDOCS/grant.html
`,
	},
	//line sql.y: 4059
	`REVOKE`: {
		ShortDescription: `remove access privileges and role memberships`,
		//line sql.y: 4060
		Category: hPriv,
		//line sql.y: 4061
		Text: `
Revoke privileges:
  REVOKE {ALL | <privileges...> } ON <targets...> FROM <grantees...>
Revoke role membership:
  REVOKE [ADMIN OPTION FOR] <roles...> FROM <grantees...>

Privileges:
  CREATE, DROP, GRANT, SELECT, INSERT, DELETE, UPDATE, USAGE

Targets:
  DATABASE <databasename> [, <databasename>]...
  [TABLE] [<databasename> .] { <tablename> | * } [, ...]
  TYPE <typename> [, <typename>]...
  SCHEMA [<databasename> .]<schemaname> [, [<databasename> .]<schemaname]...

`,
		//line sql.y: 4076
		SeeAlso: `GRANT, WEBDOCS/revoke.html
`,
	},
	//line sql.y: 4148
	`RESET`: {
		ShortDescription: `reset a session variable to its default value`,
		//line sql.y: 4149
		Category: hCfg,
		//line sql.y: 4150
		Text: `RESET [SESSION] <var>
`,
		//line sql.y: 4151
		SeeAlso: `RESET CLUSTER SETTING, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4163
	`RESET CLUSTER SETTING`: {
		ShortDescription: `reset a cluster setting to its default value`,
		//line sql.y: 4164
		Category: hCfg,
		//line sql.y: 4165
		Text: `RESET CLUSTER SETTING <var>
`,
		//line sql.y: 4166
		SeeAlso: `SET CLUSTER SETTING, RESET
`,
	},
	//line sql.y: 4175
	`USE`: {
		ShortDescription: `set the current database`,
		//line sql.y: 4176
		Category: hCfg,
		//line sql.y: 4177
		Text: `USE <dbname>

"USE <dbname>" is an alias for "SET [SESSION] database = <dbname>".
`,
		//line sql.y: 4180
		SeeAlso: `SET SESSION, WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4201
	`SCRUB`: {
		ShortDescription: `run checks against databases or tables`,
		//line sql.y: 4202
		Category: hExperimental,
		//line sql.y: 4203
		Text: `
EXPERIMENTAL SCRUB TABLE <table> ...
EXPERIMENTAL SCRUB DATABASE <database>

The various checks that ca be run with SCRUB includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4211
		SeeAlso: `SCRUB TABLE, SCRUB DATABASE
`,
	},
	//line sql.y: 4217
	`SCRUB DATABASE`: {
		ShortDescription: `run scrub checks on a database`,
		//line sql.y: 4218
		Category: hExperimental,
		//line sql.y: 4219
		Text: `
EXPERIMENTAL SCRUB DATABASE <database>
                            [AS OF SYSTEM TIME <expr>]

All scrub checks will be run on the database. This includes:
  - Physical table data (encoding)
  - Secondary index integrity
  - Constraint integrity (NOT NULL, CHECK, FOREIGN KEY, UNIQUE)
`,
		//line sql.y: 4227
		SeeAlso: `SCRUB TABLE, SCRUB
`,
	},
	//line sql.y: 4235
	`SCRUB TABLE`: {
		ShortDescription: `run scrub checks on a table`,
		//line sql.y: 4236
		Category: hExperimental,
		//line sql.y: 4237
		Text: `
SCRUB TABLE <tablename>
            [AS OF SYSTEM TIME <expr>]
            [WITH OPTIONS <option> [, ...]]

Options:
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS INDEX (<index>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT ALL
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS CONSTRAINT (<constraint>...)
  EXPERIMENTAL SCRUB TABLE ... WITH OPTIONS PHYSICAL
`,
		//line sql.y: 4248
		SeeAlso: `SCRUB DATABASE, SRUB
`,
	},
	//line sql.y: 4303
	`SET CLUSTER SETTING`: {
		ShortDescription: `change a cluster setting`,
		//line sql.y: 4304
		Category: hCfg,
		//line sql.y: 4305
		Text: `SET CLUSTER SETTING <var> { TO | = } <value>
`,
		//line sql.y: 4306
		SeeAlso: `SHOW CLUSTER SETTING, RESET CLUSTER SETTING, SET SESSION,
WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4327
	`SET SESSION`: {
		ShortDescription: `change a session variable`,
		//line sql.y: 4328
		Category: hCfg,
		//line sql.y: 4329
		Text: `
SET [SESSION] <var> { TO | = } <values...>
SET [SESSION] TIME ZONE <tz>
SET [SESSION] CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
SET [SESSION] TRACING { TO | = } { on | off | cluster | kv | results } [,...]

`,
		//line sql.y: 4335
		SeeAlso: `SHOW SESSION, RESET, DISCARD, SHOW, SET CLUSTER SETTING, SET TRANSACTION,
WEBDOCS/set-vars.html
`,
	},
	//line sql.y: 4352
	`SET TRANSACTION`: {
		ShortDescription: `configure the transaction settings`,
		//line sql.y: 4353
		Category: hTxn,
		//line sql.y: 4354
		Text: `
SET [SESSION] TRANSACTION <txnparameters...>

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }
   AS OF SYSTEM TIME <expr>
   [NOT] DEFERRABLE

`,
		//line sql.y: 4363
		SeeAlso: `SHOW TRANSACTION, SET SESSION,
WEBDOCS/set-transaction.html
`,
	},
	//line sql.y: 4555
	`SHOW`: {
		//line sql.y: 4556
		Category: hGroup,
		//line sql.y: 4557
		Text: `
SHOW BACKUP, SHOW CLUSTER SETTING, SHOW COLUMNS, SHOW CONSTRAINTS,
SHOW CREATE, SHOW DATABASES, SHOW ENUMS, SHOW HISTOGRAM, SHOW INDEXES, SHOW
PARTITIONS, SHOW JOBS, SHOW STATEMENTS, SHOW RANGE, SHOW RANGES, SHOW REGIONS, SHOW SURVIVAL GOAL,
SHOW ROLES, SHOW SCHEMAS, SHOW SEQUENCES, SHOW SESSION, SHOW SESSIONS,
SHOW STATISTICS, SHOW SYNTAX, SHOW TABLES, SHOW TRACE, SHOW TRANSACTION,
SHOW TRANSACTIONS, SHOW TYPES, SHOW USERS, SHOW LAST QUERY STATISTICS, SHOW SCHEDULES,
SHOW LOCALITY, SHOW ZONE CONFIGURATION, SHOW FULL TABLE SCANS
`,
	},
	//line sql.y: 4641
	`SHOW SESSION`: {
		ShortDescription: `display session variables`,
		//line sql.y: 4642
		Category: hCfg,
		//line sql.y: 4643
		Text: `SHOW [SESSION] { <var> | ALL }
`,
		//line sql.y: 4644
		SeeAlso: `WEBDOCS/show-vars.html
`,
	},
	//line sql.y: 4665
	`SHOW STATISTICS`: {
		ShortDescription: `display table statistics (experimental)`,
		//line sql.y: 4666
		Category: hExperimental,
		//line sql.y: 4667
		Text: `SHOW STATISTICS [USING JSON] FOR TABLE <table_name>

Returns the available statistics for a table.
The statistics can include a histogram ID, which can
be used with SHOW HISTOGRAM.
If USING JSON is specified, the statistics and histograms
are encoded in JSON format.
`,
		//line sql.y: 4674
		SeeAlso: `SHOW HISTOGRAM
`,
	},
	//line sql.y: 4687
	`SHOW HISTOGRAM`: {
		ShortDescription: `display histogram (experimental)`,
		//line sql.y: 4688
		Category: hExperimental,
		//line sql.y: 4689
		Text: `SHOW HISTOGRAM <histogram_id>

Returns the data in the histogram with the
given ID (as returned by SHOW STATISTICS).
`,
		//line sql.y: 4693
		SeeAlso: `SHOW STATISTICS
`,
	},
	//line sql.y: 4706
	`SHOW BACKUP`: {
		ShortDescription: `list backup contents`,
		//line sql.y: 4707
		Category: hCCL,
		//line sql.y: 4708
		Text: `SHOW BACKUP [SCHEMAS|FILES|RANGES] <location>
`,
		//line sql.y: 4709
		SeeAlso: `WEBDOCS/show-backup.html
`,
	},
	//line sql.y: 4763
	`SHOW CLUSTER SETTING`: {
		ShortDescription: `display cluster settings`,
		//line sql.y: 4764
		Category: hCfg,
		//line sql.y: 4765
		Text: `
SHOW CLUSTER SETTING <var>
SHOW [ PUBLIC | ALL ] CLUSTER SETTINGS
`,
		//line sql.y: 4768
		SeeAlso: `WEBDOCS/cluster-settings.html
`,
	},
	//line sql.y: 4794
	`SHOW COLUMNS`: {
		ShortDescription: `list columns in relation`,
		//line sql.y: 4795
		Category: hDDL,
		//line sql.y: 4796
		Text: `SHOW COLUMNS FROM <tablename>
`,
		//line sql.y: 4797
		SeeAlso: `WEBDOCS/show-columns.html
`,
	},
	//line sql.y: 4805
	`SHOW PARTITIONS`: {
		ShortDescription: `list partition information`,
		//line sql.y: 4806
		Category: hDDL,
		//line sql.y: 4807
		Text: `SHOW PARTITIONS FROM { TABLE <table> | INDEX <index> | DATABASE <database> }
`,
		//line sql.y: 4808
		SeeAlso: `WEBDOCS/show-partitions.html
`,
	},
	//line sql.y: 4828
	`SHOW DATABASES`: {
		ShortDescription: `list databases`,
		//line sql.y: 4829
		Category: hDDL,
		//line sql.y: 4830
		Text: `SHOW DATABASES
`,
		//line sql.y: 4831
		SeeAlso: `WEBDOCS/show-databases.html
`,
	},
	//line sql.y: 4839
	`SHOW ENUMS`: {
		ShortDescription: `list enums`,
		//line sql.y: 4840
		Category: hMisc,
		//line sql.y: 4841
		Text: `SHOW ENUMS
`,
	},
	//line sql.y: 4869
	`SHOW TYPES`: {
		ShortDescription: `list user defined types`,
		//line sql.y: 4870
		Category: hMisc,
		//line sql.y: 4871
		Text: `SHOW TYPES
`,
	},
	//line sql.y: 4879
	`SHOW GRANTS`: {
		ShortDescription: `list grants`,
		//line sql.y: 4880
		Category: hPriv,
		//line sql.y: 4881
		Text: `
Show privilege grants:
  SHOW GRANTS [ON <targets...>] [FOR <users...>]
Show role grants:
  SHOW GRANTS ON ROLE [<roles...>] [FOR <grantees...>]

`,
		//line sql.y: 4887
		SeeAlso: `WEBDOCS/show-grants.html
`,
	},
	//line sql.y: 4900
	`SHOW INDEXES`: {
		ShortDescription: `list indexes`,
		//line sql.y: 4901
		Category: hDDL,
		//line sql.y: 4902
		Text: `SHOW INDEXES FROM { <tablename> | DATABASE <database_name> } [WITH COMMENT]
`,
		//line sql.y: 4903
		SeeAlso: `WEBDOCS/show-index.html
`,
	},
	//line sql.y: 4933
	`SHOW CONSTRAINTS`: {
		ShortDescription: `list constraints`,
		//line sql.y: 4934
		Category: hDDL,
		//line sql.y: 4935
		Text: `SHOW CONSTRAINTS FROM <tablename>
`,
		//line sql.y: 4936
		SeeAlso: `WEBDOCS/show-constraints.html
`,
	},
	//line sql.y: 4949
	`SHOW STATEMENTS`: {
		ShortDescription: `list running statements`,
		//line sql.y: 4950
		Category: hMisc,
		//line sql.y: 4951
		Text: `SHOW [ALL] [CLUSTER | LOCAL] STATEMENTS
`,
		//line sql.y: 4952
		SeeAlso: `CANCEL QUERIES
`,
	},
	//line sql.y: 4979
	`SHOW JOBS`: {
		ShortDescription: `list background jobs`,
		//line sql.y: 4980
		Category: hMisc,
		//line sql.y: 4981
		Text: `
SHOW [AUTOMATIC] JOBS [select clause]
SHOW JOBS FOR SCHEDULES [select clause]
SHOW JOB <jobid>
`,
		//line sql.y: 4985
		SeeAlso: `CANCEL JOBS, PAUSE JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5029
	`SHOW SCHEDULES`: {
		ShortDescription: `list periodic schedules`,
		//line sql.y: 5030
		Category: hMisc,
		//line sql.y: 5031
		Text: `
SHOW [RUNNING | PAUSED] SCHEDULES [FOR BACKUP]
SHOW SCHEDULE <schedule_id>
`,
		//line sql.y: 5034
		SeeAlso: `PAUSE SCHEDULES, RESUME SCHEDULES, DROP SCHEDULES
`,
	},
	//line sql.y: 5081
	`SHOW TRACE`: {
		ShortDescription: `display an execution trace`,
		//line sql.y: 5082
		Category: hMisc,
		//line sql.y: 5083
		Text: `
SHOW [COMPACT] [KV] TRACE FOR SESSION
`,
		//line sql.y: 5085
		SeeAlso: `EXPLAIN
`,
	},
	//line sql.y: 5108
	`SHOW SESSIONS`: {
		ShortDescription: `list open client sessions`,
		//line sql.y: 5109
		Category: hMisc,
		//line sql.y: 5110
		Text: `SHOW [ALL] [CLUSTER | LOCAL] SESSIONS
`,
		//line sql.y: 5111
		SeeAlso: `CANCEL SESSIONS
`,
	},
	//line sql.y: 5124
	`SHOW TABLES`: {
		ShortDescription: `list tables`,
		//line sql.y: 5125
		Category: hDDL,
		//line sql.y: 5126
		Text: `SHOW TABLES [FROM <databasename> [ . <schemaname> ] ] [WITH COMMENT]
`,
		//line sql.y: 5127
		SeeAlso: `WEBDOCS/show-tables.html
`,
	},
	//line sql.y: 5155
	`SHOW TRANSACTIONS`: {
		ShortDescription: `list open client transactions across the cluster`,
		//line sql.y: 5156
		Category: hMisc,
		//line sql.y: 5157
		Text: `SHOW [ALL] [CLUSTER | LOCAL] TRANSACTIONS
`,
	},
	//line sql.y: 5174
	`SHOW SCHEMAS`: {
		ShortDescription: `list schemas`,
		//line sql.y: 5175
		Category: hDDL,
		//line sql.y: 5176
		Text: `SHOW SCHEMAS [FROM <databasename> ]
`,
	},
	//line sql.y: 5188
	`SHOW SEQUENCES`: {
		ShortDescription: `list sequences`,
		//line sql.y: 5189
		Category: hDDL,
		//line sql.y: 5190
		Text: `SHOW SEQUENCES [FROM <databasename> ]
`,
	},
	//line sql.y: 5202
	`SHOW SYNTAX`: {
		ShortDescription: `analyze SQL syntax`,
		//line sql.y: 5203
		Category: hMisc,
		//line sql.y: 5204
		Text: `SHOW SYNTAX <string>
`,
	},
	//line sql.y: 5220
	`SHOW SAVEPOINT`: {
		ShortDescription: `display current savepoint properties`,
		//line sql.y: 5221
		Category: hCfg,
		//line sql.y: 5222
		Text: `SHOW SAVEPOINT STATUS
`,
	},
	//line sql.y: 5230
	`SHOW TRANSACTION`: {
		ShortDescription: `display current transaction properties`,
		//line sql.y: 5231
		Category: hCfg,
		//line sql.y: 5232
		Text: `SHOW TRANSACTION {ISOLATION LEVEL | PRIORITY | STATUS}
`,
		//line sql.y: 5233
		SeeAlso: `WEBDOCS/show-transaction.html
`,
	},
	//line sql.y: 5252
	`SHOW CREATE`: {
		ShortDescription: `display the CREATE statement for a table, sequence or view`,
		//line sql.y: 5253
		Category: hDDL,
		//line sql.y: 5254
		Text: `
SHOW CREATE [ TABLE | SEQUENCE | VIEW ] <tablename>
SHOW CREATE ALL TABLES
`,
		//line sql.y: 5257
		SeeAlso: `WEBDOCS/show-create-table.html
`,
	},
	//line sql.y: 5279
	`SHOW USERS`: {
		ShortDescription: `list defined users`,
		//line sql.y: 5280
		Category: hPriv,
		//line sql.y: 5281
		Text: `SHOW USERS
`,
		//line sql.y: 5282
		SeeAlso: `CREATE USER, DROP USER, WEBDOCS/show-users.html
`,
	},
	//line sql.y: 5290
	`SHOW ROLES`: {
		ShortDescription: `list defined roles`,
		//line sql.y: 5291
		Category: hPriv,
		//line sql.y: 5292
		Text: `SHOW ROLES
`,
		//line sql.y: 5293
		SeeAlso: `CREATE ROLE, ALTER ROLE, DROP ROLE
`,
	},
	//line sql.y: 5301
	`SHOW ZONE CONFIGURATION`: {
		ShortDescription: `display current zone configuration`,
		//line sql.y: 5302
		Category: hCfg,
		//line sql.y: 5303
		Text: `SHOW ZONE CONFIGURATION FROM [ RANGE | DATABASE | TABLE | INDEX ] <name>
SHOW ZONE CONFIGURATION FROM PARTITION OF [ INDEX | TABLE ] <name>
SHOW [ALL] ZONE CONFIGURATIONS
`,
		//line sql.y: 5306
		SeeAlso: `WEBDOCS/show-zone-configurations.html
`,
	},
	//line sql.y: 5362
	`SHOW RANGE`: {
		ShortDescription: `show range information for a row`,
		//line sql.y: 5363
		Category: hMisc,
		//line sql.y: 5364
		Text: `
SHOW RANGE FROM TABLE <tablename> FOR ROW (value1, value2, ...)
SHOW RANGE FROM INDEX [ <tablename> @ ] <indexname> FOR ROW (value1, value2, ...)
`,
	},
	//line sql.y: 5385
	`SHOW RANGES`: {
		ShortDescription: `list ranges`,
		//line sql.y: 5386
		Category: hMisc,
		//line sql.y: 5387
		Text: `
SHOW RANGES FROM TABLE <tablename>
SHOW RANGES FROM INDEX [ <tablename> @ ] <indexname>
`,
	},
	//line sql.y: 5406
	`SHOW SURVIVAL GOAL`: {
		ShortDescription: `shows survival goals`,
		//line sql.y: 5407
		Category: hDDL,
		//line sql.y: 5408
		Text: `
SHOW SURVIVAL GOAL FROM DATABASE
SHOW SURVIVAL GOAL FROM DATABASE <database>
`,
	},
	//line sql.y: 5423
	`SHOW REGIONS`: {
		ShortDescription: `shows regions`,
		//line sql.y: 5424
		Category: hDDL,
		//line sql.y: 5425
		Text: `
SHOW REGIONS
SHOW REGIONS FROM ALL DATABASES
SHOW REGIONS FROM CLUSTER
SHOW REGIONS FROM DATABASE
SHOW REGIONS FROM DATABASE <database>
`,
	},
	//line sql.y: 5713
	`PAUSE`: {
		//line sql.y: 5714
		Category: hMisc,
		//line sql.y: 5715
		Text: `

Pause various background tasks and activities.

PAUSE JOBS, PAUSE SCHEDULES
`,
	},
	//line sql.y: 5725
	`RESUME`: {
		//line sql.y: 5726
		Category: hMisc,
		//line sql.y: 5727
		Text: `

Resume various background tasks and activities.

RESUME JOBS, RESUME SCHEDULES
`,
	},
	//line sql.y: 5737
	`PAUSE JOBS`: {
		ShortDescription: `pause background jobs`,
		//line sql.y: 5738
		Category: hMisc,
		//line sql.y: 5739
		Text: `
PAUSE JOBS <selectclause>
PAUSE JOB <jobid>
`,
		//line sql.y: 5742
		SeeAlso: `SHOW JOBS, CANCEL JOBS, RESUME JOBS
`,
	},
	//line sql.y: 5777
	`PAUSE SCHEDULES`: {
		ShortDescription: `pause scheduled jobs`,
		//line sql.y: 5778
		Category: hMisc,
		//line sql.y: 5779
		Text: `
PAUSE SCHEDULES <selectclause>
  select clause: select statement returning schedule id to pause.
PAUSE SCHEDULE <scheduleID>
`,
		//line sql.y: 5783
		SeeAlso: `RESUME SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 5804
	`CREATE SCHEMA`: {
		ShortDescription: `create a new schema`,
		//line sql.y: 5805
		Category: hDDL,
		//line sql.y: 5806
		Text: `
CREATE SCHEMA [IF NOT EXISTS] { [<databasename>.]<schemaname> | [[<databasename>.]<schemaname>] AUTHORIZATION <rolename> }
`,
	},
	//line sql.y: 5839
	`ALTER SCHEMA`: {
		ShortDescription: `alter an existing schema`,
		//line sql.y: 5840
		Category: hDDL,
		//line sql.y: 5841
		Text: `

Commands:
  ALTER SCHEMA ... RENAME TO <newschemaname>
  ALTER SCHEMA ... OWNER TO {<newowner> | CURRENT_USER | SESSION_USER }
`,
	},
	//line sql.y: 5867
	`CREATE TABLE`: {
		ShortDescription: `create a new table`,
		//line sql.y: 5868
		Category: hDDL,
		//line sql.y: 5869
		Text: `
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> ( <elements...> ) [<interleave>] [<on_commit>]
CREATE [[GLOBAL | LOCAL] {TEMPORARY | TEMP}] TABLE [IF NOT EXISTS] <tablename> [( <colnames...> )] AS <source> [<interleave>] [<on commit>]

Table elements:
   <name> <type> [<qualifiers...>]
   [UNIQUE | INVERTED] INDEX [<name>] ( <colname> [ASC | DESC] [, ...] )
                           [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   FAMILY [<name>] ( <colnames...> )
   [CONSTRAINT <name>] <constraint>

Table constraints:
   PRIMARY KEY ( <colnames...> ) [USING HASH WITH BUCKET_COUNT = <shard_buckets>]
   FOREIGN KEY ( <colnames...> ) REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
   UNIQUE ( <colnames... ) [{STORING | INCLUDE | COVERING} ( <colnames...> )] [<interleave>]
   CHECK ( <expr> )

Column qualifiers:
  [CONSTRAINT <constraintname>] {NULL | NOT NULL | NOT VISIBLE | UNIQUE | PRIMARY KEY | CHECK (<expr>) | DEFAULT <expr>}
  FAMILY <familyname>, CREATE [IF NOT EXISTS] FAMILY [<familyname>]
  REFERENCES <tablename> [( <colnames...> )] [ON DELETE {NO ACTION | RESTRICT}] [ON UPDATE {NO ACTION | RESTRICT}]
  COLLATE <collationname>
  AS ( <expr> ) STORED

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

On commit clause:
   ON COMMIT {PRESERVE ROWS | DROP | DELETE ROWS}

`,
		//line sql.y: 5899
		SeeAlso: `SHOW TABLES, CREATE VIEW, SHOW CREATE,
WEBDOCS/create-table.html
WEBDOCS/create-table-as.html
`,
	},
	//line sql.y: 6820
	`CREATE SEQUENCE`: {
		ShortDescription: `create a new sequence`,
		//line sql.y: 6821
		Category: hDDL,
		//line sql.y: 6822
		Text: `
CREATE [TEMPORARY | TEMP] SEQUENCE <seqname>
  [INCREMENT <increment>]
  [MINVALUE <minvalue> | NO MINVALUE]
  [MAXVALUE <maxvalue> | NO MAXVALUE]
  [START [WITH] <start>]
  [CACHE <cache>]
  [NO CYCLE]
  [VIRTUAL]

`,
		//line sql.y: 6832
		SeeAlso: `CREATE TABLE
`,
	},
	//line sql.y: 6896
	`TRUNCATE`: {
		ShortDescription: `empty one or more tables`,
		//line sql.y: 6897
		Category: hDML,
		//line sql.y: 6898
		Text: `TRUNCATE [TABLE] <tablename> [, ...] [CASCADE | RESTRICT]
`,
		//line sql.y: 6899
		SeeAlso: `WEBDOCS/truncate.html
`,
	},
	//line sql.y: 6917
	`CREATE ROLE`: {
		ShortDescription: `define a new role`,
		//line sql.y: 6918
		Category: hPriv,
		//line sql.y: 6919
		Text: `CREATE ROLE [IF NOT EXISTS] <name> [ [WITH] <OPTIONS...> ]
`,
		//line sql.y: 6920
		SeeAlso: `ALTER ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6932
	`ALTER ROLE`: {
		ShortDescription: `alter a role`,
		//line sql.y: 6933
		Category: hPriv,
		//line sql.y: 6934
		Text: `ALTER ROLE <name> [WITH] <options...>
`,
		//line sql.y: 6935
		SeeAlso: `CREATE ROLE, DROP ROLE, SHOW ROLES
`,
	},
	//line sql.y: 6964
	`CREATE VIEW`: {
		ShortDescription: `create a new view`,
		//line sql.y: 6965
		Category: hDDL,
		//line sql.y: 6966
		Text: `CREATE [TEMPORARY | TEMP] [MATERIALIZED] VIEW [IF NOT EXISTS] <viewname> [( <colnames...> )] AS <source>
`,
		//line sql.y: 6967
		SeeAlso: `CREATE TABLE, SHOW CREATE, WEBDOCS/create-view.html
`,
	},
	//line sql.y: 7142
	`CREATE TYPE`: {
		ShortDescription: `- create a type`,
		//line sql.y: 7143
		Category: hDDL,
		//line sql.y: 7144
		Text: `CREATE TYPE [IF NOT EXISTS] <type_name> AS ENUM (...)
`,
	},
	//line sql.y: 7196
	`CREATE INDEX`: {
		ShortDescription: `create a new index`,
		//line sql.y: 7197
		Category: hDDL,
		//line sql.y: 7198
		Text: `
CREATE [UNIQUE | INVERTED] INDEX [CONCURRENTLY] [IF NOT EXISTS] [<idxname>]
       ON <tablename> ( <colname> [ASC | DESC] [, ...] )
       [USING HASH WITH BUCKET_COUNT = <shard_buckets>] [STORING ( <colnames...> )] [<interleave>]
       [PARTITION BY <partition params>]
       [WITH <storage_parameter_list] [WHERE <where_conds...>]

Interleave clause:
   INTERLEAVE IN PARENT <tablename> ( <colnames...> ) [CASCADE | RESTRICT]

`,
		//line sql.y: 7208
		SeeAlso: `CREATE TABLE, SHOW INDEXES, SHOW CREATE,
WEBDOCS/create-index.html
`,
	},
	//line sql.y: 7719
	`RELEASE`: {
		ShortDescription: `complete a sub-transaction`,
		//line sql.y: 7720
		Category: hTxn,
		//line sql.y: 7721
		Text: `RELEASE [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7722
		SeeAlso: `SAVEPOINT, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7730
	`RESUME JOBS`: {
		ShortDescription: `resume background jobs`,
		//line sql.y: 7731
		Category: hMisc,
		//line sql.y: 7732
		Text: `
RESUME JOBS <selectclause>
RESUME JOB <jobid>
`,
		//line sql.y: 7735
		SeeAlso: `SHOW JOBS, CANCEL JOBS, PAUSE JOBS
`,
	},
	//line sql.y: 7757
	`RESUME SCHEDULES`: {
		ShortDescription: `resume executing scheduled jobs`,
		//line sql.y: 7758
		Category: hMisc,
		//line sql.y: 7759
		Text: `
RESUME SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

RESUME SCHEDULE <scheduleID>

`,
		//line sql.y: 7765
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, RESUME JOBS
`,
	},
	//line sql.y: 7786
	`DROP SCHEDULES`: {
		ShortDescription: `destroy specified schedules`,
		//line sql.y: 7787
		Category: hMisc,
		//line sql.y: 7788
		Text: `
DROP SCHEDULES <selectclause>
 selectclause: select statement returning schedule IDs to resume.

DROP SCHEDULE <scheduleID>

`,
		//line sql.y: 7794
		SeeAlso: `PAUSE SCHEDULES, SHOW JOBS, CANCEL JOBS
`,
	},
	//line sql.y: 7815
	`SAVEPOINT`: {
		ShortDescription: `start a sub-transaction`,
		//line sql.y: 7816
		Category: hTxn,
		//line sql.y: 7817
		Text: `SAVEPOINT <savepoint name>
`,
		//line sql.y: 7818
		SeeAlso: `RELEASE, WEBDOCS/savepoint.html
`,
	},
	//line sql.y: 7833
	`BEGIN`: {
		ShortDescription: `start a transaction`,
		//line sql.y: 7834
		Category: hTxn,
		//line sql.y: 7835
		Text: `
BEGIN [TRANSACTION] [ <txnparameter> [[,] ...] ]
START TRANSACTION [ <txnparameter> [[,] ...] ]

Transaction parameters:
   ISOLATION LEVEL { SNAPSHOT | SERIALIZABLE }
   PRIORITY { LOW | NORMAL | HIGH }

`,
		//line sql.y: 7843
		SeeAlso: `COMMIT, ROLLBACK, WEBDOCS/begin-transaction.html
`,
	},
	//line sql.y: 7856
	`COMMIT`: {
		ShortDescription: `commit the current transaction`,
		//line sql.y: 7857
		Category: hTxn,
		//line sql.y: 7858
		Text: `
COMMIT [TRANSACTION]
END [TRANSACTION]
`,
		//line sql.y: 7861
		SeeAlso: `BEGIN, ROLLBACK, WEBDOCS/commit-transaction.html
`,
	},
	//line sql.y: 7885
	`ROLLBACK`: {
		ShortDescription: `abort the current (sub-)transaction`,
		//line sql.y: 7886
		Category: hTxn,
		//line sql.y: 7887
		Text: `
ROLLBACK [TRANSACTION]
ROLLBACK [TRANSACTION] TO [SAVEPOINT] <savepoint name>
`,
		//line sql.y: 7890
		SeeAlso: `BEGIN, COMMIT, SAVEPOINT, WEBDOCS/rollback-transaction.html
`,
	},
	//line sql.y: 8004
	`CREATE DATABASE`: {
		ShortDescription: `create a new database`,
		//line sql.y: 8005
		Category: hDDL,
		//line sql.y: 8006
		Text: `CREATE DATABASE [IF NOT EXISTS] <name>
`,
		//line sql.y: 8007
		SeeAlso: `WEBDOCS/create-database.html
`,
	},
	//line sql.y: 8150
	`INSERT`: {
		ShortDescription: `create new rows in a table`,
		//line sql.y: 8151
		Category: hDML,
		//line sql.y: 8152
		Text: `
INSERT INTO <tablename> [[AS] <name>] [( <colnames...> )]
       <selectclause>
       [ON CONFLICT {
         [( <colnames...> )] [WHERE <arbiter_predicate>] DO NOTHING |
         ( <colnames...> ) [WHERE <index_predicate>] DO UPDATE SET ... [WHERE <expr>]
       }
       [RETURNING <exprs...>]
`,
		//line sql.y: 8160
		SeeAlso: `UPSERT, UPDATE, DELETE, WEBDOCS/insert.html
`,
	},
	//line sql.y: 8179
	`UPSERT`: {
		ShortDescription: `create or replace rows in a table`,
		//line sql.y: 8180
		Category: hDML,
		//line sql.y: 8181
		Text: `
UPSERT INTO <tablename> [AS <name>] [( <colnames...> )]
       <selectclause>
       [RETURNING <exprs...>]
`,
		//line sql.y: 8185
		SeeAlso: `INSERT, UPDATE, DELETE, WEBDOCS/upsert.html
`,
	},
	//line sql.y: 8301
	`UPDATE`: {
		ShortDescription: `update rows of a table`,
		//line sql.y: 8302
		Category: hDML,
		//line sql.y: 8303
		Text: `
UPDATE <tablename> [[AS] <name>]
       SET ...
       [WHERE <expr>]
       [ORDER BY <exprs...>]
       [LIMIT <expr>]
       [RETURNING <exprs...>]
`,
		//line sql.y: 8310
		SeeAlso: `INSERT, UPSERT, DELETE, WEBDOCS/update.html
`,
	},
	//line sql.y: 8366
	`REASSIGN OWNED BY`: {
		ShortDescription: `change ownership of all objects`,
		//line sql.y: 8367
		Category: hPriv,
		//line sql.y: 8368
		Text: `REASSIGN OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
TO {<name> | CURRENT_USER | SESSION_USER}
`,
		//line sql.y: 8370
		SeeAlso: `DROP OWNED BY
`,
	},
	//line sql.y: 8381
	`DROP OWNED BY`: {
		ShortDescription: `remove database objects owned by role(s).`,
		//line sql.y: 8382
		Category: hPriv,
		//line sql.y: 8383
		Text: `DROP OWNED BY {<name> | CURRENT_USER | SESSION_USER}[,...]
[RESTRICT | CASCADE]
`,
		//line sql.y: 8385
		SeeAlso: `REASSIGN OWNED BY
`,
	},
	//line sql.y: 8565
	`<SELECTCLAUSE>`: {
		ShortDescription: `access tabular data`,
		//line sql.y: 8566
		Category: hDML,
		//line sql.y: 8567
		Text: `
Select clause:
  TABLE <tablename>
  VALUES ( <exprs...> ) [ , ... ]
  SELECT ... [ { INTERSECT | UNION | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
`,
	},
	//line sql.y: 8578
	`SELECT`: {
		ShortDescription: `retrieve rows from a data source and compute a result`,
		//line sql.y: 8579
		Category: hDML,
		//line sql.y: 8580
		Text: `
SELECT [DISTINCT [ ON ( <expr> [ , ... ] ) ] ]
       { <expr> [[AS] <name>] | [ [<dbname>.] <tablename>. ] * } [, ...]
       [ FROM <source> ]
       [ WHERE <expr> ]
       [ GROUP BY <expr> [ , ... ] ]
       [ HAVING <expr> ]
       [ WINDOW <name> AS ( <definition> ) ]
       [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] <selectclause> ]
       [ ORDER BY <expr> [ ASC | DESC ] [, ...] ]
       [ LIMIT { <expr> | ALL } ]
       [ OFFSET <expr> [ ROW | ROWS ] ]
`,
		//line sql.y: 8592
		SeeAlso: `WEBDOCS/select-clause.html
`,
	},
	//line sql.y: 8667
	`TABLE`: {
		ShortDescription: `select an entire table`,
		//line sql.y: 8668
		Category: hDML,
		//line sql.y: 8669
		Text: `TABLE <tablename>
`,
		//line sql.y: 8670
		SeeAlso: `SELECT, VALUES, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9044
	`VALUES`: {
		ShortDescription: `select a given set of values`,
		//line sql.y: 9045
		Category: hDML,
		//line sql.y: 9046
		Text: `VALUES ( <exprs...> ) [, ...]
`,
		//line sql.y: 9047
		SeeAlso: `SELECT, TABLE, WEBDOCS/table-expressions.html
`,
	},
	//line sql.y: 9156
	`<SOURCE>`: {
		ShortDescription: `define a data source for SELECT`,
		//line sql.y: 9157
		Category: hDML,
		//line sql.y: 9158
		Text: `
Data sources:
  <tablename> [ @ { <idxname> | <indexflags> } ]
  <tablefunc> ( <exprs...> )
  ( { <selectclause> | <source> } )
  <source> [AS] <alias> [( <colnames...> )]
  <source> [ <jointype> ] JOIN <source> ON <expr>
  <source> [ <jointype> ] JOIN <source> USING ( <colnames...> )
  <source> NATURAL [ <jointype> ] JOIN <source>
  <source> CROSS JOIN <source>
  <source> WITH ORDINALITY
  '[' EXPLAIN ... ']'
  '[' SHOW ... ']'

Index flags:
  '{' FORCE_INDEX = <idxname> [, ...] '}'
  '{' NO_INDEX_JOIN [, ...] '}'
  '{' IGNORE_FOREIGN_KEYS [, ...] '}'

Join types:
  { INNER | { LEFT | RIGHT | FULL } [OUTER] } [ { HASH | MERGE | LOOKUP | INVERTED } ]

`,
		//line sql.y: 9180
		SeeAlso: `WEBDOCS/table-expressions.html
`,
	},
}
