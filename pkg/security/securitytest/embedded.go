// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca-client-tenant.crt (1.151kB)
// test_certs/ca-client-tenant.key (1.675kB)
// test_certs/ca.crt (1.151kB)
// test_certs/ca.key (1.679kB)
// test_certs/client-tenant.10.crt (1.257kB)
// test_certs/client-tenant.10.key (1.679kB)
// test_certs/client-tenant.11.crt (1.257kB)
// test_certs/client-tenant.11.key (1.679kB)
// test_certs/client-tenant.20.crt (1.257kB)
// test_certs/client-tenant.20.key (1.675kB)
// test_certs/client.root.crt (1.143kB)
// test_certs/client.root.key (1.675kB)
// test_certs/client.testuser.crt (1.151kB)
// test_certs/client.testuser.key (1.679kB)
// test_certs/client.testuser2.crt (1.151kB)
// test_certs/client.testuser2.key (1.679kB)
// test_certs/node.crt (1.237kB)
// test_certs/node.key (1.675kB)
// test_certs/tenant-signing.10.crt (461B)
// test_certs/tenant-signing.10.key (119B)
// test_certs/tenant-signing.11.crt (457B)
// test_certs/tenant-signing.11.key (119B)
// test_certs/tenant-signing.20.crt (461B)
// test_certs/tenant-signing.20.key (119B)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x3b\xd3\xb2\xbc\x16\x86\x7b\x7e\xc5\xee\x9f\xd9\x23\x82\x22\x94\x49\x08\x10\x11\x24\x9c\x02\x76\x1c\x34\x08\xfa\x82\x9c\xa2\xfe\xfa\x3d\xef\x53\x7c\xc5\xfe\x56\x79\xcd\xac\x7b\xad\xe2\x9e\xeb\xbf\x7f\x07\x62\x9b\xf8\xff\x41\x38\x8c\x89\x45\x10\x88\xf1\x2f\x95\x3c\x42\xcc\x63\x8b\x10\xe0\x1a\x07\x82\x40\xc0\x49\x08\x02\xb5\x9f\x15\xfc\xba\x3c\x53\x6f\x32\x2e\xec\xe0\xfe\xf0\xab\x5e\x09\x93\xe6\x47\xb7\xbf\x90\x66\xad\x7c\x40\xf1\x09\x52\x20\x24\xf7\x8b\x23\x0f\x02\x1b\x6c\x13\x8c\x1a\xef\x48\x15\xa3\x2d\xd4\xe3\x9a\x33\xbf\xf7\xc2\x44\x60\x91\x9b\x29\xa5\x26\x16\x6f\xb3\x54\xfc\xb1\x7a\x1a\x4d\xae\x70\x4e\x65\x2c\x9c\xa6\xf2\x25\xaf\x25\xc2\x8b\xb1\xf0\xe2\x4e\x78\x31\x11\xac\xa9\x7c\xef\xfb\xcb\xf6\xff\xb0\x16\x8c\x5e\x48\x04\x06\xbf\x61\x2e\x16\x8f\x7f\xc2\xa4\x5c\xe1\x6f\x2b\x06\x31\xe4\x7e\x0a\x81\x17\x9b\xd8\x5f\x73\x65\xfe\x94\x8a\xd5\x16\x08\x9a\x34\x46\x08\x44\xe4\xff\xdf\x87\x90\x02\x93\x73\x1c\x48\xc0\x44\x08\xd0\x1e\x71\x8e\x21\xf0\xae\x76\x91\x07\x14\xf9\xdc\xc2\x57\xa6\xca\x83\x75\x4b\xbe\x0b\xbf\x1e\x40\x66\x68\x4f\xa7\xe5\x15\x10\x9d\xe8\xff\xc0\x5b\xce\xac\xd3\xee\x54\x2f\xa9\xb4\x29\xc7\x8f\xbc\xd8\x4b\x76\x1b\xe5\x83\x31\x25\x27\x6a\x45\x05\xdc\x43\x9a\xac\x8c\xb5\x76\xc4\x8c\x47\x40\xd5\x9e\x02\x21\x07\xd9\xcb\x42\xad\x7c\x5d\x60\xf1\x19\x3c\x40\x79\x4c\x2b\x21\x79\xf4\x7c\x9f\xb6\x67\x76\x9e\x7e\x74\x4e\x40\xb9\x3d\xd4\x59\xf0\xf6\x90\x6c\x4e\x61\xbb\x29\x70\x3b\x1f\x18\xc1\x37\x6a\x0d\x9d\xd3\xd6\x0f\x03\xb5\xd6\x2d\xfb\xa3\x59\x9c\x7a\xe6\x30\x68\x1b\x89\x6d\x19\xce\x6c\x19\x24\xfa\x63\x97\x85\x9f\x31\x56\x77\x7b\x39\x2d\x82\x70\xa9\xef\x1b\x5d\x7f\x2e\x41\xbd\x46\x2c\x58\x42\xff\xdd\x3f\xae\x03\xe6\xdf\x01\x51\xe7\x38\xcc\x45\x00\xff\xc8\xf1\x28\xf1\x0b\x75\xde\xb7\x3e\x37\xd4\x75\xed\xf1\xf1\xd8\x36\x1a\x45\xc6\xf1\xc5\xe3\x41\x44\xba\xf9\x5c\x77\xa5\xdb\x75\x60\x8a\x86\x34\xcd\xc2\xfd\xec\x32\x55\xcc\x2f\xdb\x6e\x94\x5b\xcc\x9e\xd5\x43\xaa\x48\xe5\x63\x6b\xa9\xe3\xa3\xe2\x8f\x9f\xfd\xe6\x99\x1b\x5f\xb8\xcb\xee\xaf\xf7\x86\x00\x3e\x1e\x8b\xd9\x43\x40\x60\x00\x0a\xdf\xf2\xb0\x27\x4c\x9e\x9b\x69\x28\x07\x80\x3a\x1b\x08\xa8\x29\x01\x7e\xea\x3c\x48\xfe\x16\xa9\xc6\x02\xc3\x8d\xa0\xc4\x03\x39\x04\x37\x1d\x01\x8a\x85\x43\x7f\x17\xce\x10\xe6\xd8\x02\xc2\xc8\xb6\xfe\x73\x2e\x34\x27\xea\x48\xba\x5c\xe2\x52\x32\x8d\xea\xeb\x27\x5c\xf3\x80\x6c\xa3\xe8\x65\x47\xa4\x54\x4d\x8a\x21\x12\x09\x00\x3b\xf2\xf7\x08\xbe\x16\x36\xb6\xaa\x9d\xd1\x4f\xce\x57\xdf\x8e\xa5\xf6\xd3\x6a\xae\x61\xb3\x17\x5b\x02\x69\x35\xba\xd9\xfd\x01\xea\x04\x6d\xfd\x5d\x5a\x07\x4d\x3d\x5b\x81\x75\xf8\x64\x6c\x8e\x82\xf7\xd5\xe0\xea\xf4\x1a\xc0\x32\x4e\x54\x11\x01\x7a\x6a\xa1\xda\xee\x78\xad\x5c\xbb\x3e\xd6\x0b\xac\x6b\x12\xbb\xf8\x55\x7a\x94\xfb\xd3\x67\xe3\xb0\x73\x1b\xcc\x77\xf7\x51\x96\xcd\x6e\xa4\xe4\xe2\x37\xa9\x72\xdb\x26\x59\xd7\xdd\x4e\xc0\x2f\xdb\xfa\xd2\xcc\x0f\x73\xfb\x68\x97\x08\x1d\xc8\x79\xae\xc3\xe5\x23\x71\xf9\x63\x84\xef\xc1\x80\xa8\x01\xdb\x69\xef\x6d\x6d\x7a\x5d\x99\xfc\xfa\x26\xd1\xfd\x52\x36\xe6\x9d\x2a\xdf\x16\xee\x93\x97\x6c\x93\xb6\x49\x46\x97\x37\x3b\xe7\x20\x8c\xb0\x50\x96\xfe\x1b\x9e\xa5\x55\x59\x74\xdb\xcf\x42\x18\x4e\x31\x61\x79\xe1\xc4\xba\xec\x96\x86\xb8\x90\x17\x9e\x32\xaa\xe6\x8f\xb1\x8d\xcf\x5b\x96\x6f\xe0\x63\x95\xd9\x1c\xa3\xee\x9a\xa8\x42\xa4\x9a\xff\x75\x9e\x68\x94\xee\x53\xf8\x39\x69\xf9\xb0\xba\xa8\xac\x57\x96\xb1\x7a\x4f\x0f\xa7\x74\xf7\x75\x9d\xf7\xfd\xf0\xf9\x18\xbc\x7b\xaf\xcf\x25\x2b\xd7\x93\x56\x4c\xaf\xda\xb9\xb2\x6a\x5d\xa3\x4c\xfa\xd5\x09\xf6\xcd\x7f\x2b\xe6\x7f\x01\x00\x00\xff\xff\x19\xea\x80\x2f\x7f\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf3, 0xb2, 0x31, 0xaa, 0x8, 0x3, 0x87, 0x89, 0x42, 0xd5, 0x34, 0x40, 0xdb, 0xb7, 0x3b, 0xf1, 0x4c, 0x93, 0x75, 0x6c, 0x2d, 0x6b, 0x1b, 0x54, 0x70, 0xa5, 0xb8, 0x8f, 0x9c, 0x2, 0xb6, 0x9c}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xa3\xda\x02\x05\x73\x56\x31\x39\xf5\x4b\x78\x13\xde\x8b\x77\xc2\xdb\x0c\x84\x95\xf0\x42\xb8\xd5\xff\x9a\x89\xdf\x49\x4f\xd2\xd5\x49\xff\xef\xef\xa0\xa4\x68\xcf\x3f\x9e\x0f\xfe\x38\x9e\x16\x81\x40\xfa\x63\x48\xe9\xbf\x07\xb1\x34\x4d\x9a\x0e\x0d\x02\x60\x08\xc0\x95\xc0\x49\x65\x73\xc3\x03\x8d\x00\xa1\x47\x17\xb5\xff\x89\xf8\xc0\x66\x20\xfb\x85\x35\xb9\xa4\x95\x0d\x0f\x51\x08\x84\xee\x25\xf3\x6d\x1a\xee\xcd\x86\x10\x74\xc2\xff\x76\xd3\xa7\x72\xba\x44\xf7\x60\x27\x4e\x77\x03\x91\x3e\xa9\x1f\x19\xfa\x7c\x96\x5b\x99\x5e\x10\x21\x2f\x56\x2d\x10\x45\x97\xaf\xa6\xd0\x70\x3c\x86\x92\x57\xe3\x73\x40\x01\x3e\x11\x78\x83\x13\x30\xc6\x1d\xd2\x29\x73\xb3\x17\x68\xe0\x9e\x6c\xf8\xeb\x21\x1d\xa6\x6b\x9f\x8a\xc3\x4f\xbe\x4d\x6e\x69\xe3\xf1\x20\x1e\xdc\xea\x49\x24\x98\x61\x45\x7c\x55\x4f\x31\x04\x87\x3d\x20\xe3\xca\x17\x51\xea\xbd\x0a\x17\x06\x57\xd2\x96\xaa\xb1\x39\xf5\x7b\xf4\xa2\x89\x57\x68\xc2\x7c\xdc\x57\x4e\xf1\x04\xaf\xa7\x28\x2d\x91\x4a\x17\x31\x1f\x5f\xb4\x3f\x3a\x78\x0d\x03\x3e\x71\x4a\x8d\x78\xf6\x0f\xf6\xa0\x96\xd1\xf6\x4d\x56\x28\xda\xb8\x9f\xc1\x56\x67\x60\x62\xc3\x02\xed\x11\x9a\x87\x9d\x3f\xda\xef\xe2\xbb\xc2\x69\xf4\x51\x54\xaa\x03\x36\x17\xb5\x40\x4c\x69\xae\x66\xfc\x33\x47\xb2\x2b\x3a\xda\x03\x73\x63\x1a\xb7\xc6\x94\xd8\xcd\x11\xcd\xde\xa4\xa5\xb6\x95\xb1\xaa\x5c\x23\x08\xdf\x7e\xc1\x0e\x4d\x04\x2e\x80\x60\xfa\x2b\x3b\x8f\xe0\xac\x85\xd3\x33\x75\x5a\x4b\x69\x11\xdf\xe2\x14\x06\xa4\x72\x87\x71\x3a\x81\xa3\x4c\x7c\x5a\x2f\x29\xbc\x23\xaa\x83\xb5\x6b\x2e\x2b\x1a\x96\x8e\x15\x0f\xef\xc2\x8b\x35\xd2\xbd\xc3\x98\xc5\xad\xd7\x59\x75\x52\x2f\xf1\x56\x79\x02\x64\x04\x61\x3e\x39\x92\x1b\xf4\x95\xdd\x30\x1b\x98\xb4\xeb\x19\xd1\xc2\x7d\xed\x4d\xfb\x34\x33\x5b\x1b\xcf\x8f\xad\x0f\x94\xd2\x67\x65\x2f\x73\x39\xdc\xbe\xb7\xf8\x10\x98\xa2\x6d\x41\x99\x6a\x25\x12\x8b\x1e\xb9\x1d\x45\x45\x27\x04\xf5\xc8\x93\xfc\xf7\x90\x18\xcc\x8a\x24\xab\xab\xe3\xc0\x1c\x79\x67\x9b\xf0\x44\xc9\xe7\xe2\xca\x6b\x94\x68\x15\x93\x5f\xf3\x77\x47\x8a\xd0\xa1\xf4\xce\x22\x4a\x24\x29\x6b\x36\xb0\x97\x35\xd2\x64\x76\x19\x3a\x20\xee\x72\x34\x7e\x7d\x3f\xb6\x56\x8c\x8a\x54\x8a\x96\xa7\x37\x2c\xa5\xcc\x50\x93\x22\x9a\x04\xf3\x10\xf8\x65\xe4\xc6\x79\x0b\x7a\x47\x9e\xde\x25\xd2\xb5\x23\x0c\x2f\xde\x4d\xcc\x95\xf3\xd0\x34\x6c\x02\x65\x76\xb3\xa1\xe8\xe2\x7c\x96\x16\x35\xcd\xc9\xca\xe7\xf6\xe3\x5b\x40\xae\xa3\x52\x75\x1d\x68\x8c\xea\xf7\xab\x28\x6f\xd8\x74\xd8\xc9\x21\x12\x69\x5b\x15\x90\x84\x26\x95\x00\x13\x34\x31\x83\xeb\xa6\xb0\xd9\xdd\x4f\x1c\x7e\xb3\x78\x05\xad\xc3\xb9\x92\xaa\x7e\x1f\xfc\x87\x66\x0b\xd6\x99\xfb\x48\xea\x86\x22\xfa\x69\x7d\xf8\xfc\xa2\x3f\xe4\x45\x74\x5f\xd5\xeb\x2c\x72\xdd\xbe\xe8\x43\xc8\xc2\xd5\x61\x35\xca\x1e\xe8\xc5\x02\xb8\x9a\x6f\xcb\x0f\x9e\x26\xa1\xe6\x47\x8b\x5b\xc4\xbd\xf9\x4f\x59\x0f\x24\x48\xd8\x81\xed\xba\x94\x76\xf3\xc8\x14\xb4\x1d\xcf\x71\xa7\x0f\x81\x26\xba\x3c\xd5\xcc\x6f\x0c\xe2\x59\xdf\x6c\xae\x1f\x29\x6f\xaa\x1b\xec\x28\xa4\x20\x50\xf3\xe3\x25\xfa\x50\x7e\xe7\x5a\xfc\x7d\x5a\xff\x88\x89\xc3\x11\x91\x25\x9b\x72\xfe\x53\xfc\x58\x3b\x16\xec\x6f\x10\xfe\x72\x4a\xf2\xe2\xca\xa3\x82\xef\xc5\xb8\x2a\xe6\xe5\x9f\xd7\xe7\xf5\xd3\xaf\x47\x66\xc0\x7a\xde\xf1\xa3\x13\x2f\x03\xe8\xed\x3e\x6b\x8e\xb5\x0b\x08\x7d\xa6\xf9\x41\xb4\x05\x47\xa7\xaf\x01\xc4\x77\x47\x98\x3f\xfe\x7d\x0d\x36\x3f\xc9\x3b\xed\x7a\x96\xa2\x54\x9b\xc4\x81\x7e\x20\x1e\x4b\xd0\x56\x2f\x62\x98\x1c\x8f\xc3\xba\x74\xb5\x87\xab\xbc\x10\xad\xa2\xca\xe7\x99\x7f\x7f\xfd\xab\x04\x53\xed\x94\x26\x36\x62\xfd\x80\x9a\xec\x57\xce\xd3\xa9\x76\x64\xa7\x52\x9b\xbf\x92\x21\x81\xde\x43\xa5\x2f\x85\xe6\x8b\x34\x87\xcb\x6f\xf5\x22\x76\x13\x29\x30\x69\xc4\x96\x0a\x1e\x6c\xba\xc9\xcc\xda\xb5\xed\x63\x5a\xe0\xf1\x06\x72\x30\xd7\xc5\x9d\xd4\x6f\xa8\x5d\xdc\x95\x0f\x31\x45\xd7\x23\x67\x44\x31\xb5\x2e\xfe\xe3\xf9\xd0\xb1\xe6\xe4\x4a\x09\xd1\xfd\x2f\x5d\x08\xf5\x4c\x8e\xec\x90\xd4\x99\x99\x06\x42\xef\x7b\x6c\x2d\x27\xa8\xbf\x3f\xb6\xf9\xc5\x27\x27\x1b\xa2\x96\x7a\x0f\x5f\x1f\x96\x9a\x95\x64\x31\x78\xac\x09\x73\x3c\x0c\x7a\x66\x2b\x44\x23\x49\x2e\x5c\xcd\xb7\xa5\xce\xa2\x09\x8d\x9d\x1f\x84\x5b\x3f\x0c\xd8\xb8\xa2\x10\x73\x63\xd8\xd6\xfe\x96\x10\xa8\x50\x27\x54\xdd\xde\x16\xd7\x08\x0d\x67\xe0\xcd\xad\x33\x41\x11\x1a\xd5\x07\xe1\xdb\x7e\x2d\x9e\x6e\x1b\xb2\xbe\x6a\x32\x26\xf1\x69\xc5\x0c\xfe\x82\x67\xf7\x6b\x09\x97\x10\xa9\x10\xd0\x8c\x66\xa3\x2e\x27\x99\xf4\x55\xe3\xc4\xa7\x9c\xb9\x44\x03\x9b\x7c\x59\xda\x45\x30\x2d\x32\xf2\x40\x79\xfa\xaa\x97\x78\x04\xa7\xe2\x22\x93\xd8\x29\x69\x32\x58\xc3\xbe\x03\x18\x14\xe1\x27\x0a\x66\x1d\x45\xe9\x04\x9c\x04\x56\x0a\xfc\x9e\xaf\x43\xad\xd0\x96\xb0\xcc\x19\xf9\x88\x35\x17\x21\x14\x41\x00\xae\x01\x1b\xb5\x09\x87\xc5\x3b\x2b\x42\x6d\xa8\x95\xee\xd7\x3e\x92\x70\x83\xc5\x3f\x01\x8d\x29\xbd\x7b\xff\xfc\x47\x5e\x35\x3f\x8c\x63\x75\x72\x97\xaf\x36\x22\x2f\xdf\xd3\x2d\x15\x69\xaf\x8e\xba\x63\xb2\x21\x52\x43\xc5\x1e\x73\x77\xcc\xe8\xc9\xbd\x17\xda\x1f\x08\x25\x33\x52\xe7\x7a\x75\xa9\x5b\xb1\xb5\xb7\x9a\xbe\x41\x33\xea\xd8\x8b\xa8\x1d\xe6\x9f\xc2\xb0\x29\x0d\xe7\x07\x24\xd4\xeb\x67\x7f\x29\x5a\xf0\x5d\x6e\xe0\x54\x0c\x38\x59\x29\x30\x37\xc6\xd2\x72\x10\xe1\x86\xc2\x38\x87\x42\x9e\xb2\xae\xb3\x47\xea\x6e\x4f\xb9\x99\x1a\x1b\xf9\x97\x14\xe9\x29\xfe\x77\x6a\xfe\x1f\x00\x00\xff\xff\x82\x81\xec\xea\x8b\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0xaa, 0x9b, 0xd, 0xb8, 0xb3, 0x4e, 0x1b, 0xb, 0xd, 0x85, 0x5d, 0x30, 0x81, 0x89, 0x80, 0x3d, 0xf5, 0x28, 0x71, 0xb3, 0x5c, 0x77, 0xb2, 0x64, 0xf2, 0x44, 0x0, 0x26, 0xe9, 0x39, 0xd7}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x4b\xaf\xba\x48\x10\xc5\xf7\x7c\x8a\xd9\x93\x09\x88\x5c\xd4\xc5\x2c\xba\xa1\x5b\x9a\xa7\x8d\x0d\x8a\x3b\x1e\xda\xc8\x43\xb9\x20\xcf\x4f\x3f\xb9\xff\x7f\x32\x93\xcc\xd4\xa6\x92\x5f\x52\x27\x95\xaa\x93\xf3\xe7\x4f\x41\x74\x24\xde\x1f\x3a\x0a\x18\xc1\x44\x07\x0c\xfd\xa2\x82\x4b\x88\x61\x31\x5d\x07\x5c\xe1\x60\x22\x10\x70\x42\x23\xf6\x5d\xc8\xa9\x7d\x49\x8e\xd9\xa1\xb9\x2e\x36\x75\x37\xdd\xd6\x00\x1e\xe4\xd5\x77\x51\x3d\x8f\x87\x49\x86\x80\xf6\x18\x18\xa0\x13\xdc\x80\x4c\x08\xc4\x46\x44\xa9\x8d\xa6\xda\x48\x15\xaf\xcb\x9a\x43\x11\x2b\x7c\xc6\x0c\x30\xc8\xbd\x08\x02\x97\x19\xc8\x1b\x63\xe5\xb3\xa4\x0a\x2e\x13\x1d\x1a\x94\x81\x3b\x9e\xe4\x45\x70\x4b\x30\xbb\x0c\xcc\x3e\xfb\xe9\x45\x82\x27\x79\xfd\xcd\xaa\x7f\x98\xab\xf7\x33\x2a\x01\xfd\x2d\xf6\x66\x7a\xf8\xaf\x98\x90\x18\x28\x72\xa1\x7b\x04\x9b\x10\x81\xd9\x75\xa9\x72\x28\x93\xad\x35\xc6\x17\xef\x4d\x90\x07\x5d\x42\x20\x29\xff\xbb\x3e\xc2\x00\xf8\x3a\xa0\x7b\xf0\x73\x03\xa8\x73\x5b\x07\x14\x81\xe5\x5c\x39\xad\x22\xee\xe2\x21\xa7\xfe\x2d\x66\x99\xf4\x68\xb0\x1c\x98\x77\xe7\xca\x33\xe3\x1c\x2b\xb1\xa8\x4c\xa9\x52\xdf\xb4\x8d\x56\x9f\x7b\xde\x5c\x8f\x27\x21\xb9\x44\xa6\xb3\x26\x07\xa4\x8c\xfd\x59\xd1\x0f\x30\x89\x95\xef\xce\x96\xea\xb0\x9e\x5d\x1f\x5f\x5f\x6c\x7b\x8c\x5e\xc1\x29\x4f\xad\xe8\xa3\x0d\xa7\x55\xb6\x0f\xc5\x9a\xd9\x37\x93\x89\xda\xa5\xd4\x05\x39\xd8\x7c\x1e\x21\xb4\xb5\xa3\xd7\xd4\x63\x9f\x2e\x07\x31\xdc\x5c\xdc\x8a\x15\x81\xf2\xd8\xd9\xe6\x17\x08\xba\x71\xe7\x3c\x8b\x46\xd6\x14\xe2\xdd\xe8\x6a\xd5\x65\x15\x67\x38\x42\x08\x35\x6f\x47\x10\xef\x31\x93\x97\x8d\x78\xee\xac\xc7\x10\x77\xf4\x4e\xf2\x28\x3e\xeb\xa2\x4a\x0a\x60\xae\xdd\x12\xcd\x06\xd8\xa8\xf5\x4a\x5e\xf0\xca\xa3\x39\x1a\xf4\x4d\xaa\x0d\x47\xbf\x5b\xa4\x87\x28\xf6\x92\xd0\x42\xfc\x96\x71\x10\xfa\xbd\xfa\x7a\xb3\xad\xcc\x71\x65\xa9\x5b\xf5\x7d\x95\x62\xdd\x25\x75\x2e\x3d\xba\x97\x93\xb5\x53\x20\x7d\x57\xe9\xed\x06\xb4\xc6\x99\xfc\x0e\xdf\x5f\x4f\xab\x5f\x77\x55\x21\xf4\xa7\xed\xb0\xd3\xf4\x55\xab\x43\xf3\x34\x2d\xa6\xb5\x5e\x76\xef\x64\x7f\x0a\xd4\x21\x8f\xf3\xf1\x99\x52\x62\x00\x0a\xe0\x5b\x0e\x27\xba\x02\xff\xe7\x95\x26\xdd\x43\xf0\xd8\x23\x08\x5c\x5d\x00\x03\x9d\x10\x8f\x8d\x28\x90\x19\xa0\xa6\x04\x01\x9f\x20\x47\x50\xfa\x71\x25\x03\xf9\xef\x01\x15\x61\x4e\xc3\xe7\x5a\x0d\xb1\x08\x4d\x75\x9f\x8c\x81\x77\x45\xaf\x4e\xf2\x04\xf4\x3c\x64\x9f\xfb\x7b\x32\x68\x6c\xd9\xef\x1b\x29\xc6\xcc\x03\x14\x39\x90\x02\x83\x73\x04\x01\x19\xb4\x5d\xb2\x09\xec\xb6\xc9\x0d\xc9\x60\x70\x4b\x67\x2e\x0e\x67\xbe\xdc\x59\x9b\x91\xbb\xf0\x08\xbd\x69\x59\x1a\xb5\xd8\xeb\x9a\xfb\x69\xe5\xb2\x8c\xbf\x3b\xd3\x33\xb5\x42\x4b\x8e\xc5\x60\x94\x87\x91\x9d\xa0\x93\x83\x4f\x2b\xf5\x5f\xdc\xfc\x42\xee\x92\xe3\xb1\x13\x15\xe7\x39\x2c\xfe\x5b\xf0\xbe\x1c\xd0\xaf\xc8\x13\x81\xa8\xb1\x4e\xf7\xb6\xa8\xcd\xfa\x20\x10\xe3\x16\x4b\x8f\x63\x3a\xf2\x9c\x3d\x53\x9c\xbf\x5e\xdf\xfa\xa3\x4d\x4e\xf3\x2d\xdf\x88\x7b\xaf\xbf\x2b\x29\x6e\xb4\xb9\x2c\x05\xb9\x09\x8c\xf3\xea\x85\x22\x7b\x6a\x15\xb0\xc7\xf8\x83\xcf\x0d\xbe\x9e\x7d\xf7\xf2\x39\x92\xc6\xb4\xae\x81\xaa\xe9\xd1\x97\xaa\x63\xb1\xf3\x8b\x31\xa8\x6b\xbb\x2f\xcf\xfc\x96\xd9\xf0\x59\x75\x54\x78\x2c\x16\x0c\xf7\xec\x53\xb6\x06\xd0\xe6\x88\xe9\xcc\xb5\xb8\x9c\xb7\x62\x76\xe8\xc6\x18\x31\x55\xae\xd1\x38\x1c\x5d\x7f\x0e\x1a\x5e\xf9\xbe\x9d\xa7\x7d\x77\x1e\x15\xdb\xf8\xc2\xa7\x8e\x54\xc2\xa2\xf0\x35\x28\x32\xa8\x98\x2f\x5d\x55\xeb\xe2\x04\xaf\x1b\x30\xc3\xd4\xce\xcd\x5d\xde\xdb\x77\x40\x71\x02\xd7\x9c\xb4\x0e\x74\x9d\xd3\x65\x73\xb8\xf6\x56\x93\x90\xbf\x84\x5f\x71\x82\x3c\xe3\xff\x11\xf3\x77\x00\x00\x00\xff\xff\x70\xfd\xa5\xbf\x7f\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0x92, 0x70, 0x14, 0xb4, 0x88, 0x30, 0xcd, 0xcb, 0xaf, 0x1, 0xcf, 0xe3, 0x6d, 0xb, 0x89, 0x45, 0x67, 0x7e, 0x83, 0x6, 0x5e, 0x50, 0x89, 0x33, 0x63, 0xfe, 0xaf, 0x65, 0x34, 0xd4, 0x42}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\xb5\x12\xac\x88\x02\x05\x73\xbe\xe2\xe6\xd4\x2b\x6c\x06\x09\x36\xc0\xdd\x9d\x0c\x19\xdc\x1d\xbe\xfe\xd5\xde\x78\x4f\x7a\x92\xae\x4e\xfa\x7f\xff\x8e\xe1\x45\xd9\xf8\xe3\xb8\xf4\x1f\xcb\x91\x03\xda\xe3\xff\xa8\x7c\xfc\xf7\x01\x74\x59\xe6\x67\x5a\x66\x68\x5a\x65\x69\x9b\xa7\x1f\xb7\xd3\x66\x14\x24\xe2\xa3\xb0\xcd\x24\xf6\x72\xa8\x1c\x04\xd8\x91\x7e\x5a\x54\xe5\x9c\x1b\xa3\x31\x88\x5e\x19\xda\x27\x38\x82\xf7\xee\x56\x01\x43\x24\x5a\x69\x18\x48\xda\x9b\x52\x3c\x7a\x6e\x2e\xca\x52\x4c\x1a\xa3\xcb\xaa\x42\xbd\xdf\xdf\xba\x29\x44\xa3\x87\x89\xc1\xe8\x58\x45\xa6\x04\x3b\x7e\x58\x2f\xac\x52\xf5\x9b\xab\x89\xe4\x81\x00\x1e\xb6\x2c\xec\x20\x7b\xe9\x33\x2a\x2e\x1a\x43\x7f\x6e\xd9\x43\x81\x3e\x12\xea\x9d\x57\x3b\x68\x49\xa8\xd2\x97\x76\xd6\x93\xd0\x9a\x7a\x80\x71\x54\x36\x12\xfb\x55\xfa\xb6\x8b\x73\x21\xe0\x79\x80\x1f\x26\x0d\xfc\xc5\x1e\xfc\x20\xa0\xbb\x2a\xe5\x11\xaf\xf6\x4f\x2e\x82\xd8\x65\xc1\x8f\x5c\xd3\xd2\xbb\x3e\xc1\xcd\xd1\xc8\xa7\x7f\xe5\x91\x89\xaa\xe0\x0e\x0e\x16\xc9\xf0\x43\x34\xd7\x07\x2a\x01\x10\xdc\xa0\x99\x11\x26\x58\x70\x7c\x73\xfb\x8c\x93\x87\xc1\x95\xd0\x29\x1f\xec\x33\x45\x50\xcc\xea\x72\x5f\x40\xe5\x3a\x6a\xf9\x7c\x39\xd0\xd2\x65\x49\x42\xe3\x83\x76\x99\xab\xf0\x1b\x1b\x65\x03\x5e\xa2\xab\x37\x0b\x3b\x08\x9c\x7d\xf1\xde\x97\xac\xeb\x91\x94\x37\x24\xa6\x94\xb4\x9c\xcf\x51\xc4\xc5\xd9\x64\xb6\xcc\xd1\x36\xcd\xd0\x93\xcc\xd0\x36\x1b\xc4\x3f\x89\x59\xa2\xa3\x49\xf7\x7b\x03\x66\x58\x7e\x48\xa9\xbd\xa9\x2e\x35\xe4\xd4\x08\x35\xa8\x63\x0d\x4c\xef\x02\x1d\xde\x2c\xf3\xc0\xf4\xf9\x40\x11\x64\xe2\xdb\x05\x49\x95\x91\x5e\x16\x1a\x17\x8e\x8f\xdf\x86\x46\x31\xc2\x20\x36\x03\xf0\x71\x61\xa7\x00\x9d\xb8\x73\xe9\x27\xb1\x3e\x3e\xdf\x5a\xa9\x72\x85\x64\x0d\xf3\xa0\x42\x70\xfc\x45\x2c\x5c\x8f\x81\x8a\x56\x87\xc6\xed\xcc\xfd\x56\x6c\x25\x16\xc6\x5f\xd5\x16\xe9\x23\x92\x00\xa6\xd4\xe7\xc7\xc7\xe3\x27\x01\x97\x9c\x11\xe8\xdf\xe4\x77\x23\x1d\x33\xa3\x46\x09\xe4\x25\x1c\x73\x7c\xf6\xe6\x47\x2c\xa8\x59\x9d\xfa\xe6\x5b\xd5\x13\x8a\xcf\x17\xf1\xa1\x11\x83\x41\x91\xa1\x06\x0a\xee\xc9\xa9\x7d\x30\xe6\x85\x34\xce\xf7\xbb\xe8\x85\xbf\x06\xc8\x34\xab\x78\x4a\xe1\xdf\x65\xb9\x75\x11\xba\xc4\xa0\xf7\xdb\x8a\x6c\x8c\xcf\x83\xf4\x76\xf4\xd8\xe7\x17\x72\x1e\xcb\xbc\x12\x16\x90\x53\x15\x63\x33\xbd\x6a\x6c\xbb\x1d\xec\x77\xde\x7f\xbf\x10\x95\x7a\xf3\x09\x93\x6e\xaf\xbe\x74\xb4\x81\x8a\x79\x6c\x81\x9a\xf9\xce\x1c\x09\x6e\xd6\x9b\x46\x93\x23\xab\x9e\x6b\x0d\x87\x26\x23\x00\xf1\x7a\x83\xee\x31\x43\x4f\x22\x43\x1b\x98\xbb\x66\x03\x57\x7d\xd3\xe4\x07\x8f\x72\x65\x8a\x27\x39\x53\x2b\x68\x1a\xdc\xbd\xe1\xbe\x85\x5e\xf3\x8a\x71\x2c\x79\xc0\xee\x40\x4a\xd9\xb8\x93\x18\xa0\x4e\x16\x01\x32\x0e\x9b\x80\x4d\x7a\x78\x1c\xb9\x39\x3d\xe2\x81\xa6\x39\x37\xf8\x98\x62\x45\xc2\x2e\x91\x15\x55\xfe\x33\xe8\x85\xe1\x5a\x4f\x6c\x66\x99\xc4\xe2\xfe\xd2\xde\x70\x4b\x3c\x3b\x0d\x5c\x59\x33\xc4\x4b\xdd\x40\x02\x5b\x9d\xb8\xd7\x6e\xe2\x77\xca\x4d\x0b\x63\x3b\x6e\x5a\x1e\x7e\x60\x5c\xba\x94\xc4\x24\x54\xca\x8a\x15\x8b\x21\x4b\xa1\x4c\x9a\x5d\xa8\xfe\x4b\x6c\x56\x23\x10\x81\x48\x8a\xc7\x7d\x28\xbe\xd1\x2d\x8b\x4f\xfc\x24\xec\x0b\x0a\x65\x83\x17\x3e\xb1\x52\xe9\xb8\x47\x1f\x50\x6f\x57\x42\x0f\x0c\x64\xc4\x33\x6f\x45\xbe\xdb\xec\x62\xf2\x7b\xc5\x84\x10\xa9\x26\xd0\xdb\xfa\x77\x20\x76\xd0\xdb\x19\x24\xbf\xe8\x2a\x28\x88\x1f\xa5\xf5\x79\x4c\x44\x2d\xdf\x64\xc9\x2d\x93\x05\xb1\xaa\xc4\x09\xc2\x64\x36\xc9\xfb\xa6\xa3\xfe\x79\xc2\x9a\x98\x5e\x1a\x12\x13\x02\xd0\x23\x45\x94\x59\x94\xfe\x0b\x04\xce\x23\x24\x0a\x63\x36\x50\x9d\x82\x91\x02\xa9\x77\x42\x0d\x64\x3b\xc2\xb2\x3f\x6d\xe3\x2f\xb2\x7c\x71\xcf\xa4\x24\x23\xb4\xc0\xb1\xf0\x40\x76\xa2\xbe\x80\x8e\x6f\xab\x63\xef\xe8\x14\x1f\x46\x93\x67\xbd\x65\xe7\xb3\x30\xef\x1a\xb1\x68\x19\xa2\xf4\xec\x55\x39\x9e\x27\x70\x42\x92\x91\xfb\x35\x21\xb2\xfd\xf8\xc8\xdc\x2e\xc1\xee\x88\xe3\x99\xe2\x30\xb0\x4f\x5a\xbc\x2b\x9d\xe0\xfe\xaa\xd5\x0e\xc4\x31\x15\xf1\xa0\x7d\xfc\x93\x3d\x9e\x07\x33\xfb\xd9\xff\x7e\x6c\x92\x21\xc7\x1c\x9c\xfc\xd3\xd7\x69\xdd\x57\xac\x96\x9f\xa7\x26\x17\x7c\xf4\x53\xee\x00\xb1\xd6\xea\x73\xec\xce\x88\x80\x90\x49\x40\xbf\x30\x73\xe5\xb4\x86\xff\xb5\x4c\xdb\xac\x50\x25\x63\x67\x1e\xfd\x20\x82\xdb\xef\x9b\xf8\xc9\xb9\xd0\xa2\x65\x5b\x25\xca\x8b\x03\xdf\xc5\xa0\x0b\x0c\xa8\xdf\xb2\x77\x25\x93\x1c\x8c\x50\x6e\xe9\x93\x55\x53\x9b\xca\x13\xfb\x60\x6d\x66\x22\x31\x3c\x77\x20\x7e\xc1\xbb\x4b\x7d\x51\x1e\x9e\xda\xeb\x84\x30\x44\x2c\x74\x5a\xb3\x4f\x97\xc5\xb9\x0a\x9c\xc1\xd7\x4a\x1b\xa6\xf5\x44\x94\x32\xfd\x36\xf8\x8e\xae\xbc\xfe\x3e\x04\xef\x5b\xde\xb4\xfa\xec\x96\x46\x24\xd4\xf4\x33\x58\x71\xa1\x7a\xc3\x7b\x23\x75\x1a\x52\x7e\xf1\xfa\xd5\x9f\x1e\x25\x7d\x40\xe0\x97\x64\x53\x79\xb6\x8a\x69\x54\xa0\xcb\x63\x32\xa3\x69\x57\x4d\xd7\x88\xd5\xf2\xb1\xc2\x03\xd4\x5a\xf5\xd3\x34\xf8\x36\x71\xbd\x20\x57\x07\xce\x99\xd5\x36\x3f\xd4\xd6\xbe\xd4\x18\xc5\x01\x80\x8b\xac\xde\xe3\x83\xaa\x2d\xd6\xc0\x42\x79\xed\x0d\x6a\x6a\x33\xa3\x69\x5c\x14\xfc\x95\x8e\x8f\x68\x7a\x81\x6b\x93\x4a\x6f\x33\xd7\xc0\x23\x77\xb3\xc1\x2b\xac\xbf\x39\x5c\xf6\xf0\xd9\x48\x18\x80\xcc\x68\x79\xa7\xc7\x6f\x3c\xad\x4b\xf7\xec\xdd\xcb\xa4\xbb\x60\xe7\xe8\x47\x54\xc4\x8c\xaa\xe9\xb8\xe5\xa6\x75\x9b\xdb\x71\x3a\x27\xc3\x4a\x6e\x21\x1c\x94\x4f\xff\xf3\x0f\xf0\x37\x2b\xbc\xc1\xfd\x77\x6e\xfe\x1f\x00\x00\xff\xff\x98\x4d\x3c\xa5\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0x2b, 0xed, 0xc9, 0x70, 0xc2, 0x6a, 0x5, 0x97, 0x9b, 0xa4, 0x57, 0x6c, 0xb7, 0x89, 0xbf, 0xd7, 0xf2, 0x6d, 0xa9, 0x9e, 0x20, 0x94, 0x37, 0x15, 0xde, 0xc8, 0x9a, 0x5c, 0x6a, 0x28, 0x6e}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4b\xcf\xba\x38\x18\xc5\xf7\x7c\x8a\xd9\x9b\x09\x82\x8a\xb0\x6c\x69\x81\x82\x20\x2d\x37\x71\x27\xa0\x45\x2e\xa2\x78\x29\xf2\xe9\x27\xef\x3b\xc9\x7f\x33\x73\x96\xbf\x3c\x39\xc9\x93\x93\xfc\xfe\xfe\x09\xc4\x36\x09\xfe\x32\x31\x8b\x89\x45\x4c\x10\xe3\x5f\x2a\xf9\x84\xa0\x0a\x99\x26\xe8\xbe\x1c\x08\x02\x01\x27\x0c\x04\xee\x38\xcb\x97\xe8\x06\xb0\xde\xbb\x63\x18\x7e\x83\xfb\xb8\x25\x02\xd1\xdc\xf5\x86\x23\xa9\x3f\x65\x00\x28\xde\x41\x0a\x84\xe4\xcd\x38\xf2\x21\xb0\x81\x92\x60\xb3\xf6\x5d\xaa\x1a\xcd\x69\xe5\x7e\xf2\x2c\x18\x7c\x96\x08\x2c\x72\x94\x52\x8a\xb0\x98\x50\xa1\x06\x63\xd9\x1b\x75\xae\x72\x4e\x97\x58\x38\x75\x19\x48\x7e\x43\x84\x1f\x63\xe1\xc7\xad\xf0\x63\x32\x65\x75\x19\xf8\x4d\xf9\xc3\x94\x3f\xac\x01\xb3\xcf\x88\xc0\xe0\xb7\xcc\xc3\xa2\xfb\x53\x26\xe5\x2a\x9f\x30\x02\x7b\xc8\x83\x14\x82\x67\x0c\x15\xd6\x15\xbd\xf5\xae\x1c\x7f\x32\x67\xe0\xfe\xcb\xfd\x18\x34\x58\xf8\x84\x40\xd2\x80\x00\xf2\xf6\x51\xb7\x57\xdb\x10\x4b\x28\x01\x8a\x2d\x00\xf6\x26\xa0\x3a\xf8\x39\x30\xb9\x67\x02\x8a\xc1\xac\x5c\xb6\x79\x69\xf5\xaa\xd7\xf2\xf5\xd1\xb6\xab\x83\xea\x20\x8f\x0d\x3b\xfe\x11\x51\x73\x7d\x1c\x17\xbb\x19\x22\x5d\x93\x8e\xe1\x5b\xeb\xfc\xb1\xd2\x6f\xe3\x72\x67\x57\xa1\x3c\xf4\x1e\x29\xf8\x23\xae\x48\x92\x14\xac\x6a\x4e\xdf\xf5\xf0\x4d\x41\xd3\xe8\xfc\x2a\xa7\xb7\x87\xa9\xa8\xb7\x9d\xd6\x39\xed\x10\xca\x51\x5d\x49\x41\x3d\xcf\xaa\x36\x6c\x9e\x9b\xde\x1b\xbf\xab\x50\xb7\x55\x24\xb6\xde\x65\xdc\xbb\x83\x7d\xb0\xf6\xf6\xe5\x3c\xe2\x70\x63\xe8\xe8\xde\xe9\x6d\xc8\x34\xc0\x13\x15\x7e\xa7\xfe\xb6\xa3\xba\xf1\x4d\xa5\xa8\x8a\xba\xe9\x95\x45\xe5\xe1\x3d\x47\x8b\x93\xc6\xda\x6d\xc3\xcb\xc6\xdf\xd5\xcf\xeb\xd8\x9e\xc5\x70\x0b\xbb\x61\x7b\xef\xba\x72\x43\xb3\xed\xcd\x00\xe7\xdb\x3d\xed\xb4\xf8\xca\x4d\xe5\x7d\xbe\x9f\xa4\x64\xbf\xb8\xc8\xf0\xd9\x9f\x4b\x28\x0e\xe9\x86\xa1\xbb\xbe\x34\xec\x57\xf5\x99\xfa\xb8\xc4\x71\xb3\xe2\xe7\x5d\xea\x7e\x4f\x81\x65\x27\xb8\xfe\x5e\xd9\xfd\xb1\x31\x07\x56\xb8\xa5\xfb\x3d\xdc\x6c\x20\x9d\x16\x2e\x5c\xf4\xd7\xe2\x14\xd4\x76\x1e\x08\xeb\x19\xbd\x0a\xf6\x52\x5f\x19\xf0\xea\xb9\x7c\xae\x02\x63\xad\x5d\xd9\xc5\xbc\x5e\x14\xaa\x50\x82\x00\x05\x70\x58\xdb\x9e\x4f\x6c\xc7\x07\x6b\x5b\x02\x4a\x52\x21\x81\xa1\x2c\x28\x06\x82\x58\x03\x02\xd5\xcf\x74\x4e\x94\x60\xab\x01\x09\xe4\x7c\x84\x1c\x5b\x90\x96\x08\xf0\x9c\x78\x22\x87\x90\x26\x0e\x10\x58\x38\x22\x47\x52\xca\x96\x0d\x84\x5c\x58\x03\x48\x10\x52\x2e\x89\x7a\x52\xc6\xa1\xf2\x68\x9d\x6d\xba\xe0\x19\x2a\xb3\xaf\x44\x68\x10\x01\xcd\x51\xca\x96\x0c\x9a\x6b\xb1\x23\xc4\x2d\x6c\xa3\xc9\xb3\x69\x90\x8a\x55\xb0\xe4\xbc\x7c\xec\xfa\xe9\x93\xab\xd6\xb3\x16\x4c\x06\x00\xc0\x7a\x02\xff\x17\xe8\x83\xa5\x6d\x46\x0f\x3b\x22\xc5\x0a\x51\x0c\x25\x53\x24\x00\xac\x09\xfc\xf9\xed\x49\x06\x3b\xbd\x4f\x66\x75\x0c\x2d\xfc\xd0\x3b\x0e\x93\x93\x35\xf4\xc5\x4d\xde\x4c\xdb\xc8\x5d\x32\xf3\xa6\x30\x7f\x5d\x8b\xd5\xb4\x9e\x3e\xfb\xe8\x75\x25\x91\xe4\x79\x4e\xb2\x6d\xce\x8b\xf5\xf9\xc0\xf4\x5e\xcd\xea\x58\xd1\x82\x8f\xa5\xdd\x4c\x84\xdd\xbd\xf9\x45\xc8\x06\x61\x3f\x83\xfc\xc0\xc0\xd7\x67\x4b\xc5\x30\x37\x71\x6f\xee\x16\x7a\x44\xbc\x4c\x8f\xa4\x33\x93\x79\x18\xc5\x79\x47\x35\xef\x58\x91\x31\x7a\xd2\x36\x3c\x2c\xbf\xaf\x43\x55\x5e\x2f\x47\xc7\xa6\xf5\x26\x24\x27\x23\xa3\xb9\x61\x18\xa8\x3e\x3b\xdb\x67\x74\x59\xee\x69\xf9\x7c\x31\x5b\xc9\xa4\xe3\x41\x6e\xe9\xdc\x42\x76\x31\xc4\x5e\x7b\xe4\x7a\x5a\x8f\xcb\x4d\x96\x95\x56\xf3\xe6\xaa\x2e\xbf\x55\x50\x6f\x49\x71\x98\xd8\xf4\x02\x89\x46\x82\xf7\xb6\xd8\x6b\x9b\x60\xff\x51\x2f\x8c\x4f\xb6\xe4\x7f\x10\x32\x5f\x65\xe3\x63\x67\xa1\x89\xb9\x83\xf3\xe6\x64\x37\x32\xca\x1e\xaf\xb1\x98\x4e\x7c\xbd\x92\x1d\xb8\x06\x8b\x57\xf0\xa0\x47\xd6\x1b\x29\x1b\x70\xe1\xac\xbb\x4e\x9e\x9e\xed\xf5\xfd\x91\x0a\x85\xdf\x33\x30\xa1\x76\x88\xbc\xd5\xd9\xee\x5f\xa9\xdb\xb6\xbb\x3a\xc3\x75\xa7\x32\x54\x32\xe9\x57\x5c\x38\x40\xff\x95\xd9\x3f\x01\x00\x00\xff\xff\xd2\xc2\x32\xdc\xe9\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x9e, 0x8e, 0xbf, 0xd9, 0xa5, 0x30, 0x3a, 0xa, 0x22, 0x70, 0xfc, 0x83, 0x77, 0x14, 0xc7, 0x0, 0xa7, 0x81, 0xda, 0x81, 0x77, 0x32, 0x6a, 0x9f, 0x34, 0x87, 0x46, 0x17, 0xf5, 0x2a, 0x75}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\x20\x10\x20\x28\xb6\xb8\xe4\x24\xd2\x05\x04\x74\xe4\x28\xb2\x48\x4f\xef\xf1\xd6\x3e\xed\x69\xfe\xee\xfb\xcf\xff\xc6\x89\xb2\x6a\xfe\x71\x21\xf8\x63\xbb\x6a\x00\x3c\xf1\x8f\x2e\x46\xff\x1e\xe4\xad\xaa\xe2\x04\x54\x0e\x00\x9d\x07\x8e\x08\x6e\xbc\x7c\x45\x99\xf4\x25\xf4\xae\x22\x63\x59\xce\x43\x42\x11\x74\x77\x34\xaa\xfd\x80\x6d\x33\xc7\xa8\x71\x73\x02\x43\xc7\xf6\x8f\xee\xdf\x4b\x8e\x30\xc3\xf2\x30\xe4\xdc\xc6\xc6\xaf\xae\xa6\xd5\xec\xe5\xaa\xef\xa7\x6e\xde\x26\x17\x39\x5e\x01\x68\x5b\xa6\x6a\xb0\x60\x98\x79\x9c\x18\x0c\xba\x57\xba\xd1\xc6\x60\x9d\x9b\xf5\x7d\x13\xf4\x48\x21\x2b\xf5\xd5\x97\xeb\x69\x33\x32\x21\x1c\x2f\xbd\x5c\x2c\x6d\x94\x43\xc9\x92\xcb\x62\x11\x6d\x8a\x65\x84\xa9\x67\x3a\xdb\xa5\x41\xe5\x13\xdc\x75\x7e\x07\xc3\x61\xd8\x2b\x80\x39\xec\xcf\xed\x03\x91\x2c\xfc\xdd\x10\x4d\x68\xb7\x7b\xb5\x55\xd6\xbe\x8d\x7a\x6d\x96\xae\x38\xc6\xc1\xee\xc7\xd7\xd4\xf7\x19\xe5\x7c\x5e\x03\x0b\x8a\x61\x0a\x7a\xda\x6b\x2a\x1e\xff\x15\x53\xe2\x5b\x68\x89\x71\xeb\x17\x29\x32\xee\x08\x03\xca\x15\x26\xe6\xc1\xca\x5b\xbe\x9f\x5f\x2f\x13\xbd\xf6\x59\x15\x46\xa0\x5d\x89\x29\xc9\xbe\x58\x5f\x8d\x3b\xcd\x14\x3f\xba\xa9\x96\x69\x57\x38\xc8\x20\x41\x35\x0e\xfd\x36\x29\x92\x98\xb5\x1c\x99\x87\xb4\xc2\x2d\x75\x37\x62\xfb\x00\xbd\xbe\xb3\xf5\x69\xb2\x24\xdd\xb8\x25\xdf\x94\xb8\x83\x3b\xaa\x00\x1c\xc0\x81\x51\xe5\x80\xc3\x0f\x62\x92\xe4\xbf\x13\x9d\xf7\x11\x96\x88\xe2\x4c\xe7\x75\x25\x67\x51\xef\x37\xfe\xbd\x7d\x26\x18\xfa\x2a\x1a\x58\xf7\x14\xb1\x08\xd7\x5d\x0d\x93\x1f\xbf\xe7\x1e\xb3\x54\x67\x25\x5e\xda\x5a\x73\xdb\xae\xe9\x73\x19\x51\x7e\x16\x27\x7c\x40\x9e\xac\x34\xb4\x66\xd5\xdf\x0d\x9c\x5f\x24\x53\xe4\x8c\x29\xc7\xaf\x0e\xa4\x86\x20\x6f\x6a\x61\x3e\x83\x56\x31\xe2\x08\xe0\x4f\xf5\x58\x63\x02\x8f\x1f\x44\x25\x47\x1a\x8e\x67\xc1\x7e\x39\xa8\x8d\x08\xbb\x90\x43\x46\xd8\x73\xd6\x05\x72\xbc\xcc\x12\x77\x1b\xe9\x87\xb6\x0e\xcd\xb2\x2c\xca\xc3\x05\x73\xe5\xd7\xa9\x6d\xf6\x74\x01\x0d\x2d\x36\x31\xbe\x88\xe4\x74\x7e\xa5\xfe\x49\xde\x34\x3a\x22\x03\xc6\x79\xe7\xa2\xd7\x5b\xe5\xfd\x3e\xdc\xfe\xee\xf8\xb3\xec\xa3\x67\x09\x4a\x08\xd7\x0f\xd5\xe0\xf4\x0c\x8e\x42\xf0\xa8\x50\x91\xc7\x8f\xdb\x90\x53\xef\xe8\xb9\x26\x51\xed\xb2\x43\x88\x9d\x88\xa9\x90\xd1\x6b\x81\x1c\xaf\x0c\xb5\xc9\xd5\x7e\x90\x1f\x97\x43\xc1\xb3\x9e\x87\x33\xa1\xa2\x71\x9e\xbe\x41\x49\x14\x3b\x86\x39\xee\x98\x5d\x5c\x46\x91\xb1\xbe\x60\x21\x94\x8e\xc8\x4f\x1f\x24\x62\x01\xa1\x0d\xd5\x34\x00\xa3\xcc\x01\x3b\xe3\x80\x11\xdf\xa7\x4a\xaf\xd9\x3b\xfc\x52\x0e\x80\x71\xdd\xd1\x4c\xd6\x27\x1d\x1b\x53\x8c\x23\x0a\x63\xee\xf2\xcd\x3c\xbf\xde\x2f\x52\x52\x79\x87\x41\xbe\xdb\x64\xd8\x91\x50\x76\x06\x65\x1c\xf8\x2d\x37\xb0\xb6\x34\xc9\xcb\x2e\x0a\xee\xf9\x8d\x76\x6a\x8c\xf5\x3e\x19\xfe\x82\xb5\xb2\x6e\xf5\x8d\x3d\x0e\xa2\xa4\x37\x32\xbd\x2c\x65\x92\x7e\x11\x89\xb8\x43\xe8\x6f\xea\x86\xa1\x18\x66\x5f\x6b\x8c\x1d\x0d\x49\x2e\x02\xad\xe9\x30\x12\x17\xea\x43\xcf\xf7\xc3\x77\x69\xd0\xc8\xab\xa1\x0f\x09\xdd\xb6\xf3\x2e\x50\x70\x52\xfe\x15\x9b\x69\x8f\xbc\xe7\x6d\xcb\xd5\xae\x8f\xf1\x08\xd4\xb4\x3c\xde\xe4\xcc\x84\xcc\xb9\x5c\xc9\xf2\x2e\x77\x92\x8d\x59\x55\x21\x03\x73\x87\x6c\xae\x07\x62\xda\xed\xf0\x39\x3e\xe9\x12\x03\x2c\x59\x9f\x03\xe8\x91\xbd\xa8\x3b\x4f\x51\x6a\x7c\x4d\xeb\x89\xd4\x50\xd4\x39\x0b\x11\x17\x54\xf8\x18\x8f\xd7\xee\x68\xf7\x23\x2b\xa3\xf1\x4a\x78\x23\x7e\x3b\xe9\xf7\xd9\xf1\x37\x2e\x97\x77\x52\x34\xcd\x3a\x82\xc1\x47\x72\xa8\x0c\x8f\x39\x5e\xe4\xe9\x16\x85\x2b\x26\x68\xb3\xa6\x6f\x51\xb2\xc8\x38\x7b\x26\x32\x66\xb1\xbe\xd0\xcb\x13\x29\x80\x51\x06\xc2\xf9\x7a\x7c\x85\x54\x96\x92\xb0\x7a\x84\xd7\x26\x0a\xc0\x41\x74\xf0\xc6\x8e\x12\x0b\x6a\x07\xa5\x30\x5f\x19\xe6\xce\x88\xba\xfe\x9d\x16\xcc\xc4\x34\xde\x96\xb5\xcf\x46\x58\xf0\x03\x04\x72\x48\x30\xaf\x55\x58\x07\x8c\x50\x3f\x3b\x24\xe6\xcd\x33\xa3\x68\x46\x7e\xef\xb5\x37\x72\x45\x8a\x3b\xa5\x9e\xef\x9c\xe3\xa5\x9a\x7d\x4a\x06\xa6\x78\x81\xb7\x47\x07\x13\x03\x95\x2d\xee\x0b\xad\x55\x5a\x79\xe1\xe9\x4c\x8a\x12\x46\x17\x4e\xbb\x18\x47\xb7\x52\x43\x80\x10\xd9\x56\x71\x97\x6c\x7f\xf2\xa0\x6f\xb2\xbc\x2e\xd4\x69\xaa\x9c\x8e\xaf\x22\x11\xd4\x0f\xf4\xe3\xd7\x2f\xac\x05\xb6\xe0\x92\x4a\x4c\xf9\xaf\xc8\xc0\xa4\x5a\xb6\x60\x8e\x41\x8c\x1e\x96\x62\x40\xba\x34\x1e\x1b\xd7\xe0\x42\xc5\xdd\x45\xed\x6a\xf9\x86\xad\x59\xdb\x61\xa0\x57\x87\x86\xad\x11\x04\x53\xa4\xe4\x2e\xb5\x76\x62\x89\x97\x08\x6d\xdd\x3c\x97\x19\x56\x81\x2f\x96\x77\xdb\x6a\x0a\x22\xa2\xa8\x69\x70\xcc\x94\x79\xa0\xe4\x47\x6b\x03\xab\x32\xe7\x90\xf2\x7d\xf7\x38\x1d\x8f\x55\xe8\xe2\x07\xf0\xee\x21\x7f\x56\xcb\x15\x26\x9f\x95\x64\xed\x27\x8c\xbd\xb5\x6f\x73\x33\xd5\x6e\x84\xf4\x01\xb9\x29\x5f\x9f\xaf\x22\x0e\x8d\x07\xbc\x7b\xbf\x5f\xef\x7e\x1a\x3f\x77\x95\x5a\x36\x56\xe2\x6d\x73\xc2\xcf\x72\x28\x65\x4a\x84\xd4\xcf\xad\xdb\x69\xde\x67\xf0\xb1\x32\x47\x62\x3e\x9b\xd4\x21\xcc\x6b\xf3\x0b\x22\xd4\x94\xe3\xd3\x8e\x12\x5a\xe8\x89\x07\xad\x69\x56\x8c\xc7\x3a\x41\x9c\x18\xed\xcb\xb8\x07\x50\x4d\xdf\xb9\x7a\x7a\x32\xde\xb2\x2f\xe3\x37\x52\xe4\x9d\x56\x76\xf2\xed\xdd\x07\x72\x0b\x03\xd0\x54\xa1\x11\xb2\x5f\xde\x49\xfc\x91\x4b\xe8\x13\xbd\x8f\x0b\x8a\x8f\xce\x54\x15\x7d\x7f\x54\x30\x61\x3b\xb5\x6f\xc3\xcd\x9c\xe5\x50\x29\x5b\x1f\x03\x7f\xff\x22\xff\x58\x11\x4d\xe1\xff\x73\xf3\xdf\x00\x00\x00\xff\xff\xd6\x07\x85\xc2\x8f\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x16, 0x8c, 0x88, 0x38, 0x73, 0x25, 0x92, 0xcd, 0xb7, 0xd, 0xe6, 0xc9, 0x75, 0x34, 0x41, 0x48, 0xb7, 0xbd, 0x98, 0x14, 0xc5, 0x87, 0xe3, 0x29, 0xdc, 0x69, 0xdc, 0xbd, 0xc1, 0xd2, 0x57}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xd3\xb2\x4a\x16\x85\x73\x7e\xc5\xe4\xd4\x14\xc8\xab\x22\xc1\x04\xbb\xe9\xe6\xa2\x36\xd2\x82\xdc\x32\x2e\xaf\x8d\xa0\xa8\x20\xd7\x5f\x3f\xe5\x37\x55\x73\x82\x73\x56\xf8\xd4\xaa\x95\xec\x5d\xcf\xbf\xbf\x41\xc4\xb4\x9d\x7f\xe9\xe4\xec\xdb\x86\xad\x83\x4f\xfe\x50\x81\xda\x36\xce\x17\x5d\x87\x7b\xcf\x61\xb4\x11\x70\x9b\xd1\x96\x1c\x92\xbb\xce\x7e\x77\xef\x93\xf7\x30\x92\xb6\xa8\xcc\x68\x01\x07\xf1\xfa\x5d\xd6\x37\x53\x1b\x65\x04\xac\x33\x00\x43\x2b\xd0\xb3\x3d\x12\x88\x71\xc0\xd8\x81\x8c\x77\x9c\x29\x4e\x9b\x3f\xb4\x32\x56\xf8\x64\xf8\xe0\x23\xee\x04\x08\xa8\x8f\x89\x33\xc4\xca\x67\xce\x14\xa3\x4a\x75\x84\x99\x0f\xbf\xc6\x28\xcf\x02\xad\x60\xa2\x3e\x4c\x27\x1f\x26\x5a\x19\xe9\x17\x3a\xcb\x97\x5d\xfe\xcf\x28\xa6\x13\xa9\x80\xfd\x6f\xec\xe9\xeb\x97\xbf\xc6\x84\x14\x13\x46\x61\x6d\xc2\xea\x42\xf4\x89\x5a\x81\x19\xf4\x71\xb8\x91\xf3\x85\x1c\x29\xd4\x7f\x38\x4c\x54\xa7\x3e\x19\x39\x27\x37\x0a\xb2\xa9\x7b\x6f\xd3\xb3\xb3\x1f\xcc\x08\x12\x80\x5d\x00\xd6\x36\xc2\x23\x7c\x0b\x07\x78\xda\x08\x98\xbe\x2a\xed\x6b\x7f\x9f\x86\xbe\x4a\x13\x37\x35\x2c\xf1\xa1\xea\xc9\x74\x3d\xc9\xe4\x75\x2d\x0c\x3c\xcb\x6a\x3f\x8f\xf2\xeb\x27\x10\xf6\x51\x73\xd0\x8e\x6d\x2d\xcd\x4d\x19\x49\x65\xc9\x95\xf1\xbc\x91\xbb\x2a\x4d\xac\x4d\xe6\x55\xa9\x11\xb1\x78\x7b\xb1\x4f\x29\xaa\x9a\xdc\xdc\xa5\x3f\xeb\xb5\x27\xab\xbb\x1d\x1f\x3a\xfc\xf4\x1f\x2b\xa1\xd1\x44\x93\xdf\x03\x63\x53\x0e\x7a\x37\x34\xa1\x7f\x4b\x78\x88\x2c\xa9\x4b\xc4\xf6\xb8\x9c\x23\x3b\xe8\xf3\x9d\xfd\xd9\x1f\xb5\xa6\xb4\x37\xb1\xdc\xac\x5f\xe3\x50\xf6\x07\xf5\xe2\xac\xd0\x8a\x3f\x84\x78\x12\xbd\x71\x3f\x74\xc7\x57\x13\x39\xd6\x54\xed\xbc\x78\x48\xa5\x48\xce\xba\x0f\xae\x53\x77\xc3\x93\xab\x6d\x7d\xb6\xb5\x95\xec\xa3\xa0\x4a\x3b\x08\xfd\xd8\x29\x7e\xf5\xc6\x0d\x9f\x33\x69\x0d\x41\x9e\xf5\xfb\x3a\xdc\x3a\xde\x33\xc7\xa9\x46\xdd\xcf\x03\x3b\x77\x5b\x0e\x3d\xf5\x40\x67\x7d\x7e\xbc\xdd\x4e\xc4\x87\x27\x5d\x02\x71\x1b\x5d\xdb\xd6\x6b\xcb\x7d\xd3\xb3\xfa\x58\x3e\x22\x7c\xb8\x55\xc2\x2a\x93\x64\x77\xe8\x2c\x6f\x9a\xc5\xc6\xcd\xcf\x3e\x2b\x94\x62\xe5\xda\x92\xb2\x14\xf6\x94\xe0\xd0\x33\xfb\xa3\x7a\x0b\x7e\x76\xd6\x04\x9c\x22\x00\xb3\xe2\xf1\x73\xe4\x71\x3e\x62\x1e\x63\x21\x38\xcb\x2e\x30\x4b\x42\xc0\x30\xf0\x90\x53\x24\x7f\x4f\x57\xec\x19\x0b\x29\x62\xa6\xae\x77\x26\xb0\x8b\x81\x46\xaa\x23\xce\x5b\xc4\x89\x81\x58\x8e\xc1\x87\xeb\xf7\x2f\x04\xcb\xa3\xc4\xc4\x10\x72\xc4\xa8\x1b\x68\x7e\xd2\x86\x7d\x29\xbf\x74\x23\x7b\x5c\x94\x51\x8a\xe8\x12\xd8\xa7\x0a\x56\xdf\xb2\x75\x26\xe4\x58\x41\xc7\xf9\xbd\xcb\x14\xa7\xcc\xcc\x72\x10\xf2\x1f\x4f\x47\xf3\xb3\xcf\x4c\xad\x8a\xc3\xd9\x42\xd6\x0e\x00\x4c\x8b\xc0\x3f\x85\x8c\x98\xc5\xfb\xc3\x33\xb1\xcb\x21\x77\x80\x91\xa3\x80\x18\x60\xce\x09\x02\x9c\x9d\x0a\x2f\xac\x7f\x38\xd6\xa2\xb2\xb8\x69\xc4\x8b\x96\x14\x2f\x7b\xcb\x99\x56\xfc\x5e\x2d\x28\x31\x92\x50\x7a\x87\xfd\x9e\xc4\xfb\xbd\x66\x29\xa6\x6b\x26\xaf\xab\x10\xaf\xdd\xfa\xad\x6a\x53\xc7\xd6\xf2\xa7\xf3\x8a\xf7\x4b\x1c\x5e\xce\xdb\xae\xa9\xc8\x86\x22\xf3\x45\x53\x44\xb2\x0b\x52\xac\x75\xdc\x59\xda\xcd\x05\x41\x7a\x66\xce\xc6\xf6\xae\x43\x39\x19\x83\x20\xf5\xb7\x53\x7b\xea\xf1\x74\xbb\x99\x5c\x9d\x1e\x2e\x89\x55\xb7\x09\xd5\xdd\xed\x77\x59\xec\x53\x62\x31\xcf\xe9\xdd\xdf\x41\xfc\xa8\x97\x67\xde\x12\xba\x54\x2b\x79\x69\x4e\xa0\x6e\x69\xa9\x8c\x4c\x78\xa1\x26\x71\xd5\xe3\x85\xc0\x29\x11\x51\x75\x9f\xb7\xd7\xa5\x70\xcc\x41\xeb\xf4\xc6\x34\xe4\xe4\x0e\x57\xf0\x2e\x8b\x14\xac\x5a\x62\xc6\x9a\x19\x9d\x7d\xce\xb7\xa7\xb5\xbe\xd5\xde\x68\x14\x0b\x61\x7d\xa8\x6d\x49\x1b\xea\x6b\xee\x3e\xbb\xf7\x33\x83\x1c\x2e\x07\xd8\x3c\x86\x9a\xd5\x70\xb5\x5c\x25\x94\x1b\x31\xc3\x9b\x1b\xe2\xfb\x5d\x4f\xd8\x67\xfd\xae\x3f\xd5\x91\x39\x65\x01\xe5\x2b\x20\x02\xc9\x94\x9f\xac\xf8\x84\xbf\xdb\x54\x52\xc3\xc7\xf9\x9a\xd1\x7a\x56\xcf\xab\xc9\xf8\x28\xfd\x9b\xfd\x47\xf8\x23\x2e\xe2\xe0\xbf\xcb\xec\xbf\x01\x00\x00\xff\xff\x34\x7a\x14\xed\xe9\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0xf5, 0xf2, 0x98, 0xca, 0x6a, 0x10, 0x83, 0x1, 0x93, 0x2f, 0x2f, 0xd5, 0xfe, 0x14, 0x9a, 0xa9, 0x73, 0x28, 0x58, 0x65, 0xc7, 0x5a, 0x25, 0x72, 0x65, 0x87, 0x19, 0x80, 0x1a, 0x6b, 0xf0}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xab\xd8\x02\x05\x73\x56\xf1\x72\xea\x17\x46\x38\x05\x13\xdc\x8b\x13\xde\x23\x20\x13\xde\x0a\x23\xfc\xea\x7f\xcd\x8b\xe7\x04\x27\xe9\xa4\xb3\xfe\xdf\xbf\x83\xa2\xac\x98\x7f\x5c\x0f\xfc\xb1\x5d\x25\x04\xbe\xf8\x47\x13\xe3\xbf\x04\x31\x14\x45\x9c\x80\x02\x01\xd0\x78\xe0\x88\x60\x8d\xbd\x17\x3b\x65\x29\x3b\x92\x83\x4f\xd6\x2e\x36\x6d\xc7\x90\x45\xf7\x0a\xb5\xe8\xe1\x3a\xdc\x6a\xb1\xbf\x9f\xa9\xe5\x84\x17\xd2\xd7\xee\x31\x08\x6d\x73\x13\x15\x62\x54\x1c\x9b\x3f\xb1\xc8\x75\x85\x1c\x5c\xf4\x8d\x8f\x64\x1d\xe2\xb2\xd5\xf3\xc2\x50\xc5\xf4\x03\xee\xf2\x8a\x5a\xe2\x6a\x61\xb6\xa2\xb3\x80\x11\xe9\x35\xc1\xca\x7a\x54\x43\xc4\x2d\xe2\xf4\x58\x74\x9a\xe8\xa8\x21\x96\x2a\x17\x63\xe5\x72\xbe\x38\x3c\xbc\xa4\xf4\x6b\xf3\xba\xe7\x61\x09\xe5\x59\x6f\x53\x45\xb5\x4c\xa7\xd2\x66\x23\x84\xdc\xc9\x63\x75\x30\xca\xee\xc7\xa7\x08\xcb\x33\x09\x71\xbb\x5c\x8c\x89\x83\x4e\xee\xc4\x53\x66\x75\x87\x96\x5b\x34\x96\xa3\x0b\xb2\xc5\x04\x49\x2f\x24\x62\x72\x01\x52\x47\x0a\x51\x54\x4d\x37\x31\x1b\xb5\x76\xe6\x46\x35\x15\xd2\x86\xb4\xc1\xfc\x02\xe4\xee\x0b\x6c\x52\xdd\x89\x67\x4a\xdd\x76\xb5\x46\xf5\x9b\xe6\x96\xb5\xab\x6b\x16\x0c\xa2\xdc\xfa\x07\xc3\xe0\x33\xe5\x25\x6c\xa7\xf2\x54\xd2\x1f\xd7\x38\x3e\xdf\xd8\x53\x60\x59\x04\xe2\xbf\x6c\x9f\xee\x87\x18\xe0\xaf\xfc\x9b\xfb\x97\xfd\xfc\x3d\x3c\xe3\xed\x10\x5d\xbd\x34\x28\xd5\xe7\x18\xe4\x1c\x45\x00\x0e\x80\x60\x54\x20\x90\x9d\x06\xfa\xcc\x28\x13\x28\x38\x66\x03\x22\x95\xfc\x7a\x0a\xfb\x8b\x08\xfa\xaa\xc0\x3e\xc3\x7b\x0d\x27\xb2\x3e\x07\xc7\xed\x4c\x81\x68\x3a\x07\xef\xef\x45\x2b\x13\x5d\x44\x85\xdd\x7c\x0e\x78\x7d\x91\x38\xd9\x1a\xaf\x3c\x4b\xc1\x60\x97\x34\x22\x84\x4d\x64\x74\x0f\x4f\x25\xeb\x66\xd5\x5c\x43\xf7\x48\x36\x65\x9e\x37\x2b\x2c\xa4\xc3\xa2\x6f\x4c\x0e\x31\x06\x7c\x78\x7a\x7f\xf1\xb8\x91\xea\xfa\x32\x8f\xbc\x19\x99\x2e\xd5\xe7\xb6\xf2\x4e\x10\x46\x3b\x27\xb4\x65\xd4\x12\x3e\xce\xc2\x74\x2f\xf4\xb8\x96\x4e\xc4\xa6\xab\x8b\x68\x16\x57\xa3\xcf\x9d\x28\xb0\x81\x3e\x4c\xba\xf4\xc8\xc2\x9d\x84\xfb\xdb\xaa\x51\xa2\x1c\xa0\xe7\x63\xfe\x88\xbc\x9d\xad\xfe\x36\x8f\x7b\x0c\x88\x49\xd9\x0b\xea\x1b\x1f\x1b\xee\x61\xfe\xc0\x9e\xc0\x6b\x5c\xaf\x8b\x8b\x09\xdb\x7f\xb9\xfb\xf2\x4f\xa8\x1a\x7d\x37\x72\xd6\x4b\x9a\xe2\xae\xa6\x17\xd9\x14\x26\x64\x27\x15\x22\x57\xac\x19\xda\x23\xd8\x6b\xa7\xd2\xa5\x8f\x92\x4e\x90\x6d\xe5\x08\x94\xfc\x65\xed\x0b\x96\x3a\x42\xbd\x57\xea\xe6\xd7\x05\xb7\xa7\xa9\xe5\xf1\x64\xee\x98\x18\x9a\xc8\x83\xea\x21\x1a\x8f\x2a\x9a\x19\xf0\x55\x2c\x02\x8e\xbf\xea\x94\xdc\x68\x48\xa3\x55\xbd\xea\x39\x09\x85\x29\x9d\x32\xdd\x25\x4a\x4d\x75\xd1\x9a\xaf\x51\x9e\x89\x80\x09\x8e\x88\x7d\xfb\x3a\x97\x91\x4f\x0a\x01\xee\x33\x02\xa2\x4f\x83\xba\xc2\x35\x01\x77\x87\x48\x32\x8d\xde\xbc\x79\x77\x11\xd8\x99\x24\x12\x2a\xc3\x63\x27\xeb\x32\x47\x87\xcd\x52\x64\x40\xff\xcc\x1e\xe8\xc6\x53\x7b\x09\xc2\x77\x67\x11\xb8\x7d\xfd\x67\x41\xb2\x36\x1c\x84\x4f\xa9\x9a\xb1\x6c\xa0\xe0\x47\xdc\xae\xd5\x12\x7d\x15\xdd\xdf\x6e\xda\x3e\x3c\x41\x69\x9e\x93\x71\x41\x59\xe3\x99\x9e\x05\xc3\xef\xaf\xf1\x11\x4d\x38\xa2\x4c\x32\xf3\xf9\xf1\x7a\xbd\xec\x3e\x66\x42\xd9\x69\xbc\x42\xdb\x36\x1b\xfb\x82\x79\xe5\x76\x1f\x2d\x78\x9e\xf8\x7c\xfb\xf5\xe8\x3b\x19\xb3\xcf\xcc\x4b\x3b\x81\x8e\x14\x2d\xff\x89\xc9\x6d\x0d\x88\xff\x29\xc6\xa5\x0a\xcd\x05\x10\xf9\x56\xb9\x7e\x50\xb4\x44\x42\xcb\x7b\xc8\x8a\xb1\x7e\x88\xcd\x9d\x56\x7e\x12\xf6\x4e\x75\x10\xa3\x91\x27\x1b\x61\x24\xb4\xc0\xb6\xfa\x63\x1e\xc8\xd4\xff\x46\x48\x9d\x19\xa0\x5f\x04\x99\x23\xa7\x89\x5a\x6c\xef\x59\x58\x15\xa3\x44\xc0\x10\x72\x45\x6c\x23\x8f\x9e\xd6\x9a\x85\xc6\x5f\xe5\x11\xd5\x9d\xba\xc8\x75\xe6\x2c\xdd\xa3\xa1\x61\x77\xd2\x0f\x44\xbb\x50\x39\x58\xea\x1e\x72\xd8\x33\xa6\x97\x27\xff\x21\x33\x83\xb4\xcf\xf6\x71\x2e\x2a\xfd\xa5\x86\x60\xa5\xe3\xf1\xbd\xa9\x16\x8a\xa9\x8f\x58\x2c\x65\x20\x60\x81\x19\x78\x98\xf2\x1d\x8d\xcf\x0b\xe1\x46\xbc\x02\xe6\xdb\x22\x45\x86\x56\x26\xee\x35\xe9\x01\xf8\x3a\x59\x83\x8e\xe3\xd7\xe6\x16\x46\x14\xc9\xa2\x0e\x94\x36\x7b\x73\x8f\xd4\x73\x3e\xbc\xba\xed\xa7\xf9\x35\xf6\xae\xa5\xae\x67\xd2\x22\xc4\x8c\xfa\xf5\xa5\x63\x17\x6d\x28\xac\xb9\x3b\x02\xd0\xd2\xd5\x12\xf9\x2a\x86\x8c\x79\x46\xb5\x25\x35\x65\xd0\x13\x4e\xa7\xf6\x9a\x4c\x52\xc3\xab\xc8\xdb\x26\x08\xd1\x57\x09\x51\x18\xe2\x37\x52\x6a\xee\xb8\x13\x05\x2f\xc5\x1f\xd3\x4a\x71\x43\x5c\x7f\x50\x0a\x12\xf5\xdd\xc6\x25\xbe\x4c\x5c\x78\x7d\x0f\xe3\x24\x16\x1f\xa7\xda\xc0\x74\x46\x86\x0e\x54\xe8\x97\x7e\xbf\x79\xd2\x43\xdd\x43\xa4\xba\x50\x33\x64\x76\x15\x33\x81\x37\xdc\x85\x9e\x28\x7b\xfc\x51\xf0\xfd\xf3\x6c\xc9\xa6\x16\x2b\x97\xde\xe8\x5e\x0d\x1e\x5c\xa6\x9a\x12\x96\xfc\x66\x65\x2d\xa4\x8a\x2d\xe8\xe6\x62\x6a\x28\x35\x08\xdd\x55\xc3\xed\x68\xb0\x72\xf8\x7d\x5e\x3e\x24\xce\x11\xb5\x05\x2a\xbd\x51\xd6\x9a\x3a\x24\xdc\xf8\xd8\xd2\x68\xb3\x1c\x8d\x73\xd1\xcb\x5c\x19\xf7\xc0\x4d\xc8\x7e\xd5\x80\xda\xb3\x30\xf7\x35\x24\x8a\xce\xfe\x99\x28\x68\x31\x70\xed\x28\xf1\x2a\x51\xd1\xe7\x02\x38\x1c\xf0\xaf\x73\xcc\x33\xd1\x2b\x6c\x73\xb1\xe1\x03\x6f\x0f\x35\x7b\x28\x07\xf3\xef\xef\x5f\xaa\xd1\x69\x7a\xea\xcc\x27\x92\x16\x56\x38\x53\x2b\x9f\x47\xea\x6b\xa2\xa5\xc3\x3d\x94\xa6\xd9\xb1\x9a\x60\x8a\xe4\xe8\xfb\x86\x1a\xd5\xa3\xa5\xef\xc5\xc2\xd8\x99\xef\xa8\x2c\x12\xd7\x3d\xa8\xfe\xf9\x07\xf9\x9b\x15\xd1\x14\xfe\x3b\x37\xff\x0f\x00\x00\xff\xff\xf4\xd3\xb7\x4a\x8f\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xff, 0xdb, 0xee, 0x12, 0x78, 0x10, 0x98, 0x8e, 0x9e, 0x70, 0x30, 0x94, 0x15, 0xe6, 0x3a, 0xf, 0x72, 0xda, 0x14, 0x96, 0xea, 0xab, 0xe4, 0xb9, 0x1d, 0x9b, 0x39, 0xe9, 0x63, 0x57, 0x5d}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xc9\x92\x82\x58\x17\x84\xf7\x3c\xc5\xbf\x37\xfe\x28\xd4\x52\x61\xd1\x8b\x73\x07\xe6\x0b\x5e\x65\x10\x76\xca\x70\x11\x07\x10\x50\x86\xa7\xef\xa8\xea\x88\xee\x45\x77\x2e\xbf\xc8\xc8\xc5\x39\x19\xf9\xff\x1f\x21\xaa\x9b\xee\xff\x30\x3d\xf8\xa6\x66\x62\xf0\xe9\x2f\x95\x98\x69\x92\x74\xc6\x18\xee\x6f\x01\x83\x89\x40\x98\x9c\x0f\xe9\x18\x1e\xbe\x0f\x8a\x62\xf5\x69\xd0\xe7\x56\xfb\xde\xac\x7c\x70\x91\xb8\xbd\xca\xdb\x55\x57\x07\x19\x01\xef\x34\x20\xd0\x4a\xec\x60\x0e\x14\x62\x12\x72\x6e\xd3\xe1\x4e\x2e\x2b\xb7\x4d\x1f\x6a\x19\xaf\xc4\xa8\xf9\xe0\x23\xe1\x86\x08\x98\x4f\xa8\xfb\x89\x57\xfd\x74\x59\x69\xd5\x19\x23\xc2\x7d\xc8\xb5\x41\x9e\x24\x56\xc1\xc8\x7c\x18\x3d\x1f\x46\x56\x69\xe7\x1f\xe8\xce\x3f\x2c\xf8\x9b\x31\xc2\x46\x5a\x01\xff\x2b\xac\xf6\x71\xf0\x4f\x98\x74\x26\x94\x33\xf8\xd6\x61\x19\x50\x3c\x32\x23\xd4\xc3\x77\x1c\x6d\xe4\x74\xa6\x0e\x83\xdb\x2f\x87\x91\x61\x56\xc1\x20\x04\xbd\x32\x90\x75\x7c\x7c\xe9\x47\xf3\xb2\x26\x9c\x22\x09\x78\x00\xf0\x6d\x22\x32\xfc\x1a\x6c\xa8\x4d\x04\x9c\xe8\x61\xf8\x78\x8f\x8e\x33\x55\x99\xdf\xd8\x45\x1b\x15\xd9\x43\x5e\x2b\xcf\xf5\x4a\xf5\xe2\xe7\x52\xd7\xc6\x22\x77\xf4\xfc\x90\x4a\x4b\xa5\x75\xb7\xa7\x74\x8e\x6f\xe6\x62\x02\x6b\x32\xe4\xc7\x90\x1f\x59\xf5\xda\x8d\x9b\x93\xb2\xb1\x76\x18\x6f\x4d\x8f\x7b\x4e\xda\xc2\x80\xba\xaf\xda\x8d\x8d\x60\x31\xda\xf2\xfb\x88\x85\x57\x07\x92\xae\xee\x4f\xef\x8d\x3e\x7f\xf1\x6d\x98\x21\xfb\x75\x3a\x19\x9b\x60\x5a\x9f\xee\x04\x66\x25\xa7\xcb\x51\x3d\xe4\x7b\x96\xed\x0d\x6b\xc7\xeb\xd7\x77\x60\x55\x97\xc3\x28\xf3\x93\xec\x9c\x13\x25\xc1\xa1\x94\x37\x84\x5a\xf5\xa1\x28\x89\x9f\xc4\x13\xb5\x6f\xc7\xef\xb1\xa2\xad\x1d\xcc\xec\x3e\x65\x87\xe1\xdb\x8c\xbd\x29\xfd\x5c\xe6\xcd\x1e\x92\xed\x72\x19\xe9\xaa\xb3\x40\x09\x3e\x6f\xce\xf3\x72\x44\x8e\xa4\xd1\x60\x62\x05\xcb\xe1\xcd\x3e\x70\x7b\xcc\x44\x35\xf7\xc5\xb8\xfb\x6a\x76\xea\xee\xae\xbc\xa3\x65\xb3\x9a\xf1\x85\x6f\x9f\xcf\x17\x31\xaf\x84\xdf\x56\x53\x30\xe5\xdb\xea\x81\xb6\xaf\x21\x44\x95\x14\xc4\xc1\x68\xe4\x75\xa3\xe3\xde\xf0\xa3\xfd\xeb\x48\xc4\x59\x99\xee\x62\xd1\x29\x42\xce\xfa\x37\xe9\xf0\x63\xb7\xd0\xe3\xc0\xda\x2e\x41\x30\x04\xa0\x57\x22\xae\x07\x11\xa7\x03\x11\x31\x91\xc2\x83\xbc\x07\x6e\x7c\xfd\x9c\x1e\x44\x24\x18\x92\x7f\x5e\x97\x59\x9c\x47\x0c\x71\x1d\xe3\x4e\x07\x1e\x68\x68\x60\x18\x09\xd1\x22\x41\x35\xc4\x53\x02\x3e\x14\x3f\xbd\x90\x8c\x23\xa3\x3a\x81\x48\x20\xce\xf6\xa1\xea\x27\x6d\xf4\x2e\xe5\x06\x6b\x97\x47\xb0\x1a\xbe\x4e\x6c\x0e\x4d\xaf\x82\xe5\x8f\xd9\x38\x50\xea\x54\xd0\x09\x71\xef\x2e\x2b\xb7\xbc\xe8\xe5\x47\x4a\xd7\x47\x8c\xa6\xfa\x7d\xd1\xd5\x2a\x8e\x26\x03\x19\x0a\x00\xe8\x06\x85\xff\x12\x1d\x08\x8f\x2d\xbb\x4e\xcc\xf2\x93\xba\xc0\xa9\x23\x21\x0e\x44\x08\x8a\xc0\xe0\xfb\x3c\xd8\x19\xf7\x0e\x5d\xa3\xe4\x6a\xda\xbc\xeb\x8f\x38\xad\xf3\xcf\x2b\x37\xfa\x89\xf6\xa0\x96\xed\xc1\xcc\x0b\x95\xa6\x89\xe1\x78\xb6\x97\x4f\x71\xd8\x14\x12\x56\xef\xce\x55\xc4\xac\x2d\xe1\x1e\xf7\x5b\xbe\x56\x76\xdd\x3d\x9b\xd1\xc7\x46\x6f\xac\x6e\x97\x95\x5e\xea\x3b\xed\x03\x5a\x16\x3b\xc6\xb1\x7e\xae\xcf\xc6\x33\x79\xbc\x96\xae\x19\xe7\x9d\xf5\x18\xa4\x38\x0b\xfa\x9d\xb7\xb7\xfa\x66\x8e\xb6\x7d\x83\xca\xc7\x2b\x27\x09\x3a\xd9\xad\xab\xa2\x78\x4c\xdb\x40\x43\xd6\xec\x35\x64\x8f\x36\x33\x7a\x96\x59\xcf\x9e\x9b\x5b\x0b\x95\x35\xb7\xdc\xda\x84\xd2\x4a\x05\xc0\x4d\xdf\xb7\x8b\x22\x9a\xb5\x24\x2d\xf7\x82\x04\xab\x6a\xbc\x80\x6f\x04\x89\x1f\xe0\xcb\xb9\x50\x6c\x74\x44\xdc\x13\x97\xa1\x6c\x69\x0d\x27\x1b\x3a\xda\xf8\x19\x22\x72\xf1\x25\x71\x77\xc1\xae\x75\xf1\x15\x51\xcf\x57\xb6\xaa\xed\x3d\xb4\xbe\x59\x08\xed\x5e\xf8\x56\x70\xcd\xae\xeb\x46\x6c\xa6\xdd\x4e\xbb\x9e\x86\x73\x17\xc4\x83\x98\x3f\x8f\xda\xd0\x0b\x98\x0d\x63\xee\x67\x53\x6a\xe7\xfd\xd9\x3e\x06\xa0\x0d\x09\xca\xde\x73\x17\x88\x92\xe3\xf2\x54\xfb\xcb\x8f\xf3\xb1\xe9\x1f\xd2\xef\x70\x51\x97\xfc\x7b\xcc\xfe\x0c\x00\x00\xff\xff\xbb\x55\x16\x2e\xe9\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0x34, 0xba, 0xd5, 0x1c, 0x7b, 0x6e, 0x1b, 0xbd, 0x2c, 0xdb, 0x6c, 0xc3, 0xc, 0x57, 0x79, 0x1b, 0x68, 0x59, 0x3b, 0xe0, 0x30, 0x1e, 0x6e, 0xe0, 0x62, 0x73, 0x75, 0xb1, 0xfe, 0x2a, 0xff}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x35\x12\xa4\x8a\x02\x85\xe1\x9c\x55\x4c\x4e\xbd\x42\x1b\x09\x71\x6b\xdc\xc9\x70\xf7\x46\x57\xff\x6a\x26\xbe\x27\x3d\xc9\x9f\x7d\xff\xfb\x3b\x56\x90\x14\xe3\x8f\xe3\x32\x7f\x2c\x47\x09\x18\x4f\xf8\xa3\x09\xf1\xbf\x07\xd0\x15\x45\x98\x2f\x85\x65\x18\x8d\x63\x6c\x81\xb9\x87\x20\xd9\x76\xf7\xa1\x66\xcc\x27\xdc\x89\x40\x26\x2c\xf9\x19\x90\x4a\xd3\xa7\x37\xaa\xb4\xd3\xe4\x11\xd6\xde\x53\x1f\x19\x95\xf6\x96\x03\x06\xe8\xa8\xca\x59\x7b\xcd\xe5\x0d\xad\xee\x72\xdf\x29\xc4\x41\x95\x01\x64\xba\xe5\x55\x1f\x2d\xdf\xf3\x2d\xa6\x5d\x3a\x93\x59\x04\x1f\xb2\x88\xb5\xbb\xbf\x6f\x5f\xcf\xfc\x2a\xb2\xa7\x87\x90\x87\x03\xec\x10\x6c\x0e\x91\xed\xae\x03\x72\x83\x81\xfe\x43\x3e\xf6\xa5\x43\x72\x63\xe4\x95\x1f\x75\xaf\xec\xdd\x4f\x09\x6b\xda\x21\x72\x31\x0a\xe7\x85\x20\xd2\x1c\x3a\x56\x92\x3d\x44\xab\x7d\x73\xa9\x00\x44\xb8\x0d\xa3\xa1\xde\x70\x8b\x70\xe8\xf1\xad\x3d\x83\xfe\xaa\xf9\xe4\xe7\x26\x27\xf1\xfb\xf4\x45\x29\xd0\xbb\xa4\xf2\x57\x04\xcd\xe9\x42\x75\x68\x8f\x47\xb8\xd3\xb9\xed\xde\x8e\xa8\x77\xf2\x0b\xc8\xf5\xb7\xfb\x5e\xaa\xba\x5f\x90\xcb\x63\x54\x09\x11\x25\x54\x7e\xaa\xef\xf0\x4b\x8b\xfd\x1a\x61\x73\xf9\x10\xf5\xa3\xd4\xb0\x6a\xec\x83\x3e\x1d\xf3\xa7\x2e\xd7\x5d\xb4\x63\x44\x12\x75\x07\x5b\x01\xcd\xa9\x37\x07\x46\x3a\xa2\xaf\x71\xe9\xd4\x97\xd8\xda\x2c\xc5\x90\xb3\xac\x26\x99\xe5\x80\x9a\x51\xe4\xca\x9f\xad\xf0\x8c\xcd\xb0\xcc\xac\xb0\x8c\x3c\xcf\x2b\xbd\x60\xbd\xd5\xd9\xd8\xd3\x85\x80\xa0\x54\x78\xce\x06\xa8\x14\x2b\xc7\x5d\x81\x43\x9e\xea\xec\x3e\xbc\x05\x4f\xf5\xd1\x6a\x39\xd8\x77\x50\x13\xcc\x06\x57\x27\x2f\x6a\xb0\x71\x42\x4d\x79\x52\xf6\x9b\x8a\x6d\x73\xb1\xd4\xfc\x79\x00\x99\x0a\x3d\xea\xb0\x1d\xf2\x4d\xb3\x15\x6a\xbe\xe5\xda\xf3\xad\x5c\x39\x2e\x72\x75\x11\x29\xaf\x34\x88\x3c\xe3\x44\x62\x4e\x00\x0d\xc7\x6c\xf6\x74\x2d\xce\xc9\xc1\x60\xb7\x8f\x28\x6f\x5e\x04\x40\xc7\x07\x97\x1c\x4e\x8a\x16\x3f\xfc\xe0\x38\xfe\xaf\xc0\x7f\x7e\xba\xc3\xb2\x56\xf9\xec\xe8\x18\xea\x26\x53\x31\xa7\x99\x89\xce\x45\x02\xd8\x69\x2d\x4e\x61\xfe\xcf\xb6\x21\xc6\x4d\x7b\x27\x98\x00\x0d\x9c\x92\x12\x4a\xdb\x3d\x09\x4c\xcb\x84\x96\x37\xac\x13\xdd\x9f\xd3\x7e\xfd\x8c\xba\x9f\x71\x07\x9e\xab\xa4\xaa\x63\x86\xcf\x4d\x5b\xcb\xe7\xaa\xef\xee\xfc\xd4\x14\x09\x96\x1b\x94\x83\x3f\x40\x05\x62\xce\x75\x65\xca\xdc\x7d\xe6\x49\xdb\x84\x24\xe1\x64\x96\x11\xbf\xad\x95\x8f\x94\xa9\x52\x89\x9b\x25\x49\x9c\x3d\x94\xb7\x29\xab\x78\x96\x27\x6b\x71\x82\x6b\xef\x92\x46\x32\xd3\x7a\x31\x40\x92\x37\xf0\xb3\x0b\x5c\x1d\x0b\x0c\xf2\x3e\x77\x47\x47\x5f\xbd\xef\x67\x58\x9d\xe1\x3b\x4d\xad\xa1\xc1\xee\x7b\x2e\x8f\x75\x45\xfb\xd8\xad\xaf\x7b\xac\x87\x6e\x0f\x38\x5a\x70\x33\x33\xb9\x37\x80\xda\x36\x7b\x0f\xba\xea\x8c\x41\xe7\x77\x3a\x1b\x4a\xd3\xfa\x35\x5c\x0f\xe5\xf2\x8c\x60\x46\x64\x96\xcf\x14\x8e\x32\x8c\xd1\x17\xfe\xea\x19\xa6\xae\x56\x18\x9b\xba\x3f\x3f\xd4\x2e\xb3\x8a\x1c\x80\xc3\x40\xf5\xb5\xa7\xf8\x95\x68\xa5\xc6\xfa\xc1\x5b\x0d\x45\xde\xd0\xcf\x95\x15\xeb\x86\x94\x5f\x75\xde\x5a\xd9\x7a\x55\x83\xd4\x1f\x8b\xa4\x97\x91\x86\x0f\x5f\x86\xff\x15\x13\xa0\x5f\x02\x06\x6b\x7d\xc5\xa8\xae\x20\x75\x63\x0a\x3d\xe8\x61\x3e\x7e\x30\x79\xdf\x41\xaa\x87\xfb\x23\x98\xe2\xc8\xe9\x45\x23\xb2\x4a\x37\x3e\x09\x28\xc7\x2d\xd7\xec\x26\x67\xb8\xc5\xd8\x20\xce\x19\x6c\x81\xa7\xe5\x65\x1c\x65\x2c\x57\xd2\xa1\xb6\xb9\x45\x37\x50\x0f\x5e\xf1\x75\xb1\x19\xe1\x9b\x21\xab\xd6\x9d\x0a\x32\xfb\xf8\x15\x87\xea\xfd\xcc\x11\x52\xfc\xf5\x66\xf9\x30\x87\x74\x4f\x93\x70\x17\x81\x8d\xbe\xaa\x31\xfd\xd5\x91\xfb\x8c\x8b\xce\xd7\x82\x4a\x36\x78\xad\xcc\x9f\x03\x32\x21\x59\x58\xa8\xd9\x8b\x10\xb5\xe7\xea\x98\x5d\x60\x71\x32\x6f\x42\xf4\x2f\xa9\xe3\x23\xeb\x76\xd7\x3b\x3b\x00\xee\x7e\xea\x55\x0e\x5f\xcf\x69\x59\xfa\xdd\xc9\x08\x99\xad\x2a\xf4\x60\x15\x57\xfd\x34\xf0\xf3\x56\x17\x8e\xe8\xc0\x66\x4e\x3c\xcf\xd9\xbc\x9a\x9f\x45\xea\xfd\x04\xef\x08\x5b\xe1\xc5\x5e\x7f\x01\x62\x81\xdc\x4a\xe5\x40\x79\xf6\xe9\x26\x26\x74\xfe\x1d\x4d\x34\x45\xa7\x80\xab\xfb\xcf\x54\x20\xe0\x9a\x2c\x61\xfe\x1e\x95\xb0\x97\x24\xce\xaf\xef\xed\x87\x13\x3d\x34\x4b\x19\x24\x90\xe4\x25\x40\x71\x40\xcc\x32\x4d\x09\x0a\x9f\x1f\xd8\x0e\xa0\xac\x48\x46\xd1\xd6\xd8\xda\xe6\x3e\xb5\x4e\xc0\x33\xc2\x78\xaf\xdd\xb8\x19\x7b\x8c\xa5\x50\xf7\x92\xb0\x51\x44\x74\x37\xb9\x60\x32\x3f\xa7\xd6\x01\xa5\xbd\x45\xb4\x93\x9e\x7e\xc1\x5b\x58\x93\x6c\x6d\x37\xdd\xb0\xb9\xa9\x0e\x47\x96\x0f\xd1\x64\x5d\x10\xf1\xd9\x67\x42\x84\x82\xc2\x57\xe2\xd9\x61\x8f\xd8\x12\x4a\x38\x52\x88\xe8\x95\x5b\xf1\x81\xb0\x13\xfa\x3d\xf6\xf2\x5f\x27\xb8\xbe\xb8\x2a\x1d\x2c\x83\x3f\xfd\x17\x22\xc1\x25\x4f\x77\x0a\x3f\xb9\xbb\xe1\xb3\xc2\x28\xf8\xe4\xb7\xe4\x3d\x1b\xc9\xb0\xfa\xfb\xf2\x29\x4d\x79\x83\x75\x6c\x07\xf0\xe6\xc9\xa5\xbf\xc9\xcc\x4c\x7e\x18\x18\xbd\x5b\xa7\x82\xab\xd3\xbf\xdb\x3d\x88\xce\x9e\x48\x4f\x1b\xf7\x66\x83\xd0\x79\x67\x59\xea\xfc\x3b\xeb\x62\x41\x47\x4e\xfd\x95\x1b\x2f\x21\xd9\x1c\xd0\x50\x2d\x10\x67\xed\x36\x0b\x3a\xa6\x41\x72\x90\x08\xe6\xb5\xfc\x17\xb1\x45\x2c\x3e\x53\x53\x11\x74\x4b\x73\x70\x65\x44\x02\x0f\x14\xc4\x4d\x4c\xdd\x09\x3f\x0b\xed\xd5\x6d\x9f\xd2\x10\x27\x02\x46\xea\x02\xdd\xcc\x48\x21\x74\x9c\x85\x73\x12\x13\x7e\xf6\xe4\x32\x27\x8c\xac\x7c\x47\xd7\x09\x7f\x4a\x90\xcd\xb5\x69\x5c\x72\x57\xab\x0d\x46\xab\x9f\x57\x02\xfe\x91\x22\x18\xfc\x7f\x53\xf3\xff\x00\x00\x00\xff\xff\xfe\xc9\xe6\x5e\x8b\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x4d, 0xd9, 0x83, 0x69, 0x63, 0x62, 0x24, 0xc5, 0xbd, 0x7d, 0xe7, 0xc1, 0x5e, 0x78, 0xdc, 0xfb, 0x95, 0xb0, 0x9c, 0x1f, 0x4c, 0xfc, 0x53, 0xa8, 0x3e, 0xe0, 0x4f, 0x3f, 0xa8, 0x5f, 0xb1}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xc7\xce\xbb\x48\x10\xc4\xef\x3c\xc5\xde\xad\x15\xc9\x89\xe3\x30\x43\x18\xf0\x60\x86\x64\xe3\x1b\xc1\x26\x7f\x18\x30\xf1\xe9\x57\xfe\x56\xda\x3d\xfc\xfb\xd2\xad\x5f\x49\x25\xb5\x4a\xaa\xbf\xbf\x23\x2b\x1a\xb6\xfe\x82\x8a\xe3\x61\x15\x43\xe0\x29\xbf\x94\x21\x18\x23\x8c\x20\x04\x59\x91\x81\x19\xcb\x20\xc3\x34\xc9\xaa\x86\x9c\xc9\x69\x8b\xb8\xd4\xc6\xb5\x73\x33\xaf\x90\x20\x60\xc9\x59\xd5\xe5\x55\xa1\x49\x33\x27\x03\x3a\xa8\x00\x81\x9e\x21\x0e\x9e\x15\x10\xa2\x80\x52\x53\x99\x6b\x14\x0b\x56\x9f\x34\x52\x1e\x0a\xd9\xa2\x7a\xc0\x93\x33\x2b\x90\x01\xf1\x90\x62\x4d\xa1\xf0\x59\x63\x41\x2d\x23\x28\x23\xea\x81\xa7\x3a\x73\x2b\x43\x4a\xb0\x10\x0f\x2c\x57\xef\xbb\xeb\xe8\x0b\xad\xed\x7b\xfb\xff\x31\x02\xc9\xa2\x94\x80\xfe\x6b\xd6\x7a\xd0\xff\xdf\x8c\x89\x90\x62\x11\x30\x68\x80\xf7\x15\xb0\x10\x25\x69\xa4\x29\xfd\xbe\xe4\xe2\x19\xd1\xd0\x30\xdb\x07\xce\xa7\xc4\x02\x54\x91\x65\x0a\x50\x96\x29\x36\xf8\xea\xb4\x85\x59\xa6\xc8\x0c\x30\x2d\x63\x73\x39\x7f\x4d\xf3\xd6\x91\x6e\xa7\x3d\x8b\xab\x6a\x66\xdb\xeb\xfe\xe9\x0a\x2a\x36\x3c\x49\x0a\xf5\x5c\xef\x0b\x9f\x1a\xe7\x0b\xeb\x3e\xe0\xe7\xbd\x3f\x0f\xc1\xa3\xb1\x6b\x6b\xf3\x8f\x4c\xf7\x91\x12\xc3\xcb\x96\xf3\x07\x1a\xc7\x69\x94\x4e\x2f\xa7\x7c\xaf\x17\x6f\xcf\x9e\xce\x6d\x5c\x6e\x9f\x7d\x19\x73\xad\xb8\x5b\xaa\xdd\xf6\x90\xd6\xe8\x42\x6b\x9a\xe2\x83\xfa\x62\x69\x30\x5a\x89\xcf\x18\xc9\x09\xaa\x30\x4e\xf4\xec\xf9\x5e\xf5\x76\x0a\xa5\xaa\xf2\x05\xb5\xe6\x03\x61\xd7\x4b\x78\x8b\x5e\xef\xa2\x48\x5a\x5d\xaf\x09\x77\xd5\x1b\xaf\x6c\x0a\x55\x34\x5f\xa1\x78\x4d\xfd\x01\x58\x2e\xe3\xbb\xfd\xe9\xb5\x4b\x0e\xab\xb9\x9e\xd8\x63\x95\xf2\xce\xf6\xec\x3a\x47\x73\x77\xb1\xf5\xce\x40\xcc\x5f\xec\xa3\x42\x35\xb8\x75\x7d\xa9\x9d\x7e\xda\x72\xba\xb9\xa4\xdb\x79\x8f\x78\xd1\x3e\xf6\x34\x33\x45\x68\x9b\xd4\x3d\x08\x6e\x51\xef\xc7\xb7\x31\x2b\x83\xb5\xce\x49\xbf\x68\xd1\x51\x04\x5d\x7b\x34\x2e\xb7\x34\xec\x96\x99\xdf\x20\x90\x05\x97\x36\xc4\xbf\xde\x4e\x9f\x9c\xdf\xa6\x6b\xb9\x5a\x25\x63\x4b\x87\xcb\xab\xcf\xa8\xfe\xde\x3a\x14\x36\x13\x42\xea\xbd\x7d\x56\x10\xcc\x0a\x00\x91\x85\x89\x12\xce\x28\x0b\x51\xe0\x70\x36\xa0\x3a\x2b\x03\x8a\x40\x76\xcb\x88\x4c\xbe\xc9\xa5\x8c\x41\x29\x21\xa0\xd5\x20\x1c\x34\x40\x7d\x55\x9e\x09\x24\xf2\xf9\x57\xc4\x33\x0d\x89\x1c\x01\x15\x0f\x87\x4b\x63\x67\xce\xce\xd6\x7a\xce\x0b\x16\xe3\xc8\x6e\x0e\x9e\xee\x97\x7b\xc7\x10\xc0\x69\xd0\xed\x34\x17\xc7\x22\xa2\x8a\x0c\x67\x1f\x80\x3d\x96\x01\x05\xc1\x07\x66\xd4\x39\x90\xce\x4b\x60\x92\xd7\xd1\x8f\x47\x76\x2a\xd2\x50\x2d\x7a\xa1\x09\x07\x4a\x27\x13\x45\x4c\x72\xea\x6a\x7f\xe4\xf5\x4c\x54\x3d\xcc\x81\x7c\x16\xd0\xf9\xbe\x8f\xf4\xf4\x54\x25\x63\xe9\x0d\x75\x7e\xb6\xb9\x37\x7a\xf2\x53\xc1\x36\xb6\xd8\xbb\xc2\x29\x7e\x2f\x6c\xca\x72\x17\x05\x8b\x41\xc5\x34\x45\x34\x79\x7e\x5e\x2c\x55\x2d\x7a\xb3\x74\x9d\x52\x7e\x8e\xa0\x45\x8a\x75\x80\xa3\x1e\xf0\x01\x1b\x4f\x66\xfe\xb3\xe7\x8e\x9d\x75\x95\xf2\x50\x2d\x4d\x7e\x88\xfc\xfc\x65\x47\xbb\xfe\xb1\x4d\x8c\x3e\x8e\xc1\x6a\x8a\xbb\xab\x9b\xf9\x82\x68\x27\x42\xf1\xa2\xf7\x4c\xbc\x23\x10\xc5\x7a\x9d\xf6\x4f\xa8\x7f\x76\xcb\x3e\x54\x40\x3d\x07\xdd\x73\xec\x35\x58\xaf\x3d\x29\xba\x6e\x72\x9c\x21\x2d\x98\x63\x35\x15\x03\xbb\x84\xed\xe3\x39\x78\xdc\x0f\x69\xfc\x42\x7a\x35\xe5\xcc\x5e\x3f\xc7\xec\xb1\xb2\x21\x31\x8d\x8d\xf2\x5d\xb7\xf8\x29\x77\xe1\xd7\x1b\x9f\x1f\xc6\x1c\x19\x0a\x6f\x84\x77\x47\x89\x99\x34\x10\xf7\xad\xff\x2e\x75\xcc\xaf\x92\xb9\xe7\x62\xa2\x3f\xe9\xb1\x9e\xb7\xdb\xfc\x5a\x53\xac\xa1\xba\x70\x83\xa6\xbe\x87\x63\x31\xde\xed\xb9\x67\x7e\x6b\x44\xb1\xd0\x9f\xd5\xf2\x4f\x00\x00\x00\xff\xff\x72\xbf\x5f\x97\x77\x04\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1143, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0xa, 0x70, 0x24, 0xc5, 0x74, 0x63, 0xa9, 0xa7, 0xe7, 0x29, 0x74, 0x8c, 0x73, 0x77, 0x26, 0x66, 0x38, 0x16, 0xbb, 0xce, 0xcd, 0x54, 0x18, 0x61, 0x19, 0x99, 0xb2, 0xb9, 0x1d, 0xb, 0xa2}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\xc8\x02\x85\xe1\x9c\x55\xdc\x9c\x7a\x85\x13\x2e\x78\x41\x37\x20\x3c\x8d\x13\x12\x64\x80\x10\x56\x78\xe1\x56\x3f\x35\x37\x9e\x93\x9e\xe4\xcf\xbe\xff\xfd\x3b\xa8\xa8\xba\xf3\xc7\x0f\xc0\x1f\xd7\xd7\x23\x10\x2a\x7f\x4c\x25\xfe\xfb\x60\xb6\xae\x2b\x43\xa9\x43\x00\x4c\x09\x78\x0a\x18\xc8\xde\xb1\xfc\xd0\xa0\xd5\x4a\xa3\xb2\xad\x11\xea\x20\x94\xf1\x92\xaf\x58\x2b\x7e\x94\x9d\xcb\x50\x65\xa1\x14\x3f\xc3\x07\xfd\xbe\x89\x46\x8b\x99\x74\xdf\x9c\x47\xf4\x8d\xf1\x07\xe3\x84\xd3\xc4\x50\x7b\x87\x64\xed\x24\xf5\x7e\xc2\x79\x66\x15\x55\xd4\xeb\xab\xdb\x10\xdb\x59\xfd\x5c\xc4\xd4\xce\x16\x34\x1f\x5e\x0d\x79\xa7\x67\x8c\x61\xc5\xa4\x08\x92\x4d\x1b\x11\x22\x7c\xde\xa8\xc3\xeb\xae\x45\x7f\x18\xeb\x5e\x40\xae\xd7\x8b\x5a\x6c\xe8\xc0\x0f\xe3\xe7\x2b\x7a\x65\xdc\x46\x36\xce\x88\x7f\x4d\xe3\x2c\xf3\xe2\x71\x79\xb7\x22\x41\x08\x4b\xf5\x57\x3e\x8a\x4d\xce\x52\xc1\x0e\x28\xc3\x37\xb7\x95\x60\xaf\x5e\x9f\xad\x8d\x98\x7c\x26\xd2\x1c\x6e\x1a\x95\xc4\x62\x17\xfa\x0b\xe0\xf6\x58\x88\xc1\x07\xb1\x85\xa6\x9f\x9d\xfd\x8a\x1a\x61\x62\xa2\x9f\x33\xeb\x74\x9b\x92\x92\x38\x21\x19\xa5\x30\x42\xab\x4f\x4c\xf3\x55\x73\x6d\x0f\x82\x9d\xb1\xe0\xb9\x29\xc9\x3c\xe7\xd2\xd4\x0c\xed\x9a\x50\xf5\xac\xc9\x2f\x5b\x07\x5a\x62\x48\x31\x76\x78\x6c\xf6\xa3\xb5\x17\x12\x38\x57\xa7\x6d\x82\x69\x57\xfc\x07\x41\xd1\xa3\xc1\xa9\x53\xc1\xb6\xa3\xa2\xe2\x3c\x5d\x06\x1e\x80\x60\xd0\x21\x90\xbf\xad\x28\xf5\x4f\x19\xfd\x6e\xac\x69\x6f\x58\xfb\x6c\x4d\x4f\x85\x22\xba\x65\x40\xb8\x93\xf7\x59\xbf\x6c\x6b\xbd\xb7\x6b\x28\x6d\x64\xca\x7c\x91\x9c\x66\xc1\x89\xab\x9f\x5e\xb8\x37\xf7\x4f\xe1\x36\x7e\x26\x90\x1f\xf9\xd9\x3d\x94\x27\x05\x65\x8c\x31\x28\x53\x71\xb2\x74\x5d\x8c\x75\x0e\x7a\x91\xc1\x49\x6f\x7e\x7a\x57\xe6\xf1\x14\xbb\x06\xa9\xea\xed\xde\xef\x08\xf1\x15\x90\x2f\xad\xec\xdd\x65\x6f\xa7\xdf\x6c\x88\xde\x78\x1e\x02\xe3\x6d\x18\x9c\x65\x58\xd6\x37\x60\x84\x56\x40\xf4\xfc\x33\xe1\x9d\x9c\x2a\x3f\x39\x62\xaa\xa6\x1a\x69\x03\x9a\x9c\xa2\x48\x00\x92\xc6\xec\x38\xaf\x25\x33\xf4\xcb\x60\x77\xa2\x9c\x86\xb1\x93\xfc\x0e\x60\x9f\x6e\xd0\xca\x24\xa0\x5d\x67\xf5\x99\x88\xa7\xa3\x8c\x66\x3c\xcb\xe7\x64\x8e\x0d\x6e\xdc\x67\xec\xf5\xec\x3a\x8a\x76\xd5\xd1\xd6\x88\x8f\x69\x00\x57\x30\xe6\xb7\x1a\xd5\x67\x93\x3d\x26\x14\x60\xaf\x12\x06\x68\xd4\x63\x98\x83\x83\xcb\xcd\x84\xd2\xcc\x48\xb8\x1b\xc1\xb7\xbd\x5b\xf9\x27\xdd\x88\x3e\x65\x6e\xef\x22\xac\xa7\xc0\x24\x36\x30\xc0\x23\x62\xfc\xb9\xa4\x3f\x5a\x7c\x1c\x92\x6a\x63\xcc\xb9\xfe\x9c\x9b\x22\x95\xb1\x02\xc8\x6b\x46\x32\xbe\xb7\xd1\x72\xb7\xb5\x32\xd5\xf9\x0a\x71\xf8\x85\x4f\x2e\x2d\xe6\x10\x3d\x7c\x5a\x92\xdf\xf1\x9e\xba\x9a\xd0\x64\x99\xb3\xaf\xaa\x4c\x1a\xd8\x52\xee\xcf\x4a\x2c\x95\xf1\x86\xf7\x54\xee\xd1\x20\x09\x65\xde\x46\x57\xa7\xe2\xd3\x2e\xfd\x70\x79\x42\xf8\xcb\x4d\xc0\x35\x56\x5c\x70\xf6\x48\xaa\xfd\xd2\xf1\x8c\x4f\xa1\x4c\xde\xba\x87\x11\x96\xbe\x0c\x53\xa6\x9a\xaa\xd3\x3e\xd9\xf7\xac\x17\xbf\xcc\x37\x61\xa6\xa3\xaf\x53\x15\x31\x0e\x6a\x10\x77\xe5\xfb\xd8\x11\x6b\x30\xfa\xc5\x9c\xe3\xb7\xaa\x88\x3d\xca\xff\x16\x1f\xc5\x93\xc5\xb2\x76\xa2\x2b\x0d\x1e\xa1\xac\xda\x2c\xbf\x00\x7a\xcb\x4f\x54\xf7\xb5\x42\x39\x69\x4f\x00\xfc\x30\x63\x30\xc4\x62\x55\xe8\xc1\xc7\xc1\x9d\xb5\x77\xf5\xf4\x8e\xc2\x4c\x90\xd4\xf0\x2b\xf5\x24\xf6\x32\xf1\x88\xf2\xe4\xa1\x59\x04\x4a\x14\xd3\x64\x15\x61\x38\xbf\xeb\xa8\xdd\x3f\xed\x70\x30\x6f\xfa\x28\xea\x17\x12\x5d\xc6\xd8\x22\xf5\xdd\xda\x53\xad\xdc\x20\x13\x73\x86\xfa\xc6\xe7\xe8\x38\x31\x85\xec\xf8\x55\xa6\xac\x45\xb2\x60\x9b\x46\x92\xac\x0a\xcd\xeb\x17\x3d\x9a\xdb\xb2\x5b\xa1\x2e\x89\xf1\x76\xcf\x66\x41\x2a\x63\x20\x93\x68\x1f\xb4\xd7\x6e\x76\xa1\x33\x51\x8c\x53\xd1\x59\xd7\x63\x8a\x21\xd6\x47\x09\xe5\xae\x23\x72\x83\xdf\x62\xab\x8e\xfb\xcb\x69\x47\xa2\x83\x81\x2b\x94\x8e\x4c\xcf\xf1\xf9\x64\x6d\xd5\x3c\xdc\xf6\xbe\x8d\x29\x9d\x16\xbb\x3a\x16\x86\x94\xf8\x6d\x5f\x0b\x58\xbd\x35\xf7\x77\x40\xd1\x4d\x39\xf5\xad\xdb\x6b\x62\x00\x35\x0a\xd9\xed\x14\x7a\xa4\xda\x1a\xe0\x78\x12\xfe\xfd\xec\x05\xc3\xbc\x9d\x04\xdd\xbe\x9f\x8b\x5b\x13\x4b\x1f\xa9\x3e\xca\x8a\x4e\xa9\x31\xf1\x53\x0d\x56\xff\x7d\x26\x82\x13\x13\x4a\xf1\xd0\x7d\x72\xdd\x3d\x13\x96\x60\x6a\x5e\xb9\xc3\x4b\xb3\x49\xb1\xd6\x5d\x65\x0c\x41\x88\x49\x58\xdf\x99\xb8\xc0\x15\x9b\x59\x10\xa4\x8d\xf9\xdb\x61\x9f\xf5\xb1\x97\x5b\x9f\x36\xa4\x84\x98\x86\x8b\xbf\x81\xff\x48\x82\xf1\x91\xf3\xf4\x15\x70\x93\x45\xe7\x42\xfc\x51\x3f\x03\x9b\xce\x36\x60\xba\x51\x1b\x92\x93\xf5\x71\xe8\x57\xb7\x69\x7c\x77\x37\xcc\xb5\xf3\xc1\xac\x89\xe2\x30\xb3\x42\x3e\x16\xce\xc4\xb7\xfa\x80\x62\xc1\xa0\xe8\x47\xe7\xf9\x7d\x0c\x7f\x82\x29\x1c\xab\x5e\x48\xd4\x5b\x4f\x84\x6e\xcb\x67\x71\xe1\x84\x6f\xb6\xb6\x48\x1c\x45\x2c\x00\x12\x0f\x06\x15\x24\x0f\xfc\xb1\x95\xe6\xe5\xf0\x56\x2f\xf8\xd5\x66\x76\xa2\xbe\xc3\xda\x45\xf1\xc3\x58\x41\x8c\xc7\xd2\x68\x3d\xc9\x36\x7b\x8a\x63\x21\x27\x48\xa9\x8c\xfc\xbc\xa7\xec\x0d\xd3\xf6\x62\x1d\x1e\x09\xaa\x4b\x92\xe2\xe8\x53\x98\x33\x8e\x20\x22\xe9\x94\x61\xf0\x5d\x60\x26\x9e\x1b\x5b\xd5\x5d\xa2\x92\xe4\x9e\xa5\x2c\x7c\x92\x41\xd3\xf9\xd4\xd1\xe2\x8d\x18\x89\x49\xac\x61\x6d\x64\x20\xdb\x3a\x26\xd5\x53\x57\xad\x34\x9a\xdf\x15\x1b\x07\x4f\x04\x2a\x6d\x51\x7b\x7b\xcf\xe7\x3c\xd1\x8b\xeb\x5a\xe6\xcf\xb1\x7f\x01\xaa\x78\x59\xf9\x3f\xf6\x97\x14\xc5\x91\xff\x9b\x9a\x7f\x02\x00\x00\xff\xff\x86\x11\x9b\x91\x8b\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x15, 0x8a, 0xbb, 0x76, 0xdf, 0xa2, 0x81, 0x76, 0x72, 0x6f, 0xe3, 0xa9, 0x23, 0x3f, 0xc6, 0xc4, 0xe4, 0x9b, 0x89, 0x9, 0xb9, 0x56, 0x1e, 0x53, 0xe6, 0x35, 0x8c, 0x88, 0xab, 0x10, 0x74, 0x54}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcf\x92\xba\x38\x1b\x85\xf7\x5c\xc5\xb7\xb7\xbe\x22\x82\xdd\xc2\x62\x16\x09\x04\x08\x18\x10\x0c\x28\xec\xf8\x23\x11\x10\x11\x51\xa2\x5c\xfd\x54\xf7\x54\xfd\x36\x33\xef\xf2\x39\x55\x67\xf3\x9e\x7a\xfe\xff\x73\x08\xdb\xc4\xff\x9f\x81\x23\x46\x2c\x62\x40\x86\x7f\xa9\x44\x09\x31\x5d\x66\x18\x90\x2b\x1c\x0a\x82\x20\x27\x11\xf4\xcc\xdd\xe2\xbc\xea\xb5\xb3\x11\x7b\xe0\x44\xaa\xdd\x5b\x7a\x26\x84\x19\xa6\xae\x37\x64\xe4\x32\x97\x3e\x0c\xf1\x0e\x85\x50\x48\xde\x82\x0f\x14\x41\x1b\xae\x63\x6c\x5c\xa8\x1b\x2a\x7a\x9b\xab\xee\x9c\x1e\xfd\x81\x46\xb1\xc0\x22\x35\x93\x30\x34\xb1\x78\x9b\x85\xe2\x3f\xca\x5e\xbf\xa4\x0a\xe7\x21\xc0\xc2\xb9\x94\xbe\x44\x5b\x22\x28\xc3\x82\xb2\x4e\x50\x46\xc4\xf1\x52\xfa\xb4\x2d\x7f\xd8\xfa\x0f\x6b\xe1\x8d\x46\x44\x60\xf8\x5b\xe6\x61\x71\xfd\x53\x26\xa5\x0a\x7f\x63\x06\xf7\x88\xfb\x09\x82\x94\x19\x4e\x74\x2d\xd5\x68\x5d\x2a\xc9\x87\x12\x82\x48\x0b\x7d\xc4\xbb\xf1\xd2\x35\xb6\x2e\x00\x82\x21\xb6\x20\x0c\x0c\x18\x6a\xf0\x27\x97\x0c\xee\x19\x30\xc4\x50\x95\x5f\x17\x5d\x50\xdf\xd7\x0e\x67\x6b\x31\xf9\x36\x73\x06\x01\xbf\x83\x41\x77\x6a\xc5\xb0\xa2\xac\x9d\x4a\xff\x9d\x28\x85\xb7\x0a\x7b\xc5\x39\x34\x2f\xbc\xb4\xaa\x83\x24\x05\x14\xe0\xd6\x15\xfb\x53\x88\x62\x4b\x99\x13\x56\xd3\xc7\xf4\x20\x1b\x56\xdf\x00\x70\xf3\x8d\x55\x55\xd6\x5d\x5b\x56\x1f\x35\xb8\x7e\xf5\xf7\x53\x49\xf5\xfe\x79\x5b\x83\xcb\xcd\x2d\x4f\x47\xf2\x96\xaa\x15\xbc\xef\x8a\x7a\x7a\x71\xdc\x67\xd3\x13\x00\x7b\x2a\xe6\x8f\x97\x98\x89\xb2\x19\x84\xbb\xbb\x5e\x2d\x7a\x73\x68\xf6\xfc\xf4\x55\x51\x81\x6f\xcd\xf3\x9f\x8a\xd8\xb4\xbc\x60\xfe\xfd\xaa\x08\x69\x7b\x96\xb5\x1e\xaf\xea\xb2\x62\xbd\x1e\xaa\xd3\x69\x6f\x32\x56\x14\x47\x79\x57\xcc\xbc\xfc\x1a\xf6\xf7\x7c\xd9\x23\xbf\x4e\xb8\xec\x76\xc6\xaa\x5b\xde\x2d\x2b\x50\xb3\xab\x87\xa1\x59\x1d\x1e\xad\xc4\x2a\x57\x46\x63\xf7\x4d\xc0\x6a\xba\x3d\xdf\x23\x08\xb4\x77\x25\xf7\xcb\xae\x12\xa3\xfd\x72\x86\xb8\x07\x60\x7d\x5f\x84\x86\xbf\x0f\x53\x9f\xe3\x47\x58\x65\x89\x48\x67\xe5\xd9\x6f\xaf\x73\x14\x4b\xa0\x61\x0b\x8b\x8e\x72\xbc\x14\x7b\x99\xaf\xb9\x0a\xe9\x16\xf6\xf9\xde\xad\xbd\xf9\x20\x88\x09\x43\x88\x06\xc0\x45\xd4\xc2\xe0\xe7\x53\x4e\xa8\x21\x58\x6b\x18\x41\x6a\xa0\x1c\x0a\xe9\x77\x28\x11\xb8\x22\x28\x84\xc1\x53\xe2\x89\x14\xa1\x30\x76\xa0\x20\xc2\xf9\x27\x6b\x11\xe2\xc2\x1a\x60\xdc\x2c\xdd\x2b\x5d\x21\x67\xa3\xe5\x73\xe4\x9f\xf0\xed\x21\xfb\x12\x6e\xf4\xf2\x79\x1e\xfe\x6b\xa6\x26\xe7\x18\x41\x27\xca\xb2\x9a\x59\xaf\xeb\xf1\xbd\x19\xce\xf6\x90\xf7\x17\x3b\x93\xdb\x26\xc0\x39\xfd\x6a\x1a\x89\x26\x9a\xb7\x36\x05\x0b\x3a\x7d\x3a\xda\xd0\xc7\x56\x94\x6c\xb5\xd7\x13\xbb\x1f\x87\xcd\x81\x5f\x0e\x07\x33\x0d\xf4\x2d\xc9\x1f\xc0\x29\xd5\x43\x1f\xd9\x5a\xe3\x3d\xfd\xd1\x80\x93\xcd\xc6\x44\x5a\xa1\x22\x7e\x7b\x23\xee\x3a\x82\x4e\xae\xda\x66\x60\x28\x70\xe5\x13\x77\xab\xbe\xd4\x8d\xd5\x83\xc6\x3d\xdb\xe5\x18\x8b\xb1\x3f\x1c\xa7\x71\x97\xc8\xbe\xfb\x98\x54\x4b\x0e\xaf\x6c\xef\x6d\xee\x92\x6b\x97\x47\x5d\x74\x6c\xdb\xed\xac\x17\x9f\x62\x2f\x67\xef\xfd\x23\x71\xda\xba\x48\x69\x15\xea\x7d\x6a\x59\x41\xb5\xdd\xe0\x73\x2f\x73\xe3\xa0\x06\xda\xa9\xc7\xaf\x1b\x71\x56\x77\x38\xa8\x22\x92\xb6\xd7\x72\x5e\x17\xce\xa2\x16\xea\x7a\x75\x76\x2e\x9a\x32\x17\x16\x6d\x37\xcf\x38\x1e\xa3\x71\x9b\x81\x79\x37\xd9\xce\xfd\xa3\xba\x0b\x01\x72\x7e\x2c\xd1\xe8\x36\xfa\x77\x9b\xf6\x51\x64\xd4\x7a\x2e\x35\xa0\x9d\xd8\x14\x2f\x14\xbd\xd9\x7d\xfd\x08\x1e\x4b\x0b\x6b\x3d\xd8\xbf\x6d\x59\xcb\xe6\xb1\x25\x0f\x3e\x6b\xfe\x69\x42\xcf\x43\x66\x7e\xa0\xb3\x5d\xbb\x03\x38\x95\x7f\x49\xbf\x3a\xc1\xbe\xf9\x6f\xc5\xfc\x1d\x00\x00\xff\xff\x02\xb5\x19\xf0\x7f\x04\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x18, 0x50, 0x84, 0xd3, 0xe7, 0x97, 0xf9, 0xdc, 0xd, 0x70, 0xa9, 0xb, 0xfd, 0x70, 0x7f, 0xd4, 0x31, 0xd8, 0x1c, 0xe0, 0x4b, 0xf7, 0xff, 0xc7, 0x81, 0x63, 0x2c, 0x19, 0x99, 0x25, 0x32}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x37\x12\xa3\x5c\xa3\x05\x73\x56\x31\x39\xf5\x0a\x84\x27\xf8\x82\x8b\x40\x78\x6f\x45\x26\x40\x78\x84\xb9\xf8\xd5\xbf\x9a\x89\xff\x93\x9e\xa4\xab\x93\xfe\xbf\xbf\x13\x24\x59\xb5\xfe\x78\x3e\xf8\xe3\x78\x6a\x04\x02\xe9\x8f\x2e\xbd\xff\x3d\x88\xa9\xaa\xd2\x04\x54\x01\x00\xfd\x09\x5c\x09\x90\xd8\x56\xf3\x87\x69\x59\x9c\xff\x7d\xdd\x62\xc5\xa6\xca\x78\x00\xc6\x1e\x79\xa5\x24\x9e\x2f\x2f\x6d\x61\x6e\x9d\x11\x91\xe9\xa8\x3b\x10\x8a\x8f\x34\x9b\x74\xb7\xa4\x22\x10\x78\x86\xff\xba\xcc\x49\x5c\x21\x7c\x11\x7b\x14\x94\xe6\x02\x17\x95\x0a\xca\x1f\x8e\x6b\x1f\xea\x55\x14\xaf\x89\xbb\xd1\x8b\xb4\x7b\x7a\x98\x92\xdc\xe4\x87\xf5\xf7\xc0\x91\xfa\xa7\xe5\x49\xac\x9e\x05\x0a\x26\x23\x2b\xe1\x56\x49\x43\x0a\x57\x1c\x97\x61\xb6\x5f\x7a\x24\x46\x04\x35\x1e\x9a\xd1\xf7\x2f\xf3\xa7\x98\xe9\x7a\x0d\x45\x56\xe0\x0c\xa7\x5b\x2b\x71\x50\x2d\x52\x65\x81\x35\xf5\xc4\xc1\x7e\x31\x6e\x90\xd0\x32\x2f\x82\x81\x77\x49\x98\x38\x62\x10\x64\x59\x8c\x19\xd9\x5e\xe5\xf4\xe8\x4c\x9f\xdb\x11\xac\x32\xaa\x30\xad\x7b\xa2\xdd\x7d\xb6\x41\x26\x34\x06\x52\x8e\x63\x83\xfa\x4b\x1b\x14\x1a\x26\xcc\x1d\xa3\xe2\x28\xfc\xad\xe7\x8c\xdb\xdc\x59\x60\xc3\x6d\x14\xc7\x2c\x6f\xca\x18\x0e\x38\xfe\x98\xee\x83\x93\x18\x1f\x0e\x1f\x69\x71\x8b\x34\x3a\xde\x3b\x42\xac\x03\xdb\xef\x5e\x88\x37\xc1\x1d\x78\x31\x16\xde\x99\x83\x55\x8f\x8a\x04\x26\x0b\x86\x8f\xa3\x95\xfa\xee\x1f\xaa\x08\x5c\x20\x80\xf1\xaf\x6c\x5f\x4e\x6d\x4b\x1a\x55\x9b\x65\xfc\x98\x40\xae\xd3\x17\x86\x9a\xfa\x19\xbe\xae\x2b\xdb\xd7\xa7\x0d\x2a\x41\x69\xf2\xf4\x5c\xee\x21\x9a\x4b\x8c\x9f\xef\xc0\x98\x2d\xd6\xb1\xd6\xc2\xa2\xf7\x19\xed\x1e\x0c\x14\x2b\x8a\x49\xa6\xd7\x4c\x08\x21\x82\xc7\x69\x4d\xf5\xa7\x94\xdd\x5b\xbd\x65\xb3\xac\x7c\xd0\xa1\xf9\x15\xb4\x35\x9a\x12\xfb\xd1\x74\x63\x3c\xa9\x6b\xbf\x7f\xe8\x86\x15\x4f\xb2\x84\x28\xce\xc7\xcb\xb4\xaf\xcf\x97\x59\xf4\x6b\x32\x21\xd0\x91\x0e\x83\xfa\xb0\x8d\x6f\x75\xbe\xe7\x1c\xe2\xa3\xdd\xb9\x6e\x12\x98\xef\x32\x0f\x1a\x8f\xfa\x6f\x92\xae\x8d\x79\x2d\x71\x09\x82\xb3\x7a\x73\x40\x2e\x20\x6f\x9e\x3b\xe8\x08\x4c\x60\x31\x44\x1f\x17\xf6\xd8\x74\x65\x69\x1c\x3b\xfc\x88\xa3\xd7\x54\x93\xe1\xdb\xf1\x72\x50\x93\xed\x34\xab\x2f\xd4\x59\x98\xb7\xb6\xa8\x4d\x22\xc1\x2b\x9b\x18\x73\xc3\x00\xdb\x9d\xc3\x49\x53\x0b\x64\x0d\x39\xae\x82\xa5\xdc\x3e\xcb\x6f\x92\x92\x05\x35\xde\x9b\x30\x09\xe3\xb2\x6f\x37\xd9\xa0\x4c\xa6\x92\x49\x98\x08\x6f\xa8\xcf\x42\x2e\x5b\x7b\xd3\x4f\x57\x5d\x1c\xcb\x90\xca\x2f\xa5\x62\x9a\x9c\x44\x9a\x68\xbb\x12\x4e\x7a\x56\x6f\x09\x60\x64\x56\x66\x20\x00\xe1\x8b\xbc\x29\x5d\xf9\x09\x22\x88\xe3\xf7\xdd\x13\x3c\x88\xf2\x7d\x48\xb6\x43\xe7\x86\x83\xa8\x98\x9f\x47\xca\xb5\x51\x31\x5f\x94\x41\x6a\x31\x05\xe2\xd2\xa3\xd8\x8b\xda\x33\xfa\xeb\x3e\xb4\x4b\x47\x61\xae\x62\xb1\xc0\xe9\x75\x5b\x18\x86\xb5\xd3\x57\xe5\x24\x91\xae\xf6\x39\xe5\x76\x95\x79\x24\x4c\x2b\x65\x4a\x92\xa9\x54\x4d\x21\x8e\x40\xdc\x2e\x47\xf0\x9c\x53\x32\x49\x17\x39\x85\xde\xa5\x5f\x4a\xa2\x1c\x38\x9c\xf3\x7c\x9e\x19\x4b\x32\x05\xd6\x68\x12\xe4\xbd\x17\x78\x72\xe6\xaa\x93\xa4\xde\xfd\x23\xa6\x14\x27\x47\x1a\x49\xfb\x3c\x74\x57\xa2\x63\x0c\x60\xf9\xfd\x64\x18\x8e\xa3\x82\x60\xd2\xe8\x1d\x53\x56\x36\x4e\x80\xb0\xe2\xa8\x66\xcf\xa7\xb7\xb8\x2b\x7a\xd7\xcb\x7d\x56\xed\x2a\x4d\x72\x57\xc2\xfe\xd7\x23\x5a\x09\x54\xa1\x71\x51\xa7\xea\x12\x5f\x8c\xf2\x3b\x6f\x1d\x8d\xfb\x3c\x04\x96\x5c\xdf\x2a\x67\x08\xb3\x74\xac\x4c\xe8\x62\xdd\x6a\x4a\xb6\xfa\xf6\xa3\x61\x79\x5c\x13\x19\x6a\xe5\x30\x5a\x34\x8f\x90\xb1\x44\x81\x02\xc4\x7b\x87\x6d\x93\xad\x3d\xe9\x4a\xcd\x9f\xa1\x52\xed\x83\x5f\xc5\xb4\xce\xf7\x99\xcf\x86\x96\xf9\x0f\xf9\x87\xb7\x55\x80\xcd\xcc\x67\x56\x3e\xa6\x6f\xd4\xf4\x6d\xbb\x48\x83\xa2\x51\xb4\x78\x90\xc0\x19\x9f\xe3\xc5\x41\x18\x37\x9e\xb4\xd4\xa4\xf4\xac\x2d\xa2\xd8\xd4\xa8\xaf\x3a\xe9\x6e\xee\x64\x04\x22\x0a\xb9\xfc\x44\x3d\x6c\xa2\x6d\x6a\x14\xb7\xe5\xa6\x4b\x05\xb1\x5f\x0b\x3f\x08\x41\x16\x31\x49\x9d\x97\x4c\xe4\xcb\x51\x33\x7a\xfa\x67\x87\x8a\xd7\xbe\x56\xf5\x65\x6c\xb8\x98\x61\x6f\x90\xcf\x70\x1b\xc4\x52\xb0\x79\x82\x39\x55\x53\xd9\xd4\x7e\x17\xbd\x12\x89\x7f\x87\x21\x1d\xad\x55\x1c\x0e\x2b\xc3\x5b\x6e\x18\xb2\x4f\x5f\x7f\x2d\x0b\xc6\x18\xb1\x8a\x72\xdd\x4f\x01\x63\xf4\xc4\xbd\xc8\x4d\xa1\x53\xd8\xda\xdf\xf7\xd9\x6a\xf6\x7e\x5a\x1a\x63\xae\x48\x72\x6c\x0d\x65\x95\x8a\xc5\xc3\x71\xf9\x51\xf0\x78\x63\x41\xea\xc3\x55\xb8\x60\xf3\x5c\x68\x02\xf5\x06\x43\x12\x1f\x21\x85\x45\x4e\xaa\xda\x18\x4d\x4b\x28\xd8\x76\x47\x3c\xa2\xae\xd9\x98\x14\x31\xba\xbe\xd4\x9f\x01\xd8\xce\x46\xf9\xf2\x65\xaa\x91\x9d\x7e\xa9\xfd\x74\xb0\x11\x09\x63\xd1\x63\x61\x11\x94\x2e\x91\x3f\xdc\x53\xb8\xed\xb2\x25\x0f\x37\xcd\x7e\x9e\x13\x3e\x8c\xfa\x23\xcb\x3b\x52\xdf\xf1\xc5\x1f\xba\x50\xb9\x4f\xf1\x11\x49\xc6\xda\xf6\x77\x9a\x52\x00\xe5\x7b\xdb\x76\x0c\x93\xc7\x6d\xa5\xaa\x86\x32\x5a\x61\x47\x14\xb2\x2e\x07\x15\x46\x7f\xd1\x28\xfe\xce\x09\x77\xb3\x15\x62\x25\x85\x1f\xeb\x81\xcc\xf9\xf8\x31\x61\xef\x31\x47\x47\x2c\x9f\x8f\xf6\x0b\x69\x21\x49\x9c\xe5\x22\xe9\x43\xe0\xa7\x17\x94\x07\xea\x41\xe7\xb2\x6a\xaf\x26\x3d\x3e\x8f\x50\x2b\x61\x8a\x2b\x0c\x82\xc3\x5a\x89\x19\xf6\x02\x7b\x7c\xcc\xfe\x09\x68\xb1\xb5\x7e\xa5\xe0\xc8\x9e\xdf\x88\xdb\xd7\xef\xe4\xe5\x45\xa4\xa7\x91\xe9\x75\x04\x0e\x88\x25\x79\xee\x87\xe0\xbf\xff\x90\x7f\x59\x91\x2c\xf1\x7f\xe7\xe6\xff\x03\x00\x00\xff\xff\x57\x00\x93\x79\x8f\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0xfe, 0xb, 0xf1, 0xcc, 0xb5, 0x45, 0x87, 0xc5, 0x23, 0xb1, 0xb6, 0x66, 0x57, 0x56, 0xe2, 0xb6, 0xfd, 0x32, 0xb0, 0xea, 0xc6, 0x1, 0xce, 0xcf, 0xa5, 0xa1, 0x15, 0x60, 0xc1, 0xd7, 0x6d}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xcb\xce\xb2\xca\x12\x86\xe7\x5c\xc5\x9e\x93\x1d\x40\x90\x1f\x86\x7d\x02\x1b\x69\xa4\x39\x0a\x33\x05\x05\x51\x44\x50\x69\xf4\xea\x57\xbe\x6f\xf0\x0f\xd6\xaa\xe1\x53\xc9\x9b\xaa\xe4\xcd\xf3\xff\x9f\x81\xc4\xa5\xc1\xff\x10\x89\x12\xea\x50\x04\x12\xf2\x4b\x25\x46\x29\xf6\x3a\x84\x40\x63\x36\x40\x50\x08\x1a\x1a\x81\xad\x33\x27\x3b\x60\xcb\x7f\xb4\xd2\x74\x96\x13\xfd\xd6\xcf\x94\x35\x02\xf3\xc2\xdb\x0e\x25\x6d\xe7\x2a\x00\x9c\xf8\x90\x03\x21\x6d\xbf\x24\x66\x10\xb8\x40\x4b\x09\x6a\x99\xc7\x57\x76\x77\xd0\xbd\xb9\xc8\x83\x81\x45\xa9\x20\xa2\xc0\x19\xe7\x98\x88\x05\x1f\x57\xc1\x54\xf5\x76\x5b\xac\x9a\x86\xab\x44\x6c\xda\x2a\x90\x58\x47\x05\x4b\x88\x60\xc9\x55\xb0\x84\x8a\xbc\xad\x02\xd6\x55\x3f\x4c\xfb\xcb\x3a\x30\xb0\x88\x0a\x02\x7e\xc3\xb6\x44\xdc\xfe\x86\x49\xc5\xaa\x59\x48\x07\x38\x6c\x82\x0c\x02\x96\xa0\x7d\x74\xab\xf4\x48\xab\x56\xd9\x87\xfd\xbc\x16\xd3\x7f\x9f\x0e\x21\x07\xb8\x69\x48\x08\x30\x42\x12\xe0\x03\x6a\x1a\x02\x81\x7f\xa9\xdf\x7c\x76\x95\xd3\x2b\xa3\xc4\x68\xa7\xa7\xd9\xdb\x34\x52\xe4\x73\xfd\xc8\xda\x8a\xf4\xf0\xf4\x9a\xd4\xd6\x40\x36\x7e\x5b\xc6\x91\xdf\x8d\x51\xfe\x82\x16\x4a\x9d\xd2\x4e\xe9\x21\x30\x37\x91\xaa\xb5\xce\x21\xf0\x53\x35\x7a\x78\xb0\x4e\x2e\x16\x50\x80\x70\xf6\xd6\x36\x51\x61\x66\x92\x22\x8e\xae\xe0\x38\xbd\xd6\xe3\x2c\xec\x6b\x5f\xcb\xa0\xde\x0c\x4d\x26\x15\x59\xec\x6e\xd4\x43\xbf\x49\x37\x76\x69\x67\xf0\xb3\x56\xfa\x7e\x67\xef\x82\xc3\x30\x29\x13\x9a\xdf\xfb\x7a\xd4\x0b\x7f\x9f\x4c\xe4\xe3\x18\xa3\x85\xda\x03\x51\x7d\x5e\x1a\xf2\xf5\xce\xf6\x66\x29\xa9\xe8\xce\xf7\x0e\xd8\x47\x9c\xc8\x9d\xf3\x80\xed\xf5\x36\x36\x82\x3e\x4e\x87\x42\x13\xbc\xa3\xea\x2a\x2f\x5f\x4b\xe2\x6b\xeb\x4e\xfb\x6a\xd0\x99\x70\x70\x73\x34\xf3\x13\x0e\x41\x96\x76\xbb\x97\xa4\x3d\x2c\x9f\x69\x86\x66\x85\xf3\x8e\xc8\xdb\x3c\x4f\x41\xa8\xe5\xfd\xb2\xfb\xba\x1f\xe4\xcc\x7a\xc6\x2f\x68\x71\xce\xe9\xc9\x01\xc1\xcb\xc0\x23\xbf\xb3\xf7\xb9\x4c\x23\x7c\x5f\x12\xff\x53\xf7\x52\xe6\xcc\xa3\x17\x26\x49\xd8\xa9\xde\x66\x58\x86\x1c\x86\x5f\x54\x97\x7b\xab\xbb\xc6\xea\x72\x45\x40\x10\x00\x0e\x01\x65\xa4\x10\xb8\x29\x70\x16\xa9\x21\xe0\x1b\x05\x02\x8e\x41\x93\x37\x12\x83\xec\xa7\x44\xb5\xc7\x39\x63\x60\x70\x11\x7a\xba\x80\xa7\x0e\x14\x0c\x31\x68\xfd\xee\xa8\xe0\x05\x83\x07\xe0\xd0\xe7\xda\xef\xc3\x26\x92\x43\x77\x52\x93\x6c\xf1\x4c\x45\xfa\x46\x74\xde\xfb\xfb\x91\x01\xd5\x45\xf1\xe8\xc6\xf4\xa8\x63\x4e\x20\x12\x29\x00\x06\x85\x80\x23\x65\x45\xca\xaa\x14\x17\xa8\x7e\x97\xec\x90\xb6\x72\xf9\x7c\x42\xdb\x29\x8f\x97\x47\x5c\x4a\x57\x12\x9c\x62\x3f\x09\x80\xab\x87\x3b\xa6\x18\x4e\x3d\x5f\xf3\x56\x2e\x9e\xbe\x77\x7e\x9b\x13\x88\xfb\x6f\x7d\xb2\x6f\xaf\x75\x83\x8f\x8a\xee\x0d\xca\xc5\x58\xeb\x7b\x5d\xbf\x2b\x71\x1a\x1c\xfc\xb3\x44\x63\x58\x30\x6b\xa3\xc1\xe9\xe0\xfa\x58\xa5\x9f\x4f\xfc\x31\x6d\x2f\xf7\xff\x98\x6a\xf1\x61\x3a\x5a\xf8\x7b\x3a\xcb\xee\x4d\x59\xfd\x71\xce\xf9\xb2\xea\x3b\x75\x5c\xf9\x55\xf2\xcd\x4c\x35\x20\x58\x6a\x7c\x19\xb2\xed\x2c\x50\x6d\xe9\xe9\xa9\x68\xbf\xd5\x1d\xf7\xe5\x7a\xc5\x29\x5c\x4f\xe2\x72\x1e\xcf\xb8\x25\xf9\xa3\x1e\xe8\xd5\x03\xaf\xeb\x65\x7d\x2c\x2f\x28\xc6\x46\x53\x99\x5a\xf2\x0e\x2f\xd2\x6e\xd6\x17\x65\x90\xc3\xa6\xc6\xda\xb1\x3a\x9d\xfa\xd9\x56\x59\x39\xdb\x85\x3e\x10\x65\x6f\x3a\x2f\xfb\x98\xea\xc6\x9c\x43\xd5\x2a\xbd\xf1\x76\x29\xac\x6f\x07\x7b\x91\x9f\xd1\x76\xbd\x3d\x69\x96\x14\xec\xec\x06\xbf\x61\x6b\xb2\xe6\xb3\x63\x9f\x1b\x89\xde\xe7\xe7\xf4\x5a\x73\x52\x09\x77\x87\x37\x36\xe6\xd7\x60\x5c\x46\xed\xde\xf9\xc6\x71\x7b\x19\x9d\xf7\x26\xc5\xa7\x48\xfa\xd5\x09\x09\xf0\x7f\x15\xf3\x4f\x00\x00\x00\xff\xff\x78\xc4\x69\x14\x7f\x04\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x94, 0xa7, 0xe, 0x37, 0x3a, 0x2c, 0x9e, 0x9b, 0x89, 0x91, 0xa5, 0x82, 0x6, 0x19, 0xf6, 0x4b, 0x43, 0xd8, 0x85, 0x35, 0xac, 0xde, 0x10, 0x29, 0xd4, 0x69, 0xb9, 0x4a, 0xe8, 0x4e, 0xe6}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\x58\x02\x85\xe1\x9c\x55\xbc\x9c\x9a\x02\x84\x11\x04\x13\xe0\x41\x02\x61\x2f\x2e\xc3\x1b\x21\xfc\xc5\xad\xbe\xab\x5f\xdc\x27\x3d\xc9\x9f\x7d\xff\xfb\x77\x82\xac\xea\x9f\x3f\xae\xc7\xff\xb1\x5d\x3d\xe0\x7d\xf9\xcf\x5b\x8e\xff\x3e\x88\xa9\xeb\xf2\xe4\xe8\x02\xcf\xbf\x45\xde\x91\x79\xf8\x7a\xd0\x22\x9b\x71\x0c\x01\x6a\xbf\x55\xe1\x3d\x67\x78\xa3\x61\x34\xf7\xe8\x43\xe5\xf0\x62\x85\x79\xec\x9e\x56\x1b\xb8\xf5\xbc\x9b\x4d\xac\x90\x76\x79\x9a\xa2\xac\xda\xa8\xba\xb9\x23\x39\x16\x9a\x1f\xca\xc1\x88\x6f\xbe\xab\x7e\xbf\x0a\x61\x19\x87\xc4\x4a\x7c\x50\x1d\x93\xed\x28\xd1\xe8\x36\x2f\xd5\x11\x20\x24\x7f\x33\x26\x3d\xbc\x84\x44\x28\x01\x2f\x5b\x21\x68\x02\x3d\xae\xdc\x39\x2e\x9c\x8a\x18\x08\xa0\x19\x03\x9a\xc6\x4f\x9c\x22\xe6\x76\x47\xd7\x37\x4a\x17\x8f\xa5\xa8\xb7\xc2\x5a\x7d\x3d\x6a\x97\xe3\xad\x8c\xbe\xb3\x09\x43\x87\x30\x5e\x7e\x56\xd3\xe0\xbc\x0b\x21\x07\x42\xa1\xf0\x3e\x63\x86\x5f\x55\xf5\xc2\x59\xe2\xdb\x9e\x9e\xba\x48\x10\xcd\xce\x4f\x92\x1f\xa9\x98\x7b\xf4\xb3\x23\x1b\xc8\xe1\x6a\x3e\x40\x14\x2d\x3a\x8a\xd4\x44\xe0\x99\x0c\x19\x0e\xc7\x7a\x47\x5d\x74\xa0\x2c\xe5\x53\x53\x92\x38\x3c\x16\xa4\x99\xfc\x34\x33\x5d\x0f\xb1\x22\x10\x75\x43\x0e\x38\x97\x02\xfc\x83\xac\xad\x49\xcc\x2f\x9a\xeb\x5d\xd9\x42\x2a\xc5\xdc\x5f\x8f\x04\x84\xe8\xf8\xe5\x3e\x26\x6a\x3b\xdf\xb2\x53\x9b\x58\xc6\xcc\x17\xd1\x57\x97\xe5\x1a\xbe\xea\xe8\x12\xef\xf0\x02\x3f\xea\x02\xef\x88\x53\xcf\x4d\xcd\x81\xa3\x5a\xc4\x63\x1b\xf2\xf9\x1d\x06\x58\x76\xf0\x54\xa1\x3e\xbf\x39\xda\xce\xcc\xd9\x08\x4a\xe0\x9f\xe6\x72\x08\x59\xd9\xe4\xd8\x0b\xf5\x9d\x22\x8f\x6e\xd6\x97\xc6\x90\x3c\x97\x68\xfb\x92\x24\xad\x4b\x84\x40\x1e\x2e\x02\x7e\x01\x6b\x6a\x5c\xf2\x60\x22\x2a\xf3\x3a\x14\xe4\x22\xc7\x32\x93\x96\x83\xb9\x70\x08\x95\x59\xca\x8a\xce\x40\x9a\xd2\xea\xb7\x66\x74\x3f\xdd\xf2\xf4\x22\x64\xf3\x1d\x3a\x46\x73\x82\x86\x47\x96\xf4\x50\x0f\x1a\xc6\x91\x00\xe2\x74\x2c\xde\xd3\x56\x46\x01\xd7\xd5\x5d\x02\x54\xdc\x7f\xad\x65\x3e\x5d\x36\xd1\xd6\xae\x21\xb7\x80\x33\x69\x1b\xd5\x6d\xda\x69\x16\x5b\x5d\x4d\xd4\xb1\x6f\x24\x42\x37\xa7\x6f\x07\x0a\x6e\xae\x05\xd3\x90\x4c\x77\xfb\x14\xa0\x87\x81\xf4\xc5\x35\xaa\xd3\xd5\x70\x99\x5c\x2e\x14\x0e\xbe\xa2\x1e\x2c\xb6\xf8\x27\xbf\x78\xf7\xcf\xd6\xc2\x6f\x83\x7a\xf4\x89\x84\x6f\xd2\xac\x92\x01\x8f\xbd\x99\x74\x7d\x3d\x2c\xf5\x8c\x59\xa7\xa1\xc5\x45\xe9\xb6\x4e\xaa\x59\x55\x70\x7c\x89\xfb\x94\xb5\x69\xdb\x7f\xf9\x82\x8d\xa4\x34\xcd\xda\x6a\x67\xd8\xc6\x8f\xc7\x80\x78\xe2\xf1\x5c\xf6\xef\xc9\x8f\xaa\xc0\x9b\x11\x33\x8b\xd8\xbc\x1a\xae\xe6\x3b\xb7\xec\x36\x7e\x4d\x31\xd5\xa7\xc2\x89\x8f\x8e\xfd\x38\x90\xb2\x68\x84\xdd\x8f\xdd\xf8\xbc\x5a\x13\x8f\x7f\x62\xe1\x21\x3e\x84\x90\x00\x1c\x74\x95\x4f\x1a\x4a\xd8\xf1\xbb\xf3\x5b\x0b\x71\x5b\x39\x8b\xb5\x77\xcd\x73\x1c\xb7\x9c\x59\x44\xbd\xfe\x2a\x07\x14\x7b\xd6\x7c\xa5\x31\xb9\x7d\x25\x09\x76\x63\xd9\x0b\x16\xe2\x79\x62\x19\x7d\xf2\x93\x0c\xce\x71\x9b\x60\x39\xb6\x4e\xdf\x50\xe3\xf5\xb0\xed\x28\xef\x58\x16\xbe\x7c\xd1\xce\x6a\x6a\xf3\xd9\xb5\x3a\xf7\x9c\xbd\x96\x4b\x61\x60\xf7\xb7\xd8\x62\x28\xa4\xae\x8e\xcb\xa1\x9f\xb1\xaa\x47\xd0\x2f\xb6\x51\xfb\xec\x17\x69\xb4\x7d\x1e\x76\xeb\x51\x67\xc4\xea\xb4\xf0\xb1\x48\xba\x34\x7f\x53\xff\xb9\x91\x97\x1c\xa1\xe0\x9b\xd5\xc5\xf6\x04\xd5\x49\xce\x88\xd3\x6e\x47\xf1\x4a\xa8\x04\x0a\x1b\x7c\x1d\x5d\xe2\x3b\x92\x87\x6b\x83\x14\x64\x3d\xfa\xbe\x97\x69\x3f\x74\x5c\xbe\x9d\x55\xa8\x0c\x5d\x78\x37\x92\xfc\x59\x1d\xe7\x29\xf0\xb2\x09\xd0\x85\x5a\x11\x03\xbb\xdf\x9a\x2d\x6e\xce\x49\xe7\x00\x3e\xa7\xd7\x30\x68\xe2\xc5\xeb\xc7\x64\x26\xf8\x88\x79\x1d\xe3\x19\x10\xd3\x7d\x7e\x54\xf9\x4c\x50\x0b\xcf\x9f\x71\xba\xb7\x8a\x2c\x16\x4b\xcb\xd8\x1a\xe4\xca\x14\xc0\x36\x9c\x3d\x57\xc4\x93\xc4\x57\x5b\x1b\xdb\x44\x32\xef\x53\xaa\x2c\x99\x59\x35\xc2\x98\xc2\x19\x5b\x33\xf0\xf6\x6c\x81\xd0\x02\x39\xb1\x0a\xc0\x2f\x63\xcd\x2f\x1b\xb8\x8d\xad\x47\x22\xeb\xa7\x94\xa3\x35\x35\xe3\x8a\xa9\x58\x9c\xf7\xcf\x1a\xee\xce\xc2\x82\x71\x91\xd3\xe4\x71\x99\x60\xe4\xa7\x27\xdb\x16\x8a\xcf\xb6\xce\x18\x43\x8e\xa6\x7a\xf1\x97\x44\x9c\x1a\x68\xf1\xfe\x42\xf6\x6a\x6c\xd6\xc5\x76\x6f\x5e\xe0\xc5\xae\xcc\x6e\x0f\x55\x42\x09\x17\xeb\x58\xe6\x97\x8d\x7c\xc6\x79\x0f\xb4\xe0\xe2\xeb\xaf\x79\xba\xd7\x8b\x7e\x84\xed\x9b\x36\x36\x10\x9e\xcf\xa5\x18\xe0\x86\x24\x75\x34\x3c\x47\x62\x9b\x38\x8b\xf3\x3a\xd6\xfd\xcc\x27\xd5\x2e\x92\x59\xcf\x35\xe5\xa4\x73\x67\x62\x77\x52\x8e\xbb\xa7\x2a\xf4\x10\xf2\x52\xd2\x8f\x26\x66\x4e\x6e\xc0\xb7\xe4\x67\x9f\x43\x80\xfc\x12\x0f\xb3\xfc\x90\x2e\x75\x17\x17\x4e\x65\xc7\x41\xe5\x04\x72\x00\xd7\x05\xf0\x8d\xe8\x98\x1f\xf8\x63\x6e\x22\x5d\x25\x98\x7c\xa3\x62\x87\x66\x2f\xcc\xe7\xf6\x93\xe8\x11\xea\x54\x8c\x29\x48\x72\x9d\xc7\x1d\xb1\x7f\x93\x3b\x08\xe3\x41\x8b\x5e\x61\xe3\xf2\xec\xcb\x1e\x56\xd6\x4e\xa8\x8b\xd9\x2b\x9d\x74\xc1\xb7\xa3\xd6\x4e\x48\xf8\xfb\xfc\x90\xc9\x31\x10\x8a\x3f\x64\x6f\xa7\x42\x2c\x49\x7d\x68\xd0\x12\xa3\x6c\x37\x4a\x8c\xdc\xe7\x4b\xdf\x06\xcd\x3f\xf1\xab\xd4\x73\x42\x94\x39\xe5\x66\xcc\xce\x00\xf9\xcf\x0f\xe0\x51\xe4\x7a\xfc\x08\xa6\xc5\x1f\xbf\xb8\x67\xea\x6b\x99\x22\x63\xf4\xa0\x70\x98\x67\xde\x63\x99\xc8\x89\xe8\x30\x33\x89\x22\xcd\x79\x6d\xee\x5d\x11\xc2\xbd\x5e\xfd\x54\x9c\x5e\xe3\xdc\x65\xf6\x34\xe9\x1a\x8b\x84\xde\x99\x33\xf0\x7f\xe4\x2f\x2b\xf2\x47\xfa\x6f\x6e\xfe\x09\x00\x00\xff\xff\x78\x72\xc9\xdc\x8f\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0x65, 0xa8, 0x8, 0x22, 0xd6, 0x82, 0x94, 0x88, 0x87, 0xc2, 0xb1, 0xba, 0xf4, 0x88, 0xae, 0xac, 0xc1, 0x85, 0x53, 0xf, 0x4a, 0x1c, 0xac, 0x95, 0x7, 0xfd, 0x2, 0x34, 0xa9, 0xad, 0x1f}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xd2\xb2\x5a\x13\x85\x73\xae\xe2\xcf\xad\xbf\x64\x12\x21\x38\x41\x6f\xd8\x32\x23\x9b\x51\xc9\x18\x64\x23\x2a\x28\x28\x83\x57\x7f\xea\x7d\x83\x2f\x39\xdf\x4a\xba\x6b\x75\xd7\x4a\xba\xeb\xf9\xff\x8f\x10\xd6\x4d\xef\x7f\x2a\x0e\x22\xf3\x60\xaa\x10\xe1\x5f\x97\x71\x4d\x53\xcb\x34\x55\x85\xdb\x4a\x61\x36\x11\x50\x33\x00\x4f\x16\x8a\x5e\xce\xd6\xca\x08\x5e\xa5\xf4\x7c\xf0\x11\x3b\x98\x74\xd6\xc8\xd9\xb2\xfb\xcc\x6c\xa6\xd2\x03\x82\x1d\x44\x60\x66\xec\x2f\x0e\x5d\x04\x3a\x70\x31\x56\x1b\xd7\x22\xbc\xd2\xe6\x82\x35\x9d\x53\xaf\x77\x83\x78\xc6\xf3\x59\x4b\x08\xd1\xf0\xbc\x68\x05\xef\x0d\xe5\x43\x69\xce\x3c\xa5\x84\xc5\xb3\xd1\x94\x1e\xe3\xb6\xe6\xec\x46\x78\x76\xa3\xdb\x4f\xdd\xa5\x4d\xe9\xb9\x6d\xf9\xd3\x73\x7f\xbc\x16\x5a\x37\x30\x67\x0c\xbf\x61\x36\x9e\xef\x7f\xc2\x98\x33\x4f\x17\x2d\x02\x07\x51\x2f\x41\xe0\x46\x48\xdf\x4d\x99\x1e\xcf\x94\xe2\xab\x0b\xac\xae\x86\x2f\x3d\x34\x0b\x41\x23\x18\x01\x89\x01\x44\x13\x69\x33\xfc\xcc\x6d\xe8\x4d\xc4\x00\x51\xf9\xf5\x31\xd1\x44\xe3\x16\xab\xd9\xeb\xab\xfc\xf2\xac\xe1\x9e\x50\x57\x88\xbc\xcb\xf7\xd9\xa5\xbb\xa6\xf0\x73\xc9\x33\x70\xc2\xc2\xd8\x8a\x9b\xe6\xc5\x37\x38\xd7\xd0\xa8\x73\x79\x0c\x8c\x0b\x12\x12\x76\xbb\xcf\xf7\xd2\x77\xf7\x32\x74\xea\x3a\xee\xa9\x7d\x15\x27\x57\x6d\x8d\x50\x1a\xb7\xde\xb4\xf3\xe6\x7e\x6b\xf5\xf3\x3b\x54\xa0\x16\x3f\xd5\xd0\x11\x4f\x60\x03\xa9\xd2\xac\x67\xcc\x78\xcf\xc1\x38\x4c\x3c\x0a\xd4\xa0\x4b\x1f\x24\xed\x5e\x32\x38\xe3\xf5\x8d\xa4\x71\xba\x8a\xc4\xaa\x15\x22\xbc\x66\x95\xf6\xc7\x28\xcf\xfa\x6a\xdd\xed\xe9\xfd\x33\x4a\x80\xb2\xf1\x61\x8e\x3e\x65\x50\x1e\xbd\xec\xf5\x7b\xbb\xd6\xb2\x9e\x24\x75\x36\xe8\xc8\xb2\x9f\xdc\xd4\xdd\x77\x81\xa8\x08\x41\xb2\x9f\x7c\xf9\x2d\xbd\xcd\xac\xda\xfa\x29\xff\x99\x15\xd6\x89\xf2\xa4\x7a\x35\x2d\x3a\x53\xfa\x60\xda\x64\xe5\x9e\xed\xed\x7e\x3a\x26\x27\xf6\x54\x11\xb3\xaa\x76\xb2\x2c\x4b\x32\xa9\xe4\xc8\xf9\x26\xf2\x34\x05\xbc\xf4\xf1\x57\x3b\xdb\x0f\x2a\xb9\xbf\xd5\xa9\x66\x39\x4f\xa8\x69\x2f\xe6\xd7\xaf\xcc\x88\x4b\xa6\x24\x30\xc9\xfc\xb1\x67\x4d\x5c\x1c\xca\x4d\xc8\x99\xd8\x3b\x00\x75\x11\x80\xde\xd2\x73\x3f\xd3\x73\x39\x6b\xf4\xac\x25\x01\xeb\x03\x31\xb6\x08\x88\x06\x34\xa5\x2e\x62\x75\x06\xb8\xb8\xb2\x08\x49\x5d\x44\x74\x55\x1d\x75\x20\xf1\x01\xcd\x2e\x42\x94\x0e\x88\xe2\x03\x22\xa5\x06\x2d\xd4\x3f\x67\x36\x42\x17\xeb\x1a\xa4\x14\x85\xce\x31\xdc\xb5\x22\xae\x5b\x66\x79\x29\x98\x2b\xc3\xcb\x24\xb3\xa1\xc3\xad\x9c\xd4\x02\xf7\xbb\x1c\x60\xec\xb4\x30\x52\x7a\x1f\x0b\xde\x6b\x0a\xbd\x99\x4a\x21\x54\xd1\xda\x7f\x0a\x5d\x69\xcf\xe9\x6a\x20\x43\x06\x06\x40\x37\x30\xfc\x4d\xf8\x6f\xbf\xaf\x51\x8a\x11\x38\x1f\x1f\x2c\xfb\x12\x6a\x4d\xcc\x24\x6f\x61\x16\xf0\x25\xbc\xdb\xdd\xe2\x08\x62\x6a\x2c\x27\xf9\x71\xcc\xbe\xfa\x2d\x83\x3c\x5b\xd1\x21\x9e\x0e\x50\xd1\x7b\x12\xbe\x9d\x50\x8c\x85\xb7\xfd\x78\x1f\x0d\xa9\x50\xa6\x9b\xc8\x3d\x8b\x9e\xe9\xe4\x29\xdd\x49\xb9\xda\x7c\xa1\x5f\x2d\x33\xc2\xcf\x4b\x36\x5c\xd1\xc9\xf4\x0b\x51\x4e\xcd\x82\x77\x58\x41\xe9\x8c\x43\xba\xad\xba\x93\x35\xd0\x84\xc3\xfe\x6d\xb3\x3f\x55\xfa\xa4\xa1\xcb\xeb\xc8\x24\xd4\x78\x0d\x75\xe7\x64\x47\x69\xf6\xb7\xab\x9b\xe6\xa2\xfc\x86\x5c\xf2\x03\x63\xb3\x48\x7c\x32\xb5\xb8\xda\xd6\x0f\x29\x5b\xec\xeb\x2a\xf1\x6d\xd7\x78\x89\xbc\x17\x6f\x7e\x13\x89\xc6\xb6\xc5\xcc\xa4\xed\x15\xd6\x31\xbe\xdf\xeb\xfd\x69\x3f\xf9\xa0\x9d\x38\x19\x15\xdd\x9c\x7c\x84\x79\x52\x84\x64\x67\xe7\xca\xe1\x74\x9e\xfd\xfd\xd1\x7d\xbb\x30\x04\x07\xe2\xdb\x04\x75\x70\x5e\xd5\xc5\x03\x60\xf4\x5d\xc2\x8a\x7c\xcc\xa9\x45\xe4\xd8\xee\x66\x29\xac\x3d\x38\xfb\xac\x39\x70\xf0\xea\xc4\x92\x5d\x78\x7c\x62\x65\x4d\x7c\x1e\xc4\xbe\xde\x28\x9f\xe2\x19\x4e\x43\xd1\x86\x78\xbc\x64\xed\x80\x16\xe6\xbd\xa0\x6f\x90\x8d\x20\x0f\xe4\x1f\xe6\x17\x52\xd8\xd3\xfe\x0b\xae\x7f\x03\x00\x00\xff\xff\xbb\xda\xd7\x24\xd5\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1237, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0x6e, 0xc9, 0xc3, 0x62, 0xf4, 0xe4, 0xe1, 0x2c, 0x3a, 0xa4, 0xfc, 0xb0, 0x5a, 0x5a, 0x3d, 0x65, 0x3f, 0x3c, 0x94, 0x5, 0xc, 0xa, 0xc3, 0x58, 0x5d, 0x3, 0x9a, 0xb6, 0x67, 0x2, 0xb8}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\xc8\x02\x85\xe1\x9c\x55\xdc\x9c\x7a\x85\x07\x11\xbc\xa0\x81\x06\x21\xbc\x07\x65\x2d\x61\x84\xf7\x02\xb1\xfa\xa9\xb9\xf1\x9c\xf4\x24\x7f\xf6\xfd\xef\xdf\x49\x50\xd3\xed\x3f\x7e\x00\xfe\xb8\xbe\x1e\x83\x10\xfe\x31\x60\xf6\xf7\xc1\x2c\x5d\x87\x63\xa5\x4b\x00\x18\x32\xf0\x20\xd8\xd6\x69\x61\x55\x4f\x7c\x07\x59\x71\xae\x5f\xa3\x09\x10\x17\x67\x8a\x4d\x5e\xe9\xca\x3f\xa9\x3d\x4b\x2e\x7a\x6f\xfc\x53\xcd\x81\xa9\xe3\xee\x88\xa1\x6d\xf4\xb5\xea\x78\x49\x5b\xd2\x01\x05\x38\x55\x8e\x17\xaf\x95\x99\x1f\x5c\x0a\x6b\x86\xa1\x0c\x5d\x1e\x77\xf3\x02\xe3\x49\xee\x8b\x7b\xbd\xf0\xf0\x6d\xb8\x3f\x64\x99\xd1\xd7\xbb\xe3\xe6\x80\x21\x8e\x54\x72\x11\x16\x83\xf7\x43\xb1\x82\xd0\x79\xbe\xc4\x2a\xf2\xda\x27\x35\xb5\xea\xc4\x7f\x81\x2c\xe8\x8b\x57\x2c\x26\xbb\x43\x39\x25\x22\x9b\x5f\xc1\x68\x28\x2d\xdd\xa3\xfb\x7b\x2f\x58\xec\xf1\x5a\x9c\x0a\x24\xaf\x47\x6d\x2a\x2c\x48\x5a\xbe\x5e\x57\x4e\x1f\x08\xa9\x8b\x53\x1a\x9d\x55\x10\xcc\xf9\x8b\xe3\x8a\xa8\x70\x73\x32\x2e\x84\x8b\x30\x8b\x25\xd0\xd2\xf2\xa2\xb6\x65\x75\x73\x4c\x26\xe9\x2e\x45\x63\x76\x24\xba\xfe\x18\xa9\xf7\x86\x32\xee\x11\x5f\x5d\x2c\xaa\x4c\x24\xdf\xd3\xa2\x74\x5d\xe7\x0b\xef\x25\xfc\xdd\xa8\xd2\x14\xc8\x7c\x5f\x9a\x5b\xdd\x17\xfc\xd1\x3e\x5e\xde\x82\x31\xa2\x1d\xe6\x0c\x6b\x38\xda\xb8\x12\x8e\x95\x94\xb1\x67\x12\x76\x33\xdb\xb2\xa4\x9d\xa9\xdb\x6e\x81\xa4\xf8\x9e\xae\x00\x0f\x48\x60\xd4\x25\xa0\xe4\x62\x8c\x3e\x92\x3c\xdc\x27\x8e\x2b\x1b\xec\x12\x9e\x5f\xaa\xa4\x72\x86\x63\x1e\x5d\x15\x3d\x62\xd3\xad\xb6\xab\x9f\x26\x11\xe1\xb1\x6a\x6f\x6c\x12\xf7\x2d\x2f\x09\x63\xfb\x13\xe9\xc7\x31\xe2\x23\x47\xd6\x07\x69\xa8\x5c\xf6\x3b\xca\xf9\x87\x0d\x67\xe8\xb6\x45\x8d\x04\xe8\x66\x77\x8f\xd3\x67\xc3\xb0\x60\x01\x09\x9a\x29\xd9\x6d\x33\x06\x47\x2e\x42\x42\x08\x20\x2d\x53\x1a\x1b\xbc\xd4\xc2\x86\x36\x9a\xb5\xdd\x77\x97\x54\xdd\x55\x05\x93\xac\x5b\xfd\x34\x56\x14\x89\x5c\xa6\xfa\xe3\xa4\x1f\xa7\x6b\x7e\xf8\x58\x8b\xbc\xaf\xf9\x41\x14\xd1\xba\x1c\x83\xe2\xdb\xdb\x70\xea\x58\x56\x6c\xca\xe4\x0d\x14\xdb\x83\xf8\x8d\x12\x5e\x46\x25\xd6\x57\x1c\x5e\x5a\x09\xbb\xe3\xb2\x06\xb3\xa4\xd0\x05\xe6\x06\x61\x3b\x37\x16\xca\xd6\x40\xf6\xc9\xdb\xdd\x94\x99\x96\x34\x13\xbc\xb5\xea\x7c\xfa\xae\xae\xe1\xf4\xdc\xd3\x82\xc0\xba\xb6\x94\xc2\x7e\xef\x9b\x06\x90\x2a\xcd\xfc\x70\x71\xb8\xb4\xd9\x8e\x46\xde\xc7\x77\xc5\x2e\xa9\xfa\xe3\xf1\x70\xa8\x3b\xc2\x86\x48\x19\xda\x29\x76\x81\xe5\x4f\x0e\xb7\x2d\x5a\x1c\x2e\xb6\x6b\x92\x9c\xd0\x62\x89\x11\x8c\xcf\x2d\x92\xab\x0c\x02\xbe\x3b\xf6\x9f\xb2\xd7\x74\xbc\x7c\x5b\x8e\x8d\x46\x83\x1e\x74\x52\x39\xcc\xc2\xb2\xb3\x8e\x81\xa1\x7d\x96\x8f\x2c\x24\xda\x84\x1e\xa8\xfd\x0a\xc5\xf5\x41\x61\x9c\xd1\x5c\xe1\x1a\xe8\xbb\x91\x3f\xb3\x19\x47\x73\x50\xd3\x33\x0c\x22\xf7\xfd\x25\x28\x0d\x12\xd2\x92\x7b\xf3\x87\x04\x9d\x51\x54\x20\xcf\xf8\x6e\x12\x8b\x86\x36\x2b\xed\xb7\xb5\xbd\x7a\xea\x18\xa3\xb9\x63\x40\x00\x69\x9a\x6e\xce\xbd\xbb\x33\x33\x5e\x5a\x3d\xa8\x3a\xf2\x62\xe7\x24\x3c\xee\x49\xf4\xd5\xa6\xf8\x56\x78\x4a\x2e\x5d\x49\x94\x47\x7a\xb5\x58\xf4\xfa\xb7\xf8\xe4\x57\x11\xd3\x90\xd6\x9d\x53\x7b\x24\x5b\xaa\xb5\xcd\xbc\xc4\x8e\x8b\x32\xa9\xd2\x78\x4d\xff\x0c\xb3\xad\xb7\x92\xd4\x1f\x47\xb4\x66\x23\x30\x2f\x29\xc7\x37\xe8\x5b\xf4\xec\x1e\x3a\x6c\x97\xcd\xcc\x7b\xcc\xb2\x65\x3b\xea\x96\x9d\xed\x62\x02\x18\x72\x20\xf1\x66\xec\x33\x9b\x85\x46\x63\xc8\x09\x12\x02\x7c\x2a\xb7\xd6\x20\x7c\x78\xbf\xa1\xf0\xa0\xbc\xd4\x8d\xce\x4c\xcb\x08\x13\x1d\x73\x9a\x00\x8c\x4e\x9a\x2e\x4a\x0e\xe1\x69\x0f\x88\x09\xca\xb4\x4a\x70\x23\x19\xf8\x13\xd2\x50\x6c\x24\xc9\xd0\xbd\x2c\x3b\xc0\x4d\xae\x32\x50\xf2\x59\xa2\xfa\x43\x8f\x62\xd2\xa9\x9c\x66\x7a\x53\x6b\x9d\x62\xb5\xea\xad\x06\x3d\x0b\x8f\x56\x03\x53\xae\x16\xc2\xd8\x39\x48\x39\x8a\x06\xb4\x15\x67\xdd\x2b\xc1\x97\xa3\x32\x44\xde\xd5\x35\x9f\xf6\x22\x2a\xdd\x79\x17\x68\xaa\x28\x50\x72\x3a\x0c\xd2\x12\xe3\x15\x2e\x9d\x05\x3b\xaa\x67\x41\x81\x51\xe8\xab\xef\x69\xaf\xf0\x83\xf5\x77\xbf\xfc\x6d\xf0\x84\x69\xdf\xba\x29\x7b\x53\x3e\x81\xac\x6a\xa2\xe4\x46\x56\x7d\x3c\x3a\x55\x1c\xa3\x78\x7f\x9a\x09\xd6\x97\xaf\x7e\xcb\x5b\x6b\x49\x7b\x2b\xe9\xfd\x6f\xb9\x6d\x8a\xe6\x19\x52\xa5\xc5\xa5\x56\xb6\x38\xca\xc2\x81\x62\x52\x7a\xf0\xde\xf4\x29\xe3\xa3\x75\x68\x55\x1b\x76\xc0\x0b\xec\xfa\xed\xe2\x02\xf6\x04\x4a\x1c\x4c\xb2\x72\x10\xbd\x9d\xc9\xc9\xd5\x33\xb1\x4f\xca\x16\xd4\x7f\xd4\x01\x18\x45\xd0\xfd\x30\xa4\x08\xde\x75\xb8\xfa\x2d\x04\x2f\x2a\xc2\xa3\xe6\x20\xd7\xdb\x43\x39\x28\x11\x6f\x26\x0c\xc0\xe6\x3b\xaa\x8c\xe3\x4f\xaa\xa2\x07\x46\xcf\x85\x73\x6c\x8e\x04\x13\x9a\xc4\x1a\x44\x7b\x26\x7d\x49\xeb\xfb\x7b\xa5\xbb\x5a\x3c\x29\x41\xc0\x93\xeb\xe5\x4d\xc8\x47\x76\xc8\xde\xac\x2f\x32\x31\x67\xdb\x4b\x30\x6a\xa0\x10\x86\x96\x11\x62\x97\xb8\x3f\x89\x73\xb6\xb2\x28\x9b\x73\x8f\x8f\xf2\x81\xbe\x25\x06\xbf\xc7\x4f\x8f\x3a\x34\x7e\x52\xd9\x25\x4a\x9b\x87\x30\x5f\x5e\x78\x7d\xb3\x69\xc5\xde\xa6\xc1\x91\xd0\xbb\x13\x15\x95\x70\xa2\x14\x09\x74\x7e\xdc\x2b\xa7\x95\xc5\xc9\xbc\xc2\x85\x19\xe8\x57\x6f\x52\xdc\xf5\x4e\x48\xb3\x79\xf2\x9f\xf1\x45\xbf\x88\x52\xf8\xb9\xd9\x45\xc1\xbd\xa4\xb1\xbb\x35\xdd\x38\x75\x3a\x8d\x93\x7b\x7c\x56\xbc\x3f\xce\x17\x99\x6a\xa0\xf5\x1a\xb1\x8e\xde\xac\x26\xeb\x83\x24\x80\x56\x1e\x3b\x4f\x42\x99\x48\x53\x31\xf9\x7f\xec\x2f\x29\xd0\x56\xfe\x9b\x9a\x7f\x02\x00\x00\xff\xff\x4e\xc9\x3e\x1f\x8b\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0xd6, 0x7a, 0xf7, 0xba, 0xaf, 0xc2, 0xba, 0x95, 0x3e, 0x8a, 0x30, 0x24, 0x5b, 0x71, 0x63, 0x7f, 0xb6, 0x25, 0x70, 0xcf, 0xbe, 0xec, 0x7b, 0xad, 0x2e, 0x5f, 0x2b, 0xc, 0xb7, 0x39, 0x67}}
	return a, nil
}

var _test_certsTenantSigning10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xbd\xb2\x9a\x40\x18\xc6\xf1\x9e\xab\x48\xef\x64\x44\x32\x67\x90\xe2\x14\xef\xee\xbe\xe8\x82\x8b\x2c\x2e\x1f\x6b\x87\x24\x82\x68\xc2\x08\xc4\x45\xaf\x3e\x23\x55\x66\xce\x53\xfe\x8a\x7f\xf3\x7c\x7f\x8f\xe0\x86\x47\xdf\x28\x26\x8a\xfb\x9c\x82\xc2\x59\x2d\xc1\x39\x09\x5a\x4a\x9c\x12\x18\xd4\x48\xa1\x41\x30\xba\x38\x75\x79\x6f\xf7\xb7\xc9\xbc\x74\x73\x1f\x97\xb9\xed\x33\xf0\x49\x2d\xfa\x63\x01\x26\x7c\xe1\x41\x10\xd8\xc0\x2a\x45\x8b\x36\x22\x90\x8e\xd7\x96\x3f\x82\x87\xce\xa3\x4e\x24\xa9\x41\xa3\x59\x26\x25\x43\x33\xb1\x93\x13\xf5\xd5\x6f\xaf\xd1\x4e\x5d\x4b\x1b\xcd\xb6\xa9\x22\xd1\x72\x23\x14\x1a\xa1\xae\xc6\x12\x8a\x4f\xf9\x8c\xd5\x1b\x57\x6f\x9c\xad\x85\x5e\x24\xdc\x20\xcc\xb1\x10\xcd\xed\xff\xd8\xe4\x2b\x50\xa4\x8e\x32\x8b\x80\x50\x0c\xa3\x87\x76\xc6\xe7\xc9\xf1\xdb\x92\x12\x26\x15\xdc\x05\xa4\x1b\x78\x8e\xb7\x0a\x44\x03\xbe\xdd\x1d\x32\xfc\x73\x1c\xb7\x43\x8f\x43\xac\xca\x6c\x37\xdc\xe3\x45\xb4\x1a\x5c\x4b\x06\xfe\xad\x5b\x5c\xd6\xfa\x6a\xff\x32\xa3\x3a\x74\x13\x37\xc8\x60\xff\xae\x6f\xe5\x9a\xc0\x79\x8d\x04\x04\x25\x25\x18\x22\x35\x0b\x9d\xcc\x80\x8d\xd0\xa5\x5d\xec\x1e\xa4\x6f\xed\x8b\xf8\x99\xe3\xc0\xaa\xa9\x98\xf8\xc6\x15\x09\x6b\xb2\xcc\xb3\x13\x17\x74\xaa\xda\xfd\xc3\xdd\x13\xf7\xdc\x3d\xd5\x38\xd1\xe2\xac\x8e\xf4\xe2\xc5\xbb\xdd\x47\x20\x3d\xe7\x1e\xd2\xfa\xb5\xb4\x04\x59\x7e\xb0\x90\x2c\xc2\xbf\x3f\xaf\x0c\x3e\x3f\xad\xf9\x1c\x8c\xd8\xd7\xc3\xfe\x05\x00\x00\xff\xff\x99\x68\x39\xf7\xcd\x01\x00\x00")

func test_certsTenantSigning10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Crt,
		"test_certs/tenant-signing.10.crt",
	)
}

func test_certsTenantSigning10Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.crt", size: 461, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0x48, 0xa1, 0xa0, 0xe, 0x43, 0x54, 0xa8, 0x76, 0x55, 0x89, 0x16, 0x7c, 0x3, 0xb3, 0xca, 0x58, 0x8c, 0xd5, 0x1, 0x16, 0xae, 0xdf, 0x3a, 0x68, 0x79, 0x1a, 0x8e, 0xe6, 0x97, 0x5, 0xfd}}
	return a, nil
}

var _test_certsTenantSigning10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x9b\x63\xba\xb3\xb9\xbf\xa1\x63\xa0\x7f\x7a\x8a\x89\xa5\x93\x97\x97\xbb\x87\xbf\x71\x40\x6a\x55\xa9\xab\x7b\x98\xa9\x7f\xaa\xbb\xb9\x4b\x5e\xbe\x4f\x66\x62\x80\xab\xa9\x0f\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\x1b\x6b\x69\xb4\x77\x00\x00\x00")

func test_certsTenantSigning10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Key,
		"test_certs/tenant-signing.10.key",
	)
}

func test_certsTenantSigning10Key() (*asset, error) {
	bytes, err := test_certsTenantSigning10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x60, 0xf4, 0x23, 0x52, 0x87, 0xf8, 0x2f, 0x38, 0x8c, 0x22, 0xee, 0xf6, 0xb7, 0x5, 0xaa, 0x39, 0xda, 0xa7, 0xb2, 0xa7, 0x4, 0x56, 0x36, 0x6b, 0x67, 0x46, 0xf2, 0x60, 0x9c, 0xc, 0x8}}
	return a, nil
}

var _test_certsTenantSigning11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xcf\x92\x9a\x40\x10\xc7\xf1\x3b\x4f\x91\xbb\x95\x62\x77\x54\xb6\x3c\xf6\xfc\x01\x07\xed\xd1\x91\xc1\xec\x78\xc3\x5d\x82\x4e\x49\x88\x84\x38\xc0\xd3\xa7\x30\x97\x54\xa5\x8f\x9f\xc3\xb7\x0f\xbf\xaf\xd3\x51\x91\x48\xf5\x85\x89\x83\x91\xb1\x64\x60\xc4\x53\x03\x94\x92\xa6\x86\x51\xb2\x01\x0e\x95\x60\x70\xa1\xf7\xc1\xa9\xfd\xb8\x70\xd9\x0f\x50\xeb\x31\x8c\x76\x72\xac\x0a\x84\x3c\x81\xa1\xbb\x7d\x70\x68\xf1\x20\xbd\x00\xcb\x8f\x5a\x6f\x02\xe1\x6f\xfc\x4c\x54\xfb\x51\xaf\x2e\x96\x54\x7d\x6c\xc0\xd0\x4a\x1d\x29\xa0\xe1\x42\x3d\x2c\xe9\x86\x33\x89\x5d\xc1\x28\xd7\x06\xca\xd8\xbf\x0c\xe8\xa0\x47\x03\xfd\xce\x40\x1f\xa0\x8b\x8b\x09\xd5\x38\x61\xfe\xc4\xc9\x90\xfd\xea\x85\x03\xfd\x37\xd6\x18\x96\xff\x13\xe3\xe2\x88\x14\x13\x78\xcd\x45\x00\x3d\xa2\x26\x2b\x57\xcc\xd3\x87\xfd\xa6\x1a\x29\x14\x45\xd6\x78\xaa\x2d\xdf\x90\xa3\x87\x41\x40\xb4\xdd\xa6\xb9\xdc\xe6\xbb\xe4\xbe\x0e\x13\xda\x59\xcf\xc2\x65\x56\x72\xeb\xcf\x3e\xe8\x5d\x9b\xe6\x65\x71\x02\x72\x5b\xc9\x62\xe6\xa6\xaf\x08\x8b\xa9\xfe\xc9\xbd\xa0\xa1\xd7\x02\xbc\x8c\x1b\x0e\x31\xad\xb0\x3d\xbd\x03\xd7\x9a\xab\xab\xc8\xa2\xf4\xe7\x01\x82\xc3\x32\x8b\x2e\x61\xb4\x1f\x43\xdc\x99\xc5\xef\xec\xad\x3c\xad\x5e\x53\x1b\xda\xb4\x29\x0a\x4f\xba\xc5\x4c\x3f\xe8\xfb\xbd\x9e\x0d\xcb\xb7\x6e\xce\xe9\x77\x22\x92\x7c\x33\xcf\xd6\xf5\x67\x5c\xad\xf7\xd7\xa0\xec\x5a\xf6\x32\xd6\xb3\x73\x56\x61\xf0\x1c\x46\x28\xfe\xff\x58\x7f\x02\x00\x00\xff\xff\x1a\x22\x06\x12\xc9\x01\x00\x00")

func test_certsTenantSigning11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Crt,
		"test_certs/tenant-signing.11.crt",
	)
}

func test_certsTenantSigning11Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.crt", size: 457, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x73, 0x66, 0x8a, 0x48, 0xc0, 0x92, 0xca, 0xe, 0xb2, 0xdc, 0x5, 0x18, 0xa7, 0x8d, 0x48, 0xa6, 0x62, 0x6e, 0x96, 0xb3, 0x5d, 0x6c, 0x89, 0xdb, 0x15, 0x34, 0xb2, 0xa, 0x4a, 0x99, 0x6e, 0x7b}}
	return a, nil
}

var _test_certsTenantSigning11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x8f\x63\x62\x9e\xa9\x8f\x5b\xa6\x5f\x85\xb3\xab\x89\x81\x63\xb2\x79\xbe\x7b\x78\x68\xb0\x61\x5e\x60\xa9\x53\x72\xa4\x47\xa4\x91\x45\x92\x57\xa9\x41\x52\x7e\x7e\xa0\xa7\x01\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xc5\x38\xa5\x04\x77\x00\x00\x00")

func test_certsTenantSigning11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Key,
		"test_certs/tenant-signing.11.key",
	)
}

func test_certsTenantSigning11Key() (*asset, error) {
	bytes, err := test_certsTenantSigning11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x21, 0xb5, 0x7a, 0xad, 0x28, 0x5b, 0x85, 0xb5, 0xe2, 0x51, 0xa6, 0xef, 0xd0, 0xa5, 0x18, 0xa8, 0xcc, 0xff, 0xa8, 0xe, 0x6b, 0xd4, 0xda, 0x87, 0xe8, 0xb9, 0x81, 0xb9, 0xab, 0xfc, 0xd5}}
	return a, nil
}

var _test_certsTenantSigning20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\x31\x93\x9a\x40\x18\xc6\xf1\x9e\x4f\x91\xde\xc9\x28\xab\x17\xa1\xb8\xe2\x5d\xf6\x15\x16\xf2\x12\x17\x17\x14\x3b\xe4\x02\xc8\x69\xf4\x88\xb8\x9c\x9f\x3e\x23\x55\x66\xee\x29\x7f\xc5\xbf\x79\xbe\x3f\xc7\xd1\x97\xf1\x37\x0f\x13\x2d\x57\xd2\x03\x8d\xa3\x5a\x24\x25\x0f\x5b\x8f\xb3\x02\x04\xd4\xe8\x41\x83\xd0\x07\xcb\x7b\x36\x2c\xfe\x98\xb7\xa8\x09\xff\x16\xfb\xc4\xef\x8f\x9d\x80\x15\xaf\xa9\xdb\xef\xc0\x44\x0f\xdc\x10\x07\x1f\xec\x14\x2d\xaf\xa1\x50\x31\xb7\x2d\xe6\xe1\x3d\xdf\xc6\x17\x4a\x52\x83\x26\x17\x99\x52\x02\xcd\x20\x0e\x2c\xee\xca\xb3\xdb\xe4\xac\xae\xd5\x0c\x4d\xd0\x94\x31\xb5\xd2\x90\x46\x43\xfa\xdd\x58\xa4\xe5\xb0\x1d\xb1\x7c\xa2\xfd\xc4\xd1\x5a\xe8\x28\x91\x06\x61\x8c\x45\x68\x4e\xff\xc7\x86\x95\x06\xcd\xeb\x38\xb3\x38\x90\x16\x18\xdf\x73\x76\xfb\x3c\xb0\x55\x5b\x78\x5c\x28\x0d\x1f\x04\xa9\x0f\x9f\xb7\x53\x09\xd4\x00\x97\x53\x3c\xdf\xda\xf5\x66\x38\x56\x66\xed\x3c\x82\x7a\xe6\xf6\x2f\x2e\x1c\xd9\xdd\xba\xd2\x41\xd9\xc9\x4c\x57\x8b\xb3\xd9\x93\xb1\x2f\x83\x34\x28\xe0\xd7\xb3\x1e\x28\x87\x43\xe5\x20\x07\xf2\x78\x01\x86\xab\x5c\x44\x2c\x33\x30\x43\x68\xfc\xf7\x2b\xc0\xef\x9d\x95\xb8\x2c\xdb\xa6\xc5\xa3\xac\xe2\x89\xf8\x70\xe5\xce\x59\x87\x4e\x35\xd4\x87\x79\x94\x4e\xc2\x3e\xfa\xf1\xc2\xfa\x4b\x6d\x77\x86\x16\xd3\x38\x5a\x26\x15\xdd\x4e\x32\x98\xbf\x29\x67\xea\x13\xbf\x26\xd6\x26\xf5\x4e\xcb\xd0\xaf\x3b\x39\xf9\x29\xd4\xeb\xab\x35\x9e\x83\xb1\xf8\x7a\xd8\xbf\x00\x00\x00\xff\xff\x4d\x0b\xda\x30\xcd\x01\x00\x00")

func test_certsTenantSigning20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Crt,
		"test_certs/tenant-signing.20.crt",
	)
}

func test_certsTenantSigning20Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.crt", size: 461, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0xd5, 0xdd, 0x74, 0xda, 0xd5, 0x9f, 0x49, 0x10, 0xe9, 0xd5, 0xbe, 0xd7, 0xfe, 0x10, 0xaf, 0x2, 0x29, 0x2, 0x5b, 0xca, 0x81, 0x42, 0xb7, 0x37, 0xa5, 0xee, 0x3f, 0x8e, 0x8a, 0xc5, 0xb}}
	return a, nil
}

var _test_certsTenantSigning20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x47\x40\x92\x61\x5e\x58\x55\x89\x77\x78\x61\x88\xbb\x4f\xb6\x91\x91\x5b\x7e\xa8\x91\x71\xb8\x45\xaa\x65\xa1\x89\x99\x65\x72\x64\x60\x8a\xbe\x73\x40\x54\xa9\x77\x62\x78\x30\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xe2\x8a\x8e\x77\x77\x00\x00\x00")

func test_certsTenantSigning20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Key,
		"test_certs/tenant-signing.20.key",
	)
}

func test_certsTenantSigning20Key() (*asset, error) {
	bytes, err := test_certsTenantSigning20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf9, 0xfe, 0x31, 0xe5, 0x2a, 0x22, 0x9, 0xfc, 0x54, 0xd9, 0xc6, 0xdf, 0x69, 0x45, 0x22, 0xb4, 0x5c, 0x5b, 0xdb, 0x10, 0xff, 0x81, 0x13, 0x58, 0xa9, 0x45, 0x2, 0x20, 0x79, 0xd2, 0x1f, 0x3f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,

	"test_certs/tenant-signing.10.crt": test_certsTenantSigning10Crt,

	"test_certs/tenant-signing.10.key": test_certsTenantSigning10Key,

	"test_certs/tenant-signing.11.crt": test_certsTenantSigning11Crt,

	"test_certs/tenant-signing.11.key": test_certsTenantSigning11Key,

	"test_certs/tenant-signing.20.crt": test_certsTenantSigning20Crt,

	"test_certs/tenant-signing.20.key": test_certsTenantSigning20Key,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca-client-tenant.crt":  {test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key":  {test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":                {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":                {test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt":  {test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key":  {test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt":  {test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key":  {test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.20.crt":  {test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key":  {test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":       {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":       {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":   {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":   {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt":  {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key":  {test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":              {test_certsNodeCrt, map[string]*bintree{}},
		"node.key":              {test_certsNodeKey, map[string]*bintree{}},
		"tenant-signing.10.crt": {test_certsTenantSigning10Crt, map[string]*bintree{}},
		"tenant-signing.10.key": {test_certsTenantSigning10Key, map[string]*bintree{}},
		"tenant-signing.11.crt": {test_certsTenantSigning11Crt, map[string]*bintree{}},
		"tenant-signing.11.key": {test_certsTenantSigning11Key, map[string]*bintree{}},
		"tenant-signing.20.crt": {test_certsTenantSigning20Crt, map[string]*bintree{}},
		"tenant-signing.20.key": {test_certsTenantSigning20Key, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
