// Code generated by go-bindata. DO NOT EDIT.
// sources:
// test_certs/ca-client-tenant.crt (1.151kB)
// test_certs/ca-client-tenant.key (1.679kB)
// test_certs/ca.crt (1.151kB)
// test_certs/ca.key (1.679kB)
// test_certs/client-tenant.10.crt (1.257kB)
// test_certs/client-tenant.10.key (1.679kB)
// test_certs/client-tenant.11.crt (1.257kB)
// test_certs/client-tenant.11.key (1.679kB)
// test_certs/client-tenant.20.crt (1.257kB)
// test_certs/client-tenant.20.key (1.679kB)
// test_certs/client.root.crt (1.314kB)
// test_certs/client.root.key (1.679kB)
// test_certs/client.testuser.crt (1.342kB)
// test_certs/client.testuser.key (1.675kB)
// test_certs/client.testuser2.crt (1.35kB)
// test_certs/client.testuser2.key (1.675kB)
// test_certs/node.crt (1.237kB)
// test_certs/node.key (1.679kB)
// test_certs/tenant-signing.10.crt (465B)
// test_certs/tenant-signing.10.key (119B)
// test_certs/tenant-signing.11.crt (465B)
// test_certs/tenant-signing.11.key (119B)
// test_certs/tenant-signing.20.crt (465B)
// test_certs/tenant-signing.20.key (119B)

package securitytest

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _test_certsCaClientTenantCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\x3b\xcf\xb2\x4a\x17\x86\x7b\x7e\xc5\xd7\x93\x2f\x22\x8a\x68\x39\xc3\x0c\x32\xc0\xa0\xc3\x49\x78\x3a\x41\x0e\x22\xca\x41\x60\x80\x5f\xbf\xf3\x3e\xc5\x5b\xec\xbd\x9a\x95\xdc\xc9\xba\xb2\x8a\x3b\xd7\xff\xff\x0c\xc4\x67\xe2\xfc\x4f\xc3\xae\x4f\x74\xa2\x01\x1f\xff\xa6\x02\x25\x04\x99\x95\xa6\x81\xe2\x50\x00\x4e\x20\x28\x88\x0b\x1c\xb5\xee\x93\x26\x8e\xe0\xb9\x4b\x63\x8f\x7c\x65\x43\x7c\x35\x12\x47\x2c\x36\xad\xe6\x87\x94\x53\xea\x00\x86\x6d\xc8\x00\x17\xac\x15\x7b\x14\x82\x33\xd8\x06\x58\x2b\xa9\xc9\xe4\x53\x75\xdf\x99\x53\x7c\x73\x1a\xea\x06\x1c\xf3\x18\x85\x8c\x21\xcc\x67\x94\xc8\x4e\x9f\xbe\x4f\x65\x2c\x17\x05\x93\x30\x37\xca\xd4\x11\x68\x45\xb8\xe3\x13\xe9\xcf\xa6\x2b\xdd\xdd\xca\xd4\xa1\x2b\xe1\x4e\x05\xe6\xbf\x59\x05\x7a\xea\x12\x8e\xc1\x2f\xcc\xc2\xbc\xfe\x0b\x13\x62\xb9\x98\x75\x1f\xf8\xb0\x70\x42\x08\xa8\x8f\xb0\x33\xc5\xf2\xb0\x24\xb2\x5e\xdd\x35\x88\x98\xaf\x69\xc0\x23\xff\x7e\x1f\x42\x06\x50\x51\xe0\xab\x00\x90\xa6\x01\xd6\x68\x45\x81\x21\xb0\x0c\x54\xf3\x42\xec\xf7\xad\x79\x64\x7b\xd6\xa7\xd5\xd8\xe8\x0a\xe3\x95\xc8\xda\xc7\x0c\xca\x45\x49\xce\xa7\xc7\x9a\x65\xa5\x0c\xa2\x4c\xb1\xaf\xa4\x13\x96\xfb\xa4\x28\xed\x23\x07\x92\x75\x7c\x3d\xd6\x7c\xac\xde\xe6\xee\xa3\x5e\x9e\xb9\xbf\xbc\xf3\x32\xbe\x83\x01\x7f\xd0\x50\x8b\x53\x34\xb7\x6d\x78\x31\x9d\xe8\x4a\x42\xb8\x2f\x8f\x37\xab\x7d\xbf\x17\xa1\x6c\xc5\x7d\xc3\xc6\x81\x1d\x66\xb5\xfc\x66\xef\xee\xa9\x5f\xc0\x10\x3a\x61\x21\x79\x38\x95\xba\x46\x8c\x54\xa5\x2e\xc3\x48\x55\xd2\xe4\x3c\x1e\x6b\xc7\x9b\x96\xac\x35\x8b\x64\x7f\xfd\x49\x2a\x5d\xf0\xac\xf6\x8a\xa6\xbc\x20\xfe\xfb\x3d\xdc\x2b\xeb\xb6\xcf\xd8\x3d\x26\xe2\x38\xc5\x8f\x7b\x9b\xd9\xce\x73\x8d\xb7\xeb\xbd\x26\x32\x75\xe3\x08\x6e\xeb\xc3\x66\x90\x72\x93\xdb\x17\x69\x3c\x2a\x9f\x9b\x70\xeb\x40\x95\x5b\x8f\x8b\xf8\x9c\x23\xf3\xa7\x97\xbc\x67\xb8\x3f\xad\x51\x94\xda\xde\x87\x46\xba\x7f\x4d\xb0\x31\x3c\x72\x23\x93\xdd\x6d\x4f\xd3\x37\x33\x0a\x6b\x32\x4b\x8d\x17\x24\x15\xad\x92\x08\xdb\xe0\xf5\xd2\x45\x09\xec\x3b\x9b\xa6\x87\x55\x79\x9c\xdf\x8d\x92\xb0\xb3\x21\x51\xb0\xcf\xc7\x71\x7b\xfc\x6a\x80\x63\x00\xee\x8e\x4e\x31\xe5\xa8\x88\x51\xe8\x4a\x57\xc0\x8c\x0d\x04\x0c\x09\xa0\xb0\x5f\x14\x92\x3f\x45\x7a\x60\x8e\xe1\x86\x33\x42\x41\x0c\x41\x7e\xd4\x00\xc3\xdc\x60\xbf\x07\x17\x08\x63\xac\x63\xf7\x1d\x05\xcc\xa7\x2f\xe7\x62\xea\x44\x37\x46\xc9\x10\x6a\x07\x3c\xa6\xe0\xb8\x52\x20\x9d\x35\xaf\x3b\x7b\x24\xd9\x21\x86\xa1\xc6\x03\x00\xf6\x04\x02\xa6\xa1\x89\xe3\x42\x8a\x13\xd7\xc3\xb7\x6a\xa3\xdb\xb7\xc3\x36\x5f\x27\xf5\xea\xeb\xc1\x05\x09\x93\xda\x5f\xd4\x1d\x54\xbe\x52\x0f\x33\xfd\x91\xf0\x61\xe7\x07\x8a\x2a\x61\xbd\x5b\xae\xcb\x57\x75\x7d\xdf\xcd\x76\xb5\xf7\xd1\x62\x6a\x2d\x6b\x2f\xab\xc1\x26\xac\xc6\xba\x2c\xa5\x2f\xa9\xfc\x41\x78\x9a\xc3\x4f\x4e\x45\x39\x2f\xe9\xc0\xb5\x69\x3d\xe3\xe3\x45\x22\xb3\xb8\x7f\xc6\x10\x46\x99\xb7\x4b\x36\xe7\xd2\x12\xb7\xfd\xdb\x4c\x9e\x4e\x6d\x46\xe7\xf8\x78\xcd\xdb\x9a\xcb\xfa\x7c\x70\xd5\x4c\x60\x8d\x95\x05\x9f\x64\x2a\xb7\x4d\xfc\xb3\x1d\xf5\xc8\xe7\xd1\x27\xcc\x03\x05\xf7\x06\xbc\xab\x51\x37\xb5\x70\x8e\xd7\x3d\xa4\x49\x30\xaa\x36\x16\x91\x49\x19\x4c\xed\xac\xd8\x29\xa6\x37\x4f\x82\x91\x4f\xd9\x46\xab\x46\x9d\xbf\xd2\x14\x1c\x96\xea\xf9\x6c\x24\x38\x96\x37\xd0\xf7\x85\xdb\x85\x0b\x0a\x58\xa2\x48\xeb\x4d\x8d\x0c\xf7\xf4\x2c\x4f\xa8\x34\x37\x2e\x52\xed\x93\x66\x87\x9a\x32\x0b\xde\xe9\xe4\x7b\xe1\x5c\xff\x78\x43\xe2\xdf\x22\x15\xd8\x87\x2e\x69\xb5\x4f\x13\x75\x57\x31\x34\xe3\xa6\x5b\x8e\x74\xb8\xa7\xae\x63\x95\xd9\xa8\xa4\x9e\x8b\x8c\x68\x71\x37\xc2\xaf\x4e\xb0\x83\xfe\xab\x98\x7f\x02\x00\x00\xff\xff\xa5\x7e\xf0\x2e\x7f\x04\x00\x00")

func test_certsCaClientTenantCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantCrt,
		"test_certs/ca-client-tenant.crt",
	)
}

func test_certsCaClientTenantCrt() (*asset, error) {
	bytes, err := test_certsCaClientTenantCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0x67, 0x77, 0x5f, 0xb8, 0x12, 0xc1, 0x3e, 0x4d, 0x9f, 0x8d, 0xd5, 0x70, 0x69, 0x23, 0xc0, 0x2e, 0x92, 0xcd, 0x92, 0x3f, 0x12, 0x18, 0x86, 0xe3, 0x69, 0x25, 0xa1, 0x23, 0x89, 0x69, 0x9b}}
	return a, nil
}

var _test_certsCaClientTenantKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xa4\x50\x02\x85\x61\xcf\x53\x8c\xa7\xb6\x88\x7d\x01\x31\x82\xd8\xa4\x26\x67\x47\xce\xd0\x40\x13\x9f\x7e\x6b\x47\xef\xb1\xc7\xfc\xee\xfb\xcf\xff\xc6\x89\x6f\xc5\xf8\xe3\xb8\xec\x1f\xcb\x51\x02\xd6\x13\xff\x68\x62\xfc\xef\x81\x3e\x8a\x22\x7e\x59\x85\x63\x59\x8d\x67\x6d\x91\x9d\x73\x33\xe2\x05\x70\xb4\xfd\x74\x09\x0d\xff\xbb\x4d\x50\x47\x83\xc0\x5b\x2f\x7e\x20\x44\x5e\xd6\x87\x2d\xc3\x08\xe3\x05\xe4\x98\x2b\xa8\x7e\x83\xe8\x76\x55\x17\x64\x1a\x07\x8c\x16\xec\xf5\x76\x08\x03\x06\x66\x3c\x95\xd5\x06\x54\xc6\xd2\x12\x58\x6a\x66\x1e\x75\x73\x13\x8f\x00\x53\xbd\xc7\xc1\x27\x7b\x2c\xa7\x1b\x5f\x6e\xe5\x2b\x5e\x46\x28\xcd\xb4\xf7\x44\xb5\x0d\x0f\x30\x61\x95\xf7\xf7\x05\xd2\x45\xf1\x49\x1e\xf3\xb1\x50\x70\x14\xe7\x71\x97\xee\x55\x1d\x63\x28\x05\xd5\x31\x5c\x5b\x4a\xdd\x3e\xa6\x21\x2a\xe8\x47\xee\xa8\x99\x01\xda\x3f\x81\xb2\xf4\xb4\xc9\xc0\x6c\x63\xa6\x29\xb6\x7c\xbe\x59\xf3\xe2\xbe\x75\x07\x00\xd3\x60\xcb\x40\x6e\xb8\x6e\x74\x91\xb1\xf8\x5d\x7c\x49\x4d\x2e\x87\xd1\x0a\x13\x0e\x3d\xb1\x1b\xe5\x52\x0f\x34\x16\x49\x3a\xf3\x06\xfd\x45\x29\xa0\x4b\xf9\x30\x1e\x8e\xa6\x46\x1d\x61\x14\xc5\xf9\xd3\xf2\x2b\x0f\x3e\xcc\x66\x97\x18\x46\x17\x54\x22\x87\xdb\x75\x27\x6c\xc9\x2e\xf4\x28\xea\x3c\xdb\x3c\x24\xb4\x88\x5d\xe0\xba\x76\x44\xd9\x42\x3b\x6f\xd7\xb3\x5a\x03\x9a\xa6\xdd\xf0\x63\xe3\xca\x3e\x85\x06\x06\x54\x74\x9f\x8a\xc0\xda\x2c\xc7\xce\x0a\xc7\x0a\xa3\x67\xd7\x4d\x65\x60\xb0\x20\x17\x79\x03\x1d\x6a\x6f\x5c\xe5\xa2\x63\x48\x29\xbc\x46\xcf\x0f\xb7\x8e\xe0\xd5\xc3\xde\x58\x94\x52\x2e\x10\x1d\x5c\x58\xd4\x4e\xc2\xbf\x2a\x62\x6f\x82\x3b\xa8\x02\xb4\x14\xc4\x13\x14\xac\x7b\xdb\xf3\x01\xa0\xc4\xa5\x7e\xe1\x7b\x4d\xdd\xb5\x6f\x2a\xbb\x88\x37\x17\x99\xa4\xa1\xa7\x82\x52\xd9\x12\x21\x65\x4c\x6d\x4a\xf5\xfd\x2a\x33\xc5\x4c\xf2\x5c\xff\x44\x6a\x32\x09\xc9\xf2\xe2\x70\xb4\x16\xc8\x74\x85\xb2\x3c\x0d\x33\x6d\x57\xd0\x1f\xee\x60\x51\x6d\x6c\x81\x64\x05\xd4\xfb\xf9\x81\xf3\x15\xaa\x8c\x4c\x4b\x73\xd1\x1f\xe5\x77\x57\x04\x3e\xf7\x04\xfa\x92\x9c\xd5\x04\x18\x18\xc0\xab\x41\x5a\x58\x85\x58\xf4\x63\x75\x25\xfe\x11\xcc\xf0\x63\x03\x6c\x67\x9a\x52\x7e\x4d\x32\xd2\xa7\x1f\x40\x78\xb3\xd5\xaa\xbf\x77\xfd\xf1\x2a\x8e\x88\x6c\xb9\x3a\x87\x95\x89\xf5\x49\xf4\xfa\xb4\xe8\x1b\xdc\xc9\x3c\x68\x4a\x8c\xc8\xc2\x82\x76\xc9\xf4\x54\xed\x71\x92\x7a\x4a\xd9\x0c\x7e\x4d\x11\x2c\x57\xa1\xdc\xbe\xaf\x21\xa9\x8b\xff\x88\x2e\xbf\xfc\xf9\x70\xe7\x8b\xfb\x8a\xb5\x9e\xb2\x96\x89\x2b\x57\x6a\x9c\xd0\x83\x21\x12\x3f\x88\x7c\x1d\x8b\xec\x05\xaa\xdb\x76\xb3\xc4\x71\x84\x50\xdd\x81\xf6\x5d\xfa\x1c\xb7\xc6\x8a\xdd\x7b\x59\x10\xdb\x77\x66\xe6\xe7\x60\xac\xb4\x6d\xc6\xbd\x54\x01\x90\x05\x64\x04\xd9\xd8\xec\x44\xe8\x47\x6f\xd3\x31\xf2\xeb\x97\x11\x2b\x6c\xf3\xaa\xaf\xf0\x00\xe6\x24\x18\xc3\x57\xb9\xb3\x44\xf5\xa9\x94\x44\xe6\x6b\xfd\xa1\xb9\xd1\xf3\x4e\x53\xf7\x8d\x25\xf9\xc7\x51\x31\x5f\x88\xee\xf5\xa3\x74\x6f\xd7\xf6\xe9\x6c\x85\xb3\x65\xb3\x96\xbe\xe4\x51\xb4\x47\x88\x21\xe1\x24\xf8\xd7\xc5\xea\x12\x26\xed\x27\xc6\x85\x3b\x0e\xce\x41\x4e\x84\xd7\xd7\xff\x57\xfc\xe0\xf3\x04\x59\x63\x01\x67\x85\x56\x19\x56\x6e\x6d\x44\x76\x8b\x5a\x84\xb6\xc1\xdd\x31\xd2\x95\x9b\x3c\x41\x76\x1c\x21\xa0\x27\xdb\xb9\x95\x36\x89\xb5\xd9\x74\x9d\x69\x8b\x64\x31\x6a\x4e\x64\xd2\xd8\xc6\x40\xa5\x42\x0c\x82\xd7\x6b\x3a\x7b\x73\xb3\x4c\xa3\x3b\x76\x91\x24\xfa\xc5\x98\x03\x8d\xc5\x8c\x75\xee\x0d\x63\x96\x91\x19\xd1\x9b\x6c\xf6\x74\x1e\x41\x85\x66\x07\x48\xac\xc7\x0a\xd5\x5a\xd6\x58\xe8\xa2\x13\x14\xcf\x9a\x1b\xf7\x2f\xee\x25\xbf\x6f\x66\xeb\x49\xcb\xae\x6a\xc1\xbe\x27\x2c\x46\x51\xc9\xbb\x5c\xc1\xa0\xff\x25\xd7\xeb\x20\x31\x2b\x08\x19\x12\xee\x1b\x18\xcd\x8e\x9b\x39\x20\xb6\x1c\x61\xd2\x5f\x77\xe5\x4d\x89\x9c\x47\xf2\xca\xe5\x86\x73\x08\x9b\xaa\xc3\x27\x27\x4d\x16\xb9\x4b\x34\x47\x75\xa8\x14\xaf\x6d\xd6\x03\x03\xa1\xda\x22\x63\xcf\x1c\x2f\xbb\x29\x2b\xe7\x45\x88\x13\x49\xc9\xc7\xe2\x5e\x06\x8f\xae\x1e\x22\x4f\xe5\xcb\x86\x24\xe6\x79\xb8\xa4\xd3\x0e\x45\x94\x3a\xd1\x3b\x6f\xd4\x05\x97\x6d\x27\xdb\x3c\x11\x8f\xab\xb6\x60\x7d\x4c\xcf\x3b\xb5\xbb\xde\x05\x14\x13\x8e\xfb\xb9\xe3\xfe\xfd\x99\x8c\xa6\xa2\xc6\x27\x24\x5e\x38\xd6\xf3\x75\xcc\xb9\x47\x19\x7f\x89\x1f\x73\x6e\x82\xef\xde\xc8\x15\x95\xc4\x11\xa4\x12\x25\x52\x3e\x02\x5a\x0c\x87\xdb\x57\x4d\x41\x9e\xeb\x5c\x09\x72\xaf\x24\x2a\xf2\xcf\xca\x8a\x5a\x8f\x1f\x95\x6e\xf7\x19\x00\x88\x5a\xa7\xc8\x66\xfc\x2c\xfe\x52\xba\x53\x1a\xb0\xc7\xef\x33\xc6\xad\xc4\x46\x44\x34\x0c\xbe\x5a\xa5\x5a\x09\x48\x10\x35\x2c\x3c\x76\x8d\x7d\xd0\x93\xa6\x11\xd7\x15\x93\x6f\x97\xd3\x32\xf6\xde\x07\xba\x2e\x7f\xcb\x80\xdf\x88\x2d\x7b\x54\x56\x65\x6d\x85\x80\xed\x5c\x73\xaf\xac\x1e\x4f\xef\xa7\x80\x46\x2d\x48\x03\xa2\x75\xda\x1a\x57\xdb\x3c\x6d\x2c\xb6\x31\xca\xbf\xa2\x34\x2a\xf3\x61\x0e\x45\x53\x7a\x24\x94\x1a\xd1\xf3\xba\xf7\x4c\x0d\x2d\x2e\x29\x44\xb0\x1a\x94\x27\xa9\x68\x24\xed\xfb\xe1\x34\x1a\x84\x7c\xf8\xac\xcf\xc6\x86\xb1\x66\x47\x7b\xb6\x93\x91\x27\x97\xee\x25\x5d\xbe\xcb\xf7\x34\xd4\xa6\x87\x9f\xc4\x91\x9b\x9f\x49\xbd\xbf\xf6\xce\x33\x8b\xbe\xfd\x86\x2e\x7f\xc6\x0a\xcf\xf3\xcc\x4d\xa1\x5d\xcf\x5a\x5c\x67\x35\x17\xc8\x59\x83\xab\xdf\x0b\xae\xcd\x4c\x3f\x89\x50\xe3\x8d\xfd\x37\x02\xb8\x64\x44\xc2\xf8\xec\xf6\xbc\xd7\xa3\x8f\x14\xcd\x17\x17\xe5\xfa\xef\x5f\xe8\x1f\x2b\xa2\x21\xfc\x7f\x6e\xfe\x1b\x00\x00\xff\xff\x60\x06\x1e\x05\x8f\x06\x00\x00")

func test_certsCaClientTenantKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaClientTenantKey,
		"test_certs/ca-client-tenant.key",
	)
}

func test_certsCaClientTenantKey() (*asset, error) {
	bytes, err := test_certsCaClientTenantKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca-client-tenant.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0x1d, 0x8, 0x17, 0xa, 0x16, 0xca, 0x6d, 0x83, 0x31, 0x25, 0x5a, 0x1c, 0xd9, 0x1d, 0x2c, 0xa7, 0x28, 0x27, 0xfd, 0x7c, 0xcc, 0x4e, 0xda, 0x45, 0xb5, 0xd1, 0xb1, 0xf0, 0x32, 0x74, 0xf}}
	return a, nil
}

var _test_certsCaCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x94\xb9\x8e\xab\x58\x10\x86\x73\x9e\x62\x72\x6b\x64\x96\x36\xe0\xf0\x6c\xe0\xc3\x66\xb3\x19\x43\xc6\x8e\xb1\x31\x9b\x9b\x83\x79\xfa\x51\x77\x70\x83\xb9\x95\x94\xf4\x4b\xf5\xa9\x82\x5f\xdf\xbf\x3f\x03\x89\x4e\x9d\x7f\x10\xf1\x02\xaa\x51\x04\x02\xf2\x9b\x72\x36\xa5\xd8\x68\x11\x02\xb5\x5c\x03\x46\x21\xa8\xa9\x07\x0c\x1a\xf9\xa7\x1e\x14\xaf\xea\xcc\x82\xae\xaa\xb0\x94\x5c\xfd\x9a\x61\x37\x36\xcc\x3e\xa1\xcd\x92\x3b\xc0\x25\x16\x74\x01\xe3\xcc\x8d\xf8\x36\x04\x3a\x10\x42\x82\x1a\xdb\x70\xc5\x63\x9b\x4a\xc6\x12\x47\x4e\x6f\x7b\x21\x23\x2c\xc6\x57\xd7\xc5\x84\xad\x38\x13\x9d\x29\xef\x8e\x4d\x2c\xd6\xb5\xcb\x13\x76\x6a\x72\x87\xb3\x5b\xca\x9c\x80\xf2\x3f\xdb\xde\x6c\x31\x6a\x72\xc7\xde\x28\x73\x5a\xb0\xfe\xc9\x5a\x30\xd9\x1e\x65\x04\xfc\xc2\x4c\xc2\x9e\x7f\x60\x5c\x2c\xd6\xab\x16\x80\x00\xd6\xce\x15\x02\x3b\xc0\xc4\x59\x62\xf1\xfd\xc9\x44\xad\x4d\x11\xc4\x6e\x80\x10\xf0\xe9\xff\xdf\x87\xd0\x05\xb8\xae\xc9\x85\x03\x18\x21\xe0\xf6\xa8\xae\x09\x04\xe6\x16\xdc\x06\xfa\x38\xca\x53\x8a\xf9\x20\x2e\x66\x28\x8f\xb3\xba\xbb\xcf\x13\x90\x3d\x4b\x14\xc7\x62\x0d\xad\x8d\x25\x0e\x3b\xd4\xa6\xed\x7f\x52\x43\xe6\x14\x82\xea\x67\x2e\x2b\x6d\x7a\xc8\xcf\xfb\x4c\x5d\xe5\x8e\x0c\x8b\x1e\xe6\x9d\xeb\xec\x4f\xce\x6c\x64\xc3\xe1\xdb\xac\xc0\xa3\xb8\x9e\xda\xe0\xfb\x92\x4d\x08\xe6\x09\x2e\x9e\xc3\x49\x59\x83\xdc\xe5\x1e\xfa\x16\xd9\xb5\xe7\xc0\xc4\xaa\x2e\x02\x0e\xcd\xd5\x30\x59\x71\x35\xbf\x72\x45\xb3\x9c\x58\xd7\x94\x0f\xd3\xcb\xdd\x9d\x1e\x64\x3e\xb8\x5a\x5a\xaf\x98\x4f\xad\x7b\x5a\x3c\x91\x99\xe3\x5f\x07\x2e\xd2\x58\xa2\xf8\xa7\x7e\x1b\x4b\x2f\x91\xf4\x7b\xa3\xb4\x21\xc8\x3f\x82\x8a\xac\xeb\x7c\x5f\x3e\x49\x69\x6d\xea\xa6\x9e\x8c\x3c\xe0\x85\xe1\x8c\xf7\xf3\xd7\x5a\xbc\xca\xec\x43\x77\xfd\xd5\x5e\x29\x17\x61\x7d\x48\xd7\xec\xfb\x21\xa6\xa5\x92\x90\x9d\xe1\xa3\x8a\xac\x36\x19\x05\x89\x4a\xd2\x61\x31\xd5\x9d\xab\xc5\xe3\xd3\x79\xd7\x26\x81\xd9\xee\x68\xa2\x93\x64\x8c\xf9\x5b\xb9\x79\x85\xed\x27\x9c\x85\x7d\xb5\x9c\xcb\xb4\x7e\x7a\x5a\xd5\x47\x28\x2c\x41\xb3\x91\x7b\x79\xf4\x8c\xd1\x7f\xdc\x0e\x6f\x85\x47\x80\x11\x00\x52\x47\xb3\x89\xcd\x70\x1d\xe3\xab\xc7\x5f\x80\x7b\xda\x43\xe0\x62\x0e\xd4\xd6\xc3\x86\xf4\xa7\x48\x05\x61\x04\xee\x99\x4b\x6d\x10\x43\x50\xa9\x08\xb8\x84\x9d\xdc\xdf\x83\x33\x84\x31\xd1\x9c\x97\xd8\xa8\xef\x9c\x29\x2d\x7e\x56\xb6\x1a\xdd\x4f\x03\x17\x06\xa7\x02\x7e\xd6\xc5\x06\xbc\x8e\xfc\x51\xf7\x69\x26\x61\x97\x40\xc4\x42\x00\xbe\x28\x04\x2e\xca\x74\x18\xaa\x03\x98\x6e\x5e\x7d\xcb\x87\x84\xc7\x4d\xf7\x95\x75\x02\x9c\xab\xdb\x92\x73\x7e\xb3\xc4\x57\x29\x2d\xac\x31\xfe\x04\xc2\xdc\x90\x4f\x25\xe5\x6b\xc7\x27\xbe\x16\x35\xad\x9c\x88\xc6\xa5\x51\xb2\x4c\xba\x14\xb2\x30\x9c\xe1\x8d\x47\x46\x84\x9f\xe7\x8b\x69\xdc\xa7\x4e\x38\x20\xce\x23\x0e\x36\xd3\x65\x3f\xaa\x5f\x01\x78\x8b\x67\xa0\xde\xdc\x8f\x2c\xec\x1e\x32\xa3\xcd\x6b\x56\x37\xc9\x20\xc6\x18\x91\xd7\x74\xf6\xbe\x99\x1c\xf6\x8f\x42\x89\x33\xe7\x68\x29\x69\x6e\x4c\xc8\xe6\x72\x28\xa9\x17\x38\x47\xa4\x07\xc5\xda\x04\x62\x37\x0b\x15\x7d\x65\x6b\x23\xb9\xfe\xf1\x90\xbc\x9b\x70\xf0\xe2\xce\x18\x4a\x95\xbe\xec\xcb\x38\x03\x74\xe4\xc3\xb9\x66\x49\x79\x14\x1c\xe9\xa1\x72\xe3\x51\x97\x35\x0a\x82\x5a\xdb\x07\x52\xbc\x3d\xfd\x32\x56\x96\x18\x69\x2d\xcb\xba\xe4\x21\x10\xf6\x96\xbf\xb5\x65\x6d\xf7\x6e\x34\x31\x99\x7c\x7a\x3f\x57\xfd\x79\x2d\x92\xfe\xaa\x0c\x9e\xdc\x73\xe3\xa5\xd4\x55\x95\x7f\xcb\x2f\xe7\x09\xd3\xc3\x24\x74\xc7\xc1\x4a\xfb\xb6\x6d\x6d\x3f\x1b\x5f\xaf\xbc\x39\x34\x8a\xb6\x54\x87\x45\xdf\xa6\xe9\x75\x2b\x07\xe2\x1e\xa4\xbc\xe3\x7e\x75\x42\x1c\xfc\xb7\x62\xfe\x0b\x00\x00\xff\xff\x8d\x39\xf2\xab\x7f\x04\x00\x00")

func test_certsCaCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaCrt,
		"test_certs/ca.crt",
	)
}

func test_certsCaCrt() (*asset, error) {
	bytes, err := test_certsCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.crt", size: 1151, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0xb9, 0xca, 0xba, 0xf9, 0xfc, 0x3e, 0x6f, 0x55, 0x5, 0xca, 0x14, 0x18, 0x44, 0xb7, 0x61, 0x1e, 0xb9, 0xeb, 0x4e, 0x6d, 0x25, 0x18, 0xbd, 0x8b, 0xa2, 0x46, 0x5e, 0x1f, 0xda, 0x9b, 0xa}}
	return a, nil
}

var _test_certsCaKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\xd2\x83\xcc\x15\xc6\xf1\x9e\xab\xf8\x7a\x8d\x47\x24\x11\x0a\x17\x4b\x12\x4b\x58\x01\x22\x77\x44\x21\x72\x46\x70\xf5\x1e\xbf\x6e\x7d\xda\xd3\xfc\xe6\x69\xfe\xff\xfa\xef\x09\xf2\x13\xa2\x7f\x9c\x37\xf8\xc7\x72\xa0\x0f\x5c\xf9\x1f\x5d\x8e\xfe\x3e\x98\x09\xa1\x3c\xda\x50\x00\x40\x17\x81\x2d\x83\x19\xa1\xa2\xf9\xba\xd4\xb4\x0e\x96\x83\x2a\xf2\x50\xa7\xe9\xba\x18\xfd\x5c\xa4\x51\xde\xd3\x64\xa4\x14\x7b\xb7\x84\x86\x92\x3a\x30\xfc\x0c\x0d\x1b\xfa\x79\xb1\x75\xd1\xbf\xe6\x0d\xcd\xed\xc1\xf2\xfb\xa5\x4e\xd1\xbb\xe3\x62\xe7\x8c\x01\xc5\x65\xe4\xd1\x6e\x7d\x47\x8f\x9c\xe8\x10\x5e\x81\x5e\x34\xbf\x2d\x50\xf9\x35\x88\x0c\x9a\x72\x57\x30\xf4\x13\xed\x14\x45\xa7\x20\xe3\x4a\xb3\x72\x77\x0f\xd9\xb3\xdc\xcc\x02\xe1\xcd\xd5\xb5\x78\x0b\xf1\x89\xc2\xdd\x00\x31\xcb\xc0\xba\x9f\x1d\xe4\x2d\x41\xbd\x4c\x5e\x90\x78\xbb\xed\xce\x80\xc0\xb4\xa0\x8d\x42\xa1\x5f\x61\x51\xbf\xc6\x87\xd2\x67\x89\xae\x6e\xc8\x16\x2e\x23\x3c\xe0\x1a\x9c\xfa\x5d\x6b\xe9\xdd\xba\xac\x23\x6b\x7f\x96\x1b\x34\xb4\x75\xbb\x6a\x85\xcc\x1f\x3b\xac\x99\xca\xc3\x2e\xb9\x8a\xcc\xa4\x9d\x95\x8d\x71\xe3\x91\x5d\x1b\x97\x6e\xa1\xc6\xb9\xf2\xf1\x9e\xc3\xac\x2e\xcb\x8e\x9b\xaf\x07\xf0\xbf\x93\x47\x92\x60\xb0\x95\x9d\xc5\x07\x58\x66\xdd\x78\x52\x6b\xae\xe0\xd8\x4f\x6b\x16\x64\xfc\x98\xdf\x63\x12\x7d\xd9\xbf\x55\x91\xe6\xd0\xa2\x6a\xbe\x35\x96\x90\xbb\x51\x77\xca\x8e\xda\x6d\x28\x01\x1b\x08\x60\x80\x02\x78\xe2\xa9\xce\x9b\x69\x4f\x15\xbb\x3a\x88\x09\xa6\x32\x34\x6d\x6f\xed\xdd\x7f\x5a\x91\x9c\x9d\x84\x76\x36\x49\x36\x1e\x84\xf1\x28\xec\x32\x47\xc4\xb0\xab\xb7\x51\xb5\xec\x34\x32\x4d\x11\x01\xfb\x1a\x75\x48\x1c\x07\x00\xe8\x22\x3b\xad\x5e\x31\x8e\xaa\xce\x13\xa4\x6a\x1f\xf6\x89\x3e\xa7\x34\x73\xe8\x38\xff\x7c\xe4\x4c\xa9\x41\xfc\xbb\xcf\x0e\x04\xde\x63\xff\x6e\x8c\xf5\x9d\x54\x52\xdc\xa7\xdb\xc2\xc7\xcb\xb6\x7f\xda\x55\x8a\xac\xec\x89\x8d\x3c\x59\x48\x3f\x4d\x84\x33\xe9\xc1\xd7\x7b\xca\xae\x87\x07\x1f\xc3\xad\x98\x49\x87\x26\xd6\x3a\xc9\x3c\x10\xdc\x4e\x3d\xdc\x51\xc6\xaa\x44\x0d\x49\xb9\xaf\x34\xc8\x26\x84\x6e\xdb\xe5\x11\x63\xdb\xf3\xf1\x0c\xe8\xf4\x60\xe7\xfd\x15\xa1\xfd\xf6\x94\x9b\x7a\x7d\x4e\xd2\x57\x0b\x3a\x6a\xa3\x78\x4a\xe3\xfa\x17\x92\xd6\x40\x10\x8f\xbd\x73\x2c\x85\xfa\x28\xf4\x77\x51\x93\x65\xca\xa6\x4e\x0f\x31\xa5\x69\x43\x19\x39\x59\x7d\xf5\x67\xf6\x95\x20\xa4\xbf\xb1\xe8\x98\xe8\xcc\xfc\xed\x13\x3c\x6f\x77\xaf\x36\x0b\x60\xf0\xfb\xd4\xfc\xe6\x79\xd0\xb5\x9c\x7d\x16\x74\xee\xf1\xe2\xcd\x4d\x3a\x2a\xc1\xbc\x62\x09\x3a\xaf\x11\x3f\x91\x0c\x28\x25\x49\xfc\x53\xec\x88\x17\xf1\x12\x23\x23\xc4\xef\x28\xcf\x90\x90\x0c\x4a\x35\x27\xaf\x96\xf4\x95\xd2\xe8\x7c\x8b\x4b\x15\xf2\xc7\x80\x2c\x50\x4a\xcb\xc6\xd8\x20\xe0\xad\xf8\x3b\x3a\x9c\x30\xe6\xa4\xa0\x9c\x7e\x8b\x93\x50\xe4\xae\x42\xfe\xa8\x36\x17\x2a\x89\x48\xd1\x86\x48\x11\x4a\x31\x72\x83\xdb\x24\xbe\x59\xec\x12\x91\x97\x21\xdc\xbf\x7d\xd6\x63\x43\xb8\x58\x00\xce\x51\x15\x4a\x63\x31\xa8\xc1\x5a\x9b\x8a\xbf\x7c\x57\xa2\x43\x53\x87\xdb\x06\x6b\x68\x9e\x61\x83\xed\xa2\x49\x2d\x08\xab\x1c\x30\x13\x15\x5a\xcb\x9f\xf8\x34\x8f\x0e\xf3\xe2\x46\x13\x29\xeb\x95\x4b\xc6\x1d\xa5\xe5\x2b\xc5\x59\x42\x81\x41\x14\x2b\x6e\x5e\x9e\x74\x62\xd5\xb9\xfc\xc9\x83\x89\xf4\x67\x56\xb0\xce\x37\x68\x14\x07\x8c\x41\x39\xc8\x07\x8e\x13\xf8\x84\xe1\x8e\xa0\xf0\x4f\x9d\x97\x65\x8d\x14\xea\x07\xd2\x46\x90\xc4\x68\xb2\x37\x08\x98\x5b\x10\x0b\x30\xfb\x6c\xbf\x2e\xe8\x88\xd8\x8f\xb3\xaa\x5e\x10\x12\x10\x17\xb4\xe2\x67\xb2\xcd\xbe\xde\x48\x4c\x43\xc6\xe6\x3d\x90\xb9\xb8\x4f\x4b\x3b\x15\xe3\xfe\x4b\x19\xae\x0f\x9b\x61\x42\x89\x94\x4a\x8e\x21\x64\x94\xa9\x67\x7f\xe4\x4a\x10\x41\xcc\xea\x4e\xaa\x38\x8d\x34\x13\x21\x88\xfb\x3b\x36\x4d\x5b\x9f\x7f\xe9\x51\xdc\x2d\x03\xcf\xcb\xaa\x65\x04\xe8\x6e\x85\xf2\x63\xa8\x72\x2c\x59\xb1\x6c\x3f\xf1\x54\xb3\x92\xcb\xe7\xa9\x4a\x2f\xe9\x64\x7f\xb7\xb7\x37\xd0\x91\x38\x98\x71\xff\xf8\x61\xfc\xb4\xd5\xfa\x2a\x56\x52\x77\xd8\xc4\xed\x5d\x39\xa7\x55\x33\x27\x15\x9d\x4f\xd7\x4f\x6e\xe5\x18\x09\xf9\x65\x86\x9c\x6a\x36\xc7\xa1\x38\x49\x58\x0b\xa8\x18\xd6\x29\xed\x71\x65\xf5\xc9\x2b\xc3\x76\x44\xbc\x75\x63\xb6\xbd\x9b\xfb\x99\xae\x5a\x2c\x29\xbc\xcb\x95\xff\xad\x3c\x4f\xea\xd3\x48\xb8\xf2\x64\x4c\x49\xcc\xa1\x17\x5a\x4c\x5f\x16\x27\x5d\x1e\x9d\xff\xd2\x3d\x1d\x7e\x0c\x07\xcb\x3f\xa7\x7d\x3b\x29\x7e\x89\x09\x63\x45\x4f\xd8\x0e\x85\x80\x97\x7a\xc4\x34\x2b\x37\xe4\x63\xe3\xd1\x22\x1c\xfb\x95\x57\xd5\x0f\x58\xa9\xd5\x6f\x78\x8f\x67\xaf\x29\xd5\xf4\xf9\xa1\x12\x82\x89\xc9\xfb\x68\x74\xb7\x78\x7a\x13\x6e\x55\xce\xc9\x60\x90\xda\x2d\xff\xe5\x63\x9a\x72\x90\x6d\xa5\x40\xa5\x18\x15\x46\x0f\x9a\x7e\x3c\x8c\x7c\x2b\xaa\x3c\xba\x57\x54\xc5\x34\x70\xd1\xa2\x7e\x7c\x6a\xd8\x19\x59\x92\xbb\x73\x7f\xe4\x95\xb3\x37\x83\x4a\x40\xe1\x51\x0c\x92\x6f\xe0\x53\x0d\xcf\x6b\x5a\x22\x5a\xcb\x16\x3d\x62\xc4\x16\x2f\x47\x86\xe2\xd5\x7a\xf6\x45\x4a\xb8\xd7\x2f\xab\x11\xb0\x8e\x72\xb3\xed\x16\xf6\xa2\x66\xea\x9b\x6e\xb4\x7c\x40\x4d\x69\xa4\xbe\xbf\xec\xf0\xea\xf1\x25\xfc\x20\xff\xd4\x66\x87\xf3\xbc\x5c\xe6\xc9\x75\xcf\x05\x39\x00\xdb\xec\x8a\x4e\xb4\x9b\x1f\x8d\xc0\xf6\x69\x48\xe2\xef\x70\xaa\xda\x26\xaf\x12\x9c\x8d\x8b\x28\x8a\xee\xb2\xa3\x40\x39\xee\xf0\xd2\xdf\xd5\x1d\x0a\x84\x2c\xbd\x48\xf7\x61\xfc\x28\x9e\x74\x9a\xf9\x5e\x78\xff\xc6\xfe\xb2\x22\x23\xe9\xff\xe7\xe6\x3f\x01\x00\x00\xff\xff\xad\x1d\x11\x79\x8f\x06\x00\x00")

func test_certsCaKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsCaKey,
		"test_certs/ca.key",
	)
}

func test_certsCaKey() (*asset, error) {
	bytes, err := test_certsCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/ca.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1b, 0xcc, 0x67, 0x61, 0xfe, 0x2d, 0x27, 0x78, 0x25, 0x15, 0x17, 0x6e, 0xa1, 0xda, 0x20, 0x8a, 0x61, 0x74, 0xd5, 0x8f, 0xa8, 0x13, 0x3f, 0x73, 0xa4, 0xe5, 0xd7, 0xb8, 0x6d, 0x5, 0x19, 0xd1}}
	return a, nil
}

var _test_certsClientTenant10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x3b\xaf\x83\x38\x1b\x84\x7b\x7e\xc5\xd7\x1f\x7d\xe2\x96\x10\x52\x6c\x61\x63\x87\xab\x39\x31\x98\x6b\x07\x84\x18\xc8\x85\x40\x12\x08\xfc\xfa\xd5\x39\x2b\xed\x16\xbb\x53\x3e\x1a\x4d\xf1\xbe\xa3\xf9\xff\x8f\x20\x36\x6d\xff\x7f\x06\x0e\x98\x7d\xb0\x0d\xc0\xf0\x2f\x15\x88\x6d\xa3\x6a\x35\x0c\x70\x7d\x73\x30\xdb\x10\x70\x9b\x62\xfd\x04\x0f\xf4\xfb\x2c\xe6\xb9\x23\x02\xc4\xdf\xbd\x54\x76\x08\xf8\x90\x5f\x86\xe6\xd2\x9a\xfb\x59\x82\x80\x3e\x0f\x00\x81\x51\x20\x81\x3d\x63\x90\xa1\x98\x52\x17\xcf\x57\x54\x2a\xfe\x58\xdd\xf6\x4d\xa6\xf0\xcf\x81\x01\x06\xb9\x1f\x43\x40\x18\xc2\xfe\x94\x29\xaf\xa5\x54\x0e\x5d\x61\x40\x44\x19\xa8\x0f\xb3\xb4\x08\xa4\x03\x32\xe9\xe8\x42\x3a\xb0\x92\xf5\x54\xfc\x40\x7f\xfd\x61\x97\xbf\x19\x41\xe4\x83\x3b\x40\xff\x0a\xeb\x99\x11\xfd\x13\x26\x14\x08\x53\x02\x36\x26\x90\x23\x6c\x7c\x88\x15\x9b\xf1\x3b\x4b\xb6\x52\xb5\x62\x8f\x80\xcb\x2f\x07\x1f\x62\x10\x06\x66\xce\x71\x4b\x80\x64\x1a\xe1\x60\x86\x76\xa9\x22\x8a\xa1\x00\x68\x04\xc0\xc6\x86\x68\xfe\x35\xb8\xa0\xb7\x21\xa0\xa8\xac\xd2\xeb\xd2\x34\xfd\xe1\xac\x1c\x87\xdb\x95\x2e\x60\xbe\xe2\xd5\x9d\x42\x12\x88\xe6\x72\xce\xe8\x54\x8f\x45\x21\x75\xa3\x10\x5c\xa8\xd3\x63\xf9\x28\x1d\x35\xc4\x9a\x2f\x6d\x31\x51\xea\xb6\xe3\xf0\x3d\x1e\x42\x57\x4b\x62\x7b\xeb\xa5\x1f\x31\x9e\x71\x1d\xb5\xf5\xed\x9c\x27\xa7\xd0\xc7\x1b\xf9\x03\xee\xb9\x91\xcd\xf4\x22\x0c\xc5\xc7\xdb\xcc\x80\xe4\xd1\xaa\x7c\xc1\xf1\x72\x91\xe2\xa3\x62\xed\x93\x75\x6e\x1f\x77\xd5\xad\x4e\x5f\x7b\xab\x8d\x88\x91\xd8\x27\x45\xbc\xc1\x11\x4a\x5c\xd5\xa7\x2c\x50\xd7\x4d\xed\x3d\xd8\x28\x64\x06\x4d\x56\xd9\xd4\xf4\x07\x7a\x7b\x4c\x7a\xe8\xc1\x8b\x85\xd2\xb7\x8b\x7b\x14\x8a\xaf\xe4\x61\xe7\xbe\x57\x28\x18\x7c\x6e\x3a\x4a\xe3\xb5\x39\xd7\x9a\xdc\x2d\xad\x92\xbb\xfa\x89\xcb\xf7\x46\x88\xf0\xf5\x49\x37\xee\xa4\x5f\xc4\xad\x32\xad\xdf\xcc\x5d\xe6\xd7\x31\xce\xde\x55\x5d\x97\xec\xbe\x83\xe7\x54\x87\xe2\x2a\x39\x2b\xf4\x39\x25\x7e\xab\xb3\x6b\xaf\xbe\x9d\x53\xac\x78\x2a\x8c\x72\xc1\xf3\xd4\xdd\xc4\xa2\x8e\x74\x9b\xc4\x30\x59\xfb\x32\x72\x49\x49\xa4\xba\xc2\xdb\x6f\xf9\xeb\xa5\xa9\x1b\xe6\x28\xf8\x9d\x92\x5c\xf5\x01\x27\x10\x00\xb3\xe3\x59\x3f\xf3\xac\x9a\x11\xcf\x90\x10\x07\xd2\x11\x50\x4b\xfc\x39\x3d\xe0\x09\x27\x50\xfa\x79\xdd\xc9\xa1\x34\x21\x90\x9a\x86\xf1\x34\x01\x8d\x0e\x70\x26\x06\xe4\x7c\x84\x1c\x1f\x20\xad\x10\x60\xe0\xfc\xd3\x0b\xc1\x0a\x09\x36\x11\x48\x38\x0c\x70\x7e\x95\x31\x5e\x1d\xc4\xda\x20\x84\xc1\xee\x05\xb7\x8c\x5a\xa5\x7c\x24\x2b\x90\x7f\xcc\x56\x80\xb1\xd7\x81\x27\xe7\xd7\x67\xa9\xf8\x4d\x69\x36\x93\x50\xa9\xa1\x01\x97\xfe\x5d\x9a\xfb\x2e\x4b\x16\x0b\x5a\x3a\x00\xc0\xb4\x30\xf8\x2f\xe1\x19\xd1\xcc\x71\xfb\xdc\x6e\xa6\xca\x07\x14\x7b\x02\xa4\x00\x71\x8e\x21\xb0\x26\x75\xae\x87\x22\xcb\xfa\x75\xef\x69\xf1\xfd\x22\xee\x3e\xe7\xe2\xdc\xce\x19\xb9\x52\xe2\x19\x3e\x7d\x50\xe2\x6c\xf7\xeb\x27\xf7\x54\x3f\x7e\xea\xbb\xc3\x21\x9b\x45\x21\xc6\xd6\x42\x67\xfd\x69\xf3\x3c\xde\x47\x1b\x0e\xfd\xc1\x90\xa6\x2a\xd5\x42\xe2\x19\x2e\x78\xed\xaf\xdc\xbb\x77\xcb\x59\xd7\x6a\x9d\xb1\x24\x71\xda\x38\x68\xca\xc1\x1b\x56\xb5\x62\x75\x13\x09\xaa\x22\xaa\x45\x10\x72\x7d\xbc\x9f\xea\xf4\xdd\x3e\xd2\x4d\x69\x56\xf7\xaa\xbf\x88\x97\xf9\x13\xde\xdc\x8b\x3a\xbc\x1a\xf0\x76\xc8\xb1\xdd\x49\x85\xd8\x36\x6b\xfa\xf0\x4c\x03\x88\x0a\xec\x0f\x0f\x5d\x28\xd4\x32\x28\x0d\xa9\x00\x37\xf9\x28\xcb\x5b\x27\xb5\x5f\x51\xe9\xe6\xe3\x60\x7c\xf3\x3e\x0b\x5e\x74\xef\xec\x86\xdc\x40\xc9\xf7\xa0\x59\xcd\xf6\xf5\x08\x4a\x93\xbe\xef\x03\xf9\xe8\x21\xdb\xe5\x9a\xd0\x4e\xb3\x9c\xba\xe7\x3e\xea\xaf\xb3\x25\xab\x55\xbd\x33\x7c\x2d\xfb\xc2\x2c\x8d\x97\xfb\x4e\x1e\xa7\x55\x3b\x55\xa5\xee\x2d\x6f\xcd\x6b\xc6\x81\xa3\xaf\x0e\xf3\x65\x06\x74\x75\x99\x15\xd5\x4c\x20\x6f\xaa\xcd\xce\x62\xc5\xc9\xae\x4b\x9f\xe6\xe8\x9c\xcb\x9b\xd5\xd8\x85\x9e\x2c\x1f\x34\x6d\xfe\x10\x7e\x87\x0b\xfb\xe8\xdf\x63\xf6\x67\x00\x00\x00\xff\xff\xd1\xa1\xf3\xe5\xe9\x04\x00\x00")

func test_certsClientTenant10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Crt,
		"test_certs/client-tenant.10.crt",
	)
}

func test_certsClientTenant10Crt() (*asset, error) {
	bytes, err := test_certsClientTenant10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0x46, 0xbf, 0x59, 0x15, 0xcc, 0x2a, 0x18, 0xfb, 0x4c, 0x52, 0xa7, 0x4f, 0x1b, 0x67, 0xea, 0x16, 0x56, 0x2e, 0xc4, 0x3, 0x82, 0xe3, 0x1d, 0xaf, 0xd7, 0xd0, 0xee, 0x75, 0x4c, 0xc0, 0xed}}
	return a, nil
}

var _test_certsClientTenant10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\x12\xa3\xd0\x01\x85\xe1\x9e\xa7\xd8\x9e\xf1\xe8\x82\x00\x89\x62\x8b\x4b\x4e\x22\x83\x80\x4e\xe4\x9c\xf3\xd3\x7b\xbc\xb5\x4f\x7b\x9a\xbf\xfb\xfe\xf3\xbf\x31\xbc\x28\xeb\x7f\x6c\x07\xfe\x31\x6d\xd9\x87\x2e\xff\x47\xe5\xc3\x7f\x0f\xf2\x91\x65\x7e\x84\x32\x03\xa1\xca\x42\x8b\x87\xf8\x53\x20\x93\x21\xfc\x31\x01\x5d\x53\xe3\xe8\x7d\x8a\x8f\x62\x7f\xae\x19\xd4\x7c\x7e\x2e\x3d\xce\x6b\xcf\x09\xef\x56\x99\x02\x11\xcf\xfe\x18\x1d\x71\x69\x0e\x2d\x00\x91\x6f\x4b\x59\x60\xd7\x30\x51\xf5\x74\x7a\xd5\xd6\xb6\x8e\xe1\x60\xef\x1c\x4b\x18\xa9\x95\xfb\xb1\xc7\xfd\xde\xab\x6d\x43\x4f\x2c\x05\xb7\xba\x0f\xaf\xa8\xdd\xe2\xa0\x1f\x88\x70\xa2\xff\xa1\xf7\xe2\x47\x2a\xba\xe0\xd2\xe5\xc3\x5f\xde\xf2\x14\xd1\x57\x2f\xe5\xbb\x4d\xb4\x1c\x6c\x2b\x29\xdd\xc9\xe2\x77\xa4\xb2\xfe\xd0\x70\x3e\x7d\xa3\x52\x45\x79\x14\x0e\x1b\x61\xa1\x6d\x64\xdb\x55\xeb\x55\x01\x5a\xcd\xf9\xd8\x03\x2b\x57\x95\x2a\x04\xfb\xcb\x9f\x1c\xd1\x75\xf0\xb5\x84\x9f\x68\x87\x18\x96\x10\xc1\x73\x5b\xc3\xf7\xb0\x76\xce\x2e\x85\x7a\x44\xf8\x8c\x12\xf3\x06\x8b\xcc\x0f\xc5\x44\xd3\xf9\x7d\x37\xd7\xb2\x68\x2e\xf6\xd5\x7a\xa9\xef\x00\x89\x1e\x01\xf6\x80\xf9\x9b\x66\x93\xc3\x0d\x79\x8e\x0b\x77\x9e\xfc\xe9\xaf\x2a\xf0\xd3\x8a\x3e\x7c\xd1\xb9\x68\xf4\x05\x30\x44\xbe\x65\x54\x28\xca\x86\x98\xad\x2e\xd5\xdb\x55\xea\x19\xc3\x5d\xf3\x39\x5b\x51\xfe\x4a\x4b\xad\xbd\xc5\xf4\xb6\x64\x0e\x5a\x90\x81\x83\xcc\x40\x8b\xe5\xf7\xd6\xf4\x5e\x40\xc2\x7f\x5f\x6f\x46\x3a\x2f\x5b\x55\x87\x17\x0d\xb7\x11\x09\xa7\xbc\x37\xfa\x11\x4d\x9f\xda\x8b\xf1\xae\xb8\x74\x47\x8a\xab\xfb\x6b\x3f\xc7\xcd\xc0\x73\xd4\xb0\xe1\xab\x83\x23\xb6\x57\x7a\x3a\x87\xc2\x51\x54\x4c\x8b\x3c\x31\x23\x85\xcf\x10\x7c\x2c\x9a\x78\x61\x43\xa1\xe9\x28\x3e\x19\x6a\x38\x17\x6e\xdf\xa9\x7b\xca\xa2\x85\xd9\x12\x39\xa7\xc5\x03\x4e\x2c\x74\x76\x05\x7b\xa6\x82\x18\xd7\xb5\x9e\x23\xf5\x26\x45\x80\x41\x02\x5e\x17\x19\x2d\x49\xd7\x74\x23\xde\x57\x01\x65\x9d\x7c\x3d\xa8\xfd\x7b\x75\x60\x68\xcf\x46\x56\xbc\x42\xe0\x43\x53\xb6\xcc\x19\x74\x85\xa5\x78\x63\xb6\x2b\x49\xa4\xbc\x86\x45\x39\x11\xc0\x2c\x90\x3c\x0b\xb5\x68\xb1\x60\xa8\x16\x78\xef\x3f\x3f\xda\x6b\x2a\xd1\xaa\x6d\x62\x6e\x2c\x4c\x71\x19\x8a\xb1\xfd\x53\xe8\x7a\x9a\x9a\x98\xda\x6f\x78\x63\x0f\x29\x22\x52\x5d\xeb\x61\x8f\xf4\x20\xe6\x80\x05\xe0\x1d\x3c\x1f\xb8\x18\x72\x0d\xd3\xf6\x31\x3b\xdd\xd1\x00\x40\x45\xad\x8d\xbf\x4a\x44\xef\x89\x99\xa3\xd1\x57\x51\xec\x33\x24\x15\x22\x13\x89\x95\xdf\x1b\xc7\xc9\x0b\x02\xd9\xc3\x9f\xf6\xf2\x65\x06\x0e\x22\x03\x4d\x74\x71\x43\xed\x12\x03\x1b\x50\xc0\x91\xdf\x84\x7c\xee\x17\x11\xed\x0f\xee\x98\x95\x5a\x7b\xf9\x43\x33\x9d\x56\x03\x57\xec\xd9\x78\xdf\x61\x5c\xbe\x0f\x64\xd7\x96\x47\x0f\x63\x2f\x26\x05\x68\xcd\xe2\xbb\x84\xa7\x13\x5e\x4c\x3b\x84\xc5\xa0\xc7\x1e\x21\x4e\x65\xbb\xd5\xd5\xcb\x7f\x6a\x21\xbe\x1d\x0d\x35\x60\x3b\xff\x8c\x96\x6c\x34\xd7\x0d\xf8\x05\x72\xaa\xcf\x10\x78\xc9\xfb\xa9\x4e\xa6\xec\x28\xfa\x85\x5a\x8c\x19\x94\x6b\x73\xfc\xea\x4c\xed\x0e\xac\x65\x60\x52\xbc\x87\x1c\xdd\x34\x8d\xa2\xed\xd1\x58\xfb\x71\x53\xd7\x7f\xc5\xfa\x46\x22\xee\xab\x33\x24\xc1\xee\x89\xf9\x1d\x89\xec\xa2\x18\xb5\x1a\xb0\xf5\xf7\x58\x82\x26\x48\xdc\xd7\xf6\xe8\x46\x40\x83\x30\xb9\xba\x6e\xc8\xf6\xb5\xa8\x52\x2d\x9b\xfc\x6b\x11\xed\x03\x6d\x23\x8c\x46\xf8\x77\x72\x27\xb1\x9c\xd4\x9b\x6f\x4b\xf7\xb0\xb8\x66\x38\xe6\x24\x79\xde\xda\xaf\xb3\xb8\x13\x48\xfa\x10\xd5\x62\xd0\x10\x15\x20\xcd\xe4\xfc\x06\x46\xe8\xb6\xc9\x90\xa0\x94\x95\x2d\x3a\xcf\x23\x03\x55\x2a\xee\xe7\x61\x52\x5e\x61\x05\x45\x81\x13\x61\x48\x49\x0c\xec\xef\x43\xb5\xf8\x8a\x31\xba\x9e\xd7\xf8\x6a\x2b\xff\x25\x2b\x11\x6b\xb8\x5b\x4e\x9b\x4f\xcb\xb1\x6c\xca\xe1\x95\x00\x21\xea\x9c\x39\x3a\xa6\x06\xc9\x3e\xbd\x42\xfa\x38\xbf\xd3\xe7\x7e\x2a\x90\x3e\xb6\xd5\xef\xc3\x28\xf7\x71\xf4\x90\x1e\x37\xff\xa3\x82\x2b\x9a\xdc\x88\xcb\xc6\xe1\xcd\xb0\x59\xcf\xa0\xc0\x15\x6f\xe4\xc2\x62\xd0\x34\xbc\x6e\xd8\xc6\xc5\xac\x99\x72\x8d\x74\x52\x0b\xe8\x80\xfb\x42\x0e\x4b\x07\x72\x63\xbc\x1a\xb9\x10\x3c\x88\x7c\xed\xdb\x14\xbd\xdc\xe6\x02\x5f\x31\x8a\xb8\x4f\xd6\x52\x19\x8b\xe0\xb5\x20\xbd\x16\xb6\xc4\xd5\xa3\xec\x0d\x96\x88\xb6\x92\xcd\xfb\xe7\x09\x07\x11\x72\x44\x2b\x13\xf4\x7e\x35\x3a\x66\x0e\x4e\xa6\x09\xe8\x63\x15\x88\x69\x2a\x59\x3f\xb1\x2f\x7c\x56\x1b\x59\x42\x48\xb0\x94\xa8\xd1\x2c\xe6\xca\x78\xef\xd4\xcf\xa7\x40\x1f\xf9\x86\x3c\xde\x4c\xe9\x9d\x0f\xc8\xaa\x50\x3c\xf5\x8e\xab\x9a\x84\x59\xe6\x35\x0a\xf8\xa5\x0e\x23\x20\x1e\x4b\x2e\x6a\xa9\x3b\x87\x48\x8b\xaf\x31\xc7\x08\xad\xf0\x11\x95\xe8\x5c\x97\x4f\xcd\x7e\x7c\x03\xbe\x8e\x15\x58\x33\x19\x67\x21\x19\xc4\xd6\x40\xe2\x74\xb3\x31\xe8\x48\xe1\x37\xc5\x0d\xe6\x69\x9d\xa5\xa5\x65\xa4\xfb\x1c\x91\x2e\xae\x86\xb9\xe1\xd9\x22\x64\x0c\xc5\xf6\xd0\xec\x7c\xa8\x97\x9c\x56\xf5\x57\x3e\x8a\xf3\x0a\xb0\x77\xd9\xe8\x74\x86\xc9\x35\xd0\xaa\xee\x1b\xf8\x0e\x1e\x94\x5e\xc7\xf5\xfc\x6b\x3d\x05\xbd\x43\xe4\x65\x82\x79\xaf\xff\xf0\xec\x1a\x92\x24\xbe\x5a\x94\x7e\xe1\x31\x3a\x18\x3b\xd8\x3a\xb5\xd4\xcc\x50\xdc\xcc\x5d\xfb\x44\xd7\x9a\x61\xa6\xf0\xf5\x92\x62\x38\x48\x46\x1a\x43\xba\xa4\x44\x71\x41\xae\xc8\x8e\x82\xf8\xa3\xd7\x15\x3d\xfd\xfa\x6a\x33\x1c\x1e\x3b\x3c\x97\x9e\xb1\x3d\x5a\x9f\x86\x6c\xc5\xb0\x0f\x82\x21\x56\x6e\x3c\x17\x94\xdd\x10\x85\x39\xd0\xad\xbf\x7f\x91\x7f\xac\xf0\x3a\xf7\xff\xb9\xf9\x6f\x00\x00\x00\xff\xff\x03\x03\xfb\xc4\x8f\x06\x00\x00")

func test_certsClientTenant10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant10Key,
		"test_certs/client-tenant.10.key",
	)
}

func test_certsClientTenant10Key() (*asset, error) {
	bytes, err := test_certsClientTenant10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.10.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0xe1, 0x94, 0x3, 0xf5, 0x59, 0x5, 0x9f, 0xcc, 0xbf, 0xc3, 0xa4, 0xbd, 0x85, 0xff, 0xe4, 0xd7, 0x3c, 0xc0, 0xd, 0xe1, 0x93, 0xd5, 0x9a, 0x26, 0x18, 0x7, 0x75, 0xb2, 0x92, 0x57, 0x8d}}
	return a, nil
}

var _test_certsClientTenant11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xcb\xd2\x82\x38\x1b\x84\xf7\x5c\xc5\xbf\xa7\xfe\x52\x04\x0f\x2c\x66\x91\x90\x10\x39\x04\x89\x80\x08\x3b\x01\x0d\x20\xe2\x07\xa8\x01\xae\x7e\xca\x6f\xaa\x66\x16\x33\xbd\x7c\xaa\xab\x17\xef\xdb\xd5\xff\xff\x0a\x62\x62\x79\xff\x33\xf0\x31\xb4\x4c\xcb\x00\x21\xfe\xa5\x12\xb5\x2c\x94\xcf\x86\x01\x9a\x37\x07\xc2\x82\x80\x5b\xcc\x81\x42\xc4\x29\xbb\xeb\x43\x1d\xfe\x54\x07\x1f\xeb\xe1\xd8\x86\xc0\x83\xfc\xde\x95\xf7\x8a\xe8\x62\x09\x01\x1b\x4c\x80\x40\x2f\xd1\xa3\x25\x30\x48\xd0\x89\x31\x07\x8b\x06\x65\x2b\xaf\xcf\x1f\x7a\x99\xac\xf8\x68\x86\x20\x84\xdc\x3b\x41\x40\x43\x84\xbd\x4f\xb2\x7a\x4d\xd9\xca\xac\x2f\x06\x44\x2c\x04\x57\x53\x2c\x27\x89\xd6\x40\xa1\x35\x9b\x68\x0d\x66\x3a\x17\x97\x2f\xf4\xe6\x2f\xbb\xff\xcd\x28\xa2\x23\xae\x01\xfb\x2b\xec\x19\x1a\xd1\x3f\x61\xd2\x05\x61\x46\x81\x46\x80\x12\x61\x63\xa4\xfb\x13\x39\xbd\x93\x78\xbd\xcc\x67\xec\x52\x70\xff\xe5\x60\xa4\x06\x0d\xb1\xe0\x1c\x57\x14\x2c\x89\x11\x74\x24\xb0\x32\x15\x31\x0c\x25\xc0\x22\x00\x34\x0b\x22\x01\xbe\x06\x07\x3c\x2d\x08\x18\x0a\xd6\x2f\xb1\x8c\xd4\xed\xe3\xbc\x71\xa9\x7c\xb4\x7d\xd7\x3f\xdd\x12\xa5\x29\x3e\x8f\xf7\x65\xa1\xda\x1b\xbe\xb9\x8e\xdc\xa5\xba\x24\x17\xdd\x79\x5b\x6c\x8f\xf2\x29\x3a\x1f\x98\x9f\x3c\x3a\xa2\x02\x30\xc8\x37\x85\x3c\x32\x74\x5f\x2c\xa0\x8e\x72\xcf\x4c\x2a\x17\x9a\x79\xa8\xb4\xc9\xce\x4d\xcf\xba\xd8\x9e\x81\xd2\xc4\xf2\x7a\x92\x68\x61\xf5\xc3\x28\xdb\x72\xa8\x76\xcb\x57\x2a\xef\x2c\xa6\xfb\x6e\xcc\x0e\x9b\x80\xcf\x78\x77\x2c\x36\x1f\x25\xf3\xdd\xea\x0d\x32\xf1\xda\x39\x1a\x44\xf3\x3b\xb0\xee\x1a\x7f\xa4\xe7\x4e\xc8\xb1\x74\x31\x17\x36\x8a\x1e\xe7\xf2\xf1\xea\xc9\x4f\xfe\xc2\x85\x8f\x1a\xf3\x73\x1b\xfb\x6b\x2a\xca\x69\xde\xb4\xba\x6a\xc4\x1f\x2e\xa6\xd4\xde\x66\x97\x5e\x29\xd4\x4d\xa3\xb0\x27\xa5\x55\x90\xc2\x23\x92\xc4\x64\xd5\x4e\x72\xe7\xd5\x7b\xa9\xa7\x3d\x2c\xd5\x3c\xf4\xe8\xb2\x93\x6f\x83\xe2\x6d\xd6\x10\xac\xef\x8e\xac\x76\xfe\xf0\x16\x66\xea\x69\xd1\xe2\xa6\x08\x5d\xd9\x44\xe0\xee\x6c\xc8\xc3\x4e\x0d\xa9\x50\xdb\x79\x5c\xe0\x60\x3c\x8c\xb5\x69\xf4\xcd\xd0\xee\x95\x5c\x23\xea\xc1\x16\x57\x43\xff\xc1\x8b\x6a\xf0\x5e\xc3\x42\x9d\xde\xdb\x10\x70\x0a\x01\x20\x35\x4f\x9e\x82\x27\xb9\x40\x3c\x41\xd2\xe9\xb8\xf4\x01\xdb\x2f\xbe\xa7\x07\x3c\xe6\x14\x2e\xbf\xaf\x2b\x6c\xc6\x62\x0a\x19\x31\x8c\x81\x00\x16\x99\x50\x50\x03\x72\xde\x43\x8e\x4d\xc8\x72\x04\x42\x70\xfb\xf6\x42\xda\x07\x14\x13\x04\x62\x0e\x8f\x38\x6d\x14\x8c\x67\x1b\x85\xd5\x31\x80\xc7\xed\x0b\xae\x43\xb6\xcf\x14\x9f\xce\x40\xf9\x9a\xf7\x47\x8c\xdd\x1a\x0c\x9c\x37\x43\xb6\xf2\xca\x8c\x94\x1f\x29\x57\x03\x03\x4e\xcf\x77\x46\xf4\x3a\x89\xa7\x3d\xdc\xef\x00\x00\x64\x8f\xc1\x7f\x09\x0b\xc4\x12\xdb\x79\xa6\x56\xf9\xc9\x3d\xc0\xb0\x2b\x41\x06\x10\xe7\x18\x02\xab\x72\x4d\x5f\x04\xf7\xac\x5c\xa3\x79\x6c\x17\xeb\x68\xd9\x1a\x87\xaa\xdd\xf3\xab\xe6\x3f\xf0\x36\x5c\x97\x7e\xb6\xdf\x59\x73\xd8\x0e\x53\x4c\xd5\x88\xd5\x4a\x16\x2e\xa5\x43\x13\x6f\x5c\x8f\x44\x4b\x0f\x75\x61\xd4\x44\xb1\x9f\x90\x6b\x89\x26\xbb\x31\x39\xb9\xb2\x4f\x50\x6a\x64\x80\x47\x7a\x91\x4b\xa2\x97\x1f\x0e\x56\x6a\x24\x5b\xc1\x4f\x9a\xde\x4e\xc9\xd9\x39\x4b\xae\x20\x34\xc7\x0e\x4f\x6d\x25\x69\xb4\xcf\x41\xa3\x03\x19\x58\x97\x3d\x2b\xe6\x46\x3f\xef\xc9\x8b\x6f\x74\x98\xa9\x5d\x9f\x47\x14\x5d\xfa\xd6\x3d\xab\x2b\x1d\xfb\xa3\x5d\x1a\x7a\xbb\x77\x52\x69\xd0\x9c\xe2\x54\x75\xfa\xd5\xe4\xf5\x4e\x26\xd4\xa4\xde\x0e\x05\xe1\xf9\xa8\x47\xb4\x7e\x9c\x82\x98\x78\x7b\x7b\x75\x05\xf0\xd4\x55\x6b\xa3\xae\xca\xf0\x9e\x65\x1d\x5e\x37\x5a\x5c\xe8\x21\xd8\x4a\x0b\xd3\x11\xe5\x91\xe5\x4d\xee\x9e\x2f\xa6\xd2\x9f\xe7\x9f\x88\x96\x63\x1f\xb5\x8f\x75\x50\x11\xa7\x31\xfc\xed\xd0\xd9\x69\x6f\x5e\x54\xbd\x8d\xe3\xbe\x78\xbe\x5b\x72\xd7\xd6\x9a\xb2\x19\x03\xd0\x49\x9a\x1d\x4e\x6c\x1b\xbd\x1d\xd9\x7d\xe9\x62\xb3\x2d\x9b\x0a\x19\x33\x8c\x2e\xe8\x52\x54\x22\xff\x43\xfa\x1d\x2e\xec\xa1\x7f\x8f\xd9\x9f\x01\x00\x00\xff\xff\xc7\x26\x1e\x82\xe9\x04\x00\x00")

func test_certsClientTenant11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Crt,
		"test_certs/client-tenant.11.crt",
	)
}

func test_certsClientTenant11Crt() (*asset, error) {
	bytes, err := test_certsClientTenant11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0xee, 0xea, 0x30, 0xc8, 0x9c, 0xe2, 0xfb, 0x47, 0x32, 0x17, 0x81, 0xa8, 0x37, 0x71, 0xd, 0x1f, 0x48, 0x41, 0x11, 0xd6, 0x59, 0x2a, 0xf3, 0xe7, 0xbb, 0x13, 0xe4, 0x2e, 0x7e, 0x8b, 0x20}}
	return a, nil
}

var _test_certsClientTenant11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\xd2\xb3\x50\x82\x85\xe1\x9c\x55\xfc\xf9\xad\x29\xbc\x0b\x26\x00\x84\x70\x17\x2b\x10\x88\x0c\x0f\x02\x84\xb7\xab\xef\xea\x2f\xee\x93\x9e\xe4\xc9\xde\xff\xfb\xef\x44\x59\xd1\xac\x7f\xde\x4b\xf8\xe7\x78\xda\x5b\xf0\xe5\x7f\x86\xfc\xf9\x7b\x10\x53\xd3\xe4\xd1\xd5\x44\x41\x30\x24\xc1\x95\x05\x6c\x4b\x33\xeb\x69\x01\xba\x03\xcd\xed\xb4\x2f\xff\xba\xf1\x88\xb0\xe2\x28\xa5\xe7\x7e\xe7\xaf\x62\xb0\x7f\xcb\x47\xba\x9d\xf2\x97\x74\x80\x2c\x10\xac\xec\xde\xcf\xbb\x7d\x10\xfa\x54\xaf\x87\x00\x9d\x1f\xef\x8d\xfd\x41\x3b\xe8\x51\xba\xe4\xc3\x0b\xb5\xe6\xf0\x22\x99\x8f\x09\x47\x22\xde\x68\x66\xe3\x87\x15\xbf\xf7\x2d\xfb\xaa\x2f\x83\x35\x4b\xa4\x29\x5b\x9e\x59\x61\x58\xee\x92\xec\xf8\x17\xde\x3e\xb6\x76\x30\x4f\x47\x8e\x8a\x99\x0f\xef\x8b\x9a\x2b\x85\x83\xa5\xb4\x09\x2e\xc7\xb6\x8d\x6e\x6b\x7a\xff\x66\x16\xa7\xeb\xeb\xf2\x72\x71\x1d\xe9\xa8\x78\x4e\xce\x29\x82\x9e\xea\x1f\xb4\x97\x92\x5c\x42\xf6\x99\x96\x2d\x60\x44\xf3\xa3\x9b\x29\xd3\xec\x5f\x05\x41\x4c\x7c\x94\x83\x31\x0f\x8c\xc7\x43\x6b\x7b\x37\x70\x39\xb3\xd1\xae\x5e\x47\x34\x6d\x5e\x9d\x30\x39\x3e\x39\x29\xdf\xbe\x65\xec\x3f\xd6\xf2\x8b\xcd\x75\xed\x58\xda\x57\xe6\xcb\xc2\x45\x0c\xfd\xe2\xe9\x90\x7c\xe6\xe4\x45\x27\xe8\xd2\x56\x8f\x4d\xe8\xfe\x72\x9a\xe3\xca\x13\x91\x17\x7f\xf9\x9c\xee\x44\xa7\xfa\xc9\x47\xb6\xb8\xde\x4d\xa6\x56\x7b\xe2\x39\xd4\xfc\x48\x53\x87\xe7\xe6\x0d\x3b\xb4\x87\xe0\x0a\xa2\x30\x68\xa2\xe0\x4a\xb5\xfc\xf2\xad\x38\x86\x3c\xce\x52\x09\xb2\x0c\x0a\x06\x05\x86\x37\x52\x80\x7e\xb0\x40\x26\x80\xe0\x88\xdb\x12\x28\x59\x67\xe8\x90\x22\x71\xb6\x48\x9d\xc5\x1c\x0a\xa9\x68\xee\x92\x10\x0d\xe9\xdc\x20\x55\x8d\xa2\x82\x52\xbd\x25\xb3\xc8\xd7\x4f\xda\x30\x2b\xf3\xc0\xc6\x7f\x0e\x49\x51\xd7\x51\x3d\xa8\x68\x5c\xbb\x28\x0b\x9b\xe0\x30\x9b\x4c\xee\x0a\x8c\xa3\x9d\x61\x50\x99\x46\x6d\xe1\x2c\xec\xcf\x8a\x7c\xcf\xa2\x99\x2c\x0e\xa1\x22\xdc\xb1\x3b\x9c\xa2\xc8\x35\x03\x7d\xa8\x3f\x07\x35\x2b\x94\x82\xad\xee\xb4\x8c\x98\x4e\x1c\x82\x0a\xef\x53\xa6\xce\x5f\xae\xa1\xce\xaf\x60\x01\x01\xb3\x60\xb4\xb8\x18\x44\x57\xbe\xba\x77\xee\x21\xa6\x2b\x3f\x72\x92\x7f\x72\xfe\x0d\x15\x69\xbf\x58\xac\xac\x13\x11\x7c\x5a\x29\x23\x21\xee\x35\x24\xa9\xf6\xc4\x4d\x47\x71\xb6\xbc\x82\x4f\x65\x47\x51\xa4\xf3\x58\x17\xa9\x18\xd4\x83\xa8\x3b\x91\xac\x4f\xc8\x8c\xf1\x4c\xd6\xd3\xfc\x6f\x44\x71\xb8\x50\x98\xda\x4f\x19\x2e\xd3\x59\x2c\x91\xa7\x5e\x83\x35\x7b\x74\x1b\xf8\x47\xdf\x52\x14\x0a\x75\xb6\x67\x22\x78\xae\x37\xfc\xdd\x61\x85\x2a\xc8\x82\xa3\x5f\xa6\x36\x69\x61\x50\x44\xc1\xea\xd4\x8d\xbf\x6c\x0c\x43\x89\xd6\x1c\x89\x54\x9d\xa6\x55\xe6\x08\x3a\xb9\x1d\xcd\x1f\x14\x8d\x57\x70\x98\xa3\x3e\x2f\x89\x9c\xdc\xe5\xdf\x5f\x4b\x0b\xc8\xc4\x03\x1b\x9a\x8b\x54\x0c\x02\xd3\xf4\xa1\xa2\x15\x53\x81\x87\x2a\xbb\x4e\xfd\xed\xbe\xc5\x61\xc8\x3f\x43\xd2\x7f\x1e\x04\xe0\xd5\x67\x11\x1c\x40\x48\xca\xbd\x59\x0d\x92\x0a\x7d\x82\xce\x9f\xc8\xbb\xcd\x62\xe1\xd4\xb2\xbe\x3e\xbc\xf0\x97\xce\x20\xdd\x0f\x55\x56\x38\x0e\x05\xa6\xa8\x13\xb1\xfd\xe9\xf8\x67\xc0\x78\x07\x6c\xfc\x7e\x8d\x74\x7c\x1d\x5c\x10\x70\xd6\x9f\xd8\xa9\x39\x44\xf7\xcc\x7b\xf8\xb5\xaa\xb7\x0c\x20\xc8\xee\x59\x9e\x44\x62\x87\x77\x61\x55\xb6\xac\xae\xf1\x21\xb8\xc7\x61\x62\xab\xa7\x09\x94\x81\x2b\x42\x08\xb5\xf0\x49\x76\xea\xe9\x58\xa0\x5f\x41\xa4\x22\x28\x3a\x05\x44\x2f\xef\x46\xa0\x0f\x7a\x1c\xd9\xcc\x47\xa8\xee\x90\x2c\x56\x69\x07\x2a\x1f\x3d\xcf\xa1\xa9\xc6\xb2\x84\x3d\xda\x35\x74\xfb\xb2\xa2\x29\x29\x08\x3c\xef\x0d\x0e\xf4\xe1\x7b\x94\x11\x95\xbb\xdd\x2d\xc6\x99\xce\xff\xb1\xac\xb6\x7c\xb3\x93\x3f\xe5\x65\xa9\x18\x25\xa5\xe8\x5c\xcb\x38\xbc\x15\xe5\x19\x2f\xff\xc8\x90\x01\x29\x5d\xa1\x56\xfd\x7d\xcc\x7b\x5c\x68\xe5\xaa\x23\xdc\xa0\x73\x42\x05\x1f\xf7\x3d\xf2\x80\x50\x31\xe0\x28\xe0\xc0\xbf\x9d\xb9\x3c\x6c\xb6\x7d\x4e\xca\x5c\x77\xdb\x02\xe9\x97\xbb\x26\x84\xf3\x19\x43\x6a\xa6\xc7\x1d\x14\xdd\xb1\x8b\xcf\xf9\xe4\x11\xd8\x11\x87\x72\x03\x3c\x8b\xdf\xa6\xf7\xce\xf7\x75\xc6\x4e\xf6\x65\x25\xef\x41\x71\x4b\x78\x83\x1f\x14\xe1\xcc\xaf\x6b\x33\x7c\x61\x74\x9d\xb4\xd2\x1a\x64\xd7\xa6\xb0\xbb\xdd\x1e\xb4\x7a\x80\x18\x8d\x9d\x63\x4f\x30\x19\xa3\x51\x10\x79\xa8\xfc\xd4\xdd\x8b\xac\x3d\xff\x23\x6b\x99\xce\xe9\x47\x81\x51\xd8\x55\x5f\x9f\x1a\x88\xc6\x13\x96\xa3\xf2\x75\xb7\xc8\xa2\xac\x73\xca\xa5\x12\xb9\x4b\xf5\xdc\x01\x63\xd7\x28\x16\x8f\xb1\xfc\x2a\x78\x10\x54\x16\xa9\x46\x0a\xb1\x3f\x5c\xe5\xf6\xb1\x1e\x10\x04\x87\x07\x75\xda\x1e\x43\xad\x36\x1d\x45\xe6\xe1\x5d\xd9\xcb\xb0\x2e\x16\x9f\x21\x8e\xf4\x95\xf5\x90\xea\x14\x87\xb5\x29\x3d\xa8\xf6\x0d\xd8\x7a\x18\x32\x82\x15\x50\x59\x9d\x70\xf0\xd8\x51\x6a\x45\x5f\xd1\x90\xca\x55\xd3\xa4\x05\xee\x33\x68\xb7\x75\xf4\x94\x39\x91\x15\xdf\x88\x1e\x5c\x71\x02\x23\x51\x18\x14\x41\x23\x5f\xa6\x41\xdd\x2d\x8f\x57\x8b\xd1\x85\xf7\x70\xcf\x49\x24\x4d\x25\x2b\x19\x5b\xfd\x32\x7a\xf1\xad\xc5\x3a\x9f\x77\x57\xbb\xd2\xe2\xd4\xa2\x78\x1b\xf9\x48\x28\x0a\x6a\xdf\x3c\xde\x1d\x1f\x5d\x5c\x45\x6b\x14\x1a\x03\xb7\xb0\xe6\x78\xbd\x6c\x43\x67\xa5\xde\xd4\x96\x02\xaf\xf3\xde\x96\x9f\xfd\xc8\x4b\x95\xdc\x07\x45\x68\x8b\x8b\xd0\x01\xfa\x29\x98\x08\x96\x30\x77\xe6\x46\xcc\x6d\x32\x91\x45\xaa\xda\x6c\x78\x4f\x6f\xd8\xb4\x4b\x0a\xfb\x34\xdf\x3c\xcc\x90\xc3\x79\x7c\x85\xf1\xdb\x05\xb9\xfd\xd3\x69\x60\xdd\xa0\x59\xfe\x1f\xf9\xcb\x8a\x6c\x3d\xfe\x77\x6e\xfe\x13\x00\x00\xff\xff\x80\xed\x2d\x1c\x8f\x06\x00\x00")

func test_certsClientTenant11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant11Key,
		"test_certs/client-tenant.11.key",
	)
}

func test_certsClientTenant11Key() (*asset, error) {
	bytes, err := test_certsClientTenant11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.11.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0xde, 0x2, 0x86, 0xe6, 0x6c, 0x49, 0xaf, 0xac, 0x78, 0xf8, 0x70, 0xad, 0xbc, 0x42, 0xef, 0xcf, 0xe, 0xa2, 0x7a, 0x2e, 0xcc, 0x4f, 0xe5, 0xc4, 0xe8, 0xea, 0x64, 0x46, 0xe8, 0x22, 0xe1}}
	return a, nil
}

var _test_certsClientTenant20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xae\x83\xc8\x1a\x84\x73\x9e\xe2\xe6\xd6\x15\xd0\x5e\x09\x26\xe8\xa6\x9b\xbd\x31\x0d\x18\x1b\x67\xec\x36\xe0\x83\x59\xcc\xf6\xf4\x23\x9f\x91\x66\x82\x99\x0a\x3f\x95\x2a\xa8\xff\x57\xfd\xff\x2b\x44\x54\xdd\xfe\x9f\x4c\x5c\x5f\x57\x74\x19\xfa\xe4\x97\x72\x54\xd7\x71\xb2\xca\x32\xac\x3f\x05\x9c\x74\x04\x0b\x9d\x99\xb1\x81\x57\x00\x48\xeb\x27\xc5\x3e\x32\xbb\xd3\x99\xf2\x1e\x86\x36\x2a\xaa\xf6\x51\x3d\x55\x69\x12\x10\x64\xbd\x02\x31\xec\x38\xea\xea\x13\x81\x21\x0e\x18\x33\xc9\x54\xe3\x18\xd8\x5d\xf2\x92\x1e\x21\x28\x66\xc5\x87\x3e\x2a\xec\x00\x41\xea\x63\x62\x8f\x21\x18\x96\x18\x28\x65\x24\x23\xcc\x7c\x98\x29\x93\xb0\x70\xb4\x84\x22\x2d\xd9\x42\x4b\xb8\xd2\xf5\x11\x7d\xa1\xbd\x7e\x59\xf5\x37\xa3\x98\xce\xa4\x84\xec\xaf\xb0\xc6\x97\x2f\xff\x84\x71\x11\x26\x8c\xc2\x9d\x0a\xc5\x0b\x91\x67\xaa\x05\x6a\xf0\x09\xaf\x7b\x21\x59\x89\x45\x61\xf5\xcb\xe1\x4c\x65\x5a\xc2\xa9\x28\xc8\x93\x42\x41\x95\xbd\x56\xf5\xf4\x78\x8b\x19\x41\x1c\x64\x17\x08\x77\x3a\xc2\xd3\xaf\xc1\x84\x8d\x8e\x20\xc3\x43\x19\x8f\xcf\xe5\x44\x97\xe6\x7e\x71\xda\x3c\xc9\x89\xb6\x1d\x33\xbe\x29\x6e\x73\x90\xae\x36\x91\x86\x19\x80\x1b\x0e\x06\x4e\xdb\x80\x3c\x78\x9d\x6e\xc1\xa8\xba\xcf\xa6\xdd\x9e\x4b\xe7\x3e\xb7\x0d\xb5\xc0\xe5\x2d\x0b\xb1\x0c\x16\xdf\xa5\x55\x9c\x45\xbb\x66\xb3\xff\xf0\xd7\x64\x69\x14\xfa\x33\x89\xc7\x48\x99\x8d\x1f\x7c\xe6\x5e\x6c\xe3\x75\x61\x04\x8c\xeb\x18\xa6\xe7\xe8\x8e\x95\xc6\x49\xda\x86\x37\x7a\x89\x57\xaa\x4d\x0e\x94\x77\x38\xbb\xb8\xb5\x33\xc5\xda\xf5\x63\xcd\x4b\x97\xe1\x33\x55\xf2\x4f\x1a\xce\xf7\xb3\x67\x73\x59\x97\xaa\x80\x57\x5f\xa7\x43\xec\xbf\xc8\xb0\xbf\x1f\x34\x1b\xb5\x60\x22\x52\x91\x3e\xb1\xa2\x2b\x75\xde\xe5\xb7\x6d\xd7\xc7\x7a\x9b\x1d\x88\x57\x25\xc4\xfc\xe4\xa0\x91\x36\xc4\x7f\x67\x07\xc0\x59\x2e\xc0\xfd\x24\x27\x5b\xde\x5a\x96\xfa\x69\x39\x46\x75\x7c\x2d\xa9\xf3\x6a\xbd\x12\xf7\x7c\x7e\x96\xa7\x28\x88\xe2\xcd\x76\x75\xbd\x6d\x8b\xd9\x2d\xff\xbc\x8f\xcd\x48\x5d\x5e\xb2\xf1\xd1\xad\xb8\x77\x0c\x6a\x90\xf3\x56\x60\x81\xe5\xac\x7d\x7b\xc9\x5d\xeb\x28\x1e\xea\xd8\x3a\x9d\xf4\x5d\x52\x6f\x3e\x9b\xb5\xa2\x66\xd0\x9d\x62\x58\x50\x04\xa1\x5a\x16\x61\x33\x15\x61\x32\xe1\x22\xc4\x5c\xe0\x0a\x0e\x64\x1a\xff\xad\x1e\x16\xd7\x82\x22\xe1\x7b\xba\xd4\x60\xec\x4a\x11\x53\x65\xb9\x57\x21\xbb\x28\x68\xa2\x32\x2a\x8a\x0e\x15\x44\x41\x2c\xc1\xd0\x87\xf9\xf7\x2f\x38\xcd\xa3\x44\xc5\xf0\x5a\x20\x97\xdc\x6b\x91\x90\xd5\xc0\xfe\xd3\xf5\x90\x7b\x1c\xd0\xde\x67\x5a\x2c\x3a\x74\x85\xe2\xd7\xac\xb9\x84\x58\x25\xec\x8b\xa2\xee\x63\x60\x3f\x62\xf5\x31\x72\xc9\xd6\x93\xd1\xd2\x7c\x62\x55\x2a\xc3\xeb\xa2\x21\xed\x04\x21\x54\x35\x02\xff\x4b\x64\xc2\x2c\x34\xcc\xe6\xae\x3f\xc6\xc4\x86\x8c\x58\x1c\x62\x10\x17\x05\x41\xd0\xc0\x13\x4d\x3d\x46\x79\xe0\x24\xb5\xdd\x8e\xd9\x91\xef\x16\x65\x0a\x7d\x27\x96\xe5\xae\x95\xfa\xdb\xed\xc9\x42\xd5\x97\x9e\x6b\x01\x8e\xd7\x0d\x5b\xce\x1f\x30\x1c\xb9\xd9\x51\x0e\x8f\x7e\x50\xcc\x5d\xe6\x98\x18\x55\x6e\xa3\xfa\x39\x7c\x59\x09\xa1\xd0\x85\xbe\x31\xf5\xd7\x72\xc7\x86\xfb\x4e\x2f\xc3\xcc\x17\xf7\x81\xe9\x85\x5d\x06\xc0\xf8\xb8\x30\xc1\xdc\x55\x9c\xd8\x44\xe7\x1b\x5a\xbb\x25\xda\xdf\xf5\xfc\xb1\x21\xdb\xd0\x81\x7a\x28\x88\x7b\xfe\x07\x96\xd7\xe9\x34\x25\x2f\xf5\x64\xef\x8c\x41\x4d\x0f\xc9\x64\x3a\x42\x66\xfc\xd4\x3c\x10\xdc\x94\xf6\xd9\x5a\x71\xaf\x2a\x5b\x25\x95\x4a\xe9\x47\x2f\xc3\xf7\xc9\x14\x4e\x7e\x2c\xbf\x4e\x46\x86\x65\x31\xec\x9c\x7d\x20\xa0\x48\xf6\xac\x28\x1e\xb6\xbe\x96\xcf\x63\x5a\xbd\xd2\x88\x4d\xf8\x56\x7b\x76\x85\xc4\x3b\x77\xbb\xa2\xc3\x76\x8c\x2f\xa0\xeb\xe6\x0b\x81\xf5\x7b\xf6\xad\x4d\x27\xea\xd0\xb5\xac\x8c\x7f\x8a\xd9\x3b\x6e\x1f\x9e\xf7\xc9\x4d\x2f\xb0\xf2\x54\x30\x41\xd6\xe1\x6a\x12\xba\x73\xaf\x0d\x51\xda\x73\xb6\x49\x85\xd0\x53\xcf\x69\x70\xdd\x7c\x46\x57\x59\xb4\x31\xd9\x31\x65\x48\x0f\xb3\x90\x9d\x85\x3f\xb8\xdf\xe1\x22\x36\xfe\xf7\x98\xfd\x19\x00\x00\xff\xff\x15\xb4\x0a\x94\xe9\x04\x00\x00")

func test_certsClientTenant20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Crt,
		"test_certs/client-tenant.20.crt",
	)
}

func test_certsClientTenant20Crt() (*asset, error) {
	bytes, err := test_certsClientTenant20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.crt", size: 1257, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x84, 0x48, 0xae, 0x5, 0x68, 0xcc, 0xda, 0x3e, 0x64, 0x11, 0x35, 0xda, 0x5a, 0x13, 0x4a, 0x13, 0x4d, 0xa8, 0x9e, 0xef, 0xe8, 0x7f, 0x79, 0xb2, 0x9, 0x85, 0x4f, 0x78, 0x2d, 0xb5, 0x75}}
	return a, nil
}

var _test_certsClientTenant20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xac\x5a\x02\x85\x61\xcf\x53\x1c\xdf\x35\x05\x34\x59\x8c\x20\x37\xb1\xc9\xc9\x91\x69\xf2\x26\xc3\xd3\x4f\xcd\xb9\xf6\x2e\xbb\xcc\xef\xbe\xff\xfc\x7f\x9c\x28\x2b\xe6\x1f\xc7\x65\xff\x58\x8e\x12\xb0\x9e\xf8\x47\x13\xe3\xbf\x0f\x64\x28\x8a\x38\xdb\x0a\xc7\xb2\x1a\xcf\xda\x22\x4b\xc5\x6f\x0a\x5f\x0f\xc1\x00\x72\x20\x90\x23\xf6\xb9\x38\x86\xc2\x0e\x52\x91\xe8\x20\xca\x1f\xc7\xca\xf2\x62\xeb\x4f\x34\x73\xe0\x6d\x44\x93\x03\x92\xd0\xec\xea\x62\xa0\x6d\xcf\xf4\xbc\xf3\x14\x08\x3c\xd3\x6b\xf6\x26\x9f\xdb\xda\x21\x9e\x2a\x63\xc3\xae\x59\x7b\x76\xa0\xa3\x01\x38\x4f\xa5\xcd\xf2\xdd\xe4\x6e\x72\x3e\x73\x67\x75\xe0\x2d\x43\xdb\x2f\x58\xde\x1f\x6f\x18\xec\x2b\x15\x30\x0d\x58\x77\x66\x55\x57\x62\x8d\x4c\x93\x86\x86\x6f\x93\x6d\xd4\xb8\x2f\x5d\x27\x2a\x38\xd0\xb3\x55\x65\x67\x2c\x34\x42\xaf\x6b\x23\x80\x39\xdb\x71\x41\xf3\xf1\x1d\x10\xa2\xd1\xcb\xb0\x6c\x1e\x3b\xdd\x56\xce\x8a\x3f\x71\x7d\xb9\x5c\x12\x91\x18\xca\x90\x94\x7c\x6b\xe3\xde\x88\xf3\x87\xe3\x97\x91\x01\x56\xd5\x88\x64\xb4\x6f\x3f\xa4\xa8\x29\x83\x85\x46\x13\xbe\xe9\x75\x8e\x7f\xcf\x9d\x7c\x89\x75\xf4\x08\xd0\x4d\x27\x65\x61\x4f\xbd\xca\x7d\x38\xc0\x1b\x8d\xf8\x1b\x59\x23\x12\x46\x81\x92\xd4\x1f\xb1\x82\x3d\xfb\x85\x24\x5a\xc8\xcc\xc5\x08\x43\x37\xea\x32\x6b\xdb\x30\xfd\x89\x46\x88\xfb\x62\xca\x39\xbc\x61\x8b\xff\x7e\xd4\x6a\x39\x56\x42\xe0\xfb\x14\x96\x4f\x45\x60\x6d\x96\x63\x27\x85\x63\x6d\xbe\x69\xd0\xf0\x3a\x81\xa2\x3a\xca\xa9\x41\x5a\x1a\x80\xe7\xea\x04\xae\xce\x8f\x5f\x51\x6b\xd5\xfd\x59\x43\x8e\xb8\x78\xc3\xae\x22\xf0\xe6\xed\x86\x07\xfc\x3d\x24\xab\x84\xd5\x05\x52\xc7\x7d\xf3\xa3\x9f\x41\xc2\xb9\x16\x9b\x72\x5c\x08\xa1\x74\xbb\xa8\xee\x22\x4a\xc2\x37\x79\xf7\x45\x59\xdb\xcb\x7c\x60\x8e\x6b\x90\xdb\x7d\x66\x30\xeb\x3a\xde\x73\x36\xa5\xdb\x59\xe6\x51\xd9\x1a\xde\x69\xa8\xdb\xba\xc8\x33\xcd\xb6\xc2\x2b\x58\x44\x28\xa2\xbf\xf0\xd2\x49\x0f\x8f\x06\xb5\xa2\x7a\x9c\xbf\x7e\xf7\x65\x05\xc5\x92\xb2\x63\x35\x7e\xd4\x1f\x80\xe7\x78\x25\xe8\x24\x7b\x5a\x44\xb6\xe8\x24\xb6\x07\x66\x4b\x26\x26\x29\x7d\x39\x98\x6f\x68\xef\xa5\x7c\xb2\xde\x0c\x80\xe5\x74\x2e\x33\x07\xa3\x40\x60\xe2\x4a\xbb\xcb\xc8\xa3\x9f\x15\xe6\x5c\x96\xdf\xa7\x44\x26\x52\x6c\xd1\x4b\x76\x1e\xbe\x23\xce\x85\x57\xa9\xac\xa5\x50\x51\x83\x04\xba\x04\xb2\x92\x0e\x38\xa6\xc5\xcc\x4d\x6c\x6d\xb7\x32\xdd\x8f\x55\xc1\x62\x97\x73\xbd\xd6\xf8\x34\x0d\xd4\x93\x68\xb1\x2f\xd2\x77\xfe\xe8\xa5\xc3\x39\x78\xc2\xd9\x70\xd4\x16\xc6\x00\xc0\x7c\x41\x0f\x3f\xb7\x52\x82\xa8\xec\x24\x73\xac\x35\xd0\xe3\x11\xae\x8a\x75\x1f\xbe\xdc\xbd\x8d\x89\x55\xed\x85\x4b\x9b\xfb\xf3\x0e\xbc\x9c\x76\x8f\x47\x74\x64\x0e\x75\x85\xd4\xf6\x0a\x4a\x25\x85\x7a\x87\xd6\xba\x08\xcf\xdb\xa9\x89\x18\x4e\x07\x2d\xc0\x7b\xe9\x55\x47\xf7\xbb\xcb\xec\xf1\x67\xc4\x84\xb3\x4b\x86\xee\x57\xd2\xaf\xac\xb6\xdb\xa3\xe0\xfd\x88\x3b\x33\x47\x38\xa4\xda\xbe\xe2\x59\x9a\x24\x14\x73\x66\x5f\x55\x8b\xe6\x5e\xd9\xf1\x7a\xa9\xdf\x85\x7e\x6b\xe0\x13\xb0\x72\x83\x59\x95\x55\xd5\xc8\xb6\x5c\xe5\xa5\x31\x23\x80\x49\xa9\x79\x3a\x22\xb8\xc1\x51\x6b\xe8\x3f\xc5\x5f\x1e\x22\x0c\x98\x98\x40\x8d\xf9\x1e\x45\x96\xa3\x4d\xff\xde\x81\xc2\x85\x5c\x30\x4f\xbb\xa2\x94\x4f\x92\x2c\x48\x13\xab\x15\x35\xde\xeb\xcd\x87\xa7\x3e\xfb\x76\xba\xb5\xaf\x03\xcf\xf8\xa5\xda\x43\x1f\xba\xaa\x86\x76\xca\xf7\x54\xa6\x15\x3e\xdb\x9f\x19\x13\x74\x7a\xb0\x55\x2d\x21\x1c\x06\x6e\x73\xbb\x06\x3f\x0d\x4e\xdc\x3c\x52\x8a\x5f\xae\xe5\xa5\x4c\x24\x70\x28\xb7\x8b\x4e\x44\x20\xc3\x92\x02\x7a\x3a\x27\x4c\x34\x1f\xa6\x9b\x54\xb1\x6c\x8a\xb5\xa4\xa9\xe7\x03\xe4\x00\x1b\x3d\x48\x5d\x2b\x73\x44\x77\x1c\xf4\x6d\xb1\x93\xcc\x8a\xee\x0d\xfa\xd2\x8d\x1a\xbe\x2b\x7d\x1c\x23\x46\x07\x48\x10\x35\x0b\xd9\x57\x28\x9f\x7e\x82\x33\x4a\xb2\x47\x9e\xcc\x7b\xf5\x31\xb1\x00\x1b\x51\x23\x80\xd7\x5d\x9a\x69\xe5\x0a\x5c\x54\x68\x55\x47\x85\x37\x4b\x54\x6d\x2d\x68\xba\x1c\xf9\x99\x4c\x99\xfe\x20\x24\x5a\xdf\x88\x8c\xd5\x2e\xf9\x56\xd1\x0f\x4e\xcd\x1a\x4b\x69\x8c\x1b\x29\x02\xc5\xb3\x0b\x16\xef\xc4\xc3\x9a\x3c\xee\xb9\xe5\xa0\x7e\x6a\xb6\xf1\xad\x24\xd2\x23\xd1\x95\x97\x1f\x61\xca\xd9\x17\xda\xc3\xa8\x7a\xbd\x74\xa4\xc8\x5f\xb7\x48\xdc\xa5\x19\xd6\x74\x7f\x20\x7c\x1d\x8b\xec\x19\x49\x88\x80\x6d\xbc\x56\x6c\x18\xee\x63\xc5\xe5\x7b\x4b\x45\x58\xa6\x92\xb0\x13\x4d\x1a\x94\xcd\x4e\x39\x64\x27\xe9\x64\xa3\xb6\xeb\x90\x1c\x6f\xbe\xf8\x33\x3f\x5e\x8c\x4f\x92\x32\x16\xc2\xb0\xa6\xc5\x39\x33\x53\x6e\xd1\x31\x03\x17\x55\xee\xe2\x37\xb8\xb1\x09\x9e\xc3\xdf\x9e\x2b\xf8\xc3\xc4\xec\x0b\xf4\xc0\x8e\xa6\xa5\x73\xff\xd9\x5f\xc3\xaf\xdd\xef\x75\x0d\x75\x99\xc3\xd6\x57\xf8\x10\xfc\x26\x7c\x0d\x87\x99\x52\x35\x22\x30\xa3\xb9\x80\x76\x5e\x57\xa4\xdd\x1d\xa9\x9e\x91\x2f\xc8\xc9\x85\x26\xd0\xf8\xea\xe9\xed\xe7\xff\x4d\x9e\x84\x12\x59\x05\xbc\x20\x92\x71\x7e\xba\x6d\x57\x6a\x60\xc0\x94\x26\x3e\xf5\xc5\x27\xd8\x19\xa9\x08\x90\xef\xd2\x4d\x1d\x32\x4d\x52\x9f\x27\x81\xdd\x64\x50\xce\x4c\x82\xd8\xa2\x07\x13\xb5\xec\x11\x5e\x19\xf1\x1b\xe0\xb4\xb3\x74\x89\xba\x26\x9b\x48\x6e\xf2\xd6\xc9\xb4\x7f\x9f\x13\xee\x89\xc2\xab\xcb\x9d\x62\x37\xa3\x45\x4a\x48\xa5\x42\xd3\x4d\xbe\x21\x31\xda\x42\x72\xb8\x0a\x2f\x47\x31\xc6\x6d\x25\x90\xf7\x83\x8f\xf7\xad\x97\xe0\xd6\x12\xa2\xc2\xcd\x58\xd8\x23\x6a\xb4\x2b\x11\x83\xa9\xc8\xa5\x23\x9c\xfc\x61\xe5\xff\x85\xfe\xb2\x22\x9a\xc2\xbf\x73\xf3\xbf\x00\x00\x00\xff\xff\x0c\x5d\x77\x30\x8f\x06\x00\x00")

func test_certsClientTenant20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTenant20Key,
		"test_certs/client-tenant.20.key",
	)
}

func test_certsClientTenant20Key() (*asset, error) {
	bytes, err := test_certsClientTenant20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client-tenant.20.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x4f, 0xa4, 0xb7, 0x86, 0xe3, 0x96, 0x61, 0x4b, 0x8b, 0xfa, 0x6f, 0x77, 0x7c, 0x36, 0xef, 0x58, 0x6e, 0x33, 0xd0, 0xfb, 0xe9, 0x93, 0x2b, 0xb6, 0x6e, 0xd6, 0xa4, 0xc7, 0x69, 0x2f, 0x97}}
	return a, nil
}

var _test_certsClientRootCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4d\xb3\xba\x38\x13\xc5\xf7\x7c\x8a\x67\x6f\x3d\x25\x82\x28\x2c\xfe\x8b\x04\x82\x04\x08\x5c\x5e\x15\x76\x08\x18\x01\x45\x04\x21\xc0\xa7\x9f\xba\x77\x6a\xde\x6a\x26\xcb\x5f\x4e\x9d\xae\xae\xee\x3e\xff\xff\x7e\x10\x9d\xb0\xf3\x3f\x15\xf9\x21\xd6\xb1\x0a\x42\xf4\x43\x39\x82\xb1\xd6\x6a\xaa\x0a\x5e\x01\x05\x0c\x43\x40\xb1\x07\xd2\x3e\x18\x96\xa5\x73\x0d\xe9\x1d\xa1\xe9\x1c\x38\xc8\xde\x84\xc0\x81\xb4\x79\xdf\x9b\xea\xa4\x30\x1e\x02\x6f\xd0\x81\x06\x7a\x8e\xf8\x98\x21\x90\x68\xb1\xe7\x59\x88\x3d\xb4\xab\xe0\xf4\xf9\x53\xb9\x27\x02\x9d\xf5\x10\x84\x90\x3a\x31\x04\x24\xd4\x90\x33\x25\xc2\x67\xb9\x0a\x7a\x9d\xa9\x50\xf3\x42\x50\xea\x8c\x5f\x38\x52\x83\x1d\xa9\xbd\x85\xd4\x60\x25\x6b\x9a\x7d\x43\x67\xfd\x66\xcd\x9f\x8c\xa8\x64\x46\x35\xf0\x7e\x37\x7b\x85\x6a\xf4\x97\x19\x97\x69\xc8\x21\x60\x38\x81\x5d\x84\xc0\x4c\x50\xfe\x54\xa6\xe2\xbb\xa5\x00\x33\xcd\x4b\x4c\xeb\x95\xe2\xfb\x94\x3b\xc0\x43\x10\x7a\x40\xa3\x14\x7d\x81\xef\x7f\xef\xa5\x52\x8a\x20\x07\x6c\x2a\x60\xed\xb8\x31\xda\x7a\x16\x32\x52\x84\x43\xe3\x4f\x93\x6e\xcb\xe3\x10\xf4\x25\xfc\x50\xbe\xbb\xea\x68\x35\x43\x21\x30\xd3\x32\xe7\xe7\xb4\x45\xf6\x82\xf5\xa3\xfe\x5e\x93\x4d\xfe\xc5\x75\xc3\xe4\x92\x71\x7d\xc6\xc5\x41\xfb\x2c\x8a\xee\x58\x5e\x2e\x1a\x6a\xc3\x6e\x77\x9d\xdc\x9e\xc5\x93\x99\x48\xee\xaa\x5d\xed\xaf\xf6\xa7\x40\x62\x54\xbb\x07\x44\x43\x6c\x86\x8d\x6b\x68\xe4\xca\xf9\x2d\xc0\x5d\x29\x82\x7d\x5e\x5a\x92\x61\x1f\xb6\x46\x9c\xa5\x92\xb4\x5d\xb2\xdd\x45\x16\x9c\xfd\x21\x33\x2d\xf9\xa3\x04\xf4\x8c\x03\x7d\x4a\xf4\xee\xad\x8a\xaf\xd3\xc9\x2c\xdd\xd3\xc1\xba\x3d\x53\x6e\xfb\xd8\xcc\x97\xd9\x5a\xa8\x3b\x0c\xce\x94\xaa\x12\x84\xa6\x85\x57\x5c\x1a\xab\x6a\xe6\x60\x1f\xd3\x2a\xf6\x5a\xe2\x00\x6c\x18\x6e\x0e\x96\x60\x64\x63\x65\x1d\xe9\x8e\x07\x53\xaa\xf3\x8c\x33\x8f\x79\xd8\xe2\x49\xdd\xbc\xd4\xea\x26\x26\x3b\x76\xb7\x96\xf3\x0d\xc4\x70\xbb\x79\xe7\xbe\x22\x98\xf3\xd7\x91\xf4\x91\xd1\x8f\x71\x6d\x16\x24\x3d\xf6\x06\x24\x57\xcd\x72\xa7\xe9\x24\x3f\x4c\x89\xd3\x3e\xc6\xbe\x72\xdf\x3a\xfc\xd4\xfe\x1d\x35\xbe\xbd\x55\x69\x45\x1a\x15\x30\x04\x40\xe6\x42\xb6\xaa\x90\x69\xc0\xfd\x1e\xa1\xe1\xc9\x10\xdc\x64\x04\x01\x51\x61\x06\x18\x62\x89\xc6\xc5\x3e\xff\x80\x80\x31\x95\x26\xd8\x62\x09\x84\x5e\x64\x00\x86\x99\xc1\x12\x2d\xf6\xf9\x1a\x42\xca\xf4\x17\x88\x84\x5b\x66\x2c\xbb\x55\x1b\x89\x1b\xcb\xeb\x9c\xe1\xf2\xe1\x93\x82\x37\x38\xfb\x24\xb3\x12\xfc\x88\x7d\x68\x20\x76\xdd\x27\x69\x22\x9a\x4d\x52\xbf\x26\x5b\xf4\x1f\xd7\xa7\x3e\x16\xaa\x3c\xdb\x62\xbc\xa6\x17\x3c\xfd\xec\x09\x4e\xb2\x3f\x34\xdc\xdf\x45\x44\x55\x76\xb9\x10\x2f\xb6\x68\x4e\x57\x31\x38\x9d\x9e\xce\x92\x9e\xf0\xc1\x5e\x14\x3e\x3d\x4b\xf7\x6b\xeb\x4d\x24\x44\x53\x71\x71\x1e\x79\xa5\x2c\x57\x41\xe1\xb9\xfb\xbd\xab\xf3\xa7\x5f\xb9\x95\x3c\x15\xa7\x78\x4c\xce\x12\x6f\xaf\x98\xfd\xa3\xa2\xf6\x1f\x87\x04\x5c\x15\x78\x08\x70\x7e\x10\xb5\x96\x42\x7b\xc1\xe3\xcb\xa8\xda\x14\xcb\x57\xc3\xf2\x17\x6d\x93\x3c\x8b\x25\x47\xd9\x7d\x95\xc8\xeb\x1c\x79\xbe\x8a\xb1\x67\x55\x7c\x0c\xdd\xac\xf3\x76\xee\x81\xae\xe0\xe6\x46\x67\x85\x63\xb3\xb4\xeb\xc9\x4b\x36\x26\x45\x29\x3e\x53\x15\xb5\xf6\xa6\x7e\xf2\x56\x94\x45\x39\x88\xdf\xcd\xe1\x6a\x37\x6c\x97\x13\x86\xf5\x7a\x1d\xbd\xc7\xd0\x1a\xd1\x20\x98\xfb\xe4\x11\x95\x65\x90\x4e\x1c\xdd\x77\xca\x39\x72\xc7\xc1\x27\xcd\x73\x99\xda\xaa\x91\xda\x7d\x32\xde\x82\x80\xcd\xf5\xfe\x42\xfd\x27\x7f\x4e\x3a\xbf\xd7\x05\x63\x14\x41\x71\x2c\x25\xf1\x82\x2b\x7e\xe8\x3f\x09\xa8\xdc\xc5\xe7\xb6\xcf\x30\xbf\xb0\x2d\xd6\xa4\xf3\x1c\xee\xaf\xdb\x2f\x1b\xae\x17\x95\x7f\x2d\xf7\xcb\x3b\xff\xac\x27\x25\xde\x9c\xb3\x24\x8e\x56\xff\xfe\xa0\x0b\xfa\xd0\x6a\x7a\x57\x79\x77\xb7\x7a\xf1\xb0\xb1\xc6\x0d\x77\x70\x5f\xc1\xed\xaa\x2d\xf2\xc7\xd7\xde\x7d\xb0\xf8\xe6\xd8\xa9\x62\xf3\x36\xca\x0d\xd4\xd7\xe0\x56\x9f\xa3\x21\x0e\xbc\xbe\xaf\xf7\x5d\xf7\x28\xea\xfe\xad\x4f\x9f\x50\x95\xe4\x36\xa7\x03\xdf\xec\xb8\x24\x2d\xa5\x3c\x70\xb7\xcb\x43\x12\x2b\x18\xc9\x87\xea\x5c\xdd\xd9\xaf\x5f\xdc\x4f\xe2\x21\x47\xfb\x77\x0a\xfe\x16\x00\x00\xff\xff\xa7\x5c\xb1\x7d\x22\x05\x00\x00")

func test_certsClientRootCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootCrt,
		"test_certs/client.root.crt",
	)
}

func test_certsClientRootCrt() (*asset, error) {
	bytes, err := test_certsClientRootCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.crt", size: 1314, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0x85, 0xcb, 0x96, 0x16, 0x81, 0x1b, 0x60, 0xab, 0x20, 0x75, 0xc9, 0x69, 0xd5, 0xe0, 0xd5, 0x35, 0x35, 0x13, 0x1f, 0xea, 0x65, 0xc9, 0x68, 0xcf, 0x67, 0xfa, 0x1d, 0x14, 0x89, 0xcd, 0x13}}
	return a, nil
}

var _test_certsClientRootKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xa7\x12\xac\x5a\x02\x85\x61\xcf\x53\x1c\x4f\x4d\x35\x4d\x46\x5c\x41\xce\x61\x93\xc1\x91\x9a\x1c\x9a\xd4\xc0\xd3\x4f\xdd\x33\x76\x96\x5d\xe6\x77\xdf\x7f\xfe\x1d\x27\xca\xaa\xf5\xc7\xf5\xd8\x3f\x8e\xab\x86\xac\x2f\xfe\xd1\xc5\xe4\xef\x03\x99\xaa\x2a\x2e\xac\xca\xb1\xac\xce\xb3\x40\x64\x0f\x21\xa9\x9d\x13\xaf\x2a\x47\x49\xe7\xeb\x6d\xdf\xae\x0c\xd3\xc1\x79\x93\x97\xbe\xe3\x32\x2a\x78\xc3\x16\xf8\xe6\xe0\xa4\xea\x30\x10\x8f\x2f\x41\x63\x01\x4e\xb5\x8e\xb7\x68\xb5\x3a\xe2\x07\x8f\x37\x8d\xdf\x94\x9d\x86\xd8\x6c\x63\x06\x12\x20\x0b\xf7\x14\x85\xee\x73\xb0\x18\x5c\x70\x8a\xe6\x6c\xef\xdf\xa3\x11\x59\x8a\x79\xbc\x11\xbf\xf4\x20\x93\x9a\x3d\xce\xac\x07\x1b\xe0\x85\x79\xed\x72\xc1\xb6\x03\x55\x08\xcd\x85\xaf\x7d\x71\xae\x74\x19\x2e\xd3\x34\xbd\xb4\x35\xfc\x3c\x09\xd6\x2d\x73\xbf\xde\xd8\x5b\xe7\x92\x46\x8d\x98\x3a\x1a\xa1\xd9\xa8\xea\x24\x19\x70\x3c\x9f\x17\x38\x9d\xe0\x98\x92\x3e\xe2\xaa\xb3\xe4\xfd\x43\x99\xde\xe8\x45\xb1\x9f\x3b\xb3\xc1\x3f\xa6\x3a\xfc\x84\x26\xe2\xb5\x90\x2f\x7e\x08\x5b\x17\x05\xf1\x13\x34\x1d\xa2\x78\x52\x5d\x0f\x21\x06\x3c\xd3\xc7\x3e\x3b\xed\x97\x5d\xb4\xb4\x41\xd6\xba\xf6\x2a\xbb\x98\x17\x57\x2d\xa5\xb9\x40\x79\x91\xcb\xa5\x60\xc9\x24\xbe\xb6\x7b\x07\xd5\x41\x44\xe6\x80\x5c\xd3\x01\x6d\x85\x78\x6d\xe6\x4c\xc2\x74\x7e\x07\x53\x6f\x23\x9f\x56\x25\xe7\x40\x46\x2d\x59\xf4\x5c\xf1\xa4\x75\x5e\xbd\x81\x2a\xb0\x80\xe5\xd8\x59\xe5\x58\xc0\x97\x31\xc7\x38\x9b\xec\x63\x1d\xaf\xda\x50\x0a\xd6\x24\x52\x39\x04\x70\x8f\x2f\xae\x4a\xc8\xe4\x45\x83\x25\x3f\xed\xe1\x71\x94\x85\x7b\x82\xd7\x0f\x51\x41\x8c\x5e\x49\x36\xd2\x80\x01\xd6\x7d\x0a\x18\x4c\x79\xe5\xf1\xc1\x1d\xbf\xd4\x0d\x72\x10\x75\x5e\x1f\xaa\xb6\x77\x1c\x23\x50\x40\x34\x44\xe7\x11\x98\x19\x26\xaa\x9c\x73\xe4\x94\x7e\xae\x56\x2b\xb1\xc9\x84\xe1\x0b\x00\xfb\xfd\x86\x8f\x9c\xa5\x32\x0d\x10\xa8\x83\xfd\x62\x42\x82\xaa\x59\xb5\x5f\xe9\x3e\x8e\xa3\xc1\xe0\xae\x93\x30\x89\xf8\x09\xfa\x42\xc6\x36\xa0\x6c\x61\xff\x52\xaf\x17\x82\xb5\xf9\xdb\x49\x9d\x78\xaa\x1f\x83\x45\xd3\x92\x3d\x03\x3c\xc3\xdd\xc9\x3f\x64\x06\xda\x39\xd7\xd5\x0b\xd5\x99\xaa\xbb\x8a\x4e\x83\xf1\x0d\x51\xa3\xf7\xa5\x74\xb9\x9b\x30\xd7\x9b\x0e\x47\x2a\xd8\x8f\x61\x81\x8d\xc5\x38\x82\x5a\x14\x6a\xd8\x12\xe8\xc6\xf5\xaa\xb2\xf5\x19\x5f\x87\xb0\x65\xf6\x3f\xdb\x3c\x96\xd7\x8e\x58\x3a\x91\xd9\x6b\x46\xa9\xd9\xcb\xd5\xe3\xe8\xa4\x31\xc6\x96\x85\x56\x72\x12\x9a\x1b\x66\x5c\xa4\x25\x39\xf1\xb9\x26\xf8\x72\xc8\x07\xe5\x50\xd8\x6a\xa5\x12\xba\x9e\x47\x5a\xdf\x1b\xc7\xce\x32\xc7\x5a\xbf\x16\x24\x03\x6a\x50\x63\xe4\xe9\x91\xd6\x8f\x76\xef\x35\x0b\xf6\x92\x79\xe5\x45\x67\xc4\x90\xed\xd6\xb3\x5b\x5f\x5c\x3d\xb7\x34\x8f\x10\xf2\xc3\x4d\x90\x90\xd7\xc3\xef\x40\x09\xa6\x4d\x7e\x2e\xa1\x08\x1f\xb5\xf9\xae\xea\x67\x60\x03\x53\xbc\xa5\x91\xc7\x5b\x03\x53\xbc\xa8\xfe\x94\x79\xb9\x53\x78\x9d\x99\xe4\x4e\x2f\x65\xde\xe7\x55\x32\xe5\xf7\x0a\x3d\x2b\x27\xdd\x34\xd9\x2a\x07\xf0\x4e\xd2\xa8\x0e\x8f\x21\x77\x73\x72\xa3\xb3\xb7\xb4\x9a\xcd\xd0\xbd\x79\xd3\xaf\x72\x3d\xde\x5d\x84\x27\xbb\x0c\xac\xa3\x7f\x5c\x9a\xf9\x5f\x71\x42\x40\x5d\x46\x7f\xe5\xfc\xfa\x7e\x59\xaf\xe5\xb7\xba\xa2\xdf\xfe\x8f\x31\x9b\x95\x41\xce\xb4\x5b\x66\x6a\xd7\x12\x6f\xf9\x3a\xfe\xaa\x00\x1c\x3c\xe8\x78\x18\x61\x1c\xcd\xab\x1e\xdb\x71\x07\xa7\x1f\x0f\xaa\x0e\xdd\x23\x00\x0f\x96\x3e\x42\xe0\xd7\x9d\x4a\xf3\xf6\x72\x03\x86\x1c\xa6\x60\xae\xee\xb8\x25\x4f\x38\x33\x1d\x4f\x26\x1a\xdb\x72\x52\xd1\x58\x32\xe9\xc0\xef\xf7\x1c\x4c\x87\xa1\x64\xac\x0b\x71\x8d\x98\x3c\xa5\xef\x7a\x25\x33\x6e\xab\xf2\xfb\xda\xe0\xca\x9f\xa3\x73\x8b\x5c\x81\xc3\xfc\x2c\x13\x2a\x8e\xab\xe6\xdf\x64\xd6\x37\x82\x53\xbf\xaf\x1a\xff\xc5\x6a\x64\x52\x6c\xef\xab\x3b\x34\x48\x68\x69\x3d\xaa\x89\x7f\x30\xa5\xdc\x4c\x0b\x88\xde\x46\x29\x01\xf9\x7e\xc1\xeb\x1d\xe6\xce\xc5\x5e\x74\x9b\xb8\x41\x77\xd4\x0d\x2c\xfd\xd6\x8c\x9d\x36\xee\xf7\xc5\x9f\x3d\x23\x9f\x12\x27\x21\xd4\x20\xac\xce\x62\x35\x3d\x2f\x27\xd1\xb8\x41\xe6\x3c\x59\xec\x60\xf6\x2c\x70\x97\xb3\x91\xc6\x34\x17\xdd\x75\xb8\x65\x16\x6a\xbe\x71\x76\x58\x63\x0b\x78\xa2\xd1\xbf\xc8\x5f\xd5\x9d\x23\x27\xa8\xa9\x1a\x33\x14\x96\xd4\x0a\x8d\xae\x7f\xc6\x03\x6b\xd6\x31\x40\x11\xbe\x4e\xb8\x5c\xbb\x92\xba\x55\x76\x94\x5a\xcd\xbc\x4c\x60\x1a\x7f\x93\xfa\xc6\x79\x09\x8f\xb4\xf3\x44\x3a\x26\x6b\x56\x3f\x28\xa3\x4c\x3c\x1c\x4d\x04\xd6\xec\x87\xfe\x18\xa4\x3b\x15\x2d\x40\x02\x20\x59\xc5\x02\xcc\x46\x12\xa4\xba\xbe\xd1\x33\xe8\x43\xe7\x55\x47\x57\xe0\x32\x8a\xaa\x95\x96\x51\xad\x20\xbf\xac\x26\x84\xca\xa1\xd5\x03\x0a\x8c\x45\xfa\x44\x88\x7d\x76\xfa\x39\x09\xc9\x94\x8e\xe1\x1d\x32\x94\xca\xa1\x51\x15\x19\xce\xb2\xc0\xc1\x9c\xe9\xab\xbc\x00\x6c\x65\x05\xbc\x67\x92\x8c\xd1\x8f\xaf\x37\xda\x50\xca\x0d\x8f\x07\x74\xae\x06\xbc\x67\xce\x84\x69\x79\x1a\x38\x44\xd8\x2d\xd4\x13\xae\xbf\x81\x90\x13\x17\xff\xf4\xea\x2d\xf7\x01\x2d\xb9\xdc\xb5\x60\x79\xa7\x2b\x25\x2e\x58\x27\x23\xcb\xcf\x17\xaa\x7e\x5d\x6a\x5c\x2f\xfe\x53\x70\x7d\xf6\x99\x2f\xab\x2e\xf3\xde\x0d\x8b\x93\xea\x8e\x73\x7b\xd1\xec\x97\x12\x87\x21\xfd\xbe\x63\xd9\x2b\x2b\x6a\xac\x4c\x53\xd7\x7a\x06\x48\xf7\x92\xb6\xbd\xec\x40\x47\xdd\xe7\x06\x7b\xf9\xe8\x5a\x17\x32\x96\xbb\x41\x8c\x46\x4b\x3c\xc3\x6f\xa4\x5f\x35\xc4\xa1\x81\x6d\x31\x0f\x5f\x86\x4b\xdd\xe0\x08\x23\xfa\x0d\x3f\xb6\x12\xf8\xe7\x1f\xe8\x2f\x2b\xa2\x25\xfc\x7f\x6e\xfe\x1b\x00\x00\xff\xff\xf1\x8c\x20\x0a\x8f\x06\x00\x00")

func test_certsClientRootKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientRootKey,
		"test_certs/client.root.key",
	)
}

func test_certsClientRootKey() (*asset, error) {
	bytes, err := test_certsClientRootKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.root.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa8, 0xda, 0x61, 0x1c, 0xb2, 0x37, 0x31, 0xec, 0xfb, 0x45, 0xe, 0xdd, 0x6e, 0x14, 0x3a, 0x71, 0x16, 0xfa, 0xe4, 0xeb, 0x84, 0x10, 0xf5, 0x4a, 0x7e, 0x7, 0x33, 0x49, 0xeb, 0xec, 0xd, 0x33}}
	return a, nil
}

var _test_certsClientTestuserCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x49\xcf\x83\x38\x1a\x84\xef\xfc\x8a\xb9\x47\x23\x02\x84\x7c\xe4\x30\x07\x83\x59\x0c\x18\x62\x76\x73\x63\x5f\x42\x16\x92\x00\x81\x5f\x3f\xca\x37\x9a\x6e\xa9\xbb\x7d\x7a\xf5\x58\x2a\x5b\x6f\x95\xea\xdf\xdf\x23\xab\x3a\x72\xfe\xa5\xa8\x5e\x80\x34\xa4\x80\x40\xfd\xa5\x0c\x46\x08\xbe\x7a\x45\x01\x8f\xb1\x01\x0b\x92\x41\x83\x48\x98\x1d\xe7\x5a\x04\x4e\x92\x1c\xeb\x8b\x34\xb8\xf0\x62\x4f\x23\x04\x8e\xdc\x5c\xc6\xf6\xd2\xe9\xa7\x65\x2f\x03\xf2\xd2\x00\x04\x4f\x06\x7b\x68\x51\x01\x85\x11\x21\x96\xba\x0c\x30\xe7\x9d\x67\x71\x3d\xb5\x94\x6f\x3e\x5a\x00\x02\xb9\x71\x22\x19\xe0\x00\xaa\xce\x4c\xf9\xf7\x9a\xf3\x5a\x9f\x29\x32\x24\x01\xa8\xb4\x65\xbf\x32\xb8\x07\x1c\xee\xc9\x8a\x7b\xb0\xe1\x2d\xcd\xbe\xd0\xd9\xbe\xec\xf2\x07\xc3\x4a\xf1\x51\x7b\x40\xfe\x27\x76\x0f\x94\xf0\x4f\x31\x26\x83\xaa\x87\x81\xa4\x03\x2e\x54\xc1\x07\xa3\x52\x8f\xb6\xd2\x88\xb6\x34\x41\x4b\xd3\xa8\x1d\x06\x7b\x5d\xf1\x47\xdd\x47\xb9\x00\x89\x2a\x03\x12\x02\x70\x40\x32\x5c\xc0\xf7\xde\x62\xc0\x1d\xc9\x80\xc0\xa2\x9e\x40\x65\x82\xb8\x1f\xc4\xc7\xbc\xb1\xd9\x8e\xb6\x53\x03\xf2\xb1\x8b\x55\xd6\xb9\x8d\xd7\x33\x15\x8d\x1b\x12\x0e\xb9\x78\xd8\x7d\x1e\x28\xd4\x7a\x79\xbe\x9d\x85\x14\x33\x5e\xe3\xde\x1d\x64\x7e\x2e\xda\xb9\xc8\x0e\xe0\xf6\x74\xf1\x78\xee\x9b\x80\x8f\xd7\xc7\x2c\x2a\xe1\x7a\xa6\xeb\x19\x41\x7a\xfb\x79\x68\xa1\x1c\x53\x47\x1a\xc7\x09\xb4\x4b\x13\xbe\x5d\x4e\x34\x9e\x8c\xbe\x0b\x5d\xf3\x08\xaf\xfe\xd0\x06\xa4\xd7\x5e\x29\xa9\x87\x54\x04\xb2\x58\x96\x37\xd0\xbe\x16\xe2\xbb\x82\x6f\xa4\x38\x5d\xc0\xa1\x18\xa8\x8b\x27\xeb\x65\x47\x1a\x5b\xbe\x14\xde\x1e\xde\x94\x71\x39\x8a\x5f\xf1\xa3\x4d\x47\x28\x5b\x6d\x6e\x27\x66\x90\x9f\x84\xbe\x04\x6f\x6b\x5f\x7b\x99\xc7\x75\x6f\xed\x71\xd6\x05\x98\x2b\x82\x5e\x53\x4e\x45\xe3\x74\xba\x7a\xca\x36\x97\x9c\x13\x80\x8d\x91\xe7\x3d\xdb\xf8\x8a\xe9\x81\x9d\xf6\x29\x9e\x15\x0a\xb5\xab\x2b\x88\xf6\x41\x16\xe1\x28\x98\xe5\xd8\xc5\x41\xab\x93\xe5\x9c\xc2\x17\x97\x08\xd7\x2a\xb0\x13\x76\x1b\x90\x00\x2b\x8b\x7d\x70\x15\x73\x37\x48\xad\x99\xc7\xf7\xad\x2a\x8f\x79\xba\x70\xf1\x4f\x22\x6e\x4b\x46\x63\x7e\x78\x83\x06\xcb\x00\xe8\x7d\x53\x86\x4b\x53\xa2\x05\x36\x14\x46\xde\xfe\x0c\x88\xc1\x7e\x37\x0f\x9a\xb8\x61\xb0\x8c\xbf\x16\x96\x26\x21\x18\x83\xbb\xae\x28\x2f\x1d\x90\x50\x93\x17\xac\x60\xf9\xd7\xde\x12\x2d\x84\x62\x39\x03\x9a\x73\xe3\x5b\xe9\x5d\x2c\x3f\x3d\x1c\x6a\x2c\xc5\x9d\xf1\x60\xc2\xc0\x28\xe5\xf5\x33\x63\xa4\x9b\xdf\xa0\x18\x9e\xaa\x36\x54\x5d\xea\x03\x2d\xa9\x60\x5e\x68\x7f\x9f\x6d\xc1\x1b\xf2\xab\x36\x95\x8a\xf4\xb1\x85\xdf\x8c\xcc\xff\xcf\x0b\x93\x26\x96\x6e\x5c\x9d\x35\xd5\xd1\xd1\x5e\x4f\xfb\x34\x16\xdb\xfc\x46\x66\x1c\x80\xb9\x4c\x9c\xa1\xe8\x4e\xfb\x34\x71\xf6\xbf\xf3\x9d\x56\x7f\x15\x65\xbe\xaa\xd8\x3f\x71\x05\x1f\xad\x5f\x58\x08\xde\xef\xdc\xb6\x62\x5f\x5c\xbd\xce\xed\xa4\xef\x6b\x13\x8d\xc5\xbd\xbd\xa1\xe5\x1f\x7e\x80\x16\x48\xa8\x69\xdd\x53\xd4\xce\x85\x03\x88\x6a\xcb\x04\xc0\xa6\x51\x65\xa0\x38\x36\xbc\x25\x19\xbc\x49\x2c\x78\x65\x44\x33\xf6\x95\xaf\x1f\xad\x4f\x25\xd9\xca\x39\xcf\x7f\xe6\x8a\x32\xaf\x53\x15\x74\x67\xce\x2e\x69\x49\x0f\xd4\x9a\x2b\x21\x07\xa3\x3b\x6f\xc7\xcf\x85\x38\xc3\x41\xb5\x1c\xa3\x90\xc4\x6e\x2a\x74\xcb\x80\xdd\x31\xa3\x12\xdf\x54\xd6\xb5\x9b\x0c\xb8\x63\x33\xc5\x67\x72\x5d\xb0\xf8\x5b\xfb\x5a\xa3\x52\xb8\xda\x75\x86\x73\x44\xb2\x6d\xcd\xd2\x65\x8f\x7d\xd7\x95\x65\x3c\xb5\x30\xbf\x6e\xac\xf8\x1e\x45\x96\x7b\xc8\x57\x7f\xeb\x78\x7e\x1b\xa5\x7b\x77\x3b\xbb\x36\xf3\xb6\xce\xde\x1a\xbe\xda\xc8\x4f\xc4\x68\x4e\x90\x0b\x8e\xc9\x67\xfa\x16\x01\xaa\x3b\xbf\xac\xd1\x4f\x59\xfe\xc4\xe2\x06\xeb\xc5\x0c\xda\x13\x1f\xc5\x82\xee\x9a\x88\x5b\xd8\xf8\xb9\x1d\x94\x94\xe1\x7c\xeb\xd9\xe7\xfd\x66\x55\x70\x32\x8b\xb1\x33\xa4\x9c\xe6\x93\xde\x7c\xf8\x23\xa4\x8f\xdd\xba\xc5\x1f\xb7\xbf\x34\x5b\x45\x45\x35\xf3\xe0\x43\xda\x61\x33\xc0\x6a\xc8\xb9\x5b\x8c\xf3\xea\x87\x69\x62\x4a\x8a\xda\x3c\x26\xc9\x4a\x82\xe0\xf2\xde\xf9\xf6\x63\x6b\x79\x29\x72\xa9\x10\x99\xec\x73\x8e\x7c\x6c\x17\x6c\x55\xc1\x7c\xd2\x84\x60\x98\xc5\xe2\x3f\xcc\x6f\x1b\xaa\x0e\xfc\x7b\x43\xfe\x37\x00\x00\xff\xff\x29\x6f\xfe\x0f\x3e\x05\x00\x00")

func test_certsClientTestuserCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserCrt,
		"test_certs/client.testuser.crt",
	)
}

func test_certsClientTestuserCrt() (*asset, error) {
	bytes, err := test_certsClientTestuserCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.crt", size: 1342, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0xbe, 0x48, 0x3c, 0xda, 0x7, 0xa8, 0xd5, 0xe2, 0xd7, 0x7f, 0x45, 0xe3, 0xc8, 0x50, 0xd5, 0x4a, 0x99, 0x65, 0x81, 0xf1, 0xf3, 0xf3, 0xd0, 0xbd, 0xde, 0x7, 0xe9, 0x27, 0x57, 0x9b, 0x71}}
	return a, nil
}

var _test_certsClientTestuserKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xa3\x40\x02\x85\xe1\x9c\x53\x4c\xae\xda\xc2\x36\xa0\x60\x82\xc6\x1b\x09\xd3\x80\x30\x99\x40\x08\xe1\xbd\x3d\xfd\xd6\x4e\xbc\x2f\x7d\xc9\x9f\x7d\xff\xf9\xdf\x04\x59\xd5\xad\x3f\xc8\x83\x7f\x1c\xa4\xbf\xa0\x2f\xff\x31\xe5\xf8\xdf\x83\x3d\x75\x5d\xee\x5d\x5d\x80\xd0\x14\xa1\x2b\x43\x5a\xe3\x0a\xad\x74\x95\x1e\xe4\xef\x94\xc7\xa9\xad\xd5\xd3\x1e\xaa\x6c\xdf\xfc\x9c\x2b\x61\x87\x8a\xb2\x11\x38\xad\x9b\x7a\xcb\x9d\xf9\xed\x29\x98\x10\xef\x29\xb8\xee\x94\x2f\xc7\xd2\x28\x79\x62\x96\x08\x3e\xad\xae\xd0\x60\xaf\xca\xac\x18\x46\xbe\x37\xf3\x98\xde\xdc\xe6\x59\x51\xcf\xea\x84\x94\x71\x63\xd1\x0b\xbe\x5a\xe9\x6b\x8e\x53\xa1\x63\x99\xae\x3c\xfc\x25\x47\xec\xb1\x35\x52\x99\x17\xa0\x1e\xe2\x80\xd0\x8f\x54\x0d\x34\x10\xe6\x2e\xcc\xa3\x28\xd9\xf5\xf4\x29\xcb\xd5\x42\xfc\x28\x5f\xcd\xa0\xad\x19\xa1\x54\x3d\xca\x49\x24\x11\xf6\xa5\x53\xb8\x94\x20\x0d\xa5\x25\x94\x1e\xca\x18\x87\xef\x62\xf7\xfa\xf0\x24\xcf\x80\xc2\x3f\x0c\xed\x3e\xbc\x45\x23\xc2\xfa\x13\x4f\xe8\xed\x1f\xcb\x4e\xed\xcb\xd1\x51\x16\x12\xcd\x69\x4b\x6a\xcc\x9d\x39\xfa\xe3\x07\xfb\x73\x4f\xef\x0e\x23\x17\x65\xe0\x3a\xbf\x2c\x32\xe9\x52\x11\x92\x6a\xb9\x79\x37\x98\xbb\xec\x72\x46\xef\xbe\xa9\x19\x54\x3f\x25\xca\xe5\xac\xd7\x1d\x74\xf5\x49\xe2\x3c\xc0\x3c\x6b\xa7\xcb\x8d\xfd\x44\xa3\x40\x68\x87\x97\x4f\x09\xdd\xe5\x2d\x95\x59\xaf\x95\xbc\x65\xbc\xda\x2a\xcb\x90\xba\xba\x04\x5d\x28\xc0\x5e\x17\xa0\xd4\x16\xfe\x69\xa2\x0f\xf3\x45\x17\xf5\x00\x58\x75\xcc\xe5\x6a\x87\x6e\xf5\x03\xdb\x51\xae\x8e\x8c\xab\xd6\x24\xef\x75\xd0\xd7\x7d\xc6\x51\x68\xfc\x18\x28\xb8\xb7\x81\xa2\x72\xe6\x96\x74\x7b\x44\x64\x39\x15\x6c\xec\x43\xdb\x4f\x71\x3f\x69\x0c\x95\xe2\xc0\xb6\xc8\x23\x75\xd6\x56\xf6\x8e\x55\x7e\xa6\x96\x4a\x77\xc1\x5a\xed\x24\xf3\x63\x9e\x9f\x72\xa2\x5e\x75\x68\x38\x23\x89\x00\x7e\xbd\x69\x4d\x4e\x55\x39\xd4\x59\x2f\xee\xb7\xdb\x80\xb5\x2f\xa5\x19\x55\x26\xfd\xcc\xb7\xcf\x32\xe0\xbd\x29\x9b\x78\x69\x66\xf4\x6d\x08\x47\xb6\x03\x62\x4d\x9b\xd3\x74\x7c\x2d\xc7\xb3\x82\x58\xa1\x1e\x64\xb0\xd3\xe0\x7d\xb9\xfe\xd3\x1a\x1f\x45\x8c\x30\x2d\x16\x45\x47\x2e\xdb\x7b\xa6\xc4\x66\x85\x3b\x40\xf9\xed\xe7\x8f\xe3\x6a\xb5\x9a\x9b\x8c\xf4\xc8\x83\x65\x70\xfe\xb4\xbf\x54\x5f\xc3\x43\x22\x25\xe6\x8d\xca\xe7\xb3\x29\x53\x0a\xe1\x3a\xa1\x60\x43\xd7\xa5\x09\xd8\xb9\x51\x24\xc6\xc4\xa2\x3c\x5c\xa4\xfc\x44\x24\x1c\x61\x3c\x0f\xb7\xce\x72\x86\xae\x9b\x7c\x09\x5e\x5c\xed\xb2\x06\xe2\x33\xd5\x65\xca\x6a\xfe\xc9\xc6\x99\x3b\x3f\x14\x2e\xd8\xd6\x9b\x5f\x2a\x94\xc5\x22\x96\x21\x23\x0f\x94\xb1\x6b\xb6\x28\x9b\x16\x19\x35\x97\x9b\x6f\x66\x91\x25\x81\xbf\xc4\xf9\x90\xfb\x6a\x7b\x05\x6b\x32\x5f\x0b\x1f\xf5\xd6\x60\xa5\x0b\x2f\x33\x12\x16\xbc\x94\x6b\xe7\x6f\xe8\x75\x0c\xee\xd8\xf0\xed\x97\x0f\xa9\x5b\xff\x5d\x4c\x8e\xc6\xb9\x92\xd2\xc6\xb6\x9d\x4e\x61\x88\x9a\x11\xd8\x69\xde\x82\x29\x87\x5d\xe9\x2c\x31\xf3\x38\x2b\xbb\x7f\xf6\x18\xf8\x10\x49\x0a\x32\x6e\x4d\xb3\xf9\xe8\x9a\xce\xe5\xc0\xb2\x34\x9d\xc9\x79\x96\xcf\x06\xfb\xef\xf1\x65\xea\x57\x70\x1c\xd3\x50\x64\x01\x2f\x40\xea\xb6\x93\x32\xf5\xfc\x57\x7c\x63\x67\x1b\xf3\x47\x34\x4c\xd5\xb1\x6f\x89\xff\xf1\x07\xed\xe5\x15\x8c\xe2\x96\x7c\x86\x56\x41\x9a\xb5\x52\xf5\x61\x4e\x3f\x08\x9b\xea\x9e\xaf\xc8\xcd\xb3\xc4\x45\xc5\xd0\x29\x8a\xbc\x6c\xb6\xef\xb1\x3f\x1d\x23\x9f\x04\x61\xf7\x93\x06\xbe\x81\xe1\x3e\x4e\x46\x32\xd6\x23\xf9\x21\x53\x08\x7c\x87\x7b\xcc\xe2\x9b\x72\xfb\x3b\x12\xdc\x66\xbb\x07\xd1\xa0\xf2\x8a\xc6\xb7\x6e\x72\xfa\x54\x61\x5e\x46\xbd\x6e\x98\xf6\x45\x80\xd3\xb3\x21\xdc\xf4\xcf\xd0\xaf\x93\x05\x68\x6a\x86\xf9\xf2\x65\x8f\x8b\xb3\x1a\xd1\xbb\xfd\x50\x66\xf3\xff\x92\xe7\xbc\xff\xc2\x83\x19\xe2\x05\x67\x50\x5d\x98\x03\x19\x11\x18\x71\x89\xa8\xbd\xdf\x40\x8e\x8f\x51\xab\x19\x77\xa5\x1e\xeb\xcb\xd0\x28\xf2\x11\x1c\x0a\xca\x17\xa1\x18\xf4\xaf\x28\x15\x0b\xd5\xa8\x09\xcd\xab\xab\x0b\x4d\x9c\x3e\x3a\x1d\x0f\x93\x50\xb6\x05\xec\x27\x0e\x62\x4e\x03\x40\x88\x33\x44\xec\x66\x40\x31\x62\xee\x2d\xcd\xae\xda\x38\xda\x52\xd4\x66\x01\x7c\x7c\xae\xc5\xda\xcf\xf6\x69\x3b\x3b\x4c\xf1\x21\x78\x3b\xeb\xc7\x99\x8c\x23\xa0\xd1\x89\x59\xaf\xd5\x0a\x46\x64\x32\x5e\x2c\xc3\xd6\x0a\x2a\xc0\x93\xf2\x1a\x88\x45\x0c\xeb\xe9\x0a\x85\xe9\xb4\xb3\x9c\x90\x36\x22\x11\x64\xc2\x9c\xbb\x5f\x40\xcd\x1c\x7a\x22\x2d\x0b\x0b\x63\x54\x6a\x8c\xca\x32\x04\xd9\xcb\xda\x49\xc3\xb8\xf0\x94\x4c\x4f\x19\xf4\xce\x2c\x5b\xc2\xb3\xfb\x1c\x8b\x3d\xbf\x39\xdd\xcf\x0e\x7c\x62\x89\xb5\x05\x36\x91\xcf\xcd\xac\x3e\x79\x25\x02\x9f\xeb\x1d\xcd\x29\x76\x35\x95\x2d\x0a\x5f\xcd\x5e\x53\xf8\xa9\xb6\x97\xe3\xe6\x4a\xb5\x80\x77\x0a\x91\xff\xe4\x66\x1b\x66\x1a\x03\xc3\x9c\x27\xf6\x02\xbd\xef\xa2\x9c\xe4\x35\xdf\x24\xda\x74\x50\x6f\xb3\x98\x2f\x17\x33\xb2\xe2\xe7\xef\x06\xae\x27\x6b\xfe\xbc\x20\xca\x75\x1c\x2a\xe6\x25\x7b\x3e\x98\x54\x11\x98\x9a\xdf\x5a\x57\x05\xcc\xc4\x16\x57\xd1\x71\x4c\x7a\x65\xc7\xf4\x9b\xab\xe6\xdc\xaf\x47\xd4\x55\xd8\x45\x77\xb7\x20\x2e\x41\x1d\x35\xaa\x25\xf4\x87\x37\x42\x97\x6f\x55\xf6\x98\x98\x47\x76\xec\xf5\xe0\x19\x5a\x7e\xd8\x95\xa0\xbf\xa6\x6d\x23\x37\xc4\xb0\x6d\x5d\x81\xc7\x5d\xe8\xfb\xb6\x8f\x19\x4c\x3a\x40\x39\x2e\xef\xb7\x15\x7d\x89\x2f\x3a\x6f\xcb\xad\xd8\xac\xc8\x38\x79\x5e\xae\x61\x3f\x8a\x69\x90\x71\xc3\x8c\x7c\xd1\xec\x00\xa9\xe3\xd3\x08\xff\xfe\xc5\xfe\x91\x22\x5b\xd2\xff\xa7\xe6\xbf\x01\x00\x00\xff\xff\xc6\x90\x80\x17\x8b\x06\x00\x00")

func test_certsClientTestuserKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuserKey,
		"test_certs/client.testuser.key",
	)
}

func test_certsClientTestuserKey() (*asset, error) {
	bytes, err := test_certsClientTestuserKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0xf9, 0xf7, 0x16, 0xc6, 0xc, 0x5a, 0xce, 0x92, 0xb0, 0x97, 0x3d, 0x84, 0xd8, 0xe5, 0x3d, 0x41, 0xa3, 0x7d, 0x2, 0x4f, 0x57, 0xdd, 0xa0, 0x84, 0x76, 0x22, 0xec, 0x5, 0xe, 0x9c, 0xee}}
	return a, nil
}

var _test_certsClientTestuser2Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x49\xaf\xab\x38\x1e\xc5\xf7\x7c\x8a\xde\x47\xad\xcb\x10\xb8\xb0\xf4\x40\xc0\x61\x34\x01\x12\xd8\x11\x20\x10\x02\x21\x03\x60\xe0\xd3\xb7\x72\x9f\xf4\xfa\xa9\xaa\xa4\xf2\xc6\xf2\xf9\xff\x74\x64\xd9\x47\xe7\xbf\x9f\x05\x75\x83\xb8\xff\x41\x7a\x10\x92\x1d\x41\x20\xd4\x7f\x54\xce\x21\x04\x8f\x21\x42\xe0\x69\x54\x80\x11\x08\x2a\x12\x00\xc7\x4f\x5d\x6f\xe9\xbb\xd1\x31\xbb\xae\x1c\xec\x74\xc5\x32\x55\x19\xa6\xc9\xde\xea\x53\x52\x4f\xb9\x0b\xa8\x6e\x43\x0a\x18\x67\xad\xfa\xc1\x81\xc0\x00\x42\xa4\xa3\xda\xd9\x53\x51\x6b\x32\x69\x3f\x25\x47\xb7\x77\x82\x88\xe9\x2c\xc1\x31\xa5\x58\x67\x33\x3e\x8b\xee\x2b\xef\xb4\x3a\x11\xab\x8a\xf2\x3a\x33\xeb\xdc\xe5\x9c\x86\x30\x37\x24\xfc\x67\x77\x56\x47\x3a\xd6\xb9\xeb\x34\xf9\x47\x93\x7f\x6b\x0d\xe8\x9d\x80\x30\x1d\xfc\x98\x59\x3a\x6b\x7f\x9b\x71\x89\x58\xcd\x7a\x03\x28\xac\xdc\x18\x02\x27\x44\xa7\xa0\xcd\xa5\x40\xc8\xc5\x78\x71\x1a\x84\xc0\x81\xfc\xf5\xea\x10\x52\x80\xab\x4a\xf7\x01\x46\x88\x03\xb4\x47\x55\xa5\x43\xe0\xc4\xca\xf1\x4b\xf2\x23\xf6\x9d\x4b\x3d\x1b\x4a\xda\x69\xf8\x7d\xbd\x26\xc2\xb4\x15\x22\x59\x37\xc3\x38\x1c\x96\x6d\x7f\x32\xec\xdb\x9c\x34\x22\xdd\x3f\x33\x4b\x93\x34\xee\xdc\x2b\xa2\x96\xd2\x07\xae\x7c\xbe\x28\x2c\x49\xb9\x6f\x64\xc3\xd4\x1e\xb5\x5f\x9c\xa8\x18\x3e\x98\x12\x5f\xe3\x31\xc1\x6a\x90\x3c\x83\x32\x96\xc6\x61\x78\x0a\xf3\xe6\x4a\xdf\xda\x18\x25\x4c\xe2\x8e\x49\x2b\x67\xb5\x38\x6a\x73\x55\xd8\xa6\xaf\xf4\xb9\x47\xe7\xae\x3d\x29\xfa\x12\x1d\x4f\x12\xc5\x85\x27\x6e\x26\x81\x58\x56\x58\x6c\x2c\xc5\x49\x5e\x77\xf6\x4a\x65\x35\x12\x8e\xf4\xdb\x2a\x6a\xee\xea\xe8\x8d\x8d\x0a\xb4\x79\x44\xdd\x45\x03\xe7\xfa\x7e\x59\xe4\xb1\x8a\x5d\xb4\x98\x03\x6e\x4f\xb9\xb3\x8f\xee\x37\x5f\x1a\xc1\x4b\x12\x89\x73\x8f\x68\xa1\xb1\x88\x76\xe5\x77\x43\x72\xfd\xa0\x72\xe3\x09\x54\xf4\xe8\x7f\x97\x32\x46\xb7\xdd\xe6\xb5\xbd\x25\x03\x0f\xcb\xfe\xed\x2d\x70\x3e\x1c\xf0\x08\xbb\x9d\x5c\x65\xe9\xd8\x8f\x41\x31\xea\xd6\x33\x8d\xc5\x5e\xda\x98\x45\xbe\xee\x5b\xf2\xea\xb9\x4b\x1e\x3e\x4b\xf8\xed\x7b\x67\x6f\x41\xb2\x74\x35\xce\x1a\x14\xed\x22\x3c\x4c\x7c\xb6\x68\x3c\x02\x4c\x07\x20\xf3\xa0\xd8\x20\x28\xac\xc0\xfb\xfc\x96\x49\x55\x08\x2e\xea\xe7\xe5\x11\x07\x33\xf0\x2b\x2c\x01\xdf\x42\xc0\x18\xaa\x12\x62\xb1\x04\x42\x1a\x99\x80\x11\x66\xfe\x9a\x35\x10\x56\x6c\xd7\x83\x48\xbc\x64\xe6\x22\xac\x78\x74\xbc\x58\x5d\xe7\x8c\x23\x65\x1b\x38\x05\x6f\xda\x86\xca\xaa\x64\xfb\x49\x64\xa1\xd3\x03\xac\x1b\x04\xab\x6d\x52\x26\xd2\xfe\x96\x34\xfd\x64\x4b\x41\x7b\xee\x76\x63\x81\xd4\xd9\x96\xe2\x35\x3d\x91\xa9\x30\xe2\x95\x2b\xcc\x9f\xc3\x52\xd7\x5a\x93\x77\xc1\xd5\xbb\xaa\x9f\xc1\x98\x1c\x65\xde\x5e\x75\xf6\x27\xfc\x4f\x2c\xf7\x07\x3c\xff\x1b\xfc\x7f\x96\xfc\x36\xe6\xfe\x84\x1d\xc0\x1b\xe8\xf0\x34\x0e\xe4\x2c\x61\xaa\x43\xc4\x22\x00\xb6\x04\x02\x0a\xe8\xaa\xad\x42\x7e\xf6\xa7\xc3\x53\x4a\xa2\x7b\xee\xc5\xa5\xd5\x8b\x7d\x70\xe6\x9e\x8b\x5f\x2a\x8f\x01\xaf\x57\x1a\x21\x05\x93\xe6\x25\x93\x3a\x7f\x08\xc1\x4e\x2c\x77\xc8\xa8\x05\xa4\x46\x93\xd4\xde\xab\xd2\xa9\xdf\x70\xb4\xad\x1e\xf1\x93\xba\xda\x41\x7a\x54\xf2\x73\x27\x73\x1b\xb2\xef\x03\xb5\xad\xb6\x44\xd8\xca\x57\xab\x59\xdd\x65\x5e\xf5\xe0\xeb\x76\x10\x4d\x6f\x00\x8f\xa9\xc9\x4a\xe4\x89\x05\xc6\xbb\x20\x18\xab\x2c\x65\xdf\x87\xd8\xb3\xb4\xc8\xcf\x5e\x2b\xf8\xda\x72\xe6\x45\x68\x8c\xd9\x7d\xc6\x78\x2f\x4a\xe6\x7b\x67\xe4\xc7\x21\xeb\x8c\xe4\xcb\xc8\xec\xd6\x98\x50\x8c\xef\xea\xf6\x5e\x37\x70\xd3\xde\x3a\x9b\x57\x1e\xae\xf7\x22\xd2\x5e\x56\x87\xcb\xd9\x4a\xdf\x3c\xe7\xb6\x92\x1d\xc1\x76\x15\x67\x3c\x14\x54\x92\xd6\x29\x5c\x4f\x05\xc8\x9b\x0d\x4f\xd3\xf6\x31\x79\x37\xbf\xb2\x0e\x53\x3f\x47\x8e\x12\xe1\xb2\x58\xe1\x82\xaf\xc1\x10\xb8\xa9\xaa\x20\x53\x4e\xb8\x41\x71\xac\x16\x0b\x6b\x9c\xf3\xa1\x9f\x54\x9e\x57\x6f\xef\x8f\x72\xb2\x5e\xc5\x5b\xc2\x8b\x11\xe3\x2c\x7c\xa5\x3e\xca\xd7\x64\x20\xb6\x7e\x55\xce\x6e\x57\x79\xf5\x72\x03\x79\x7a\xe3\x7e\x5a\x51\x77\xf1\xdf\x9b\xf2\x7f\x01\x00\x00\xff\xff\xcb\xc1\xb0\xae\x46\x05\x00\x00")

func test_certsClientTestuser2CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Crt,
		"test_certs/client.testuser2.crt",
	)
}

func test_certsClientTestuser2Crt() (*asset, error) {
	bytes, err := test_certsClientTestuser2CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.crt", size: 1350, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0xc, 0x82, 0x15, 0xf9, 0x0, 0x4e, 0xd0, 0x22, 0x24, 0xf7, 0xac, 0xe3, 0x70, 0xa9, 0x1b, 0x9c, 0xcc, 0xce, 0x2, 0x1c, 0x47, 0x6e, 0xc7, 0x73, 0x42, 0x6a, 0xdc, 0xfa, 0x58, 0x48, 0xd5}}
	return a, nil
}

var _test_certsClientTestuser2Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\x37\x12\xab\x56\x00\x85\xe1\x9e\x55\xbc\x5e\xe3\xb9\x64\x50\x49\x16\x39\xc7\x8e\x74\x11\x08\x44\x4e\x5a\xbd\xc7\xaf\xf6\x69\x4f\xf3\x77\xdf\x3f\xff\x8d\x97\x14\xd5\xfa\xe3\xf9\xdc\x1f\xc7\x53\x23\x2e\x90\xfe\xe8\x52\xfa\xf7\x41\x4c\x55\x95\xc6\x53\xe5\x39\x4e\x17\x38\x57\xe2\xae\x64\x2a\x40\xf9\x0c\xc4\xed\x57\x77\x02\x46\x09\x05\x6a\xdf\xba\xd6\xc5\xa0\x8b\x82\x8f\x5b\x59\x91\x4d\x18\xed\xbb\x4c\xf7\x40\x6e\x9d\x8c\x43\x86\x69\x5c\x08\x88\xed\xdd\x52\x60\xbd\xf0\xb1\x39\xe0\x61\xe8\x02\x67\xc8\x7c\x52\x88\x0f\xd2\x13\xab\xc4\xcc\xfe\x8a\x53\xac\xc5\x54\xe3\x5c\x72\x3b\xc9\x54\x52\xd3\x38\xbe\x24\x2f\x5a\x13\x90\x1f\x4e\x79\x9d\x58\x65\x6d\xd2\xcf\xaf\x9c\x21\x14\x1e\x5d\x4b\x30\xbf\x4f\x4a\x54\xf2\x08\x8e\x81\xe6\x65\xb0\xe2\x2c\x94\x29\x68\x10\x36\xe3\x64\x11\xe4\x32\x5e\xed\x0e\x85\xed\xfb\xbd\x02\x24\xca\xc4\x75\xc2\x15\xf5\xf4\xcd\x55\x43\x0d\xba\xf7\x33\x80\xf2\xbb\x52\x01\x63\xa0\xf9\x10\x35\xd4\x1a\xb5\xa3\xea\x3c\x7b\xbf\x76\x41\x4d\x0a\x07\x4c\x9b\xbb\xf2\x78\x82\xe0\x3d\x21\x63\x90\xdd\x7c\x9f\x9e\x71\x53\xa5\xc0\xf3\x29\xd8\x98\x8f\xa9\xbb\x09\x7d\xb4\x5e\x4b\xb8\x32\xdd\x9e\x8c\xfa\x92\x35\xd5\x26\x95\x34\x19\xf8\x69\xa0\x5b\x4a\xc6\x49\x77\x9e\xfa\x24\xef\x20\x59\x61\xc8\xcf\x1c\xc2\x76\x7f\x3f\x2f\x7b\x22\x5f\x2b\x4b\xad\x8c\x6a\x7c\x6b\x35\x3b\xd0\x57\xba\x61\x96\x0e\xbc\xc5\x20\x5c\x55\xe4\x5c\x8e\xe7\x46\x95\xe7\x5c\x81\x7c\x92\x80\xfd\x6e\x03\xea\xf8\xcb\x8d\x14\x94\x2c\x75\xbb\x72\x08\x89\x49\x15\xe1\x19\x3b\xc0\x03\x27\x59\x30\x29\x10\x4c\x46\x47\x2b\x3f\xd2\xe0\xe1\x68\xe2\x31\x6b\x68\xae\xb4\xe2\x7e\xfb\x71\x57\x50\x2d\x2c\x9d\x78\x10\x1f\x39\xc2\x00\xd5\x4c\x26\xd6\x6d\xe2\xf6\x1c\x8e\x96\x01\xe4\xba\x96\x86\xca\xe7\x50\xd2\xbf\x70\x2d\xaa\xa0\x72\xa9\x74\xc9\xd3\xc7\x30\xee\xb4\x32\x67\xf0\x9e\x5a\xf5\x05\x17\x01\x6d\xf3\xcc\x7a\x20\xdd\xa7\x8f\x87\xb0\xdf\x0a\x0a\x06\xf4\x6f\xf5\x03\xa1\xb7\x66\x0c\xbc\xb0\xde\xb7\xaf\x64\x76\x3c\x14\xfb\x04\xe5\x4f\x67\x73\xf3\x98\x4c\x77\xfd\x92\x75\x74\xc8\x34\x60\xf9\x67\x22\x2c\xde\x81\x90\x5c\x5e\x3b\xc9\x7a\x3a\xf6\xe7\x28\x07\xd3\x76\x93\x2f\xbe\xd5\x63\xae\xee\x04\x1e\x92\x7e\xff\x20\xf9\xf6\xbe\xe0\x85\xe3\x3b\x69\xcb\xac\x51\x5e\x49\x6a\xba\x05\x83\x2f\xba\x65\x97\xe6\x1b\xc9\xfd\x61\x65\x05\x12\x0a\xd8\xfd\x10\x7e\x7d\xa7\xf5\xf2\x76\x6d\x79\xfa\x78\xcb\xb3\x16\x4b\x6a\x98\xc6\x51\x53\x3d\x25\x2c\x35\xef\x16\x28\xe8\xe3\x2c\xc3\x69\xd8\xcf\x1c\xb3\xd3\xef\x56\xce\xc8\xef\x12\x3e\xb3\xc4\x3e\xb9\x51\xe1\x39\x27\x70\x8a\x47\x68\x06\x61\xfe\x3c\x79\xba\x52\xf5\x21\x50\x7d\x2a\xd9\xeb\x7b\x3b\xfd\x5c\xb9\xd8\x66\xed\x5d\x8f\x83\x43\xe8\xc1\x17\x59\x68\x86\x25\x22\xb7\x6f\xa9\x1c\x01\x3e\x7b\xcc\x47\x93\x84\xb9\x2a\xa5\xb5\xef\x0d\xae\x56\xa3\xbb\xb6\x58\xcb\x17\xb3\x4a\x1a\xba\xfa\x8e\x92\x93\xa9\xbd\x86\xdd\xec\x26\xbd\xbb\x24\xdd\xe7\x5b\x27\x10\x0d\x11\x11\x4d\x60\x09\xea\xee\x3b\x5a\xc1\xca\xaa\xbc\x9f\xca\x0a\x2b\x87\x4c\x88\xb1\x5a\x48\x25\xab\xd9\x24\x51\x4b\x92\x64\x22\xdb\x3f\xa2\x3b\x5a\x5e\xc6\x09\x17\x33\x8a\xbf\xc5\x26\xcd\x23\xb2\xf4\x6c\x2a\x46\x61\xbf\xee\xe8\x52\x9a\x77\xd7\x43\x4e\x49\x34\x5f\xf5\x67\x28\x74\x10\x9b\xa6\x04\x9e\x6f\x58\x80\x85\x14\x5f\xa9\xd4\x82\x29\x03\x36\x79\x28\xef\xd2\x58\x42\x7d\xa8\x33\xc4\xa8\x1f\xf9\x07\x88\x61\xb8\xbc\x6c\x91\x4a\x32\x95\x0c\xcd\x76\x3b\xe5\x02\xd3\x2d\xde\x1e\x39\x42\xb9\x98\x5f\x39\x57\x2e\xdc\x59\x8b\x86\xa1\xef\x6f\x8f\x32\x27\xaa\x11\x5b\x15\x5d\xf7\x0a\xc4\x56\xbf\x9a\x7c\xcd\x4a\xd6\xd2\xc5\xf3\xb0\x37\x25\x25\xe7\x89\xb8\x69\x82\xa9\xce\xb1\x12\x7a\x74\x59\x1e\x64\x8d\x7f\xb9\x51\xe1\x34\x7a\x3e\x69\x56\xca\x5a\xf9\x48\x7b\x19\x33\x12\x95\xde\x90\x72\x06\xb5\x13\x51\xb6\xa8\xaf\xa6\xdc\x70\x8c\xef\x9e\xb1\xb1\xb9\x5b\xb3\x45\x9b\x5c\x2f\x03\x11\xdb\xf5\x95\x6e\x8e\xd0\x02\xdc\xeb\x6f\x14\xdb\x3c\x45\xb9\xde\xa4\xf0\xf0\xd4\x8c\xa2\x6f\x64\x0a\x60\x23\x35\xc5\x92\xab\x18\xd5\x2d\xf8\xfe\xb8\x95\x4e\x2a\xe2\x69\x4a\xdf\x58\x22\x6e\x37\xfe\xf6\x79\x7c\x7b\x46\xaa\x75\x35\x9a\xc7\x2b\x21\xc3\xf6\x28\x18\x20\x99\x57\x8a\xb5\xc7\x3d\x32\x44\xda\x77\x8c\x6f\xba\x74\x87\xf0\x51\x76\x8f\xe6\xfd\xab\x77\x83\x15\x9a\x94\x8b\x54\xb6\xee\xa1\x16\x7f\x1c\x14\x70\xb6\x7b\x3d\xe3\x8a\x79\x51\xe8\x7b\x94\xc2\xbb\xaf\xf3\x8c\xaa\x99\xe6\x42\x76\x5e\xd8\xcf\xf8\xe4\x40\xdd\xb8\xf9\x37\x8d\xc4\xd3\xf1\x9b\xa9\x2f\xb7\x0d\x97\x0a\xe2\x77\xc5\xd8\xbd\xec\xa5\xf0\x2e\xbc\xc3\x8b\x3e\x2a\x35\x50\x4d\xd2\x70\xc6\x9e\x13\x9b\x12\x84\x9a\x88\x64\x66\xd8\xe5\x25\x4c\xcb\xc1\x5c\x8d\x56\xfd\x15\x73\xa4\x77\x62\xb1\xe1\xe9\x6c\x7d\x0c\xd4\x79\xd6\xa6\xd4\x5f\x8f\xf2\x7c\x08\x39\xc0\xaf\x23\xe8\x7d\x8d\x43\xbd\x7e\x69\x42\x7f\x06\xa5\x83\x4c\xe4\xe8\x24\xa7\xce\x37\x4a\x40\x1b\x29\x64\x5c\x18\x88\xf8\x4f\xcc\x9d\x1e\xc4\xf9\xd8\x11\x49\x42\xf7\x52\x90\xcd\xf8\x51\xc5\x3f\x55\xa9\x73\x29\x9a\xb9\x86\xe3\xe3\x88\xc8\x87\xca\xcc\x90\x67\x2f\x66\x29\x59\x97\xf1\xc0\xba\x03\x13\xf3\xca\xf3\x33\xc2\x28\x2d\x25\x5e\xf4\x6b\x53\x30\x13\x28\xac\xc6\x78\x5f\xbf\xd9\x3e\xa5\x28\x57\xea\xf5\x7e\xfe\x64\x85\x5c\xe3\x20\x96\x82\xc9\x42\xc4\xe3\xb9\x6d\x5f\xb9\xc8\xc0\x0a\x0c\x35\x99\x68\x87\xef\x93\xfc\x03\x4b\x26\xe9\x17\xa3\x5a\x26\x6c\xa0\x2b\x96\xdc\xcd\x97\xad\x3b\xf4\x77\xa5\x7b\x7a\x47\xfe\x92\x22\x59\xe2\xff\x53\xf3\x6f\x00\x00\x00\xff\xff\x5b\x33\x03\x1c\x8b\x06\x00\x00")

func test_certsClientTestuser2KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsClientTestuser2Key,
		"test_certs/client.testuser2.key",
	)
}

func test_certsClientTestuser2Key() (*asset, error) {
	bytes, err := test_certsClientTestuser2KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/client.testuser2.key", size: 1675, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x61, 0x2a, 0x56, 0xb2, 0x37, 0x40, 0x86, 0xa7, 0x2b, 0xfa, 0xb3, 0xaf, 0xb9, 0x6c, 0x8b, 0x6d, 0x24, 0xc2, 0x3c, 0x7c, 0x36, 0x10, 0x99, 0xcc, 0x8f, 0xbd, 0xdb, 0x32, 0x83, 0x60, 0x8a}}
	return a, nil
}

var _test_certsNodeCrt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xb9\xae\xab\x48\x17\x85\x73\x9e\xe2\xcf\x8f\x7e\x61\xe3\x01\x1c\xdc\x60\xd7\xc0\x5c\xd8\x65\x30\x1c\x9c\x31\xd8\x85\x01\x0f\x78\xa0\x80\xa7\x6f\x9d\xdb\x52\x77\xd0\x77\x85\x9f\xb6\x56\xb2\xb6\xbe\xff\xff\x04\x51\xcb\x09\xfe\x87\xe9\x3e\x72\x4c\x07\x43\x44\x7f\x53\x85\x39\x0e\x49\x27\x8c\xa1\xf9\x08\x90\x0e\x02\xe1\x70\xf7\xe0\x36\xf9\xe5\x86\xe2\xc9\xaa\x1e\x5e\xf1\x78\x88\xf2\x14\xd6\x10\x20\xd1\x74\x55\x73\xb1\x36\x72\x86\x80\xbf\x4c\x20\xf0\x54\xd8\xde\x91\x14\x52\x12\x73\xee\x51\xd9\x92\x5c\x0b\x9e\xc5\x75\x53\xa5\x9a\x18\xcc\x08\x22\x24\x82\x18\x01\x8b\x08\x0d\xfa\x54\x7b\x8f\xb9\x66\xd6\x19\x46\x84\x47\x70\x32\xe5\x6c\x54\x58\x0d\x73\x56\xf3\x91\xd5\x30\xb1\xe9\x98\xfd\xc0\x60\xfa\x61\xcd\x3f\x8c\x61\x36\xd0\x1a\xf8\xdf\x65\xf7\x08\x1f\xfe\x2d\x53\x32\x42\x03\x06\x2f\x0b\xe6\x07\x0a\x03\xa3\xf9\x75\xd3\x1c\x23\x8c\x21\x74\x24\xe1\xa9\xeb\xdd\x8f\x4e\xd5\x17\x01\x70\x8a\x10\x07\x22\x04\xdd\x01\xc1\x18\xf8\x1d\x0b\x41\x91\x02\xbe\xf3\x98\x06\x78\xa1\x4e\x4c\x55\x12\x4d\xdf\xbb\x7b\xfb\xe8\xe3\xb9\x6a\x6b\x27\x47\xff\xd6\x45\xc5\xbc\x85\xb1\xed\x87\x62\x98\xb2\x75\x88\x7a\xaf\xd8\x2d\xdd\xa7\xa5\x33\x63\x41\x3f\x1d\x56\xc8\xc6\x4f\xae\x29\x41\xa0\x55\xe4\xb1\xf2\xe1\x7b\x8f\x49\x41\x99\x3b\x8c\x6e\x2d\x93\x87\x85\xc3\xf2\x2d\x56\xc7\xd7\x6d\xf7\xb5\x94\x59\xb3\x4c\xed\x8d\xd7\x8c\xeb\xd7\xec\x54\x89\x58\xcf\x1b\x25\x15\xd8\xcf\xde\x5a\x18\x78\x8d\x23\xae\x41\xd6\xce\x92\x40\x9a\xe1\x46\xd3\x3f\x87\xaf\x3e\xeb\xd3\x4b\xa6\x75\x7d\x14\x96\x73\x69\xb1\x8f\x67\x9f\x27\xcd\x28\xf3\xa9\x5f\xde\x54\xcb\x9f\xf9\xb5\xf2\xf1\x21\x58\x97\xb9\x61\xdf\x1e\x70\xb9\xec\x17\x26\x8a\x7d\xdb\x0f\x5b\x32\xee\xb7\xf6\xfa\xd0\x75\xe3\xd1\x5d\x54\x26\xdb\x58\x4d\x61\xaa\xf3\x90\x8f\x6f\x4e\x85\x21\xb3\x2f\x5e\x47\xdf\x7d\xa8\xac\x06\x9d\x78\xfb\x0a\xe3\x71\xbb\xed\xf7\xd3\x0e\x4e\xa7\x5e\x1a\x5f\xe3\x94\xdf\xaf\xee\xd2\x22\x69\x76\xdd\xad\xab\xfd\xb1\x05\xfa\x9a\x8e\xe6\xdc\x8a\xcc\xfc\x6c\x27\x22\xa7\x33\x92\x6d\x46\xa2\x24\x82\x4c\xf7\xd6\xff\x5c\x91\x27\x17\x88\x6e\x60\xa7\xd1\xd9\xca\xc0\x20\x29\x40\xb6\x45\x97\x1a\xa3\x6a\x82\xed\xcf\x84\x36\x37\x10\x9c\x0d\x8a\x80\x61\x94\x81\xb4\x79\x4a\x94\x78\x3f\x6b\x11\x4a\xa5\x09\xa9\xe3\xc9\x14\x21\x7e\xb0\x41\x52\x0b\xe3\x97\x05\xfc\x60\x22\xc9\x30\x43\xc6\xcf\xcc\xa5\x23\x79\xca\x50\x06\x66\x70\xd3\x2a\xe3\x5d\x48\xbd\x26\x4a\x7b\x66\x46\x72\xb1\x1f\x87\xc8\x2e\xd1\x38\xf4\x8c\x1c\x7e\x1f\x53\xce\x3f\x0c\x8f\x18\x27\x43\x9f\x6a\xe6\x2b\xb3\x36\x53\xe9\x38\xb6\x77\x59\xbd\x72\x2d\xa8\x72\xa7\xa0\x67\x09\xa0\x40\x5a\x70\xf8\x53\xa2\x3f\xfc\x3e\x6c\x31\x70\x0a\xc5\x1b\xe3\x67\x7c\x11\xac\xaf\x6d\xa5\xff\xb8\x83\xdf\x8f\xea\xdd\x69\x6b\x34\x8f\x6e\xee\xf9\xd4\xc9\x48\xfa\x93\x75\xf5\x16\x95\x65\x9f\xc3\x18\x65\x97\x77\x7a\xff\xf2\xd9\xf9\xfe\xb2\x2e\x3e\xbb\x69\x38\x35\x61\xa5\xce\x75\x5f\xa4\xca\xc9\x59\x59\xb8\x47\xc7\xb2\x8a\xa4\x67\x5f\x3f\xcb\x79\xa7\xd6\x86\xf4\x88\x78\x5a\xfd\x68\x65\x6a\x58\x3e\x75\xed\xf1\x59\xe4\x5a\x20\xca\xbe\x8c\xf7\x4d\x25\xd9\x59\xa2\x6c\xd2\x97\xb3\xae\x53\x02\x19\xdb\x2a\xf3\xd7\x96\x97\x25\x07\xee\x1e\x1d\x57\xff\x7e\x2f\x2e\x69\xcf\xab\xdd\xa9\x00\xbd\x21\xfc\xb6\xe4\x9a\x50\xa9\xde\xbe\xf7\xe4\x2b\xae\xba\xdc\xf3\x06\xf3\xed\xe2\x66\xc9\x42\x57\xb9\xab\xd6\xec\xca\x1f\x6c\x6c\x19\xf3\x6e\xd5\x5e\x4b\x32\x8f\xaf\x0a\x5d\x26\xea\x42\xa3\xfb\x6a\xa5\x1f\x8b\x24\x44\x2b\x9b\xf6\x6a\xb4\x5a\xb8\x22\xd0\x3b\x17\x2f\x76\x3b\xdb\x5c\xa7\xe8\xdc\x2a\xa3\xb9\xbc\x92\x97\x65\x65\x2b\xea\xe8\x5d\x1c\xb5\xd5\xc0\xea\x04\xa7\x79\xa4\x6d\x77\x85\xca\xd7\x64\x20\x59\xae\x9a\x5b\x03\x6f\xce\x82\x6d\xd2\x74\x61\x97\xd3\x7a\x2a\x4f\xcf\x3a\x20\x27\xa1\x48\x23\x9e\xb9\x7a\x9d\x9d\xe4\xaf\x5f\xca\x6f\x49\xd1\x80\xfc\x57\x5c\x7f\x05\x00\x00\xff\xff\xc6\x71\x26\xd6\xd5\x04\x00\x00")

func test_certsNodeCrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeCrt,
		"test_certs/node.crt",
	)
}

func test_certsNodeCrt() (*asset, error) {
	bytes, err := test_certsNodeCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.crt", size: 1237, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0xcf, 0x3, 0x81, 0x61, 0xc0, 0x0, 0x3a, 0x17, 0xc7, 0xa5, 0x32, 0x4f, 0xa0, 0xf3, 0x9a, 0xc6, 0xef, 0x85, 0x60, 0x7, 0x5b, 0x9, 0x60, 0x75, 0xab, 0xc7, 0x3f, 0x6d, 0xa8, 0x52, 0xec}}
	return a, nil
}

var _test_certsNodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd5\xb7\xb2\x83\xda\x01\x85\xe1\x9e\xa7\xb8\x3d\xe3\x21\x23\x28\x6e\xb1\xc9\x59\xe4\xd4\x11\x36\x51\x42\x64\x24\x9e\xde\xe3\x53\x7b\xb5\xab\xf9\xba\xff\x3f\xff\x9b\x20\xab\xba\xf3\x8f\x1f\x80\x7f\x5c\x5f\x8f\x41\x28\xff\x63\xca\xd9\xdf\x83\xd8\xba\x2e\xcf\x40\x17\x00\x30\x45\xe0\xc9\x60\xeb\x27\x57\x16\x2f\x75\x91\x9e\x4a\xee\x3a\x15\xda\x27\x6f\x3e\x4d\xb9\x26\xa7\x87\xbd\x39\x44\xf9\x5a\x9b\x8b\xc5\x94\x5b\x73\xd6\x59\x57\x39\x64\xbe\xb0\xf6\xbd\x95\xdb\x7d\x57\x01\xfb\xd1\x5d\x7c\x2f\xf2\xd6\x96\xa5\x42\x7e\x4e\xe3\x26\xd4\xb2\xee\x5c\xde\x35\x69\xfa\xdb\x15\x8a\x31\x33\x0c\x92\x94\x5e\xef\x5f\x85\x3d\x06\x61\x09\xbb\x16\x69\xf0\x25\xb4\x96\xdb\x67\x55\x21\xdd\x0f\xbf\x07\xfa\xbe\x50\xb9\x8e\x2f\x5e\x2f\x66\xc4\x92\xfa\x19\x05\x62\x8b\x2a\x0f\x26\x64\xf9\x85\xef\x8d\xb5\x58\x78\xc7\xa0\x52\x90\xfd\xe8\x4f\x8d\x21\x6e\xf9\x25\xce\x27\xd6\x37\x5c\x76\x7a\xc7\x93\xde\x00\x35\x13\xe7\x05\xe1\x28\x9a\x86\x56\x45\x4a\xb4\x55\xbb\x19\xb9\x86\x4c\x37\x73\xb0\xac\xc6\x38\x41\x39\xba\xf1\xc2\xbf\x52\x2c\x36\x24\xc4\x24\x40\x20\xdd\xc2\xca\x88\x8e\x03\x79\x6b\xd2\x36\x7b\x56\x65\xdd\xd2\x69\x96\xd7\x6c\x4e\x60\x58\x4c\xba\x1f\x96\x73\xf4\xd9\xd4\x66\x4e\xb7\x64\xd8\xa2\x28\xef\x08\x04\xb7\x33\xa6\x51\x8e\xd8\xf1\xce\xd5\x85\xb0\x85\x9e\xb3\x52\xba\x53\x00\xf7\xd9\x47\x07\x9b\xc9\xab\x54\xc9\x21\x0e\xb0\x2c\x0c\xa7\x4b\x97\x80\x07\x04\xf0\xd1\x05\xa0\x69\x41\xd8\x5e\x06\xa3\x59\x10\xa3\x24\x80\x68\x29\x01\xbd\xe5\xe6\x66\xdb\xf9\x68\x09\xb3\x71\xcf\x33\x6c\x0a\xa7\x90\xc8\xca\xdd\xda\x6f\x62\x0e\x78\x45\x2f\x7e\xe3\x61\x63\xf1\x8c\x0a\x71\xbb\x1d\x71\x34\x6f\x52\xff\x78\x2d\xe6\x04\x18\x02\xa7\xd8\x8a\x18\xef\x1a\x1b\x5c\x80\x42\xc1\x8a\x05\x5e\x7e\x5d\x86\x03\x38\xa1\x5b\xdb\xc8\x46\xb2\xdb\x47\x68\x8d\x13\xa4\xca\x72\xbf\x87\xcb\x93\x42\xb9\xa5\x23\x3a\x73\x18\xb3\x5b\x3b\x44\x16\xbe\x39\x0e\xe3\xb3\xf0\x11\x0a\xa8\xb8\x3b\xec\xe2\x2d\xf1\x98\x1e\x30\x7c\xb7\x1d\xea\x61\xa1\x6a\xa6\x3c\xcd\xaa\xcc\x87\xda\xc9\x0a\x4f\x69\x36\x25\xdc\xa8\x20\xf3\xc9\x45\xbf\xc0\x82\x23\x79\xde\xa5\x99\xac\x35\x50\x54\x2c\x00\xf4\x59\xe3\x8c\xaa\x7f\x79\xc3\x74\x2d\x57\xa7\x04\x74\x70\xab\xf2\x89\x6e\x16\x66\x73\xcc\xb4\xab\xad\x08\xb0\xbe\x9c\xe2\xe1\x35\xe0\xf9\x5e\xe8\x21\xb2\x8b\x36\x07\xcf\x1f\xcd\x0f\x3b\xd7\x48\xec\x51\x96\x1f\xc9\x9d\x2b\x75\x2d\x92\xfe\x85\xb3\x5b\x9d\x9c\xbb\x36\xe3\x5f\xbe\x1c\xef\x4a\x6b\x74\xd8\xae\xa4\x45\x96\xb1\xea\x81\xd2\xd9\x92\x02\x49\x03\xb6\x7e\xfd\x46\xb1\xcd\x64\x40\x7e\x7d\x29\x2b\x74\x33\x66\x6b\x7e\x96\x4f\x9d\x5a\xbf\x5b\xb0\xe4\x62\xdb\xcb\x1b\x47\x27\x18\xcc\x9b\xdc\xe7\xc7\xd6\x54\x19\x51\xcd\x3b\xa3\xe3\x69\x16\xf9\x4c\xd1\xe2\xa2\x97\x34\x78\xa4\x31\x48\xcf\x10\x9f\x22\xf9\x19\xe7\xa5\x4f\x97\xf5\x36\x86\xd6\x65\x73\xf8\x8a\xae\xcc\xc2\xa3\x8c\x3f\x67\x85\x99\x2c\x53\x2b\x06\x86\x24\x7f\xfb\xfc\x28\x01\x02\x7d\xdf\xfe\x3e\x02\xa1\x2f\x95\xd7\xeb\x28\x9c\x49\x64\x22\xb8\xd6\x54\xf8\xc9\xe3\x14\x9c\x51\xfb\xf9\x1c\x44\x44\xf5\x71\xb1\x2a\x6f\x03\x0a\x80\x8e\x5d\x63\x8b\xfe\xc4\xb8\x24\x78\x88\x2c\x35\xfa\xc9\x1a\x9e\xd7\x54\xe9\xc3\x7c\xfe\xce\x54\x8c\x62\x71\xbc\x9f\x53\x03\x21\x4e\xbc\xc8\xdf\x4f\x7a\x78\x67\xa9\xb1\x5d\x99\x0d\xe5\xc3\xaf\xe2\x14\x46\x5c\x24\xf5\x35\xd9\xa0\xe1\x89\x5c\x96\x66\x31\x47\xef\x1e\x8f\x51\x25\xfa\x46\x9b\xfa\x32\xb3\xa0\xb5\x80\xdc\xb5\xa5\x56\x82\xfe\x1b\xe8\x78\xa5\xa1\xdd\xb7\x1c\xd2\x0b\xe0\xdb\xc5\x88\x26\xcb\x7b\xac\xab\xbe\xa6\xc2\x8e\x11\xba\xf3\x18\x77\x99\x6e\xa1\x8d\xbb\x97\x16\xbd\x39\xd3\x50\x82\xc9\x1f\x21\x3f\x62\x8a\xbc\xf6\x07\x01\xb2\xf8\x6b\xff\x91\xcf\x01\x26\x44\xe5\x4a\x86\xcf\xcc\x01\x1c\xb0\xd0\xa1\x1a\x24\x7c\x26\x11\xfd\x48\x69\x68\xe2\x4e\x3d\x3d\xbe\xe2\x02\x36\xb8\x31\xb9\x2a\xd2\x1e\xde\x17\x61\x6c\x28\xd1\xe8\x68\xd1\x4e\x8d\xe3\xc0\x64\x36\xab\xb9\xe7\xd2\x44\xad\x31\xc0\xb1\x52\xd1\x19\x89\xdb\x3b\x54\x89\xfa\x8e\xf7\x3a\xa1\x65\x0d\x4a\x38\xb5\x74\xec\xfb\x1b\xb9\x7b\xdc\x87\x72\xb9\xe3\x31\xc5\x79\x1a\x9b\x11\x4b\xcf\x25\x69\x9a\x38\xdc\xcb\xb5\xdc\xd7\x2c\xbf\x5b\xac\xa6\x2c\x64\x23\xba\xf8\xc5\xca\xa5\x7b\x06\xc5\xf5\x49\xbf\x29\xea\xe1\x87\x82\xff\x91\xdf\x3f\x2d\x56\x6e\x71\x09\xa8\xcf\x78\x34\xd6\x2c\x34\x2a\x53\x80\xfc\x87\xbb\x18\xcc\xe9\x2b\xa3\xa1\xf1\x40\x96\x2d\x0e\x24\x7f\x76\x87\x6f\x2f\xf0\x18\xfb\xce\xf4\xf6\xb1\x27\x4c\xbf\xa9\x71\x37\xd9\x24\xdd\xc1\x8d\x24\xb5\xe5\x95\x88\x13\x4d\x06\x94\xe3\x2f\xb2\x92\x3f\x5c\x02\x4f\xa3\x70\x2c\x51\x1e\xa1\xab\x1b\x63\x92\xb4\xf2\x71\x58\xb2\x02\xac\xac\xe4\xb6\x06\xd0\x64\x03\x7b\x31\x21\x7a\x3b\xfd\xd2\xef\x4f\x12\xed\xb3\xd3\xfe\x8e\x2f\x85\xc0\xab\x73\x76\x45\xa9\x56\x99\x8e\xda\x58\x3f\x46\xd6\xc4\xff\xad\x6b\x25\xb6\x19\x88\xe7\x98\x48\x02\xc7\xd4\xdb\x33\x3f\x85\x80\xc1\xdb\xbc\x7a\x51\x19\xed\x1a\x5e\xf7\xc9\xdb\xc6\xcc\x80\x66\x3d\xf8\x24\x60\x77\xea\xb7\xcf\x0b\xca\x5e\x18\x89\x24\xbe\x38\xf1\xd0\x3e\x68\x3a\x9a\xd6\xb4\xe6\x04\x6f\x28\x25\x57\xb0\xe2\x0a\x17\xa9\xa3\x47\x9b\xe2\xd4\x62\xb0\xca\xad\xf8\x4b\xe4\x6b\x28\xbc\x0f\x65\x93\x29\xf1\x86\xd0\xe8\xe9\x45\x0f\x91\xdf\x58\x7a\x18\x3e\x78\x9c\xb0\x77\x95\x8f\x1e\x05\x48\x6b\x36\xb8\x53\xe1\x9d\x9c\xcf\x29\x6d\x8e\x37\x7c\xdc\xfa\xb6\xef\xba\xbc\x61\xe6\xcf\x6c\xfb\xee\xc5\x5c\xff\xfe\x8b\xfc\x65\x45\x76\xa4\xff\x9f\x9b\xff\x06\x00\x00\xff\xff\xba\x43\x82\x56\x8f\x06\x00\x00")

func test_certsNodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsNodeKey,
		"test_certs/node.key",
	)
}

func test_certsNodeKey() (*asset, error) {
	bytes, err := test_certsNodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/node.key", size: 1679, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0xf4, 0x24, 0xc3, 0x90, 0x82, 0x9e, 0x24, 0x77, 0x8b, 0x18, 0xf3, 0x5c, 0x32, 0x59, 0x3d, 0x14, 0xbf, 0x53, 0xf9, 0x9e, 0x81, 0xa4, 0x86, 0x89, 0xcb, 0xd, 0x56, 0x80, 0xd0, 0xa6, 0x35}}
	return a, nil
}

var _test_certsTenantSigning10Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xcd\x92\x9a\x40\x10\xc0\xf1\x3b\x4f\x91\xfb\x56\x2a\x80\x68\x36\x87\x1c\x7a\x3e\x84\x59\x32\x6c\x06\xf9\x10\x6e\x20\xee\xc8\x38\xa0\x6e\x64\xc7\xf1\xe9\x53\x58\x95\x5c\xb6\x2f\x5d\xf5\x3b\x75\xf5\xff\xeb\x3c\x88\x86\x2c\xf9\x82\x69\x9a\xb1\x35\xc3\x90\xd1\x87\x3a\x9c\x31\x14\x2b\x8c\x16\x0d\x10\x90\x14\x83\xa4\x88\x43\x1e\x82\xbd\xea\x1d\x81\x89\x6f\x8c\x89\x65\x45\x0a\x21\x08\xb5\x49\x5e\x97\xcb\x43\x3b\x0a\xc9\x33\x90\x45\xf8\xe3\xdd\xa9\xcb\x40\xe6\xbe\x1e\xdb\x41\x4f\xb5\x45\xa4\xde\xbe\xb8\x4d\x59\x9f\x2b\x7f\xed\xd6\x19\xec\xd7\xc6\xb5\x5c\x81\xc7\x95\x98\xf7\x9d\xdf\xbb\x66\xb6\xe4\x3e\xdb\xd1\x3a\xff\x90\xe3\xe0\xf6\x8b\xc0\x05\xc9\xa4\x40\xc0\x33\xe6\xa5\xba\x1d\xd6\x53\x87\xe1\xc6\x31\xca\x5b\xff\xaa\xdb\x1e\x65\x4d\xd9\x4d\x4d\xb9\x1c\x19\x4d\xf4\x6e\x4c\xcf\x4e\x3d\x68\x55\x6d\x53\xcd\xf1\xc9\x20\x51\x91\xd8\x2f\x0c\x58\x0a\x91\xf6\x6d\xac\xb1\x27\xa1\x7f\x6d\xb2\xa1\xe9\x1b\x84\xaf\x8a\x7a\x97\x49\x7c\x5f\x55\x43\x4d\x46\x2c\x7e\x83\xd8\x38\xcf\x51\xa9\x18\x81\x3d\x87\x20\x04\x2f\xef\x88\xa1\xe8\x9b\x11\x14\x0c\x8b\x24\x01\x3e\x5f\x14\xa5\x1c\xc1\xdb\x33\x05\x05\xf0\xff\x3f\x90\x20\xa0\xa6\x72\x56\x87\xfe\xa4\xf9\x4b\xa4\xa6\x9b\x0d\xcc\x65\x78\xed\xee\x5e\xb4\x39\x1c\xce\xc5\xc2\x96\x13\xcd\x4f\x5e\xf8\x76\x5c\x2d\xaa\xe4\xba\x9f\xdc\x00\x7d\xf4\xa7\xf2\x09\x71\xe9\xfe\xc1\xee\xd3\x87\x1a\xb6\xce\x8e\x6a\xe2\xbd\xa7\x62\x19\x5f\x60\xeb\x9f\x3b\x90\xc7\x9f\xce\x23\x10\x4d\xc8\xe7\x68\x7f\x03\x00\x00\xff\xff\x0a\x1a\xe1\x08\xd1\x01\x00\x00")

func test_certsTenantSigning10CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Crt,
		"test_certs/tenant-signing.10.crt",
	)
}

func test_certsTenantSigning10Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning10CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x40, 0x74, 0xa1, 0x21, 0x79, 0xa1, 0xb6, 0x53, 0x78, 0x6c, 0x32, 0x86, 0xab, 0xd, 0xb4, 0xbd, 0xf6, 0x2c, 0xbd, 0x5a, 0x7e, 0xdb, 0x1a, 0xc7, 0x76, 0xcc, 0xf7, 0xba, 0xe8, 0x5d, 0x15, 0x74}}
	return a, nil
}

var _test_certsTenantSigning10Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x77\x94\xb7\x73\xa5\xb6\xa7\x57\xaa\x79\xba\xa3\x9b\x7f\x69\x58\x76\x4a\xa0\x9b\xaf\x89\x5f\x64\x51\x81\xbb\x5f\xb9\x6b\xb2\x4f\x46\x58\xa2\x49\x69\x86\x45\x62\x9e\x76\x26\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\x3c\x37\xa7\x19\x77\x00\x00\x00")

func test_certsTenantSigning10KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning10Key,
		"test_certs/tenant-signing.10.key",
	)
}

func test_certsTenantSigning10Key() (*asset, error) {
	bytes, err := test_certsTenantSigning10KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.10.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0xbb, 0x2f, 0xbb, 0x95, 0xee, 0x1f, 0x39, 0x8c, 0xb7, 0xbd, 0xc2, 0xf5, 0x70, 0x9b, 0xec, 0xdd, 0x46, 0xb6, 0x2b, 0xee, 0xc4, 0x61, 0xe3, 0x42, 0x4c, 0x92, 0x11, 0x53, 0x95, 0x88, 0x60}}
	return a, nil
}

var _test_certsTenantSigning11Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xc1\x92\xa2\x30\x10\x80\xe1\x3b\x4f\xb1\x2f\xb0\xa5\x20\x6e\x8d\x87\x3d\x74\x48\xc0\x0c\x06\x25\x03\x22\xdc\x40\x30\x3b\x31\x60\x66\x94\x09\xf0\xf4\x5b\x58\xb5\x7b\x99\xbe\x74\xd5\x77\xea\xea\xff\xe7\x3c\x88\x04\x34\xfa\xe1\x11\x9e\x50\x9f\x7a\x90\x90\xa7\x5a\x8c\x52\x14\x4a\x0f\xad\x4a\xc0\x20\x88\x07\x82\x20\x06\x69\x00\xe3\x43\x9d\x31\xf4\xec\xcd\x98\x50\xe4\xf8\x18\xc7\x98\x8c\x51\x5a\x64\xeb\x3f\x55\x17\x0b\x96\x10\x71\x0c\x36\x9f\x56\x91\xb9\x22\x75\x54\x57\xb5\xaa\x2f\x46\x84\x8b\xd3\xeb\xb2\xcc\x0a\x9d\x3b\xfe\xb2\x48\xa0\xf1\xcd\x72\x64\x12\x6c\x26\xe3\x79\x4f\x6c\xaa\xcb\xd9\xa2\x69\xb6\xeb\x68\xfd\x43\xe6\xb9\xc3\x0e\xc3\x07\x12\xd1\x11\x01\x4b\xa8\xcd\x55\xd5\xfa\x7d\xed\xc1\xc0\xde\x50\x5a\x39\x0f\x55\xbd\xa3\xa4\xcc\xea\xbe\xcc\xd6\x1d\x25\x91\x3a\x77\x5c\x5b\x45\xab\x64\x7e\xe2\x8a\x79\x37\x83\xe2\x1c\x87\xce\xd1\xc0\x48\xa0\x29\x77\x2b\xdd\x9d\x16\xf7\x4b\xe4\xba\x8b\x3c\xff\x0a\xe5\xb0\x7d\xfc\x12\xa1\xdb\xb1\xa1\xe4\xd7\x7e\xbf\xdc\x88\x66\xe5\x58\x0b\x13\x48\x8a\xa1\x61\xe0\x06\x60\xa7\x35\x36\x04\x2d\x4c\x4c\xc0\xd0\xad\xc0\xc0\xe6\x8b\xb6\x9c\x21\xb8\xbc\x10\x90\x00\xff\xff\x03\x11\x02\x3a\x5c\xac\x40\x6d\xb4\x39\xd5\xdb\xcf\x6b\xba\xe2\x4e\xa3\x6f\x1f\x13\x94\xe9\x41\xbf\xf8\x07\x7f\xda\xd8\xe8\x51\x7f\x69\x7a\x0b\xbb\xb6\xc0\xf6\x8e\x8f\x4e\x0d\xef\xe7\xd7\xbb\xd0\x99\xdf\xa2\x7d\x9c\xf8\x96\x73\x38\xc4\xb7\x80\xdc\x2f\x20\xf7\x28\x5f\x73\x69\xc4\x6f\xeb\x19\x88\x44\xf8\x7b\xb4\xbf\x01\x00\x00\xff\xff\x6d\x91\x8d\x2f\xd1\x01\x00\x00")

func test_certsTenantSigning11CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Crt,
		"test_certs/tenant-signing.11.crt",
	)
}

func test_certsTenantSigning11Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning11CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xf6, 0x5a, 0x4e, 0x95, 0x22, 0x39, 0xc3, 0x8c, 0x1a, 0x50, 0xc8, 0xa7, 0x8e, 0xd, 0x51, 0x48, 0x14, 0x5, 0x68, 0x8a, 0x6, 0x96, 0x48, 0xd4, 0xb7, 0x1f, 0xde, 0xc0, 0xb4, 0x79, 0xb0}}
	return a, nil
}

var _test_certsTenantSigning11Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x77\xa6\x51\xa2\x6b\x79\xb1\x51\x55\x48\x59\x98\x81\x4b\x48\xba\xb6\xaf\x97\xb6\x69\xae\x71\x61\xb1\xbb\x9f\xa7\x5f\xb8\x7b\x44\x70\xa6\x81\x57\x84\x89\x85\x5b\x76\x69\x2a\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xd5\x35\xb0\xd6\x77\x00\x00\x00")

func test_certsTenantSigning11KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning11Key,
		"test_certs/tenant-signing.11.key",
	)
}

func test_certsTenantSigning11Key() (*asset, error) {
	bytes, err := test_certsTenantSigning11KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.11.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0x7e, 0xa2, 0xf1, 0x22, 0x5, 0xf4, 0x78, 0xf2, 0xc8, 0x9b, 0x7e, 0xd6, 0x24, 0x2e, 0x5, 0xf4, 0xc0, 0xd, 0x8b, 0x57, 0xa7, 0xed, 0xc0, 0x59, 0x35, 0xbe, 0x92, 0xa8, 0x78, 0xd3, 0xdc}}
	return a, nil
}

var _test_certsTenantSigning20Crt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd1\xcd\x92\x9a\x40\x10\xc0\xf1\x3b\x4f\x91\x17\x48\x45\x10\x56\xf7\x90\x43\x0f\x33\x7c\xac\x0e\xca\xd7\x20\x73\xe3\x43\x51\x1c\x10\x56\xc8\x64\x7c\xfa\x14\x5b\x95\x5c\xd2\x97\xae\xfa\x9d\xba\xfa\xff\x7d\x19\x44\x5c\x3f\xf8\x66\x93\x28\xf1\x1d\xdf\x86\x84\x7c\xa9\x46\x7d\x1f\xed\x5a\x1b\xad\x0b\xc0\xd0\x10\x1b\x1a\x82\x28\xa4\x2e\xa8\x49\x54\x18\x66\x1a\x4b\xb9\x6b\x72\xcc\xc2\x10\x13\x15\xa4\x3c\xb3\xae\x65\x1f\x36\xb4\x85\x86\xb9\xef\x9f\x1a\xcf\xcc\x26\x35\x44\x5f\x76\x62\xe6\x0a\x61\x7e\xfa\x58\x15\x19\x1f\x72\xc3\x59\xf1\x04\xce\x8e\x5c\x29\xda\x82\x4e\xdb\x70\xd9\x2f\xfa\xba\x16\x8b\x05\xaf\xc5\xee\x4a\xfb\x8b\xd4\x36\x7f\xef\x31\x8c\xa8\x09\x18\x02\x9a\xf8\x7a\x24\xca\xce\x99\x6b\x1b\x14\xb5\x51\x5a\x1a\x93\x28\x6f\x28\x29\xb2\x7a\x2e\x32\xab\xf7\x49\x20\xaa\x3e\x1a\x34\xde\x89\x36\x3f\x45\x82\xda\x0f\x89\xc2\x1c\xef\x0c\x26\x41\x11\xf8\x74\x63\xa1\xdf\xd3\x8a\x14\xfa\x94\x4d\x9b\xe2\xb8\xfa\x58\x0f\xa8\xbb\x15\xbb\x20\x67\xed\x7e\xe4\xcc\x2b\xbb\xf7\x27\xd6\x86\xc3\xd8\xfa\x18\xce\x14\x4c\x17\xf4\xb4\xc6\x92\xa0\x1f\x32\x24\x20\x7d\xaf\xc1\x40\x97\x8b\xbc\x88\x22\xb8\x6c\x09\xb4\x00\xff\xfe\x03\x01\x82\xc3\x80\xb4\xd3\x1e\x1d\x7f\x79\x02\x8f\xce\xc1\x70\xde\xac\xfa\xd9\x1f\x79\x8c\xf3\xdb\xba\xf2\xac\xcd\xcb\x1a\x91\xba\x24\xba\xb9\x76\x57\xb1\xa3\x93\x38\x73\xd9\xfe\xfa\x24\xe3\x79\xcb\x36\x0c\xdf\x8d\xfa\xa1\xf5\x66\x3d\xcd\x8a\x3e\xdc\xe9\x6d\x7b\x91\x5d\x57\x49\xf2\x53\xfb\x0a\x44\x02\xfc\x7f\xb4\x3f\x01\x00\x00\xff\xff\xf3\x2a\xef\x4d\xd1\x01\x00\x00")

func test_certsTenantSigning20CrtBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Crt,
		"test_certs/tenant-signing.20.crt",
	)
}

func test_certsTenantSigning20Crt() (*asset, error) {
	bytes, err := test_certsTenantSigning20CrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.crt", size: 465, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0xf1, 0x60, 0x24, 0x3c, 0xb2, 0x2c, 0xf6, 0x22, 0x33, 0x5d, 0x7, 0x2b, 0x2f, 0xa7, 0x7e, 0x7f, 0x6a, 0x35, 0xc4, 0x6c, 0xde, 0x46, 0xb6, 0x8b, 0x63, 0x5e, 0x97, 0x12, 0x30, 0x9a, 0x64}}
	return a, nil
}

var _test_certsTenantSigning20Key = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x05\x01\x27\x57\x77\x4f\x3f\x85\x80\x20\xcf\x30\xc7\x10\x57\x05\x6f\xd7\x48\xb0\x28\x97\xaf\xb3\x89\xb3\x63\xa0\x63\xb9\x53\x60\xa4\x8b\xb7\x51\x58\xb9\x93\xb3\xa7\xab\xa7\x73\x49\x40\x52\x96\x87\x41\x45\x6a\x40\xa5\x61\xa9\xab\xbb\x6f\xb9\xa3\x59\x6e\x49\x89\xa9\x61\x61\x45\xa1\x73\x61\x55\x64\xb0\xab\x9b\x4b\x5a\xba\x81\x73\x51\x9e\x61\x1e\x17\xd8\x18\x57\x3f\x17\x4c\xa3\x01\x01\x00\x00\xff\xff\xe3\xc2\xf3\xa2\x77\x00\x00\x00")

func test_certsTenantSigning20KeyBytes() ([]byte, error) {
	return bindataRead(
		_test_certsTenantSigning20Key,
		"test_certs/tenant-signing.20.key",
	)
}

func test_certsTenantSigning20Key() (*asset, error) {
	bytes, err := test_certsTenantSigning20KeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test_certs/tenant-signing.20.key", size: 119, mode: os.FileMode(0600), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0xe, 0x66, 0xbf, 0xfb, 0x2, 0x76, 0x91, 0x61, 0x75, 0x27, 0x6e, 0x9d, 0x21, 0x72, 0x65, 0x25, 0x58, 0xec, 0x3c, 0x2b, 0x2, 0xc1, 0x70, 0xca, 0x2e, 0x18, 0x37, 0xa5, 0xe0, 0x7e, 0x61}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test_certs/ca-client-tenant.crt": test_certsCaClientTenantCrt,

	"test_certs/ca-client-tenant.key": test_certsCaClientTenantKey,

	"test_certs/ca.crt": test_certsCaCrt,

	"test_certs/ca.key": test_certsCaKey,

	"test_certs/client-tenant.10.crt": test_certsClientTenant10Crt,

	"test_certs/client-tenant.10.key": test_certsClientTenant10Key,

	"test_certs/client-tenant.11.crt": test_certsClientTenant11Crt,

	"test_certs/client-tenant.11.key": test_certsClientTenant11Key,

	"test_certs/client-tenant.20.crt": test_certsClientTenant20Crt,

	"test_certs/client-tenant.20.key": test_certsClientTenant20Key,

	"test_certs/client.root.crt": test_certsClientRootCrt,

	"test_certs/client.root.key": test_certsClientRootKey,

	"test_certs/client.testuser.crt": test_certsClientTestuserCrt,

	"test_certs/client.testuser.key": test_certsClientTestuserKey,

	"test_certs/client.testuser2.crt": test_certsClientTestuser2Crt,

	"test_certs/client.testuser2.key": test_certsClientTestuser2Key,

	"test_certs/node.crt": test_certsNodeCrt,

	"test_certs/node.key": test_certsNodeKey,

	"test_certs/tenant-signing.10.crt": test_certsTenantSigning10Crt,

	"test_certs/tenant-signing.10.key": test_certsTenantSigning10Key,

	"test_certs/tenant-signing.11.crt": test_certsTenantSigning11Crt,

	"test_certs/tenant-signing.11.key": test_certsTenantSigning11Key,

	"test_certs/tenant-signing.20.crt": test_certsTenantSigning20Crt,

	"test_certs/tenant-signing.20.key": test_certsTenantSigning20Key,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test_certs": {nil, map[string]*bintree{
		"ca-client-tenant.crt":  {test_certsCaClientTenantCrt, map[string]*bintree{}},
		"ca-client-tenant.key":  {test_certsCaClientTenantKey, map[string]*bintree{}},
		"ca.crt":                {test_certsCaCrt, map[string]*bintree{}},
		"ca.key":                {test_certsCaKey, map[string]*bintree{}},
		"client-tenant.10.crt":  {test_certsClientTenant10Crt, map[string]*bintree{}},
		"client-tenant.10.key":  {test_certsClientTenant10Key, map[string]*bintree{}},
		"client-tenant.11.crt":  {test_certsClientTenant11Crt, map[string]*bintree{}},
		"client-tenant.11.key":  {test_certsClientTenant11Key, map[string]*bintree{}},
		"client-tenant.20.crt":  {test_certsClientTenant20Crt, map[string]*bintree{}},
		"client-tenant.20.key":  {test_certsClientTenant20Key, map[string]*bintree{}},
		"client.root.crt":       {test_certsClientRootCrt, map[string]*bintree{}},
		"client.root.key":       {test_certsClientRootKey, map[string]*bintree{}},
		"client.testuser.crt":   {test_certsClientTestuserCrt, map[string]*bintree{}},
		"client.testuser.key":   {test_certsClientTestuserKey, map[string]*bintree{}},
		"client.testuser2.crt":  {test_certsClientTestuser2Crt, map[string]*bintree{}},
		"client.testuser2.key":  {test_certsClientTestuser2Key, map[string]*bintree{}},
		"node.crt":              {test_certsNodeCrt, map[string]*bintree{}},
		"node.key":              {test_certsNodeKey, map[string]*bintree{}},
		"tenant-signing.10.crt": {test_certsTenantSigning10Crt, map[string]*bintree{}},
		"tenant-signing.10.key": {test_certsTenantSigning10Key, map[string]*bintree{}},
		"tenant-signing.11.crt": {test_certsTenantSigning11Crt, map[string]*bintree{}},
		"tenant-signing.11.key": {test_certsTenantSigning11Key, map[string]*bintree{}},
		"tenant-signing.20.crt": {test_certsTenantSigning20Crt, map[string]*bintree{}},
		"tenant-signing.20.key": {test_certsTenantSigning20Key, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
